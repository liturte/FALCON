{"3546": {"code": ["import sys\n\ndef shortest_article(n, theorems):\n    dp = [0]*n\n    order = []\n    for i in range(n):\n        if len(theorems[i]) == 1:\n            order.append(i)\n            dp[i] = theorems[i][0]\n    for i in order:\n        for j in theorems[i][2:]:\n            d", "import sys\n\ndef solve():\n    n = int(sys.stdin.readline())\n    proofs = [[] for _ in range(n)]\n    lengths = [0] * n\n    for i in range(n):\n        p, *deps = map(int, sys.stdin.readline().split())\n        lengths[i] = deps[0]\n        for j in range(1, p):", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    proofs = [[] for _ in range(n)]\n    lengths = [0] * n\n    for i in range(n):\n        p_i, *dependencies = map(int, sys.stdin.readline().split())\n        lengths[i] = dependencies[0]\n        for _ in range(p_i -", "import sys\nfrom heapq import *\n\nread = sys.stdin.readline\n\nn = int(read())\n\nproofs = []\nfor _ in range(n):\n    p, *deps = map(int, read().split())\n    proofs.append((p, sorted(deps)))\n\nproofs.sort()\n\ndp = [0] * n\nfor i in range(n):\n    dp[", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nproofs = [[] for _ in range(n)]\nfor i in range(n):\n    p, *deps = map(int, input().split())\n    for _ in range(p):\n        proofs[i].append(int(input()))\n\ndp = [0] * n\nfor i in range(n):\n    dp"], "prompt": "\nQUESTION:\nDavid is writing an article for the Bulletin of the Association of Proof Completions. In his article, he proves several theorems. For every theorem, David came up with a proof. Since David is a very eager student, he even came up with multiple proofs for some of the theorems. As usual, a proof for a theorem may depend on a number of other theorems.\n\nThe article has to be as short as possible to publish it, and David only really cares about the main theorem, Theorem $0$. In order to achieve this, he has estimated the number of words he will need for every proof. Can you help David find the shortest possible length of his article?\n\n-----Input-----\n - A single line containing $1\\leq n\\leq 20$, the number of theorems.\n - For each theorem:\n - A single line containing $1\\leq p_ i\\leq 10$, the number of proofs for the $i$th theorem.\n - $p_ i$ lines, each of the form $l$, $k$, $d_0,\\dots ,d_{k-1}$, where $0\\leq l\\leq 10^6$ is the length of the proof, $0\\leq k\\leq n-1$ is the number of theorems the proof depends on, and the $0\\leq d_ i\\leq n-1$ are the numbers of the theorems the proof depends on.\n\n-----Output-----\nPrint one line with a single integer, the shortest possible length of David\u2019s article.\n\n-----Examples-----\nSample Input:\n2\n2\n10 0\n3 1 1\n1\n4 1 0\nSample Output:\n10\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}