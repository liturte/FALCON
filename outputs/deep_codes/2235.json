{"2235": {"code": ["QUESTION:\nA new innovative ticketing systems for public transport is introduced in Bytesburg. Now there is a single travel card for all transport. To make a trip a passenger scan his card and then he is charged according to the fare.\n\nThe fare is constructed in the following manner. There are three types of tickets:   a ticket for one trip costs 20 byteland rubles,  a ticket for 90 minutes costs 50 byteland rubles,  a ticket for one day (1440 minutes) costs 120 byteland rubles. \n\nNote that a ticket for x minutes activated at time t can be used for trips started in time range from t to t + x - 1, inclusive. Assume that all trips take exactly one minute.\n\nTo simplify the choice for the passenger, the system automatically chooses the optimal tickets. After each trip starts, the system analyses all the previous trips and the current trip and chooses a set of tickets for these trips with a minimum total cost. Let the minimum total cost of tickets to cover all trips from the first to the current is a, and the total sum charged before is b. Then the system charges the passenger the sum a - b.\n\nYou have to write a program that, for given trips made by a passenger, calculates the sum the passenger is charged after each trip.\n\n\n-----Input-----\n\nThe first line of input contains integer number n (1 \u2264 n \u2264 10^5)\u00a0\u2014 the number of trips made by passenger.\n\nEach of the following n lines contains the time of trip t_{i} (0 \u2264 t_{i} \u2264 10^9), measured in minutes from the time of starting the system. All t_{i} are different, given in ascending order, i.\u00a0e. t_{i} + 1 > t_{i} holds for all 1 \u2264 i < n.\n\n\n-----Output-----\n\nOutput n integers. For each trip, print the sum the passenger is charged after it.\n\n\n-----Examples-----\nInput\n3\n10\n20\n30\n\nOutput\n20\n20\n10\n\nInput\n10\n13\n45\n46\n60\n103\n115\n126\n150\n256\n516\n\nOutput\n20\n20\n10\n0\n20\n0\n0\n20\n20\n10\n\n\n\n-----Note-----\n\nIn the first example, the system works as follows: for the first and second trips it is cheaper to pay for two one-trip tickets, so each of", "QUESTION:\nA new innovative ticketing systems for public transport is introduced in Bytesburg. Now there is a single travel card for all transport. To make a trip a passenger scan his card and then he is charged according to the fare.\n\nThe fare is constructed in the following manner. There are three types of tickets:   a ticket for one trip costs 20 byteland rubles,  a ticket for 90 minutes costs 50 byteland rubles,  a ticket for one day (1440 minutes) costs 120 byteland rubles. \n\nNote that a ticket for x minutes activated at time t can be used for trips started in time range from t to t + x - 1, inclusive. Assume that all trips take exactly one minute.\n\nTo simplify the choice for the passenger, the system automatically chooses the optimal tickets. After each trip starts, the system analyses all the previous trips and the current trip and chooses a set of tickets for these trips with a minimum total cost. Let the minimum total cost of tickets to cover all trips from the first to the current is a, and the total sum charged before is b. Then the system charges the passenger the sum a - b.\n\nYou have to write a program that, for given trips made by a passenger, calculates the sum the passenger is charged after each trip.\n\n\n-----Input-----\n\nThe first line of input contains integer number n (1 \u2264 n \u2264 10^5)\u00a0\u2014 the number of trips made by passenger.\n\nEach of the following n lines contains the time of trip t_{i} (0 \u2264 t_{i} \u2264 10^9), measured in minutes from the time of starting the system. All t_{i} are different, given in ascending order, i.\u00a0e. t_{i} + 1 > t_{i} holds for all 1 \u2264 i < n.\n\n\n-----Output-----\n\nOutput n integers. For each trip, print the sum the passenger is charged after it.\n\n\n-----Examples-----\nInput\n3\n10\n20\n30\n\nOutput\n20\n20\n10\n\nInput\n10\n13\n45\n46\n60\n103\n115\n126\n150\n256\n516\n\nOutput\n20\n20\n10\n0\n20\n0\n0\n20\n20\n10\n\n\n\n-----Note-----\n\nIn the first example, the system works as follows: for the first and second trips it is cheaper to pay for two one-trip tickets, so each costs", "QUESTION:\nA new innovative ticketing systems for public transport is introduced in Bytesburg. Now there is a single travel card for all transport. To make a trip a passenger scan his card and then he is charged according to the fare.\n\nThe fare is constructed in the following manner. There are three types of tickets:   a ticket for one trip costs 20 byteland rubles,  a ticket for 90 minutes costs 50 byteland rubles,  a ticket for one day (1440 minutes) costs 120 byteland rubles. \n\nNote that a ticket for x minutes activated at time t can be used for trips started in time range from t to t + x - 1, inclusive. Assume that all trips take exactly one minute.\n\nTo simplify the choice for the passenger, the system automatically chooses the optimal tickets. After each trip starts, the system analyses all the previous trips and the current trip and chooses a set of tickets for these trips with a minimum total cost. Let the minimum total cost of tickets to cover all trips from the first to the current is a, and the total sum charged before is b. Then the system charges the passenger the sum a - b.\n\nYou have to write a program that, for given trips made by a passenger, calculates the sum the passenger is charged after each trip.\n\n\n-----Input-----\n\nThe first line of input contains integer number n (1 \u2264 n \u2264 10^5)\u00a0\u2014 the number of trips made by passenger.\n\nEach of the following n lines contains the time of trip t_{i} (0 \u2264 t_{i} \u2264 10^9), measured in minutes from the time of starting the system. All t_{i} are different, given in ascending order, i.\u00a0e. t_{i} + 1 > t_{i} holds for all 1 \u2264 i < n.\n\n\n-----Output-----\n\nOutput n integers. For each trip, print the sum the passenger is charged after it.\n\n\n-----Examples-----\nInput\n3\n10\n20\n30\n\nOutput\n20\n20\n10\n\nInput\n10\n13\n45\n46\n60\n103\n115\n126\n150\n256\n516\n\nOutput\n20\n20\n10\n0\n20\n0\n0\n20\n20\n10\n\n\n\n-----Note-----\n\nIn the first example, the system works as follows: for the first and second trips it is cheaper to pay for two one-trip tickets, so each of", "QUESTION:\nA new innovative ticketing systems for public transport is introduced in Bytesburg. Now there is a single travel card for all transport. To make a trip a passenger scan his card and then he is charged according to the fare.\n\nThe fare is constructed in the following manner. There are three types of tickets:   a ticket for one trip costs 20 byteland rubles,  a ticket for 90 minutes costs 50 byteland rubles,  a ticket for one day (1440 minutes) costs 120 byteland rubles. \n\nNote that a ticket for x minutes activated at time t can be used for trips started in time range from t to t + x - 1, inclusive. Assume that all trips take exactly one minute.\n\nTo simplify the choice for the passenger, the system automatically chooses the optimal tickets. After each trip starts, the system analyses all the previous trips and the current trip and chooses a set of tickets for these trips with a minimum total cost. Let the minimum total cost of tickets to cover all trips from the first to the current is a, and the total sum charged before is b. Then the system charges the passenger the sum a - b.\n\nYou have to write a program that, for given trips made by a passenger, calculates the sum the passenger is charged after each trip.\n\n\n-----Input-----\n\nThe first line of input contains integer number n (1 \u2264 n \u2264 10^5)\u00a0\u2014 the number of trips made by passenger.\n\nEach of the following n lines contains the time of trip t_{i} (0 \u2264 t_{i} \u2264 10^9), measured in minutes from the time of starting the system. All t_{i} are different, given in ascending order, i.\u00a0e. t_{i} + 1 > t_{i} holds for all 1 \u2264 i < n.\n\n\n-----Output-----\n\nOutput n integers. For each trip, print the sum the passenger is charged after it.\n\n\n-----Examples-----\nInput\n3\n10\n20\n30\n\nOutput\n20\n20\n10\n\nInput\n10\n13\n45\n46\n60\n103\n115\n126\n150\n256\n516\n\nOutput\n20\n20\n10\n0\n20\n0\n0\n20\n20\n10\n\n\n\n-----Note-----\n\nIn the first example, the system works as follows: for the first and second trips it is cheaper to pay for two one-trip tickets, so each of", "QUESTION:\nA new innovative ticketing systems for public transport is introduced in Bytesburg. Now there is a single travel card for all transport. To make a trip a passenger scan his card and then he is charged according to the fare.\n\nThe fare is constructed in the following manner. There are three types of tickets:   a ticket for one trip costs 20 byteland rubles,  a ticket for 90 minutes costs 50 byteland rubles,  a ticket for one day (1440 minutes) costs 120 byteland rubles. \n\nNote that a ticket for x minutes activated at time t can be used for trips started in time range from t to t + x - 1, inclusive. Assume that all trips take exactly one minute.\n\nTo simplify the choice for the passenger, the system automatically chooses the optimal tickets. After each trip starts, the system analyses all the previous trips and the current trip and chooses a set of tickets for these trips with a minimum total cost. Let the minimum total cost of tickets to cover all trips from the first to the current is a, and the total sum charged before is b. Then the system charges the passenger the sum a - b.\n\nYou have to write a program that, for given trips made by a passenger, calculates the sum the passenger is charged after each trip.\n\n\n-----Input-----\n\nThe first line of input contains integer number n (1 \u2264 n \u2264 10^5)\u00a0\u2014 the number of trips made by passenger.\n\nEach of the following n lines contains the time of trip t_{i} (0 \u2264 t_{i} \u2264 10^9), measured in minutes from the time of starting the system. All t_{i} are different, given in ascending order, i.\u00a0e. t_{i} + 1 > t_{i} holds for all 1 \u2264 i < n.\n\n\n-----Output-----\n\nOutput n integers. For each trip, print the sum the passenger is charged after it.\n\n\n-----Examples-----\nInput\n3\n10\n20\n30\n\nOutput\n20\n20\n10\n\nInput\n10\n13\n45\n46\n60\n103\n115\n126\n150\n256\n516\n\nOutput\n20\n20\n10\n0\n20\n0\n0\n20\n20\n10\n\n\n\n-----Note-----\n\nIn the first example, the system works as follows: for the first and second trips it is cheaper to pay for two one-trip tickets, so each of"], "prompt": "\nQUESTION:\nA new innovative ticketing systems for public transport is introduced in Bytesburg. Now there is a single travel card for all transport. To make a trip a passenger scan his card and then he is charged according to the fare.\n\nThe fare is constructed in the following manner. There are three types of tickets:   a ticket for one trip costs 20 byteland rubles,  a ticket for 90 minutes costs 50 byteland rubles,  a ticket for one day (1440 minutes) costs 120 byteland rubles. \n\nNote that a ticket for x minutes activated at time t can be used for trips started in time range from t to t + x - 1, inclusive. Assume that all trips take exactly one minute.\n\nTo simplify the choice for the passenger, the system automatically chooses the optimal tickets. After each trip starts, the system analyses all the previous trips and the current trip and chooses a set of tickets for these trips with a minimum total cost. Let the minimum total cost of tickets to cover all trips from the first to the current is a, and the total sum charged before is b. Then the system charges the passenger the sum a - b.\n\nYou have to write a program that, for given trips made by a passenger, calculates the sum the passenger is charged after each trip.\n\n\n-----Input-----\n\nThe first line of input contains integer number n (1 \u2264 n \u2264 10^5)\u00a0\u2014 the number of trips made by passenger.\n\nEach of the following n lines contains the time of trip t_{i} (0 \u2264 t_{i} \u2264 10^9), measured in minutes from the time of starting the system. All t_{i} are different, given in ascending order, i.\u00a0e. t_{i} + 1 > t_{i} holds for all 1 \u2264 i < n.\n\n\n-----Output-----\n\nOutput n integers. For each trip, print the sum the passenger is charged after it.\n\n\n-----Examples-----\nInput\n3\n10\n20\n30\n\nOutput\n20\n20\n10\n\nInput\n10\n13\n45\n46\n60\n103\n115\n126\n150\n256\n516\n\nOutput\n20\n20\n10\n0\n20\n0\n0\n20\n20\n10\n\n\n\n-----Note-----\n\nIn the first example, the system works as follows: for the first and second trips it is cheaper to pay for two one-trip tickets, so each time 20 rubles is charged, after the third trip the system understands that it would be cheaper to buy a ticket for 90 minutes. This ticket costs 50 rubles, and the passenger had already paid 40 rubles, so it is necessary to charge 10 rubles only.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}