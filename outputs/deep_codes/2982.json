{"2982": {"code": ["MOD = 10**9 + 7\nn = int(input())\nsongs = list(map(int, input().split()))\n\nones = songs.count(1)\ntwos = songs.count(2)\nthrees = songs.count(3)\n\nif min(ones, threes) < 1 or twos < 2:\n    print(0)\nelse:\n    f = [1]\n    for i in range(1, n):\n        f.append((f[-1] * i) % MOD)\n\n    invf = [pow(f[-1], MOD - 2, MOD)]", "MOD = 10**9 + 7\nn = int(input())\narr = list(map(int, input().split()))\n\nones = arr.count(1)\ntwos = arr.count(2)\nthrees = arr.count(3)\n\ndp = [[[0]*3 for _ in range(3)] for _ in range(3)]\ndp[0][0][0] = 1\n\nfor i in range(n):\n    for j in range(min(i+1, 3)):\n        for k in range(min(i+1, 3)):\n            if arr[i]", "MOD = 10**9 + 7\nMAX_N = 10**6 + 10\n\nn = int(input())\na = list(map(int, input().split()))\n\nfact = [0]*MAX_N\ninv = [0]*MAX_N\n\nfact[0] = inv[0] = 1\n\nfor i in range(1, MAX_N):\n    fact[i] = (i * fact[i-1]) % MOD\n    inv[i] = pow(fact[i], MOD - 2, MOD)\n\ndef C(n, k):\n    if k >", "MOD = 10**9 + 7\n\ndef solve(n, ratings):\n    one_count = ratings.count(1)\n    two_count = ratings.count(2)\n    three_count = ratings.count(3)\n\n    if min(one_count, three_count) == 0 or two_count < 2:\n        return 0\n\n    fact = [1]\n    inv = [1]\n    inv_fact = [1]\n\n    for i in range(1, n+1):\n        fact.append((fact[-1] * i) % MOD)\n        inv.append((MOD", "MOD = 10**9 + 7\nn = int(input())\nsongs = list(map(int, input().split()))\n\nones = songs.count(1)\ntwos = songs.count(2)\nthrees = songs.count(3)\n\n# The first and last song must have hype rating 1 and 3 respectively.\n# So, we can choose (ones-1) songs from the remaining (twos+threes) songs to play.\n# The remaining songs must have hype rating 2.\n# So, the number of setlists is (ones-1)C(twos+threes) *"], "prompt": "\nQUESTION:\nYour friend T\u00f3ti is an aspiring musician. He has written $n$ songs, each of which has a hype rating of either $1$, $2$, or $3$. A higher hype rating means the song has more energy. T\u00f3ti is planning his first live performance and needs your help. He wants to know how many setlists he can make. A setlist consist of at least three songs, the first song must have hype rating $1$, the last song must have hype rating $3$, and all other songs must have hype rating $2$. T\u00f3ti also wants to play the songs in the same order he wrote them. \n\nGiven the hype rating of each of T\u00f3ti\u2019s songs in the order he wrote them, how many setlists can he make?\n\n-----Input-----\nThe first line of input consists of an integer $n$ ($1 \\leq n \\leq 10^6$), the number of songs T\u00f3ti has written. The second line consists of $n$ integers, each in $\\{ 1, 2, 3\\} $, giving the hype ratings of the $n$ songs in the order they were written.\n\n-----Output-----\nOutput the number of setlists T\u00f3ti can make. Since this number can be large, print it modulo $10^9 + 7$.\n\n-----Examples-----\nSample Input:\n9\n1 1 1 2 2 2 3 3 3\nSample Output:\n63\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}