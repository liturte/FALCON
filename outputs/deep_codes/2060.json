{"2060": {"code": ["def solve():\n    n = int(input())\n    for _ in range(n):\n        x = int(input())\n        if x % 3 == 0 or x % 7 == 0:\n            print('YES')\n        else:\n            print('NO')\n\nsolve()\n\n\nThis code works by first taking the number of test cases as input. Then for each test case, it takes the number of chunks Ivan wants to eat as input. It checks if this number is divisible by 3 or 7 (since that's the number of chunks in small and large portions, respectively),", "def can_eat_chicken(x):\n    for i in range(x // 7 + 1):\n        for j in range(x // 3 + 1):\n            if 3 * j + 7 * i == x:\n                return 'YES'\n    return 'NO'\n\nn = int(input())\nfor _ in range(n):\n    x = int(input())\n    print(can_eat_chicken(x))\n\n\nExplanation:\nThe code first defines a function `can_eat_chicken(x)` that takes an integer `x", "def solve(n, x):\n    for i in range(n):\n        if x[i] % 3 == 0 or x[i] % 7 == 0 or x[i]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nn = int(input())\nx = [int(input()) for _ in range(n)]\nsolve(n, x)\n\n\nExplanation:\nThis program takes an integer n as input, which is the number of testcases. It then takes n integers as input, which are the number of chunks Ivan wants to eat.", "t = int(input())\nfor _ in range(t):\n    x = int(input())\n    if x % 3 == 0 or x % 7 == 0:\n        print('YES')\n    else:\n        print('NO')\n\n\nEXPLANATION:\nThis solution works by checking if the number of chunks (x) is divisible by 3 or 7. If it is, it means Ivan can buy exactly that amount of chunks, so it prints 'YES'. If not, it means Ivan cannot buy exactly that amount of chunks, so it prints 'NO'.\n\nThis", "n = int(input())\nfor _ in range(n):\n    x = int(input())\n    if x % 3 == 0 or x % 7 == 0 or (x - 3) % 7 == 0 or (x - 7) % 3 == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\nThis solution works by iterating over the test cases and checking if x is divisible by 3 or 7, or if x minus 3 or 7 is divisible by 3 or 7 respectively. If either of these conditions is true, it"], "prompt": "\nQUESTION:\nIvan's classes at the university have just finished, and now he wants to go to the local CFK cafe and eat some fried chicken.\n\nCFK sells chicken chunks in small and large portions. A small portion contains 3 chunks; a large one \u2014 7 chunks. Ivan wants to eat exactly x chunks. Now he wonders whether he can buy exactly this amount of chicken.\n\nFormally, Ivan wants to know if he can choose two non-negative integers a and b in such a way that a small portions and b large ones contain exactly x chunks.\n\nHelp Ivan to answer this question for several values of x!\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 100) \u2014 the number of testcases.\n\nThe i-th of the following n lines contains one integer x_{i} (1 \u2264 x_{i} \u2264 100) \u2014 the number of chicken chunks Ivan wants to eat.\n\n\n-----Output-----\n\nPrint n lines, in i-th line output YES if Ivan can buy exactly x_{i} chunks. Otherwise, print NO.\n\n\n-----Example-----\nInput\n2\n6\n5\n\nOutput\nYES\nNO\n\n\n\n-----Note-----\n\nIn the first example Ivan can buy two small portions.\n\nIn the second example Ivan cannot buy exactly 5 chunks, since one small portion is not enough, but two small portions or one large is too much.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}