{"3533": {"code": ["def min_tolls(trucks):\n    trucks.sort()\n    min_exit = trucks[0][1]\n    total_tolls = 0\n    for entrance, exit in trucks:\n        if exit < min_exit:\n            min_exit = exit\n        elif exit > min_exit:\n            total_tolls += exit - min_exit\n            min_exit = exit\n    return total_t", "def calculate_tolls(n, data):\n    data.sort()\n    min_exit = data[0][1]\n    total = 0\n    for i in range(1, n):\n        if data[i][0] < min_exit:\n            total += min_exit - data[i][0]\n            min_exit = data[i][1]\n        elif data[i][0] > min_", "def calculate_tolls(N, data):\n    data.sort()\n    min_tolls = 0\n    min_exit = 0\n    for i in range(N):\n        if data[i][1] < min_exit:\n            min_tolls += data[i][1] - data[i][0]\n        else:\n            min_tolls += data[i][1] - data", "from heapq import *\n\ndef minTolls(N, trips):\n    tolls = [0] * (N + 1)\n    exits = [0] * (N + 1)\n    for i in range(N):\n        entry, exit = trips[i]\n        tolls[entry] += 1\n        exits[exit] += 1\n    heap = []\n    min_tolls = 0", "def min_tolls(N, exits):\n    exits.sort()\n    min_toll = 0\n    for i in range(N):\n        min_toll += abs(exits[i][0] - exits[i][1])\n    return min_toll\n\nN = int(input())\nexits = [list(map(int, input().split())) for _ in range(N)]"], "prompt": "\nQUESTION:\nIn a single day, $N$ of Luka\u2019s trucks travel a specific highway. The highway has a number of exits and entrances. An exit with a particular number is in the same location as the entrance with that number.\n\nUpon entering the highway, a truck driver receives a ticket which indicates the entrance he used. When exiting, the driver pays a toll equal to the absolute difference of the entrance and exit numbers. For example, if a ticket says he used entrance $30$, then exiting at exit $12$ will cost him $18$.\n\nLuka has figured out a way to save toll money that his company daily spends. Any two drivers can meet on the highway and exchange tickets, even if their routes don\u2019t overlap. Tickets can be exchanged an arbitrary number of times.\n\nHowever, a driver cannot use an exit if his ticket says he used the same entrance, since that would be suspicious.\n\nWrite a program that calculates the least total amount of tolls that the drivers can achieve by exchanging tickets.\n\n-----Input-----\nThe first line contains the integer $N$ $(1 \\leq N \\leq 100000)$, the number of trucks. Each of the following $N$ lines contains two distinct integers between $1$ and $1000000000$. These are in order the entrance and exit numbers of one truck.\n\nNo two trucks will use the same highway entrance or the same exit.\n\n-----Output-----\nOutput the least total amount of tolls Luka\u2019s company must pay.\n\n-----Examples-----\nSample Input:\n3\n3 65\n45 10\n60 25\nSample Output:\n32\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}