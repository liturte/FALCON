{"2157": {"code": ["n", "import", "import", "import", "from"], "prompt": "\nQUESTION:\nThe little girl loves the problems on array queries very much.\n\nOne day she came across a rather well-known problem: you've got an array of n elements (the elements of the array are indexed starting from 1); also, there are q queries, each one is defined by a pair of integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n). You need to find for each query the sum of elements of the array with indexes from l_{i} to r_{i}, inclusive.\n\nThe little girl found the problem rather boring. She decided to reorder the array elements before replying to the queries in a way that makes the sum of query replies maximum possible. Your task is to find the value of this maximum sum.\n\n\n-----Input-----\n\nThe first line contains two space-separated integers n (1 \u2264 n \u2264 2\u00b710^5) and q (1 \u2264 q \u2264 2\u00b710^5) \u2014 the number of elements in the array and the number of queries, correspondingly.\n\nThe next line contains n space-separated integers a_{i} (1 \u2264 a_{i} \u2264 2\u00b710^5) \u2014 the array elements.\n\nEach of the following q lines contains two space-separated integers l_{i} and r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) \u2014 the i-th query.\n\n\n-----Output-----\n\nIn a single line print a single integer \u2014 the maximum sum of query replies after the array elements are reordered.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n3 3\n5 3 2\n1 2\n2 3\n1 3\n\nOutput\n25\n\nInput\n5 3\n5 2 4 1 3\n1 5\n2 3\n2 3\n\nOutput\n33\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}