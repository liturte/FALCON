{"3535": {"code": ["def solve(N, M, K, measurements):\n    MOD = 10**9 + 7\n    dp = [[[0, 0] for _ in range(M+1)] for", "MOD = 10**9 + 7\nN, M, K = map(int, input().split())\n\n# Calculate total number of possible states\ntotal = pow(2, N*M,", "MOD = 10**9 + 7\nN, M, K = map(int, input().split())\nspin = [input().split() for _ in range(K)]\n\nfact = [1", "MOD = 10**9 + 7\n\ndef solve(N, M, K, measurements):\n    dp = [[0]*(M+1) for _ in range(N+1)]", "MOD = 10**9 + 7\n\ndef power(x, y):\n    res = 1\n    while y > 0:\n        if y % 2 == 1:\n            res = ("], "prompt": "\nQUESTION:\nMatthew the physicist studies the quantum electro-dynamics of a silicon-based rectangular microchip. The microchip consists of a very large $N \\times M$ grid of electrons. Each electron has either positive (up) or negative (down) spin, denoted by $+$ and $-$ respectively.\n\nMatthew does not know the spin of all the electrons, but he has done $K$ measurements. In the $i$-th measurement, he discovered that the electron at position $(y_ i, x_ i)$ has a given spin $s_ i$. He also knows that in each $2\\times 2$ subgrid, there are equally many electrons with positive and negative spin. He wants to know whether he can recover the state of every electron based on his measurements. If not, he would like to know how many possible states are consistent with his measurements. For classified reasons, he wants the answer modulo $10^9 + 7$.\n\n-----Input-----\nThe first line contain three numbers $N$, $M$ and $K$: the height of the grid, the width of the grid and the number of measurements. The next $K$ lines contain a spin $s_ i$ where $s_ i$ is either $+$ or $-$, and two numbers $1 \\leq y_ i \\leq N$ and $1 \\leq x_ i \\leq M$ \u2013 the coordinates of the electron. Matthew never did two measurments at the exact same location.\n\nWe always have $1 \\leq N, M \\leq 10^9$ and $0 \\leq K \\leq 100000$.\n\n-----Output-----\nOutput the total number of valid states consistent with Matthew\u2019 measurements modulo $10^9 + 7$.\n\n-----Examples-----\nSample Input:\n2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\nSample Output:\n2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}