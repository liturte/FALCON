{"3067": {"code": ["from", "from", "from", "from", "from"], "prompt": "\nQUESTION:\nPasijans, patience, or solitaire is the name for a group of single player card games. One new such game, so new it has no name, is played with cards sporting random integers as values. The game starts by shuffling all cards and distributing them in $N$ sequences, not necessarily of equal length.\n\nDuring each turn, the player can remove the first card in any sequence and place it at the end of the \u201cSolution sequence\u201d. The card that was second in the selected sequence now becomes the first and the turn ends. Of course once the card is in the \u201cSolution sequence\u201d it cannot be removed, replaced or altered in any way. So don\u2019t even try.\n\nThe game ends when all cards are in the \u201cSolution sequence\u201d. The object of the game is to construct the best possible \u201cSolution sequence\u201d. One sequence is better than the other if for the first cards they differ, lets call them $X$ and $Y$, the value on the card $X$ is smaller than the value on the card $Y$.\n\nWrite a program that finds the best possible \u201cSolution sequence\u201d.\n\n-----Input-----\nThe first line contains one integer $N$ ($1 \\leq N \\leq 1000$), the number of starting sequences.\n\nThe next $N$ lines contain descriptions of input sequences. Each line starts with an integer $L$ ($1 \\leq L \\leq 1000$), the length of the sequence. It is followed by $L$ positive integers, each at most $100000000$.\n\n-----Output-----\nOne line containing $\\sum L$ numbers, the best possible \u201cSolution sequence\u201d obtainable.\n\n-----Examples-----\nSample Input 1:\n3\n1 2\n1 100\n1 1\nSample Output 1:\n1 2 100\n\nSample Input 2:\n2\n5 10 20 30 40 50\n2 28 27\nSample Output 2:\n10 20 28 27 30 40 50\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}