{"4613": {"code": ["import sys\nfrom collections import defaultdict\n\nsys.setrecursionlimit(100000)\n\ndef dfs(graph, node, parent, order, low, disc, bridges):\n    global time\n    time += 1\n    order[node] = time\n    low[node] = time", "from collections import defaultdict\n\ndef find_bridges(graph, u, visited, parent, low, disc, bridges):\n    visited[u] = True\n    low[u] = disc[u] = time\n    time += 1\n    for v in graph[u]:\n        if not visited[v]:", "from collections import defaultdict\n\ndef find_bridges(graph, u, visited, parent, low, disc, bridges):\n    visited[u] = True\n    low[u] = disc[u] = len(disc)\n\n    for v in graph[u]:\n        if not visited[v]:", "from collections import defaultdict\n\ndef dfs(graph, u, parent, low, disc, ap, time):\n    children = 0\n    children += 1 if parent != -1 else 0\n    low[u] = disc[u] = time\n    time += 1\n    for v in graph[u]:", "from collections import defaultdict\n\ndef find_bridges(graph, start):\n    visited = [False] * len(graph)\n    low = [0] * len(graph)\n    disc = [-1] * len(graph)\n    parent = [-1] * len(graph)\n    bridges = []"], "prompt": "\nQUESTION:\nYou are given an undirected connected graph with N vertices and M edges that does not contain self-loops and double edges.\n\nThe i-th edge (1 \\leq i \\leq M) connects Vertex a_i and Vertex b_i.  \nAn edge whose removal disconnects the graph is called a bridge.\n\nFind the number of the edges that are bridges among the M edges.  \n\n-----Notes-----\n - A self-loop is an edge i such that a_i=b_i (1 \\leq i \\leq M).\n - Double edges are a pair of edges i,j such that a_i=a_j and b_i=b_j (1 \\leq i<j \\leq M).\n - An undirected graph is said to be connected when there exists a path between every pair of vertices.\n\n-----Constraints-----\n - 2 \\leq N \\leq 50\n - N-1 \\leq M \\leq min(N(N\u22121)\u20442,50)\n - 1 \\leq a_i<b_i \\leq N\n - The given graph does not contain self-loops and double edges.\n - The given graph is connected.\n\n-----Input-----\nInput is given from Standard Input in the following format:  \nN M  \na_1 b_1  \na_2 b_2\n:  \na_M b_M\n\n-----Output-----\nPrint the number of the edges that are bridges among the M edges.\n\n-----Sample Input-----\n7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n\n-----Sample Output-----\n4\n\nThe figure below shows the given graph:\nThe edges shown in red are bridges. There are four of them.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}