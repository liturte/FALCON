{"2522": {"code": ["def solve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n\n    if A == B:\n        print('No')\n        return\n\n    count = [0] * (N+1)\n    for i in range(N):\n        count[A[i]] += 1\n        count[B[i]] -= 1\n\n    for i in range(1, N+1):\n        if count[i] != 0:\n            print('No')\n            return\n\n    B.sort()\n    for i in range(N):\n        if A[i]", "N = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ncount = [0] * (N+1)\nfor i in range(N):\n    count[A[i]] += 1\n\npossible = True\nfor i in range(N):\n    if count[B[i]] > 0:\n        count[B[i]] -= 1\n    else:\n        possible = False\n        break\n\nif possible:\n    print(\"Yes\")\n    print(\" \".join(map(str, B)))\nelse:\n    print(\"No\")\n\n\nEXPLANATION:\nThe solution first", "def reorder_b():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [(b[i], i) for i in range(n)]\n    c.sort()\n    d = [0] * n\n    for i in range(n):\n        d[c[i][1]] = a[i]\n    if a == d:\n        print('No')\n    else:\n        print('Yes')\n        print(' '.join(map(str, d)))\n\nreorder_b()\n\nThis solution works by first creating a list of tup", "def reorder_sequence(n, a, b):\n    if a == b:\n        return \"No\"\n    a_dict = {a[i]: i for i in range(n)}\n    b_sorted = sorted([(b[i], i) for i in range(n)])\n    a_sorted = sorted([(a[i], i) for i in range(n)])\n    b_new = [0] * n\n    for i in range(n):\n        b_new[a_dict[b_sorted[i][0]]] = b_sorted[i][0]\n    if a_sorted == [(b_new[i", "N = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ncount = [0] * (N+1)\nfor i in range(N):\n    count[A[i]] += 1\n    count[B[i]] -= 1\n\nfor i in range(1, N+1):\n    if count[i] != 0:\n        print(\"No\")\n        exit()\n\nprint(\"Yes\")\n\nidx = [0] * (N+1)\nfor i in range(N):\n    idx[B[i]] = i\nB = [B[i] for i in sorted"], "prompt": "\nQUESTION:\nGiven are two sequences A and B, both of length N.\nA and B are each sorted in the ascending order.\nCheck if it is possible to reorder the terms of B so that for each i (1 \\leq i \\leq N) A_i \\neq B_i holds, and if it is possible, output any of the reorderings that achieve it.\n\n-----Constraints-----\n - 1\\leq N \\leq 2 \\times 10^5\n - 1\\leq A_i,B_i \\leq N\n - A and B are each sorted in the ascending order.\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA_1 A_2 \\cdots A_N\nB_1 B_2 \\cdots B_N\n\n-----Output-----\nIf there exist no reorderings that satisfy the condition, print No.\nIf there exists a reordering that satisfies the condition, print Yes on the first line.\nAfter that, print a reordering of B on the second line, separating terms with a whitespace.\nIf there are multiple reorderings that satisfy the condition, you can print any of them.\n\n-----Sample Input-----\n6\n1 1 1 2 2 3\n1 1 1 2 2 3\n\n-----Sample Output-----\nYes\n2 2 3 1 1 1\n\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}