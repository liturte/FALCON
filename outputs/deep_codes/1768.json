{"1768": {"code": ["QUESTION:\nNadeko's birthday is approaching! As she decorated the room for the party, a long garland of Dianthus-shaped paper pieces was placed on a prominent part of the wall. Brother Koyomi will like it!\n\nStill unsatisfied with the garland, Nadeko decided to polish it again. The garland has n pieces numbered from 1 to n from left to right, and the i-th piece has a colour s_{i}, denoted by a lowercase English letter. Nadeko will repaint at most m of the pieces to give each of them an arbitrary new colour (still denoted by a lowercase English letter). After this work, she finds out all subsegments of the garland containing pieces of only colour c \u2014 Brother Koyomi's favourite one, and takes the length of the longest among them to be the Koyomity of the garland.\n\nFor instance, let's say the garland is represented by \"kooomo\", and Brother Koyomi's favourite colour is \"o\". Among all subsegments containing pieces of \"o\" only, \"ooo\" is the longest, with a length of 3. Thus the Koyomity of this garland equals 3.\n\nBut problem arises as Nadeko is unsure about Brother Koyomi's favourite colour, and has swaying ideas on the amount of work to do. She has q plans on this, each of which can be expressed as a pair of an integer m_{i} and a lowercase letter c_{i}, meanings of which are explained above. You are to find out the maximum Koyomity achievable after repainting the garland according to each plan.\n\n\n-----Input-----\n\nThe first line of input contains a positive integer n (1 \u2264 n \u2264 1 500) \u2014 the length of the garland.\n\nThe second line contains n lowercase English letters s_1s_2... s_{n} as a string \u2014 the initial colours of paper pieces on the garland.\n\nThe third line contains a positive integer q (1 \u2264 q \u2264 200 000) \u2014 the number of plans Nadeko has.\n\nThe next q lines describe one plan each: the i-th among them contains an integer m_{i} (1 \u2264 m_{i} \u2264 n) \u2014 the maximum amount of pieces to repaint, followed by a space, then by a lowercase English letter c_{i} \u2014 Koyomi's possible favourite colour.\n\n\n-----Output-----\n\nOutput q lines: for each work plan, output one line containing an integer \u2014", "QUESTION:\nNadeko's birthday is approaching! As she decorated the room for the party, a long garland of Dianthus-shaped paper pieces was placed on a prominent part of the wall. Brother Koyomi will like it!\n\nStill unsatisfied with the garland, Nadeko decided to polish it again. The garland has n pieces numbered from 1 to n from left to right, and the i-th piece has a colour s_{i}, denoted by a lowercase English letter. Nadeko will repaint at most m of the pieces to give each of them an arbitrary new colour (still denoted by a lowercase English letter). After this work, she finds out all subsegments of the garland containing pieces of only colour c \u2014 Brother Koyomi's favourite one, and takes the length of the longest among them to be the Koyomity of the garland.\n\nFor instance, let's say the garland is represented by \"kooomo\", and Brother Koyomi's favourite colour is \"o\". Among all subsegments containing pieces of \"o\" only, \"ooo\" is the longest, with a length of 3. Thus the Koyomity of this garland equals 3.\n\nBut problem arises as Nadeko is unsure about Brother Koyomi's favourite colour, and has swaying ideas on the amount of work to do. She has q plans on this, each of which can be expressed as a pair of an integer m_{i} and a lowercase letter c_{i}, meanings of which are explained above. You are to find out the maximum Koyomity achievable after repainting the garland according to each plan.\n\n\n-----Input-----\n\nThe first line of input contains a positive integer n (1 \u2264 n \u2264 1 500) \u2014 the length of the garland.\n\nThe second line contains n lowercase English letters s_1s_2... s_{n} as a string \u2014 the initial colours of paper pieces on the garland.\n\nThe third line contains a positive integer q (1 \u2264 q \u2264 200 000) \u2014 the number of plans Nadeko has.\n\nThe next q lines describe one plan each: the i-th among them contains an integer m_{i} (1 \u2264 m_{i} \u2264 n) \u2014 the maximum amount of pieces to repaint, followed by a space, then by a lowercase English letter c_{i} \u2014 Koyomi's possible favourite colour.\n\n\n-----Output-----\n\nOutput q lines: for each work plan, output one line containing an integer \u2014", "QUESTION:\nNadeko's birthday is approaching! As she decorated the room for the party, a long garland of Dianthus-shaped paper pieces was placed on a prominent part of the wall. Brother Koyomi will like it!\n\nStill unsatisfied with the garland, Nadeko decided to polish it again. The garland has n pieces numbered from 1 to n from left to right, and the i-th piece has a colour s_{i}, denoted by a lowercase English letter. Nadeko will repaint at most m of the pieces to give each of them an arbitrary new colour (still denoted by a lowercase English letter). After this work, she finds out all subsegments of the garland containing pieces of only colour c \u2014 Brother Koyomi's favourite one, and takes the length of the longest among them to be the Koyomity of the garland.\n\nFor instance, let's say the garland is represented by \"kooomo\", and Brother Koyomi's favourite colour is \"o\". Among all subsegments containing pieces of \"o\" only, \"ooo\" is the longest, with a length of 3. Thus the Koyomity of this garland equals 3.\n\nBut problem arises as Nadeko is unsure about Brother Koyomi's favourite colour, and has swaying ideas on the amount of work to do. She has q plans on this, each of which can be expressed as a pair of an integer m_{i} and a lowercase letter c_{i}, meanings of which are explained above. You are to find out the maximum Koyomity achievable after repainting the garland according to each plan.\n\n\n-----Input-----\n\nThe first line of input contains a positive integer n (1 \u2264 n \u2264 1 500) \u2014 the length of the garland.\n\nThe second line contains n lowercase English letters s_1s_2... s_{n} as a string \u2014 the initial colours of paper pieces on the garland.\n\nThe third line contains a positive integer q (1 \u2264 q \u2264 200 000) \u2014 the number of plans Nadeko has.\n\nThe next q lines describe one plan each: the i-th among them contains an integer m_{i} (1 \u2264 m_{i} \u2264 n) \u2014 the maximum amount of pieces to repaint, followed by a space, then by a lowercase English letter c_{i} \u2014 Koyomi's possible favourite colour.\n\n\n-----Output-----\n\nOutput q lines: for each work plan, output one line containing an integer \u2014", "QUESTION:\nNadeko's birthday is approaching! As she decorated the room for the party, a long garland of Dianthus-shaped paper pieces was placed on a prominent part of the wall. Brother Koyomi will like it!\n\nStill unsatisfied with the garland, Nadeko decided to polish it again. The garland has n pieces numbered from 1 to n from left to right, and the i-th piece has a colour s_{i}, denoted by a lowercase English letter. Nadeko will repaint at most m of the pieces to give each of them an arbitrary new colour (still denoted by a lowercase English letter). After this work, she finds out all subsegments of the garland containing pieces of only colour c \u2014 Brother Koyomi's favourite one, and takes the length of the longest among them to be the Koyomity of the garland.\n\nFor instance, let's say the garland is represented by \"kooomo\", and Brother Koyomi's favourite colour is \"o\". Among all subsegments containing pieces of \"o\" only, \"ooo\" is the longest, with a length of 3. Thus the Koyomity of this garland equals 3.\n\nBut problem arises as Nadeko is unsure about Brother Koyomi's favourite colour, and has swaying ideas on the amount of work to do. She has q plans on this, each of which can be expressed as a pair of an integer m_{i} and a lowercase letter c_{i}, meanings of which are explained above. You are to find out the maximum Koyomity achievable after repainting the garland according to each plan.\n\n\n-----Input-----\n\nThe first line of input contains a positive integer n (1 \u2264 n \u2264 1 500) \u2014 the length of the garland.\n\nThe second line contains n lowercase English letters s_1s_2... s_{n} as a string \u2014 the initial colours of paper pieces on the garland.\n\nThe third line contains a positive integer q (1 \u2264 q \u2264 200 000) \u2014 the number of plans Nadeko has.\n\nThe next q lines describe one plan each: the i-th among them contains an integer m_{i} (1 \u2264 m_{i} \u2264 n) \u2014 the maximum amount of pieces to repaint, followed by a space, then by a lowercase English letter c_{i} \u2014 Koyomi's possible favourite colour.\n\n\n-----Output-----\n\nOutput q lines: for each work plan, output one line containing an integer \u2014", "QUESTION:\nNadeko's birthday is approaching! As she decorated the room for the party, a long garland of Dianthus-shaped paper pieces was placed on a prominent part of the wall. Brother Koyomi will like it!\n\nStill unsatisfied with the garland, Nadeko decided to polish it again. The garland has n pieces numbered from 1 to n from left to right, and the i-th piece has a colour s_{i}, denoted by a lowercase English letter. Nadeko will repaint at most m of the pieces to give each of them an arbitrary new colour (still denoted by a lowercase English letter). After this work, she finds out all subsegments of the garland containing pieces of only colour c \u2014 Brother Koyomi's favourite one, and takes the length of the longest among them to be the Koyomity of the garland.\n\nFor instance, let's say the garland is represented by \"kooomo\", and Brother Koyomi's favourite colour is \"o\". Among all subsegments containing pieces of \"o\" only, \"ooo\" is the longest, with a length of 3. Thus the Koyomity of this garland equals 3.\n\nBut problem arises as Nadeko is unsure about Brother Koyomi's favourite colour, and has swaying ideas on the amount of work to do. She has q plans on this, each of which can be expressed as a pair of an integer m_{i} and a lowercase letter c_{i}, meanings of which are explained above. You are to find out the maximum Koyomity achievable after repainting the garland according to each plan.\n\n\n-----Input-----\n\nThe first line of input contains a positive integer n (1 \u2264 n \u2264 1 500) \u2014 the length of the garland.\n\nThe second line contains n lowercase English letters s_1s_2... s_{n} as a string \u2014 the initial colours of paper pieces on the garland.\n\nThe third line contains a positive integer q (1 \u2264 q \u2264 200 000) \u2014 the number of plans Nadeko has.\n\nThe next q lines describe one plan each: the i-th among them contains an integer m_{i} (1 \u2264 m_{i} \u2264 n) \u2014 the maximum amount of pieces to repaint, followed by a space, then by a lowercase English letter c_{i} \u2014 Koyomi's possible favourite colour.\n\n\n-----Output-----\n\nOutput q lines: for each work plan, output one line containing an integer \u2014"], "prompt": "\nQUESTION:\nNadeko's birthday is approaching! As she decorated the room for the party, a long garland of Dianthus-shaped paper pieces was placed on a prominent part of the wall. Brother Koyomi will like it!\n\nStill unsatisfied with the garland, Nadeko decided to polish it again. The garland has n pieces numbered from 1 to n from left to right, and the i-th piece has a colour s_{i}, denoted by a lowercase English letter. Nadeko will repaint at most m of the pieces to give each of them an arbitrary new colour (still denoted by a lowercase English letter). After this work, she finds out all subsegments of the garland containing pieces of only colour c \u2014 Brother Koyomi's favourite one, and takes the length of the longest among them to be the Koyomity of the garland.\n\nFor instance, let's say the garland is represented by \"kooomo\", and Brother Koyomi's favourite colour is \"o\". Among all subsegments containing pieces of \"o\" only, \"ooo\" is the longest, with a length of 3. Thus the Koyomity of this garland equals 3.\n\nBut problem arises as Nadeko is unsure about Brother Koyomi's favourite colour, and has swaying ideas on the amount of work to do. She has q plans on this, each of which can be expressed as a pair of an integer m_{i} and a lowercase letter c_{i}, meanings of which are explained above. You are to find out the maximum Koyomity achievable after repainting the garland according to each plan.\n\n\n-----Input-----\n\nThe first line of input contains a positive integer n (1 \u2264 n \u2264 1 500) \u2014 the length of the garland.\n\nThe second line contains n lowercase English letters s_1s_2... s_{n} as a string \u2014 the initial colours of paper pieces on the garland.\n\nThe third line contains a positive integer q (1 \u2264 q \u2264 200 000) \u2014 the number of plans Nadeko has.\n\nThe next q lines describe one plan each: the i-th among them contains an integer m_{i} (1 \u2264 m_{i} \u2264 n) \u2014 the maximum amount of pieces to repaint, followed by a space, then by a lowercase English letter c_{i} \u2014 Koyomi's possible favourite colour.\n\n\n-----Output-----\n\nOutput q lines: for each work plan, output one line containing an integer \u2014 the largest Koyomity achievable after repainting the garland according to it.\n\n\n-----Examples-----\nInput\n6\nkoyomi\n3\n1 o\n4 o\n4 m\n\nOutput\n3\n6\n5\n\nInput\n15\nyamatonadeshiko\n10\n1 a\n2 a\n3 a\n4 a\n5 a\n1 b\n2 b\n3 b\n4 b\n5 b\n\nOutput\n3\n4\n5\n7\n8\n1\n2\n3\n4\n5\n\nInput\n10\naaaaaaaaaa\n2\n10 b\n10 z\n\nOutput\n10\n10\n\n\n\n-----Note-----\n\nIn the first sample, there are three plans:   In the first plan, at most 1 piece can be repainted. Repainting the \"y\" piece to become \"o\" results in \"kooomi\", whose Koyomity of 3 is the best achievable;  In the second plan, at most 4 pieces can be repainted, and \"oooooo\" results in a Koyomity of 6;  In the third plan, at most 4 pieces can be repainted, and \"mmmmmi\" and \"kmmmmm\" both result in a Koyomity of 5.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}