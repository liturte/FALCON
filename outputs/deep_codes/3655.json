{"3655": {"code": ["QUESTION:\nYraglac has just finished building a robot! It\u2019s fancy: two wheels, with an auto-balancing system, several cameras, wireless connectivity, and a sattelite dish. There\u2019s just one little problem\u2026\n\nHe powered it up, sent it off for a test, and now it\u2019s not responding to any inputs. All he has is a photograph of the floor below it, acquired during an attempted rendition of Robot Ballet. Yraglac wasn\u2019t really paying attention to where it was, though, as he was too excited.\n\nThankfully, one of Yraglac\u2019s classmates has produced a huge stitched-together image of all of the floors in the University. Now all Yraglac has to do is figure out where this image of the floor is, and then he can just go and pick up the robot directly.\n\nUnfortunately, Yraglac doesn\u2019t have the patience to look through the entire huge image for anything that matches, so he wants to write a program that will find an initial set of locations that seem like candidates.\n\nThankfully, due to \u2026cough \u2026the fact that this is a competitive programming problem \u2026cough \u2026the images are of exactly the same scale, so Yraglac should be able to figure out where the robot is simply by checking how closely the robot\u2019s image matches the floor image at each possible place to overlay the robot\u2019s image on the floor image.\n\nYraglac will consider a location as a candidate if it is tied for having the most number of pixels the same between the two images.\n\n-----Input-----\nThe input consists of two images, the first of which is the last image seen from the robot, and the second is the entire floor of the university.\n\nEach image begins with a line consisting of two integers, $W$ and $H$, the width and height, respectively. You may assume that $W, H \\leq 1000$, and that the floor image is at least as large as the robot\u2019s image.\n\nFollowing on the next $H$ lines are $W$ space-separated integers, either 0 or 1, denoting the colour at the given pixel.\n\n-----Output-----\nThe output should consist of at least one line, one each for a candidate location, each containing a coordinate $(x,y)$ as two numbers separated by a single space, with $x$ first and $y$ second. The coordinates should be sorted by x-coordinate, and then by y-coordinate.\n\n-----Examples-----\nSample Input:\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0", "QUESTION:\nYraglac has just finished building a robot! It\u2019s fancy: two wheels, with an auto-balancing system, several cameras, wireless connectivity, and a sattelite dish. There\u2019s just one little problem\u2026\n\nHe powered it up, sent it off for a test, and now it\u2019s not responding to any inputs. All he has is a photograph of the floor below it, acquired during an attempted rendition of Robot Ballet. Yraglac wasn\u2019t really paying attention to where it was, though, as he was too excited.\n\nThankfully, one of Yraglac\u2019s classmates has produced a huge stitched-together image of all of the floors in the University. Now all Yraglac has to do is figure out where this image of the floor is, and then he can just go and pick up the robot directly.\n\nUnfortunately, Yraglac doesn\u2019t have the patience to look through the entire huge image for anything that matches, so he wants to write a program that will find an initial set of locations that seem like candidates.\n\nThankfully, due to \u2026cough \u2026the fact that this is a competitive programming problem \u2026cough \u2026the images are of exactly the same scale, so Yraglac should be able to figure out where the robot is simply by checking how closely the robot\u2019s image matches the floor image at each possible place to overlay the robot\u2019s image on the floor image.\n\nYraglac will consider a location as a candidate if it is tied for having the most number of pixels the same between the two images.\n\n-----Input-----\nThe input consists of two images, the first of which is the last image seen from the robot, and the second is the entire floor of the university.\n\nEach image begins with a line consisting of two integers, $W$ and $H$, the width and height, respectively. You may assume that $W, H \\leq 1000$, and that the floor image is at least as large as the robot\u2019s image.\n\nFollowing on the next $H$ lines are $W$ space-separated integers, either 0 or 1, denoting the colour at the given pixel.\n\n-----Output-----\nThe output should consist of at least one line, one each for a candidate location, each containing a coordinate $(x,y)$ as two numbers separated by a single space, with $x$ first and $y$ second. The coordinates should be sorted by x-coordinate, and then by y-coordinate.\n\n-----Examples-----\nSample Input:\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0", "QUESTION:\nYraglac has just finished building a robot! It\u2019s fancy: two wheels, with an auto-balancing system, several cameras, wireless connectivity, and a sattelite dish. There\u2019s just one little problem\u2026\n\nHe powered it up, sent it off for a test, and now it\u2019s not responding to any inputs. All he has is a photograph of the floor below it, acquired during an attempted rendition of Robot Ballet. Yraglac wasn\u2019t really paying attention to where it was, though, as he was too excited.\n\nThankfully, one of Yraglac\u2019s classmates has produced a huge stitched-together image of all of the floors in the University. Now all Yraglac has to do is figure out where this image of the floor is, and then he can just go and pick up the robot directly.\n\nUnfortunately, Yraglac doesn\u2019t have the patience to look through the entire huge image for anything that matches, so he wants to write a program that will find an initial set of locations that seem like candidates.\n\nThankfully, due to \u2026cough \u2026the fact that this is a competitive programming problem \u2026cough \u2026the images are of exactly the same scale, so Yraglac should be able to figure out where the robot is simply by checking how closely the robot\u2019s image matches the floor image at each possible place to overlay the robot\u2019s image on the floor image.\n\nYraglac will consider a location as a candidate if it is tied for having the most number of pixels the same between the two images.\n\n-----Input-----\nThe input consists of two images, the first of which is the last image seen from the robot, and the second is the entire floor of the university.\n\nEach image begins with a line consisting of two integers, $W$ and $H$, the width and height, respectively. You may assume that $W, H \\leq 1000$, and that the floor image is at least as large as the robot\u2019s image.\n\nFollowing on the next $H$ lines are $W$ space-separated integers, either 0 or 1, denoting the colour at the given pixel.\n\n-----Output-----\nThe output should consist of at least one line, one each for a candidate location, each containing a coordinate $(x,y)$ as two numbers separated by a single space, with $x$ first and $y$ second. The coordinates should be sorted by x-coordinate, and then by y-coordinate.\n\n-----Examples-----\nSample Input:\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0", "QUESTION:\nYraglac has just finished building a robot! It\u2019s fancy: two wheels, with an auto-balancing system, several cameras, wireless connectivity, and a sattelite dish. There\u2019s just one little problem\u2026\n\nHe powered it up, sent it off for a test, and now it\u2019s not responding to any inputs. All he has is a photograph of the floor below it, acquired during an attempted rendition of Robot Ballet. Yraglac wasn\u2019t really paying attention to where it was, though, as he was too excited.\n\nThankfully, one of Yraglac\u2019s classmates has produced a huge stitched-together image of all of the floors in the University. Now all Yraglac has to do is figure out where this image of the floor is, and then he can just go and pick up the robot directly.\n\nUnfortunately, Yraglac doesn\u2019t have the patience to look through the entire huge image for anything that matches, so he wants to write a program that will find an initial set of locations that seem like candidates.\n\nThankfully, due to \u2026cough \u2026the fact that this is a competitive programming problem \u2026cough \u2026the images are of exactly the same scale, so Yraglac should be able to figure out where the robot is simply by checking how closely the robot\u2019s image matches the floor image at each possible place to overlay the robot\u2019s image on the floor image.\n\nYraglac will consider a location as a candidate if it is tied for having the most number of pixels the same between the two images.\n\n-----Input-----\nThe input consists of two images, the first of which is the last image seen from the robot, and the second is the entire floor of the university.\n\nEach image begins with a line consisting of two integers, $W$ and $H$, the width and height, respectively. You may assume that $W, H \\leq 1000$, and that the floor image is at least as large as the robot\u2019s image.\n\nFollowing on the next $H$ lines are $W$ space-separated integers, either 0 or 1, denoting the colour at the given pixel.\n\n-----Output-----\nThe output should consist of at least one line, one each for a candidate location, each containing a coordinate $(x,y)$ as two numbers separated by a single space, with $x$ first and $y$ second. The coordinates should be sorted by x-coordinate, and then by y-coordinate.\n\n-----Examples-----\nSample Input:\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0", "QUESTION:\nYraglac has just finished building a robot! It\u2019s fancy: two wheels, with an auto-balancing system, several cameras, wireless connectivity, and a sattelite dish. There\u2019s just one little problem\u2026\n\nHe powered it up, sent it off for a test, and now it\u2019s not responding to any inputs. All he has is a photograph of the floor below it, acquired during an attempted rendition of Robot Ballet. Yraglac wasn\u2019t really paying attention to where it was, though, as he was too excited.\n\nThankfully, one of Yraglac\u2019s classmates has produced a huge stitched-together image of all of the floors in the University. Now all Yraglac has to do is figure out where this image of the floor is, and then he can just go and pick up the robot directly.\n\nUnfortunately, Yraglac doesn\u2019t have the patience to look through the entire huge image for anything that matches, so he wants to write a program that will find an initial set of locations that seem like candidates.\n\nThankfully, due to \u2026cough \u2026the fact that this is a competitive programming problem \u2026cough \u2026the images are of exactly the same scale, so Yraglac should be able to figure out where the robot is simply by checking how closely the robot\u2019s image matches the floor image at each possible place to overlay the robot\u2019s image on the floor image.\n\nYraglac will consider a location as a candidate if it is tied for having the most number of pixels the same between the two images.\n\n-----Input-----\nThe input consists of two images, the first of which is the last image seen from the robot, and the second is the entire floor of the university.\n\nEach image begins with a line consisting of two integers, $W$ and $H$, the width and height, respectively. You may assume that $W, H \\leq 1000$, and that the floor image is at least as large as the robot\u2019s image.\n\nFollowing on the next $H$ lines are $W$ space-separated integers, either 0 or 1, denoting the colour at the given pixel.\n\n-----Output-----\nThe output should consist of at least one line, one each for a candidate location, each containing a coordinate $(x,y)$ as two numbers separated by a single space, with $x$ first and $y$ second. The coordinates should be sorted by x-coordinate, and then by y-coordinate.\n\n-----Examples-----\nSample Input:\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0"], "prompt": "\nQUESTION:\nYraglac has just finished building a robot! It\u2019s fancy: two wheels, with an auto-balancing system, several cameras, wireless connectivity, and a sattelite dish. There\u2019s just one little problem\u2026\n\nHe powered it up, sent it off for a test, and now it\u2019s not responding to any inputs. All he has is a photograph of the floor below it, acquired during an attempted rendition of Robot Ballet. Yraglac wasn\u2019t really paying attention to where it was, though, as he was too excited.\n\nThankfully, one of Yraglac\u2019s classmates has produced a huge stitched-together image of all of the floors in the University. Now all Yraglac has to do is figure out where this image of the floor is, and then he can just go and pick up the robot directly.\n\nUnfortunately, Yraglac doesn\u2019t have the patience to look through the entire huge image for anything that matches, so he wants to write a program that will find an initial set of locations that seem like candidates.\n\nThankfully, due to \u2026cough \u2026the fact that this is a competitive programming problem \u2026cough \u2026the images are of exactly the same scale, so Yraglac should be able to figure out where the robot is simply by checking how closely the robot\u2019s image matches the floor image at each possible place to overlay the robot\u2019s image on the floor image.\n\nYraglac will consider a location as a candidate if it is tied for having the most number of pixels the same between the two images.\n\n-----Input-----\nThe input consists of two images, the first of which is the last image seen from the robot, and the second is the entire floor of the university.\n\nEach image begins with a line consisting of two integers, $W$ and $H$, the width and height, respectively. You may assume that $W, H \\leq 1000$, and that the floor image is at least as large as the robot\u2019s image.\n\nFollowing on the next $H$ lines are $W$ space-separated integers, either 0 or 1, denoting the colour at the given pixel.\n\n-----Output-----\nThe output should consist of at least one line, one each for a candidate location, each containing a coordinate $(x,y)$ as two numbers separated by a single space, with $x$ first and $y$ second. The coordinates should be sorted by x-coordinate, and then by y-coordinate.\n\n-----Examples-----\nSample Input:\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\nSample Output:\n0 0\n1 1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}