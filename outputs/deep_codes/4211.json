{"4211": {"code": ["def solve():\n    N = int(input())\n    B = list(map(int, input().split()))\n    A = [0] * N\n    for i in range(N-1):\n        A[i] = max(B[i], B[i+1])\n    A[-1] = B[-1]\n    print(sum(A))\nsolve()\n\nThis code takes in the input, creates a list A of size N initialized with zeros, calculates the maximum value between the current and next element of B for each element in A (except for the last element which is the same as the last element of B), and finally prints the sum of all elements in A.\n\nThis solution is based on the fact that A_i should be as large as possible to maximize the sum of A. The maximum value of A_i is either B_i itself or the maximum of B_i and B_{i+1}, which is given in the problem statement.\n\nThe time complexity of this solution is O(N), where N is the size of the input sequence B", "N = int(input())\nB = list(map(int, input().split()))\nA = [0]*N\n\nA[0] = B[0] + 1\nA[-1] = B[-1] + 1\n\nfor i in range(1, N-1):\n    A[i] = max(B[i-1] + 1, B[i] + 1)\n\nprint(sum(A))\n\n\nExplanation:\nThe maximum sum of A is achieved when the elements of A are as large as possible. However, the element at the i-th position of A must be at least as large as the maximum of A_i and A_{i+1}, which is given by B_i. Therefore, we can assign A_i to be B_i+1 and A_{i+1} to be B_{i+1}+1 for all i. The sum of A is the sum of A_i, which is the sum of B_i+1, which is the sum of B plus N, because B_i+1", "N = int(input())\nB = list(map(int, input().split()))\n\nA = [0]*N\nA[0] = B[0]\n\nfor i in range(1, N-1):\n    A[i] = max(B[i-1], B[i])\n\nA[-1] = B[-1]\nprint(sum(A))\n\n\nExplanation:\nFirst, we initialize an array A with size N and set the first element A[0] as B[0].\nThen, we iterate through the array B from the second element to the second last one and set A[i] as the maximum between B[i-1] and B[i].\nFinally, we set the last element A[-1] as B[-1] and print the sum of the array A.\nThe sum of the array A will be the maximum possible sum of the elements of A.\n'''\n\n# Sample Input:\n# 3\n# 2 5\n\n# Sample Output:\n# 9", "N = int(input())\nB = list(map(int, input().split()))\n\nA = [0]*N\nA[0] = B[0]\n\nfor i in range(1, N-1):\n    A[i] = max(B[i-1], B[i])\n\nA[-1] = B[-1]\nprint(sum(A))\n\n\nEXPLANATION:\nFirst, we initialize an array A of length N with zeroes. We then fill the first and last elements of A with the first and last elements of B respectively.\n\nNext, we iterate over the rest of the array B and fill the corresponding elements of A with the maximum of the current element of B and the previous element of B.\n\nFinally, we return the sum of all elements in A, which is our answer.\n\nThis solution works because we can make the value of A[i] as large as possible by making it equal to the maximum of the two values from B. This ensures that the sum of the elements in A will be as large as possible.", "N = int(input())\nB = list(map(int, input().split()))\nA = [0]*N\nA[0] = B[0]+1\nA[-1] = B[-1]+1\nfor i in range(1, N-1):\n    A[i] = max(B[i-1]+1, B[i])+1\nprint(sum(A))\n\n\nEXPLANATION:\nThis Python program first reads the input. The first line is the length of the sequence, N. The second line is the sequence B. We create a list A to store the elements of the sequence A.\n\nThe program then calculates the elements of A. The first and last elements of A are set to B[0]+1 and B[-1]+1 respectively. This is because A[i] must be greater than or equal to the maximum of A[i-1] and A[i+1]. So, we add 1 to both sides of B to ensure this condition.\n\nFor the elements in the middle of the"], "prompt": "\nQUESTION:\nThere is an integer sequence A of length N whose values are unknown.\nGiven is an integer sequence B of length N-1 which is known to satisfy the following:\n B_i \\geq \\max(A_i, A_{i+1}) \nFind the maximum possible sum of the elements of A.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq N \\leq 100\n - 0 \\leq B_i \\leq 10^5\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nB_1 B_2 ... B_{N-1}\n\n-----Output-----\nPrint the maximum possible sum of the elements of A.\n\n-----Sample Input-----\n3\n2 5\n\n-----Sample Output-----\n9\n\nA can be, for example, ( 2 , 1 , 5 ), ( -1 , -2 , -3 ), or ( 2 , 2 , 5 ). Among those candidates, A = ( 2 , 2 , 5 ) has the maximum possible sum.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}