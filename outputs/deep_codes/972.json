{"972": {"code": ["def is_convex(grid):\n    n = len(grid)\n    m = len(grid[0])\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == 'B':\n                for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n                    nx, ny = i + dx, j + dy\n                    if 0 <= nx < n and 0 <= ny < m and grid[nx][ny] == 'B':\n                        for ddx, ddy in [(-1, 0), (1, 0), (0", "def is_convex(grid):\n    n = len(grid)\n    m = len(grid[0])\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == 'B':\n                for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n                    nx, ny = i + dx, j + dy\n                    if 0 <= nx < n and 0 <= ny < m and grid[nx][ny] == 'B':\n                        for ddx, ddy in [(-1, 0), (1, 0), (0", "def is_convex(grid):\n    n = len(grid)\n    m = len(grid[0])\n    black_cells = [(i, j) for i in range(n) for j in range(m) if grid[i][j] == 'B']\n    \n    for i, j in black_cells:\n        for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n            x, y = i + dx, j + dy\n            if 0 <= x < n and 0 <= y < m and grid[x][y] == 'B':\n                for ddx, ddy", "n, m = map(int, input().split())\ngrid = [input() for _ in range(n)]\n\ndef is_convex():\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == 'B':\n                for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n                    nx, ny = i + dx, j + dy\n                    if 0 <= nx < n and 0 <= ny < m and grid[nx][ny] == 'B':\n                        for ddx, ddy in [(-1, 0), (", "n, m = map(int, input().split())\ngrid = [input() for _ in range(n)]\n\ndef is_convex():\n    for i in range(n):\n        for j in range(m):\n            if grid[i][j] == 'B':\n                for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:\n                    ni, nj = i + dx, j + dy\n                    if 0 <= ni < n and 0 <= nj < m and grid[ni][nj] == 'B':\n                        if not ((0 <= i-dx < n and 0 <= j-dy"], "prompt": "\nQUESTION:\nConsider an n \u00d7 m grid. Initially all the cells of the grid are colored white. Lenny has painted some of the cells (at least one) black. We call a painted grid convex if one can walk from any black cell to any another black cell using a path of side-adjacent black cells changing his direction at most once during the path. In the figure below, the left grid is convex while the right one is not convex, because there exist two cells which need more than one time to change direction in their path. [Image] \n\nYou're given a painted grid in the input. Tell Lenny if the grid is convex or not.\n\n\n-----Input-----\n\nThe first line of the input contains two integers n and m (1 \u2264 n, m \u2264 50) \u2014 the size of the grid. Each of the next n lines contains m characters \"B\" or \"W\". Character \"B\" denotes a black cell of the grid and \"W\" denotes a white cell of the grid.\n\nIt's guaranteed that the grid has at least one black cell.\n\n\n-----Output-----\n\nOn the only line of the output print \"YES\" if the grid is convex, otherwise print \"NO\". Do not print quotes.\n\n\n-----Examples-----\nInput\n3 4\nWWBW\nBWWW\nWWWB\n\nOutput\nNO\n\nInput\n3 1\nB\nB\nW\n\nOutput\nYES\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}