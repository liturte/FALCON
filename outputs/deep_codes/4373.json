{"4373": {"code": ["def max_training_days(n, a):\n    a.sort()\n    return sum(a) - n\n\nn = int(input())\na = list(map(int, input().split()))\nprint(max_training_days(n, a))\n\n\nThis code first", "def max_days(n, problems):\n    days = 0\n    problems.sort(reverse=True)\n    while problems and problems[-1] > days:\n        days += 1\n        problems.pop()\n    return days\n\nn = int(input())\nproblems = list(map", "def max_training_days(n, a):\n    a.sort()\n    return sum(a) - n\n\nn = int(input())\na = list(map(int, input().split()))\nprint(max_training_days(n, a))\n\n\nEXPLAN", "def max_training_days(n, a):\n    a.sort()\n    count = 0\n    while a:\n        problems = a.pop(0)\n        if problems > count:\n            count += 1\n    return count\n\nn = int(input())\na = list(map", "def max_days(n, a):\n    a.sort()\n    return sum(a) - n\n\nn = int(input())\na = list(map(int, input().split()))\nprint(max_days(n, a))\n\nThis Python code first sorts the list of"], "prompt": "\nQUESTION:\nPolycarp wants to train before another programming competition. During the first day of his training he should solve exactly $1$ problem, during the second day \u2014 exactly $2$ problems, during the third day \u2014 exactly $3$ problems, and so on. During the $k$-th day he should solve $k$ problems.\n\nPolycarp has a list of $n$ contests, the $i$-th contest consists of $a_i$ problems. During each day Polycarp has to choose exactly one of the contests he didn't solve yet and solve it. He solves exactly $k$ problems from this contest. Other problems are discarded from it. If there are no contests consisting of at least $k$ problems that Polycarp didn't solve yet during the $k$-th day, then Polycarp stops his training.\n\nHow many days Polycarp can train if he chooses the contests optimally?\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of contests.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 2 \\cdot 10^5$) \u2014 the number of problems in the $i$-th contest.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum number of days Polycarp can train if he chooses the contests optimally.\n\n\n-----Examples-----\nInput\n4\n3 1 4 1\n\nOutput\n3\n\nInput\n3\n1 1 1\n\nOutput\n1\n\nInput\n5\n1 1 1 2 2\n\nOutput\n2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}