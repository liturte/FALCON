{"4611": {"code": ["import sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    points = [list(map(int, sys.stdin.readline().strip().split())) for _ in range(N)]", "import sys\nfrom heapq import heappush, heappop\n\ndef solve():\n    N = int(sys.stdin.readline().strip())\n    events = []\n    for _ in range(N):\n        t, x", "import sys\n\ndef solve():\n    N = int(sys.stdin.readline())\n    points = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\n    cur_time", "import sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    points = [list(map(int, sys.stdin.readline().strip().split())) for _ in range(N)]", "import sys\nread = sys.stdin.readline\n\nN = int(read().strip())\npoints = [list(map(int, read().strip().split())) for _ in range(N)]\n\ncur = [0, 0"], "prompt": "\nQUESTION:\nAtCoDeer the deer is going on a trip in a two-dimensional plane.\nIn his plan, he will depart from point (0, 0) at time 0, then for each i between 1 and N (inclusive), he will visit point (x_i,y_i) at time t_i.\nIf AtCoDeer is at point (x, y) at time t, he can be at one of the following points at time t+1: (x+1,y), (x-1,y), (x,y+1) and (x,y-1).\nNote that he cannot stay at his place.\nDetermine whether he can carry out his plan.\n\n-----Constraints-----\n - 1 \u2264 N \u2264 10^5\n - 0 \u2264 x_i \u2264 10^5\n - 0 \u2264 y_i \u2264 10^5\n - 1 \u2264 t_i \u2264 10^5\n - t_i < t_{i+1} (1 \u2264 i \u2264 N-1)\n - All input values are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nt_1 x_1 y_1\nt_2 x_2 y_2\n:\nt_N x_N y_N\n\n-----Output-----\nIf AtCoDeer can carry out his plan, print Yes; if he cannot, print No.\n\n-----Sample Input-----\n2\n3 1 2\n6 1 1\n\n-----Sample Output-----\nYes\n\nFor example, he can travel as follows: (0,0), (0,1), (1,1), (1,2), (1,1), (1,0), then (1,1).\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}