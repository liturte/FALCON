{"4550": {"code": ["a, b, c = map(int, input().split())\nif a + b == b + c or a + c == b + c:\n    print('Yes')\nelse:\n    print('No')\n\n\nThis code takes the input for the number of candies in each pack. Then it checks if the sum of candies in two different packs is equal to the sum of candies in the third pack. If it is, it means that it is possible to distribute the packs so that each student gets the same number of candies, and it prints 'Yes'. If not, it prints 'No'.\n\nNote: This code assumes that the input will always be in the correct format.\n\n\na, b, c = map(int, input().split())\nif a + b == b + c or a + c == b + c:\n    print('Yes')\nelse:\n    print('No')\n\n\nThis code assumes that the input will always be in the correct format. It splits the input into three variables,", "a, b, c = map(int, input().split())\nprint(\"Yes\" if a + b + c >= 3 else \"No\")\n\n\nEXPLANATION:\nThis solution is based on the observation that if the sum of the candies in all the packs is greater than or equal to 3, it is possible to distribute the packs so that each student gets the same number of candies. This is because you can always give away a whole pack of candies to one student, and then distribute the remaining candies between the other two students.\n\nFor example, if you have a pack of 10 candies, a pack of 30 candies, and a pack of 20 candies, you can give away 10 candies to one student, leaving 20 candies. Then you can give 10 candies from the second pack to one student, and 20 candies from the third pack to the other student, so they both get 30 candies.\n\nIf the sum of the candies in all the", "a, b, c = map(int, input().split())\nif a + b + c >= 3 and min(a, b, c) >= 1:\n    print('Yes')\nelse:\n    print('No')\n\n\nThis Python program uses the built-in map() function to read three integers from the input. It then checks if the sum of these integers is greater than or equal to 3, and if the minimum of these integers is greater than or equal to 1. If both conditions are true, it prints 'Yes', otherwise it prints 'No'.\n\nThe first condition checks if the total number of candies is at least 3, because in order to distribute the candies equally, at least two packs must be given to each student. The second condition checks if at least one pack contains at least one candy, because the teacher cannot give an empty pack to a student.\n\nThis solution assumes that the input is always valid and does not handle potential errors.\n\nThis solution also assumes that the candy packs are identical, which means that the number of cand", "a, b, c = map(int, input().split())\nif (a + b + c) % 2 == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n\nThe solution works by first summing up the total number of candies in all packs. If the total number of candies is even, it's possible to distribute the candies so that each student gets the same number of candies. If the total number of candies is odd, it's impossible to distribute the candies in such a way. The modulus operator (%) is used to check if the total number of candies is even or odd.\n\nThe `map()` function is used to convert the input string into integers. The `input().split()` function splits the input string into separate words. The `print()` function is used to output the result.\n\nThe `if` statement is used to check if the total number of candies is even. If it is, the program outputs \"Yes\". If it's not, the", "a, b, c = map(int, input().split())\nif a + b + c >= 3:\n    print('Yes')\nelse:\n    print('No')\n\n\nEXPLANATION:\nThe code works by taking in three integers a, b, and c from the user. The total number of candies in all the packs is added together. If the total is 3 or more, then it is possible to distribute the candies so that each student gets the same number of candies, and the code prints 'Yes'. If the total is less than 3, then it is not possible to distribute the candies in this way, and the code prints 'No'.\n\nThis solution works because the teacher Evi can distribute the candies in such a way if and only if the total number of candies is 3 or more. This is because each student gets a candy from each pack, and there are 3 packs. Therefore, each student gets 3 candies, and the total number of candies is 3*3 = 9. If the"], "prompt": "\nQUESTION:\nTwo students of AtCoder Kindergarten are fighting over candy packs.\nThere are three candy packs, each of which contains a, b, and c candies, respectively.\nTeacher Evi is trying to distribute the packs between the two students so that each student gets the same number of candies. Determine whether it is possible.\nNote that Evi cannot take candies out of the packs, and the whole contents of each pack must be given to one of the students.\n\n-----Constraints-----\n - 1 \u2266 a, b, c \u2266 100\n\n-----Input-----\nThe input is given from Standard Input in the following format:\na b c\n\n-----Output-----\nIf it is possible to distribute the packs so that each student gets the same number of candies, print Yes. Otherwise, print No.\n\n-----Sample Input-----\n10 30 20\n\n-----Sample Output-----\nYes\n\nGive the pack with 30 candies to one student, and give the two packs with 10 and 20 candies to the other. Then, each gets 30 candies.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}