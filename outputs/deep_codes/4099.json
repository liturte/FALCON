{"4099": {"code": ["N, K, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nif M * N > sum(A) + K * (N - len(A)):\n    print(-1)\nelse:\n    print(max(0, M * N - sum(A) + K * (N - len(A))))\n\n\nExplanation:\nThe solution is to check if the goal is achievable. If the sum of the scores of the N-1 subjects plus the maximum possible score of the remaining subject is greater than or equal to M * N, then the goal is achievable. If not, print -1.\nIf the goal is achievable, calculate the minimum score on the final subject by subtracting the sum of the scores of the N-1 subjects", "N, K, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ntotal_scores = sum(A)\nmin_total = M * N\n\n# If Takahashi's average score is already higher than M, return 0.\nif (total_scores + M) / N >= M:\n    print(0)\nelif (total_scores + K * (N - 1)) / N < M:\n    print(-1)\nelse:\n    # Binary search for the minimum score on the final subject.\n    left = (total_scores + M * (N - 1)) // N\n    right = K + 1\n    while right - left > 1:\n        mid = (left + right) //", "N, K, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ntotal = sum(A)\nmin_score = (N-1)*0 + (N)*M\n\nif total >= min_score:\n    print(-1)\nelse:\n    print(N*M - total)\n\n\nThis solution works by first calculating the total score Takahashi already has on the N-1 subjects. Then it calculates the minimum score Takahashi needs to achieve his goal on all subjects. If Takahashi already has more or equal score than the minimum score, he cannot achieve his goal, so it prints -1. Otherwise, it calculates and prints the minimum score Takahashi needs to achieve his goal on the final subject.\n\nThis solution", "N, K, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ntotal_A = sum(A)\ntotal_K = K * N\n\nif M * N > total_K:\n    print(-1)\nelse:\n    print(max(0, M * N - total_A))\n\n\nExplanation:\nThe total score Takahashi can achieve is the sum of the maximum possible scores on all subjects, which is K * N.\nIf M * N is greater than this, Takahashi cannot achieve his goal, so we print -1.\nOtherwise, we calculate the remaining score he needs to achieve his goal by subtracting the sum of the scores he already achieved from the total.\nIf this score is negative, he already", "N, K, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ntotal = sum(A)\nneed = M * N - total\n\nif need > K:\n    print(-1)\nelif need <= 0:\n    print(0)\nelse:\n    print(need)\n\n\nExplanation:\nThe script first calculates the total score Takahashi has already obtained by summing up the scores on the N-1 subjects.\nThen, it calculates the total score Takahashi needs to achieve the average score of M points by multiplying the total number of subjects by M and subtracting the total score Takahashi has already obtained.\nIf the score Takahashi needs is more than K, it means the goal is un"], "prompt": "\nQUESTION:\nTakahashi is taking exams on N subjects. The score on each subject will be an integer between 0 and K (inclusive).\nHe has already taken exams on N-1 subjects and scored A_i points on the i-th subject.\nHis goal is to achieve the average score of M points or above on the N subjects.\nPrint the minimum number of points Takahashi needs on the final subject to achieve his goal.\nIf the goal is unachievable, print -1 instead.\n\n-----Constraints-----\n - 2 \\leq N \\leq 100\n - 1 \\leq K \\leq 100\n - 1 \\leq M \\leq K\n - 0 \\leq A_i \\leq K\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K M\nA_1 A_2 ... A_{N-1}\n\n-----Output-----\nPrint the minimum number of points required on the final subject, or -1.\n\n-----Sample Input-----\n5 10 7\n8 10 3 6\n\n-----Sample Output-----\n8\n\nIf he scores 8 points on the final subject, his average score will be (8+10+3+6+8)/5 = 7 points, which meets the goal.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}