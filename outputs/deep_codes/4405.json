{"4405": {"code": ["QUESTION:\nPolycarp has prepared $n$ competitive programming problems. The topic of the $i$-th problem is $a_i$, and some problems' topics may coincide.\n\nPolycarp has to host several thematic contests. All problems in each contest should have the same topic, and all contests should have pairwise distinct topics. He may not use all the problems. It is possible that there are no contests for some topics.\n\nPolycarp wants to host competitions on consecutive days, one contest per day. Polycarp wants to host a set of contests in such a way that:  number of problems in each contest is exactly twice as much as in the previous contest (one day ago), the first contest can contain arbitrary number of problems;  the total number of problems in all the contests should be maximized. \n\nYour task is to calculate the maximum number of problems in the set of thematic contests. Note, that you should not maximize the number of contests.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of problems Polycarp has prepared.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) where $a_i$ is the topic of the $i$-th problem.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum number of problems in the set of thematic contests.\n\n\n-----Examples-----\nInput\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n\nOutput\n14\n\nInput\n10\n6 6 6 3 6 1000000000 3 3 6 6\n\nOutput\n9\n\nInput\n3\n1337 1337 1337\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first example the optimal sequence of contests is: $2$ problems of the topic $1$, $4$ problems of the topic $2$, $8$ problems of the topic $10$.\n\nIn the second example the optimal sequence of contests is: $3$ problems of the topic $3$, $6$ problems of the topic $6$.\n\nIn the third example you can take all the problems with the topic $13", "QUESTION:\nPolycarp has prepared $n$ competitive programming problems. The topic of the $i$-th problem is $a_i$, and some problems' topics may coincide.\n\nPolycarp has to host several thematic contests. All problems in each contest should have the same topic, and all contests should have pairwise distinct topics. He may not use all the problems. It is possible that there are no contests for some topics.\n\nPolycarp wants to host competitions on consecutive days, one contest per day. Polycarp wants to host a set of contests in such a way that:  number of problems in each contest is exactly twice as much as in the previous contest (one day ago), the first contest can contain arbitrary number of problems;  the total number of problems in all the contests should be maximized. \n\nYour task is to calculate the maximum number of problems in the set of thematic contests. Note, that you should not maximize the number of contests.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of problems Polycarp has prepared.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) where $a_i$ is the topic of the $i$-th problem.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum number of problems in the set of thematic contests.\n\n\n-----Examples-----\nInput\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n\nOutput\n14\n\nInput\n10\n6 6 6 3 6 1000000000 3 3 6 6\n\nOutput\n9\n\nInput\n3\n1337 1337 1337\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first example the optimal sequence of contests is: $2$ problems of the topic $1$, $4$ problems of the topic $2$, $8$ problems of the topic $10$.\n\nIn the second example the optimal sequence of contests is: $3$ problems of the topic $3$, $6$ problems of the topic $6$.\n\nIn the third example you can take all the problems with the topic $13", "QUESTION:\nPolycarp has prepared $n$ competitive programming problems. The topic of the $i$-th problem is $a_i$, and some problems' topics may coincide.\n\nPolycarp has to host several thematic contests. All problems in each contest should have the same topic, and all contests should have pairwise distinct topics. He may not use all the problems. It is possible that there are no contests for some topics.\n\nPolycarp wants to host competitions on consecutive days, one contest per day. Polycarp wants to host a set of contests in such a way that:  number of problems in each contest is exactly twice as much as in the previous contest (one day ago), the first contest can contain arbitrary number of problems;  the total number of problems in all the contests should be maximized. \n\nYour task is to calculate the maximum number of problems in the set of thematic contests. Note, that you should not maximize the number of contests.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of problems Polycarp has prepared.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) where $a_i$ is the topic of the $i$-th problem.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum number of problems in the set of thematic contests.\n\n\n-----Examples-----\nInput\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n\nOutput\n14\n\nInput\n10\n6 6 6 3 6 1000000000 3 3 6 6\n\nOutput\n9\n\nInput\n3\n1337 1337 1337\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first example the optimal sequence of contests is: $2$ problems of the topic $1$, $4$ problems of the topic $2$, $8$ problems of the topic $10$.\n\nIn the second example the optimal sequence of contests is: $3$ problems of the topic $3$, $6$ problems of the topic $6$.\n\nIn the third example you can take all the problems with the topic $13", "QUESTION:\nPolycarp has prepared $n$ competitive programming problems. The topic of the $i$-th problem is $a_i$, and some problems' topics may coincide.\n\nPolycarp has to host several thematic contests. All problems in each contest should have the same topic, and all contests should have pairwise distinct topics. He may not use all the problems. It is possible that there are no contests for some topics.\n\nPolycarp wants to host competitions on consecutive days, one contest per day. Polycarp wants to host a set of contests in such a way that:  number of problems in each contest is exactly twice as much as in the previous contest (one day ago), the first contest can contain arbitrary number of problems;  the total number of problems in all the contests should be maximized. \n\nYour task is to calculate the maximum number of problems in the set of thematic contests. Note, that you should not maximize the number of contests.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of problems Polycarp has prepared.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) where $a_i$ is the topic of the $i$-th problem.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum number of problems in the set of thematic contests.\n\n\n-----Examples-----\nInput\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n\nOutput\n14\n\nInput\n10\n6 6 6 3 6 1000000000 3 3 6 6\n\nOutput\n9\n\nInput\n3\n1337 1337 1337\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first example the optimal sequence of contests is: $2$ problems of the topic $1$, $4$ problems of the topic $2$, $8$ problems of the topic $10$.\n\nIn the second example the optimal sequence of contests is: $3$ problems of the topic $3$, $6$ problems of the topic $6$.\n\nIn the third example you can take all the problems with the topic $13", "QUESTION:\nPolycarp has prepared $n$ competitive programming problems. The topic of the $i$-th problem is $a_i$, and some problems' topics may coincide.\n\nPolycarp has to host several thematic contests. All problems in each contest should have the same topic, and all contests should have pairwise distinct topics. He may not use all the problems. It is possible that there are no contests for some topics.\n\nPolycarp wants to host competitions on consecutive days, one contest per day. Polycarp wants to host a set of contests in such a way that:  number of problems in each contest is exactly twice as much as in the previous contest (one day ago), the first contest can contain arbitrary number of problems;  the total number of problems in all the contests should be maximized. \n\nYour task is to calculate the maximum number of problems in the set of thematic contests. Note, that you should not maximize the number of contests.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of problems Polycarp has prepared.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) where $a_i$ is the topic of the $i$-th problem.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum number of problems in the set of thematic contests.\n\n\n-----Examples-----\nInput\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n\nOutput\n14\n\nInput\n10\n6 6 6 3 6 1000000000 3 3 6 6\n\nOutput\n9\n\nInput\n3\n1337 1337 1337\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first example the optimal sequence of contests is: $2$ problems of the topic $1$, $4$ problems of the topic $2$, $8$ problems of the topic $10$.\n\nIn the second example the optimal sequence of contests is: $3$ problems of the topic $3$, $6$ problems of the topic $6$.\n\nIn the third example you can take all the problems with the topic $13"], "prompt": "\nQUESTION:\nPolycarp has prepared $n$ competitive programming problems. The topic of the $i$-th problem is $a_i$, and some problems' topics may coincide.\n\nPolycarp has to host several thematic contests. All problems in each contest should have the same topic, and all contests should have pairwise distinct topics. He may not use all the problems. It is possible that there are no contests for some topics.\n\nPolycarp wants to host competitions on consecutive days, one contest per day. Polycarp wants to host a set of contests in such a way that:  number of problems in each contest is exactly twice as much as in the previous contest (one day ago), the first contest can contain arbitrary number of problems;  the total number of problems in all the contests should be maximized. \n\nYour task is to calculate the maximum number of problems in the set of thematic contests. Note, that you should not maximize the number of contests.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of problems Polycarp has prepared.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$) where $a_i$ is the topic of the $i$-th problem.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum number of problems in the set of thematic contests.\n\n\n-----Examples-----\nInput\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n\nOutput\n14\n\nInput\n10\n6 6 6 3 6 1000000000 3 3 6 6\n\nOutput\n9\n\nInput\n3\n1337 1337 1337\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first example the optimal sequence of contests is: $2$ problems of the topic $1$, $4$ problems of the topic $2$, $8$ problems of the topic $10$.\n\nIn the second example the optimal sequence of contests is: $3$ problems of the topic $3$, $6$ problems of the topic $6$.\n\nIn the third example you can take all the problems with the topic $1337$ (the number of such problems is $3$ so the answer is $3$) and host a single contest.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}