{"4877": {"code": ["a, b, h = map(int, input().split())\nprint((h+a-b-1)//(a-b))\n\nThis Python program reads three integers from the input, representing the amount the worm can climb at a time, the amount it falls during its resting period, and the height of the pole, respectively. It then calculates and prints the number of times the worm must climb up to reach the top of the pole. The expression `(h+a-b-1)//(a-b)` is used to calculate the ceiling division, which rounds up to the nearest integer.", "a, b, h = map(int, input().split())\nprint((h-b-1)//(a-b)+1)\n\n\nThis code first reads the input and assigns the values to the variables `a`, `b`, and `h`. Then, it calculates the number of times the worm must climb up by subtracting `b` from `h` (to account for the fall after climbing) and then dividing by the difference between `a` and `b`. The `+1` at the end is to account for the initial climb before the worm starts resting. The `//` operator is used for integer division, as the worm cannot climb a fraction of an inch.\n\nThis solution assumes that the input will always be valid and does not include any error checking.\n\nNote: This solution assumes that the worm climbs at least once before it starts falling, so the calculation for the number of climbs does not include the initial climb when the worm is at height", "a, b, h = map(int, input().split())\nprint((h+a-b-1)//(a-b))\n\n\nEXPLANATION:\nThe worm climbs `a` inches at a time, falls `b` inches, and wants to reach a height of `h`.\n\nThe worm climbs `a` inches and then falls `b` inches, so it covers an increase of `a-b` inches in each step.\n\nThe total number of steps it takes to reach the top is `(h+a-b-1)//(a-b)`. The `-1` is used to ensure that the worm doesn't miss the last step, which is necessary if `h` is exactly `(n-1)*(a-b)+a`, the last step should be the nth step.\n\nThe `//` operator is used to perform integer division (i.e., division that rounds down to the nearest whole number).", "a, b, h = map(int, input().split())\nprint((h - b - 1) // (a - b) + 1)\n\n\nEXPLANATION:\nThe worm climbs `a` inches up, then falls `b` inches. To reach the top of the pole, we need to subtract the fall distance from the total height and then divide the remaining height by the climbing distance. We use integer division (`//`) to get the number of whole times the worm can climb up. We add 1 to the result to account for the final climb after the last fall.\n\nThis solution assumes that the worm does not stop in the middle of a climb, and that it falls at the end of each resting period. If the worm can stop in the middle of a climb or rest at any point, the solution would need to be adjusted accordingly.", "a, b, h = map(int, input().split())\nprint((h + a - 1) // a)\n\n\nEXPLANATION:\nThe worm climbs `a` inches up at a time, and falls `b` inches down. If the worm wants to reach the top of the pole which is `h` inches high, it will take `(h + a - 1) // a` times of climbing up. The `//` operator is used to perform integer division, which means it rounds the result down to the nearest whole number. This is because the worm doesn't need to crawl up if it reaches the top of the pole exactly. So, if `h` is not a multiple of `a`, the worm will need to crawl up one more time to reach the top.\n\nThis solution assumes that the input will always be a valid integer. If the input can have decimal values, then the solution would need to be modified to handle that case.\n\nThis solution also"], "prompt": "\nQUESTION:\nA worm is at the bottom of a pole. It wants to reach the top, but it is too lazy to climb to the top without stopping. It can crawl up the pole a certain number of inches at a time, falling down a lesser number of inches right after while it rests. How many times does the worm need to crawl up in order to reach the top of the pole?\n\n-----Input-----\nThe input consists of a single line that contains three integers $a, b$ ($0 \\leq b < a \\leq 100$), and $h$, ($0 < h \\leq 100000$) indicating the amount $a$ of inches the worm can climb at a time, the amount $b$ of inches the worm falls during its resting period, and the height $h$ of the pole, respectively. For the purposes of this problem, the worm is modeled as a point and thus has no length.\n\n-----Output-----\nOutput the number of times the worm must crawl up in order to reach the top of the pole.\n\n-----Examples-----\nSample Input:\n5 0 15\nSample Output:\n3\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}