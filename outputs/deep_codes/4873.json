{"4873": {"code": ["def", "def", "from", "def", "from"], "prompt": "\nQUESTION:\nWe\u2019re building an old-school back-to-basics computer game. It\u2019s a very simple text based adventure game where you walk around and try to find treasure, avoiding falling into traps. The game is played on a rectangular grid and the player gets very limited information about her surroundings.\n\nThe game will consist of the player moving around on the grid for as long as she likes (or until she falls into a trap). The player can move up, down, left and right (but not diagonally). She will pick up gold if she walks into the same square as the gold is. If the player stands next to (i.e., immediately up, down, left, or right of) one or more traps, she will \u201csense a draft\u201d but will not know from what direction the draft comes, or how many traps she\u2019s near. If she tries to walk into a square containing a wall, she will notice that there is a wall in that direction and remain in the position where she was.\n\nFor scoring purposes, we want to show the player how much gold she could have gotten safely. That is, how much gold can a player get playing with an optimal strategy and always being sure that the square she walked into was safe. The player does not have access to the map and the maps are randomly generated for each game so she has no previous knowledge of the game.\n\n-----Input-----\nThe first line of input contains two positive integers $W$ and $H$, neither of them smaller than $3$ or larger than $50$, giving the width and the height of the map, respectively. The next $H$ lines contain $W$ characters each, giving the map. The symbols that may occur in a map are as follows:\n\nP\n\nthe player\u2019s starting position\n\nG\n\na piece of gold\n\nT\n\na trap\n\n#\n\na wall\n\n.\n\nnormal floor\n\nThere will be exactly one \u2019P\u2019 in the map, and the border of the map will always contain walls.\n\n-----Output-----\nOutput the number of pieces of gold the player can get without risking falling into a trap.\n\n-----Examples-----\nSample Input:\n7 4\n#######\n#P.GTG#\n#..TGG#\n#######\nSample Output:\n1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}