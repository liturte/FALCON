{"3734": {"code": ["day1 = input()\nday2 = input()\n\nif day1 == \"sunday\" and day2 ==", "d1, d2 = input(), input()\nif d1 == \"sunday\" and d2 == \"t", "def solve(day1, day2):\n    days = [\"monday\", \"tuesday\", \"wednesday\",", "day1, day2 = input(), input()\ndays_in_month = [31, 28,", "# Read the names of the first and second day of the week from the input\nfirst_day_of_week ="], "prompt": "\nQUESTION:\nYou are given names of two days of the week.\n\nPlease, determine whether it is possible that during some non-leap year the first day of some month was equal to the first day of the week you are given, while the first day of the next month was equal to the second day of the week you are given. Both months should belong to one year.\n\nIn this problem, we consider the Gregorian calendar to be used. The number of months in this calendar is equal to 12. The number of days in months during any non-leap year is: 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31.\n\nNames of the days of the week are given with lowercase English letters: \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\".\n\n\n-----Input-----\n\nThe input consists of two lines, each of them containing the name of exactly one day of the week. It's guaranteed that each string in the input is from the set \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\".\n\n\n-----Output-----\n\nPrint \"YES\" (without quotes) if such situation is possible during some non-leap year. Otherwise, print \"NO\" (without quotes).\n\n\n-----Examples-----\nInput\nmonday\ntuesday\n\nOutput\nNO\n\nInput\nsunday\nsunday\n\nOutput\nYES\n\nInput\nsaturday\ntuesday\n\nOutput\nYES\n\n\n\n-----Note-----\n\nIn the second sample, one can consider February 1 and March 1 of year 2015. Both these days were Sundays.\n\nIn the third sample, one can consider July 1 and August 1 of year 2017. First of these two days is Saturday, while the second one is Tuesday.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}