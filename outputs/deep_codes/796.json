{"796": {"code": ["MOD = 10**9 + 7\n\ndef powmod(a, b):\n    r = 1\n    while b > 0:\n        if b & 1:\n            r = r * a % MOD\n        b >>= 1\n        a = a * a % MOD\n    return r\n\ndef solve(n, k):\n    f = [0] * (n + 1)\n    inv = [0] * (n + 1)\n    f[0] = inv[0] = 1\n    for i in range(1, n + 1):\n        f[i] = f[i -", "MOD = 10**9 + 7\n\ndef mul(x, y):\n    return ((x%MOD)*(y%MOD))%MOD\n\ndef add(x, y):\n    return ((x%MOD) + (y%MOD))%MOD\n\ndef pow_(x, n):\n    if n == 0:\n        return 1\n    elif n%2 == 0:\n        return pow_(mul(x, x), n//2)\n    else:\n        return mul(x, pow_(mul(x, x), (n-1)//2))\n\ndef solve(n, k", "MOD = 10**9 + 7\n\ndef pow_mod(a, b):\n    r = 1\n    while b:\n        if b & 1:\n            r = r * a % MOD\n        a = a * a % MOD\n        b >>= 1\n    return r\n\ndef solve(n, k):\n    if n == 1:\n        return k\n    dp = [0] * (n + 1)\n    dp[1] = k\n    for i in range(2, n + 1):\n        dp[i] = dp[i - 1] * (", "MOD = 10**9+7\nn,k = map(int,input().split())\ndp = [[0 for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0] = 1\nfor i in range(1,n+1):\n    dp[i][0] = dp[i-1][0]\n    for j in range(1,n+1):\n        dp[i][j] = (dp[i-1][j] + dp[i][j-1]) % MOD\nprint(dp[n][n-1]*", "MOD = 10**9 + 7\nn, k = map(int, input().split())\ndp = [[0]*(k+1) for _ in range(n+1)]\nfor i in range(1, k+1):\n    dp[1][i] = 1\nfor i in range(1, n+1):\n    dp[i][1] = i\nfor i in range(2, n+1):\n    for j in range(2, k+1):\n        dp[i][j] = (dp[i-1][j] + dp[i][j-1])"], "prompt": "\nQUESTION:\nYou have $n \\times n$ square grid and an integer $k$. Put an integer in each cell while satisfying the conditions below.  All numbers in the grid should be between $1$ and $k$ inclusive.  Minimum number of the $i$-th row is $1$ ($1 \\le i \\le n$).  Minimum number of the $j$-th column is $1$ ($1 \\le j \\le n$). \n\nFind the number of ways to put integers in the grid. Since the answer can be very large, find the answer modulo $(10^{9} + 7)$. [Image] These are the examples of valid and invalid grid when $n=k=2$. \n\n\n-----Input-----\n\nThe only line contains two integers $n$ and $k$ ($1 \\le n \\le 250$, $1 \\le k \\le 10^{9}$).\n\n\n-----Output-----\n\nPrint the answer modulo $(10^{9} + 7)$.\n\n\n-----Examples-----\nInput\n2 2\n\nOutput\n7\n\nInput\n123 456789\n\nOutput\n689974806\n\n\n\n-----Note-----\n\nIn the first example, following $7$ cases are possible. [Image] \n\nIn the second example, make sure you print the answer modulo $(10^{9} + 7)$.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}