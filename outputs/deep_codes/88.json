{"88": {"code": ["def solve(a, b):\n    a = bin(a)[2:]\n    b = bin(b + 1)[2:]\n    return sum(a.", "def count_ones(n):\n    return bin(n).count('1')\n\ndef binary_years(a, b):\n    return sum(count_", "def count_years(a, b):\n    return bin(b).count('1') - bin(a - 1).count('1')\n\na,", "def count_ones(n):\n    return bin(n).count('1')\n\ndef solve(a, b):\n    return sum(count_ones(", "def count_years(a, b):\n    def binary(n):\n        return bin(n)[2:]\n    a = binary(a-1)"], "prompt": "\nQUESTION:\nThe year 2015 is almost over.\n\nLimak is a little polar bear. He has recently learnt about the binary system. He noticed that the passing year has exactly one zero in its representation in the binary system\u00a0\u2014 2015_10 = 11111011111_2. Note that he doesn't care about the number of zeros in the decimal representation.\n\nLimak chose some interval of years. He is going to count all years from this interval that have exactly one zero in the binary representation. Can you do it faster?\n\nAssume that all positive integers are always written without leading zeros.\n\n\n-----Input-----\n\nThe only line of the input contains two integers a and b (1 \u2264 a \u2264 b \u2264 10^18)\u00a0\u2014 the first year and the last year in Limak's interval respectively.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2013 the number of years Limak will count in his chosen interval.\n\n\n-----Examples-----\nInput\n5 10\n\nOutput\n2\n\nInput\n2015 2015\n\nOutput\n1\n\nInput\n100 105\n\nOutput\n0\n\nInput\n72057594000000000 72057595000000000\n\nOutput\n26\n\n\n\n-----Note-----\n\nIn the first sample Limak's interval contains numbers 5_10 = 101_2, 6_10 = 110_2, 7_10 = 111_2, 8_10 = 1000_2, 9_10 = 1001_2 and 10_10 = 1010_2. Two of them (101_2 and 110_2) have the described property.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}