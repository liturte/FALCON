{"2446": {"code": ["from math import gcd\nfrom collections import defaultdict\n\ndef solve(n, a, q, x):\n    prefix = [", "from math import gcd\nfrom collections import defaultdict\n\nn = int(input())\na = list(map(int, input", "from collections import defaultdict\nfrom math import gcd\nfrom itertools import accumulate\nfrom operator import add\n\nn = int(", "from math import gcd\nfrom collections import defaultdict\n\nn = int(input())\na = list(map(int, input", "from math import gcd\nfrom collections import defaultdict\n\ndef solve(n, a, q, x):\n    prefix_g"], "prompt": "\nQUESTION:\nGiven a sequence of integers a_1, ..., a_{n} and q queries x_1, ..., x_{q} on it. For each query x_{i} you have to count the number of pairs (l, r) such that 1 \u2264 l \u2264 r \u2264 n and gcd(a_{l}, a_{l} + 1, ..., a_{r}) = x_{i}.\n\n$\\operatorname{gcd}(v_{1}, v_{2}, \\ldots, v_{n})$ is a greatest common divisor of v_1, v_2, ..., v_{n}, that is equal to a largest positive integer that divides all v_{i}.\n\n\n-----Input-----\n\nThe first line of the input contains integer n, (1 \u2264 n \u2264 10^5), denoting the length of the sequence. The next line contains n space separated integers a_1, ..., a_{n}, (1 \u2264 a_{i} \u2264 10^9).\n\nThe third line of the input contains integer q, (1 \u2264 q \u2264 3 \u00d7 10^5), denoting the number of queries. Then follows q lines, each contain an integer x_{i}, (1 \u2264 x_{i} \u2264 10^9).\n\n\n-----Output-----\n\nFor each query print the result in a separate line.\n\n\n-----Examples-----\nInput\n3\n2 6 3\n5\n1\n2\n3\n4\n6\n\nOutput\n1\n2\n2\n0\n1\n\nInput\n7\n10 20 3 15 1000 60 16\n10\n1\n2\n3\n4\n5\n6\n10\n20\n60\n1000\n\nOutput\n14\n0\n2\n2\n2\n0\n2\n2\n1\n1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}