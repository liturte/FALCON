{"2991": {"code": ["def solve():\n    n, m = map(int, input().split())\n    remaining = [int(input()) for _ in range(m)]\n    remaining.sort()\n    order = [0] * n\n    for i in range(m):\n        order[remaining[i]-1] = i", "while True:\n    try:\n        n, m = map(int, input().split())\n        remaining = [int(input()) for _ in range(m)]\n        original = [0]*n\n        used = [False]*(n+1)\n        for r in remaining:\n            used[r", "n, m = map(int, input().split())\nremoved = [int(input()) for _ in range(m)]\n\nseq = [0] * n\nfor i in range(m):\n    seq[removed[i] - 1] = i + 1\n\nfor i in range(", "while True:\n    try:\n        n, m = map(int, input().split())\n        remaining = [int(input()) for _ in range(m)]\n        original = [0]*n\n        used = [False]*(n+1)\n        for i in range(m):\n            for", "def gnome_sequence(n, m, remaining):\n    remaining.sort()\n    gnome = list(range(1, n+1))\n    for i in range(m):\n        gnome.insert(remaining[i]-1-i, remaining[i])\n    return gnome\n\nn, m = map"], "prompt": "\nQUESTION:\nA family of $n$ gnomes likes to line up for a group picture. Each gnome can be uniquely identified by a number $1..n$ written on their hat.\n\nSuppose there are $5$ gnomes. The gnomes could line up like so: $1, 3, 4, 2, 5$.\n\nNow, an evil magician will remove some of the gnomes from the lineup and wipe your memory of the order of the gnomes. The result is a subsequence, perhaps like so: $1, 4, 2$.\n\nHe then tells you that if you ordered all permutations of $1..n$ in lexicographical order, the original sequence of gnomes is the first such permutation which contains the remaining subsequence. Your task is to find the original sequence of gnomes.\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each test case will begin with a line with two integers $n$ and then $m$ ($1 \\le m \\le n \\le 10^5$), where $n$ is the number of gnomes originally, and $m$ is the number of gnomes remaining after the evil magician pulls his trick. Each of the next $m$ lines will contain a single integer $g$ ($1 \\le g \\le n$). These are the remaining gnomes, in order. The values of $g$ are guaranteed to be unique.\n\n-----Output-----\nOutput $n$ lines, each containing a single integer, representing the first permutation of gnomes that could contain the remaining gnomes in order.\n\n-----Examples-----\nSample Input:\n5 3\n1\n4\n2\nSample Output:\n1\n3\n4\n2\n5\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}