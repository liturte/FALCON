{"3357": {"code": ["import math\n\nN = int(input())\nbuildings = []\nfor _ in range(N):\n    x, h = map(int, input().split())\n    buildings.append((x, h))\n\nbuildings.sort()\n\ndef calc_hours(x, h):\n    return (180 * h) / (2 * math.pi * x)", "import math\n\ndef sunlight_hours(N, buildings):\n    buildings.sort()\n    max_height = max(buildings, key=lambda x: x[1])\n    total_hours = 0\n\n    for i in range(N):\n        distance = buildings[i][0]\n        height = buildings[i][1]\n        angle = math.atan((max", "import math\n\nN = int(input())\nbuildings = [list(map(int, input().split())) for _ in range(N)]\n\n# Sort the buildings by their x-coordinate\nbuildings.sort()\n\n# Initialize the total sunlight hours to 0\ntotal_hours = 0\n\n# Initialize the maximum height to 0\nmax_height = 0", "import math\n\nn = int(input())\nbuildings = [list(map(int, input().split())) for _ in range(n)]\n\ntotal_sky = 180\nbuilding_sky = total_sky / n\n\nfor i in range(n):\n    if i == 0:\n        print(buildings[i][1] * building_sky / 18", "import math\n\nn = int(input())\nbuildings = [list(map(int, input().split())) for _ in range(n)]\nbuildings.sort()\n\ntotal_hours = 0\nmax_height = 0\nmax_x = 0\n\nfor x, h in buildings:\n    total_hours += (x - max_x) * max_height\n    max"], "prompt": "\nQUESTION:\nA core right in Roman tenancy law was the availability of sunlight to everybody, regardless of status. Good sun exposure has a number of health benefits, many of which were known even in those ancient times.\n\nThe first act of a Roman city plan reviewer, then, is to survey the proposed structures to measure how well they distribute this precious resource. Given any one avenue of buildings arranged West-to-East, the number of hours for which each building is exposed to sunlight needs to be determined.\n\nFor the purpose of simplicity, the number of hours a building is in sunlight is proportional to the fraction of the $180$ degrees of sky visible from its top. Thanks in no small part to the marvels of ancient engineering (and also to the strict nutritional regimes of old) you may assume each building is infinitesimally thin.\n\n-----Input-----\n - One line containing one integer $N$ ($1 \\leq N \\leq 2 \\cdot 10^5$): the number of buildings.\n - $N$ further lines each containing two space-separated integers $X_ i$ and $H_ i$ ($1 \\leq X, H \\leq 10^9$), the location and height respectively, in metres, of the $i^{th}$-most building from the west.\n\n-----Output-----\nOn each of the $N$ lines of output, write one real number to at least 4 decimal places of accuracy: the number of hours for which the peak of the $i$-th building is bathed in sunlight.\n\n-----Examples-----\nSample Input:\n4\n1 1\n2 2\n3 2\n4 1\nSample Output:\n9.0000\n12\n12.00000\n9.0\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}