{"4548": {"code": ["from sys import stdin\nfrom heapq import heappop, heappush\n\ndef solve():\n    N, M, X = map(int, stdin.readline().split())\n    A = list(map(int, stdin.readline().split()))\n\n    graph = [[] for _ in range(N+1)]\n    for a in A:\n        graph[a] =", "import sys\nfrom heapq import heappop, heappush\n\ndef solve():\n    N, M, X = map(int, sys.stdin.readline().split())\n    A = list(map(int, sys.stdin.readline().split()))\n    A.sort()\n    inf = float('inf')\n    dp = [inf] * (N + 1)", "import sys\nfrom heapq import heappop, heappush\n\ndef solve():\n    N, M, X = map(int, sys.stdin.readline().split())\n    A = list(map(int, sys.stdin.readline().split()))\n    A.sort()\n    INF = float('inf')\n    dp = [INF] * (N+1", "from heapq import heappop, heappush\n\nN, M, X = map(int, input().split())\nA = list(map(int, input().split()))\n\ngraph = [[] for _ in range(N+1)]\nfor a in A:\n    graph[a].append((0, a))\n    graph[a-1].append((1, a))\n    graph", "from sys import stdin\nfrom heapq import heappop, heappush\n\ndef read_int():\n    return int(stdin.readline().strip())\n\ndef read_ints():\n    return list(map(int, stdin.readline().strip().split()))\n\ndef solve():\n    N, M, X = read_int(), read_int(), read_int()"], "prompt": "\nQUESTION:\nThere are N + 1 squares arranged in a row, numbered 0, 1, ..., N from left to right.\nInitially, you are in Square X.\nYou can freely travel between adjacent squares. Your goal is to reach Square 0 or Square N.\nHowever, for each i = 1, 2, ..., M, there is a toll gate in Square A_i, and traveling to Square A_i incurs a cost of 1.\nIt is guaranteed that there is no toll gate in Square 0, Square X and Square N.\nFind the minimum cost incurred before reaching the goal.\n\n-----Constraints-----\n - 1 \\leq N \\leq 100\n - 1 \\leq M \\leq 100\n - 1 \\leq X \\leq N - 1\n - 1 \\leq A_1 < A_2 < ... < A_M \\leq N\n - A_i \\neq X\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M X\nA_1 A_2 ... A_M\n\n-----Output-----\nPrint the minimum cost incurred before reaching the goal.\n\n-----Sample Input-----\n5 3 3\n1 2 4\n\n-----Sample Output-----\n1\n\nThe optimal solution is as follows:\n - First, travel from Square 3 to Square 4. Here, there is a toll gate in Square 4, so the cost of 1 is incurred.\n - Then, travel from Square 4 to Square 5. This time, no cost is incurred.\n - Now, we are in Square 5 and we have reached the goal.\nIn this case, the total cost incurred is 1.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}