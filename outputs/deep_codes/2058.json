{"2058": {"code": ["def", "def", "def", "def", "def"], "prompt": "\nQUESTION:\nGenos needs your help. He was asked to solve the following programming problem by Saitama:\n\nThe length of some string s is denoted |s|. The Hamming distance between two strings s and t of equal length is defined as $\\sum_{i = 1}^{|s|}|s_{i} - t_{i}|$, where s_{i} is the i-th character of s and t_{i} is the i-th character of t. For example, the Hamming distance between string \"0011\" and string \"0110\" is |0 - 0| + |0 - 1| + |1 - 1| + |1 - 0| = 0 + 1 + 0 + 1 = 2.\n\nGiven two binary strings a and b, find the sum of the Hamming distances between a and all contiguous substrings of b of length |a|.\n\n\n-----Input-----\n\nThe first line of the input contains binary string a (1 \u2264 |a| \u2264 200 000).\n\nThe second line of the input contains binary string b (|a| \u2264 |b| \u2264 200 000).\n\nBoth strings are guaranteed to consist of characters '0' and '1' only.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the sum of Hamming distances between a and all contiguous substrings of b of length |a|.\n\n\n-----Examples-----\nInput\n01\n00111\n\nOutput\n3\n\nInput\n0011\n0110\n\nOutput\n2\n\n\n\n-----Note-----\n\nFor the first sample case, there are four contiguous substrings of b of length |a|: \"00\", \"01\", \"11\", and \"11\". The distance between \"01\" and \"00\" is |0 - 0| + |1 - 0| = 1. The distance between \"01\" and \"01\" is |0 - 0| + |1 - 1| = 0. The distance between \"01\" and \"11\" is |0 - 1| + |1 - 1| = 1. Last distance counts twice, as there are two occurrences of string \"11\". The sum of these edit distances is 1 + 0 + 1 + 1 = 3.\n\nThe second sample case is described in the statement.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}