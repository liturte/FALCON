{"1187": {"code": ["from collections import defaultdict\n\ndef dfs(v", "from collections import defaultdict\n\ndef solve(n,", "from collections import defaultdict\n\ndef min_coloring", "from collections import defaultdict, deque\n\ndef solve", "from collections import defaultdict, deque\n\ndef solve"], "prompt": "\nQUESTION:\nYou are given a directed graph with $n$ vertices and $m$ directed edges without self-loops or multiple edges.\n\nLet's denote the $k$-coloring of a digraph as following: you color each edge in one of $k$ colors. The $k$-coloring is good if and only if there no cycle formed by edges of same color.\n\nFind a good $k$-coloring of given digraph with minimum possible $k$.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($2 \\le n \\le 5000$, $1 \\le m \\le 5000$) \u2014 the number of vertices and edges in the digraph, respectively.\n\nNext $m$ lines contain description of edges \u2014 one per line. Each edge is a pair of integers $u$ and $v$ ($1 \\le u, v \\le n$, $u \\ne v$) \u2014 there is directed edge from $u$ to $v$ in the graph.\n\nIt is guaranteed that each ordered pair $(u, v)$ appears in the list of edges at most once.\n\n\n-----Output-----\n\nIn the first line print single integer $k$ \u2014 the number of used colors in a good $k$-coloring of given graph.\n\nIn the second line print $m$ integers $c_1, c_2, \\dots, c_m$ ($1 \\le c_i \\le k$), where $c_i$ is a color of the $i$-th edge (in order as they are given in the input).\n\nIf there are multiple answers print any of them (you still have to minimize $k$).\n\n\n-----Examples-----\nInput\n4 5\n1 2\n1 3\n3 4\n2 4\n1 4\n\nOutput\n1\n1 1 1 1 1 \n\nInput\n3 3\n1 2\n2 3\n3 1\n\nOutput\n2\n1 1 2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}