{"3010": {"code": ["from collections import defaultdict\n\ndef solve(n, lines):\n    points = defaultdict(int)\n    for line in lines:\n        x0, y0, x", "from collections import defaultdict\n\ndef count_intersecting_points(lines):\n    points = defaultdict(int)\n    for line1 in lines:\n        for line", "from collections import defaultdict\n\ndef intersection_point(line1, line2):\n    x1, y1, x2, y2 = line1\n    x3,", "from collections import defaultdict\n\ndef intersect(x0, y0, x1, y1, x2, y2, x3, y3):\n    p = (", "from collections import defaultdict\n\ndef solve(lines):\n    points = defaultdict(int)\n    for line in lines:\n        x1, y1, x2,"], "prompt": "\nQUESTION:\nPeter is bored during his operating systems class, so he draws doodles on a sheet of paper. He feels like drawing abstract art using his ruler: he draws line segments by choosing two points in the plane and connecting them. Lots of them.\n\nCan you write a program that counts the number of distinct points at which the line segments he drew intersect or touch?\n\n-----Input-----\nThe first line in the input contains an integer $n$ ($1 \\le n \\le 1000$) which is the number of lines. The following $n$ lines contain four integers $x_0 \\ \\ y_0 \\ \\ x_1 \\ \\ y_1$ ($-1000000 \\le x_0, \\ y_0, \\ x_1, \\ y_1 \\le 1000000$). Lines have non-zero length, i.e., the two points will be distinct: $x_0 \\ne x_1$ or $y_0 \\ne y_1$ or both.\n\n-----Output-----\nOutput the number of distinct points for which there is at least one pair of line segments that intersects or touches at this point. If there are infinitely many such points, output -1.\n\n-----Examples-----\nSample Input 1:\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\nSample Output 1:\n3\n\nSample Input 2:\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\nSample Output 2:\n1\n\nSample Input 3:\n3\n2 1 6 5\n2 5 5 4\n5 1 7 7\nSample Output 3:\n1\n\nSample Input 4:\n2\n-1 -2 -1 -1\n-1 2 -1 -1\nSample Output 4:\n1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}