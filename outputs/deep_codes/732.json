{"732": {"code": ["def count_lucky_numbers(n):\n    dp = [0] * (n+1)\n    lucky_digits = [4, 7]\n    dp[0] = 1\n    for i in lucky_digits:\n        for j in range(i, n+1):\n            dp[j] += dp[j-i]\n    return sum(dp) - 1  # subtract 1 to exclude 0\n\nn = int(input())\nprint(count_lucky_numbers(n))", "def count_lucky_numbers(n):\n    n = str(n)\n    dp = [[0]*2 for _ in range(len(n)+1)]\n    dp[0][0] = 1\n    for i in range(len(n)):\n        for j in range(2):\n            for k in range(10 if j else int(n[i])+1):\n                dp[i+1][j or k < int(n[i])] += dp[i][j]\n    return n + 1", "def count_lucky_numbers(n):\n    dp = [0] * (n + 1)\n    dp[0] = dp[1] = 1\n    for i in range(2, n + 1):\n        dp[i] = dp[i - 1]\n        if i >= 10:\n            dp[i] += dp[i - 10]\n        if i >= 20:\n            dp[i] += dp[i - 20]\n    return dp[n]", "def count_lucky_numbers(n):\n    dp = [0] * (n+1)\n    lucky_digits = [4, 7]\n    dp[0] = 1\n    for i in lucky_digits:\n        for j in range(i, n+1):\n            dp[j] += dp[j-i]\n    return sum(dp)\n\nn = int(input().strip())\nprint(count_lucky_numbers(n))\n\n\nExplanation:\nThe solution uses dynamic", "def count_lucky_numbers(n):\n    dp = [0]*(n+1)\n    lucky_digits = [4, 7]\n    dp[0] = 1\n    for i in lucky_digits:\n        for j in range(i, n+1):\n            dp[j] += dp[j-i]\n    return sum(dp)\n\nn = int(input().strip())\nprint(count_lucky_numbers(n))\n\n\nThis Python program uses dynamic programming to solve the problem"], "prompt": "\nQUESTION:\nPolycarpus loves lucky numbers. Everybody knows that lucky numbers are positive integers, whose decimal representation (without leading zeroes) contain only the lucky digits x and y. For example, if x = 4, and y = 7, then numbers 47, 744, 4 are lucky.\n\nLet's call a positive integer a undoubtedly lucky, if there are such digits x and y (0 \u2264 x, y \u2264 9), that the decimal representation of number a (without leading zeroes) contains only digits x and y.\n\nPolycarpus has integer n. He wants to know how many positive integers that do not exceed n, are undoubtedly lucky. Help him, count this number.\n\n\n-----Input-----\n\nThe first line contains a single integer n (1 \u2264 n \u2264 10^9) \u2014 Polycarpus's number.\n\n\n-----Output-----\n\nPrint a single integer that says, how many positive integers that do not exceed n are undoubtedly lucky.\n\n\n-----Examples-----\nInput\n10\n\nOutput\n10\n\nInput\n123\n\nOutput\n113\n\n\n\n-----Note-----\n\nIn the first test sample all numbers that do not exceed 10 are undoubtedly lucky.\n\nIn the second sample numbers 102, 103, 104, 105, 106, 107, 108, 109, 120, 123 are not undoubtedly lucky.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}