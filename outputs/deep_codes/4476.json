{"4476": {"code": ["t = int(input())\nfor _ in range(t):\n    a", "t = int(input())\nfor _ in range(t):\n    a", "def solve(a, b):\n    return (b - a + 1)", "def solve():\n    t = int(input().strip())\n    for _", "def min_moves(a, b):\n    return (b - a"], "prompt": "\nQUESTION:\nYou are given two positive integers $a$ and $b$.\n\nIn one move, you can change $a$ in the following way:\n\n  Choose any positive odd integer $x$ ($x > 0$) and replace $a$ with $a+x$;  choose any positive even integer $y$ ($y > 0$) and replace $a$ with $a-y$. \n\nYou can perform as many such operations as you want. You can choose the same numbers $x$ and $y$ in different moves.\n\nYour task is to find the minimum number of moves required to obtain $b$ from $a$. It is guaranteed that you can always obtain $b$ from $a$.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases.\n\nThen $t$ test cases follow. Each test case is given as two space-separated integers $a$ and $b$ ($1 \\le a, b \\le 10^9$).\n\n\n-----Output-----\n\nFor each test case, print the answer \u2014 the minimum number of moves required to obtain $b$ from $a$ if you can perform any number of moves described in the problem statement. It is guaranteed that you can always obtain $b$ from $a$.\n\n\n-----Example-----\nInput\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n\nOutput\n1\n0\n2\n2\n1\n\n\n\n-----Note-----\n\nIn the first test case, you can just add $1$.\n\nIn the second test case, you don't need to do anything.\n\nIn the third test case, you can add $1$ two times.\n\nIn the fourth test case, you can subtract $4$ and add $1$.\n\nIn the fifth test case, you can just subtract $6$.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}