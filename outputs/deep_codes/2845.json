{"2845": {"code": ["R, K = map(int, input().split())\nhouse = set(map(int, input().split()))\n\n# define the neighbors of a cell\ndef neighbors(cell):\n    x, y, z = cell\n    for dx, dy, dz in ((-1, 0, 0), (1, 0, 0), (0, -1, 0), (0, 1, 0), (0, 0, -1), (0, 0, 1)):\n        nx, ny, nz = x +", "R, K = map(int, input().split())\nindices = list(map(int, input().split()))\n\ndef get_neighbors(cell):\n    x, y, z = cell\n    neighbors = [(x+dx, y+dy, z+dz) for dx in [-1,0,1] for dy in [-1,0,1] for dz in [-1,0,1] if (dx,dy,dz) != (0,0,0)]\n    return neighbors\n\ndef is_valid(cell, R):", "def solve(R, K, cells):\n    sides = [0] * (R**3 + 1)\n    dr = [-1, 0, 1, 0, -1, -1, 1, 1]\n    dc = [0, 1, 0, -1, -1, 1, -1, 1]\n\n    for cell in cells:\n        for i in range(8):\n            nr, nc = cell + dr[i], cell + dc[i]\n            if nr > 0 and n", "def calculate_perimeter(R, K, cells):\n    perimeter = 0\n    for cell in cells:\n        x, y, z = cell - 1, cell - R, cell - R**2\n        if (y + 1) in cells or (z + 1) in cells or (z - R + 1) in cells:\n            perimeter += 1\n        elif (x - 1) in cells or (x + R) in cells or (x + R**2) in cells:\n            perimeter += 1\n        elif (x + R - 1", "R, K = map(int, input().split())\nindices = list(map(int, input().split()))\n\nadjacent_cells = [(0, -1), (1, -1), (1, 0), (1, 1), (0, 1), (-1, 1), (-1, 0), (-1, -1)]\n\nperimeter = 0\nfor index in indices:\n    for dx, dy in adjacent_cells:\n        nx, ny = index + dx, index + dy\n        if nx <"], "prompt": "\nQUESTION:\nAlice is a queen bee living in Beeland (a honeycomb structure described by $R$, the number of cells of the side of honeycomb). The cells in Beeland are numbered from $1$ to $R^3 - (R-1)^3$ in row major order. For example for $R = 3$, the Beeland that Alice lives in looks like this:\n\nNow Alice lives in a house that occupies $K$ adjacent cells in Beeland. You are Bob, the knight bee. You need to protect Alice\u2019s house, but first you need to know the length of its outer perimeter (the number of outermost sides of Alice\u2019s house). The illustration below shows the visualizations of Sample Inputs/Outputs $2$ and $3$.\n\n-----Input-----\nThe first line of input consists of two integers: $R$ and $K$. ($1 \\leq R \\leq 50$, $1 \\leq K \\leq R^3 - (R-1)^3$). The second line contains $K$ unique integers that describe the indices of Alice\u2019s house, where each integer is in the range $[1,R^3-(R-1)^3]$.\n\n-----Output-----\nPrint an integer in one line: The perimeter of Alice\u2019s house.\n\n-----Examples-----\nSample Input 1:\n3 1\n7\nSample Output 1:\n6\n\nSample Input 2:\n3 6\n5 6 7 11 15 18\nSample Output 2:\n24\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}