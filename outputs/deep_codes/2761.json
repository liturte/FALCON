{"2761": {"code": ["from math import sqrt\n\ndef distance(x1, y1, x2, y2):\n    return sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)\n\ndef check_line(line1, line2):\n    (x1, y1, x2, y2) = line1\n    (x3, y3", "import sys\nfrom math import sqrt\nfrom itertools import combinations\n\ndef dot(a, b):\n    return a[0] * b[0] + a[1] * b[1]\n\ndef length(v):\n    return sqrt(dot(v, v))\n\ndef distance(a, b):\n    return sqrt((a[0] - b[0])", "from math import sqrt\n\ndef perimeter(a, b, c):\n    return sqrt(a[0]*a[1]*b[1] + a[1]*a[2]*c[2] + a[2]*b[2]*c[0] - a[0]*a[1]*c[1] - a[1]*", "from math import hypot\nfrom itertools import combinations\n\ndef solve():\n    n = int(input())\n    lines = [tuple(map(int, input().split())) for _ in range(n)]\n\n    def distance(line1, line2):\n        (x1, y1, x2, y2) = line1\n        (p1, q1, p2", "from math import sqrt\nfrom itertools import combinations\n\ndef dot_product(a, b):\n    return a[0] * b[0] + a[1] * b[1]\n\ndef length(v):\n    return sqrt(dot_product(v, v))\n\ndef angle(a, b):\n    return acos(dot_product(a, b)"], "prompt": "\nQUESTION:\nThree infinite lines define a triangle, unless they meet at a common point or some of them are parallel.\n\nGiven a collection of infinite lines, what is the largest possible perimeter of a triangle defined by some three lines in the collection?\n\n-----Input-----\nThe first line of input contains a single integer $n$ ($3 \\leq n \\leq 100$) indicating the number of infinite lines.\n\nThe next $n$ lines describe the collection of infinite lines. The $i^{\\textrm{th}}$ such line contains four integers $x_1, y_1, x_2, y_2$ ($-10000 \\leq x_1, y_1, x_2, y_2 \\leq 10000$) where $(x_1, y_1) \\neq (x_2, y_2)$ are two points lying on the $i^{\\textrm{th}}$ infinite line.\n\n-----Output-----\nDisplay a single real value which is the perimeter of the largest triangle that can be formed from three of the infinite lines. Your output will be considered correct if it is within an absolute or relative error of $10^{-5}$ of the correct answer.\n\nIf no triangle can be formed using the given lines, then you should instead display the message no triangle.\n\n-----Examples-----\nSample Input 1:\n3\n0 0 0 1\n0 0 1 0\n0 1 1 0\nSample Output 1:\n3.4142135624\n\nSample Input 2:\n3\n0 0 0 1\n0 0 1 0\n0 0 1 1\nSample Output 2:\nno triangle\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}