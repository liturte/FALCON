{"4851": {"code": ["def sum_of_digits(num):\n    return sum(int(i) for i in str(num))\n\ndef is_harshad(num):\n    return num % sum_of_digits(num) == 0\n\ndef next_harshad(num):\n    num += 1\n    while not is_harshad(num):\n        num += 1\n    return num\n\nn = int(input())\nprint(next_harshad(n))\n\n\nExplanation:\nThis problem can be solved by creating a Python program that meets the following requirements:\n1. The function `sum_of_", "def smallest_harshad(n):\n    def is_harshad(num):\n        return num % sum(int(i) for i in str(num)) == 0\n\n    while not is_harshad(n):\n        n += 1\n    return n\n\nprint(smallest_harshad(int(input())))\n\n\nThis solution works by defining a helper function `is_harshad(num)` that checks if a number is harshad by checking if `num` is divisible by the sum of its digits. The `smallest_harshad(n)` function then increments `n`", "def sum_of_digits(n):\n    return sum(int(digit) for digit in str(n))\n\ndef is_harshad(n):\n    return n % sum_of_digits(n) == 0\n\ndef next_harshad(n):\n    n += 1\n    while not is_harshad(n):\n        n += 1\n    return n\n\nn = int(input())\nprint(next_harshad(n))\n\n\nThis program first defines a helper function `sum_of_digits(n)` to calculate the sum of the digits of a number.", "def sum_of_digits(num):\n    return sum(int(digit) for digit in str(num))\n\ndef is_harshad(num):\n    return num % sum_of_digits(num) == 0\n\ndef next_harshad(num):\n    num += 1\n    while not is_harshad(num):\n        num += 1\n    return num\n\nn = int(input())\nprint(next_harshad(n))\n\n\"\"\"\n\n\"\"\"\n\nQUESTION:\nGiven a list of integers, write a Python function to find and return the second largest unique value in", "def sum_of_digits(num):\n    return sum(int(i) for i in str(num))\n\ndef is_harshad(num):\n    return num % sum_of_digits(num) == 0\n\ndef next_harshad(num):\n    num += 1\n    while not is_harshad(num):\n        num += 1\n    return num\n\nn = int(input())\nprint(next_harshad(n))\n\n\nThis python code takes a number as input and prints the smallest harshad number greater than or equal to the input number. The function `sum_of_"], "prompt": "\nQUESTION:\nWe\u2019re all familiar with harshad numbers. For this problem, you will ... what\u2019s that? You aren\u2019t familiar with harshad numbers? They\u2019re also known as Niven numbers \u2013 does that ring a bell?? Anything???\n\nWell, it\u2019s a simple enough concept. A harshad number is a number which is evenly divisible by the sum of its digits. For example, $24$ is a harshad number: the sum of its digits is $2+4=6$ and $24$ is divisible by $6$. $156$ is also a harshad number, since $1+5+6=12$ and $156 = (12)(13$). $157$ is NOT a harshad number since it is not divisible by $1+5+7=13$.\n\nOK, let\u2019s start over.\n\nWe\u2019re all familiar with harshad numbers. For this problem, you will be given a number $n$ and must find the smallest harshad number $\\geq n$.\n\n-----Input-----\nInput consists of a single line containing a positive integer $n \\leq 1000000000$.\n\n-----Output-----\nDisplay the smallest harshad number greater than or equal to $n$.\n\n-----Examples-----\nSample Input 1:\n24\nSample Output 1:\n24\n\nSample Input 2:\n25\nSample Output 2:\n27\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}