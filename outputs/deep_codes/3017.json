{"3017": {"code": ["from collections import defaultdict\n\ndef solve(n, e):\n    str_n = str(n)\n    len_n = len(str_n)\n\n    # dp[i][j] is the number of ways to select the first i digits of n,\n    # with j trailing zeros.\n    dp = [[0] * (len_n + 1) for _ in range(len_n + 1)]\n    dp[0][0] = 1\n\n    for i in range(len_n):\n        for j in range(len_n):\n            for k in range(10):\n                if str_n[i] < str(k", "def count_numbers(n, e):\n    dp = [[0] * 10 for _ in range(63)]\n    dp[0][1] = 1\n    for i in range(1, 63):\n        dp[i][0] = dp[i - 1][0] * 10\n        for j in range(1, 10):\n            dp[i][j] = dp[i - 1][j] * 10 + dp[i - 1][j - 1] * (j + 1)\n    s = str(n)\n    l = len(s)\n    res = 0", "def power_of_two_substrings(n, e):\n    dp = [[0] * 10 for _ in range(63)]\n    dp[0][1] = 1\n    for i in range(1, 63):\n        dp[i][1] = 2 * dp[i - 1][1] + 10\n        for j in range(2, 10):\n            dp[i][j] = 10 * dp[i - 1][j - 1] + dp[i - 1][j]\n    s = str(n)\n    l = len(s)\n    dp2 = [", "def solve(n, e):\n    dp = [[0] * 10 for _ in range(65)]\n    dp[0][1] = 1\n    for i in range(1, 65):\n        dp[i][0] = dp[i - 1][0] * 9\n        for j in range(1, 10):\n            dp[i][j] = dp[i - 1][j - 1] * j + dp[i - 1][j] * 10\n    ans = 0\n    s = str(n)\n    l = len(s)\n    for i in range(", "def solve(n, e):\n    def count(n, e, dp):\n        if e == 0:\n            return 1 if n == 0 else 0\n        if dp[n][e] != -1:\n            return dp[n][e]\n        res = 0\n        for i in range(10):\n            if i * 2 ** e <= n:\n                res += count(n - i * 2 ** e, e - 1, dp)\n        dp[n][e] = res\n        return res\n\n    dp = [[-1 for _ in range(63)] for _ in range(100)]"], "prompt": "\nQUESTION:\nTheta has been learning about powers of $2$ in school. She notices that some numbers when written out contain powers of $2$ in their digit representation: for instance, $12560$ contains $256$ which is a power of $2$. She has been wondering how many such numbers there are.\n\nCan you write a program that counts how many numbers contain a given power of $2$?\n\n-----Input-----\nThe input consists of a single line with two integers $n$ and $e$ ($0 \\le n \\le 9 \\cdot 10^{18}, 0 \\le e \\le 62$).\n\n-----Output-----\nOutput a single integer that is equal to the number of distinct integers $k$ ($0 \\le k \\le n$) whose decimal representation contains the digits of $2^e$ as a substring.\n\n-----Examples-----\nSample Input 1:\n1000000 1\nSample Output 1:\n468559\n\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}