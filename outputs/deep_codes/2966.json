{"2966": {"code": ["def chocolate_blocks(M, N):\n    return M*N//2\n\nM, N = map(int, input().split())\nprint(chocolate_blocks(M, N))\n\nThis code works by dividing the total number of blocks by 2, as each block can be cut into two pieces of equal area. The '//' operator is used to perform integer division, as we cannot have fractional blocks.\n\nThe input is read using the `input().split()` function, which splits the input into separate words. These words are then", "def solve(m, n):\n    return m * n // 2\n\nm, n = map(int, input().split())\nprint(solve(m, n))\n\n\nExplanation:\nThe problem is asking us to find the number of blocks that can be cut into two equal areas. This is equivalent to finding the number of pairs of adjacent blocks in the grid. Since there are 'm' blocks in each row and 'n' blocks in each column, there are 'm * n' total blocks. The number of pairs is 'm * n", "def solve(M, N):\n    return (M * N) // 2\n\nM, N = map(int, input().split())\nprint(solve(M, N))\n\n\nThis problem is about simple mathematical calculations. The total number of blocks is M * N. If we cut each block in half, we will get M * N / 2 blocks. The \"//\" operator is used to perform integer division (i.e., division that rounds down to the nearest whole number).\n\nThe input() function is used to read a line from standard", "def solve(M, N):\n    return (M * N) // 2\n\nM, N = map(int, input().split())\nprint(solve(M, N))\n\n\nThis program works by dividing the total number of blocks by 2. It assumes that each block is cut into two equal-area pieces, so the total number of blocks cut is half the total number of blocks. The '//' operator is used for integer division, which discards the fractional part and only keeps the integer part.\n\nThis solution assumes that each block", "def solve(M, N):\n    return M * N // 2\n\nM, N = map(int, input().split())\nprint(solve(M, N))\n\n\nExplanation:\nThe problem is asking for the number of blocks that can be divided into two equal parts. This is equivalent to finding the number of pairs of adjacent blocks in the grid. Since each pair of blocks is of the same size, they can be cut in half and end up with two equal-sized blocks, so the total number of such pairs is `M * N //"], "prompt": "\nQUESTION:\nQuido and Hugo are making a chocolate cake. The central ingredient of the cake is a large chocolate bar, lying unwrapped on the kitchen table. The bar is an $M \\times N$ rectangular grid of chocolate blocks. All of the $MN$ blocks are rectangles of identical shape and size. The chocolate bar is of top quality and the friends want to eat part of it, before the rest is used in the cake.\n\n\u201cOK,\u201d says Quido, \u201clet\u2019s divide the whole bar into two triangular chunks by a straight diagonal cut from its upper-left corner to its lower-right corner. We will then eat all of the blocks which have been cut exactly in half, into two equal-area pieces. You will eat one half and I will eat the other half of each such block. All other blocks, that is, the blocks which are either uncut or cut into two parts of different sizes, will go directly into the cake. Of course, we will make sure the cut is perfectly precise.\n\nLet\u2019s see how much chocolate we get to eat!\u201d\n\n-----Input-----\nThe input consists of two space-separated integers $M$ and $N$ given on a single line, (where $1 \\leq M, N \\leq 10^{18}$). The numbers $M$ and $N$ denote the number of blocks in one column and in one row, respectively, in the chocolate bar.\n\n-----Output-----\nPrint the number of blocks of the chocolate bar which are cut into exactly two pieces of equal area.\n\n-----Examples-----\nSample Input:\n6 10\nSample Output:\n2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}