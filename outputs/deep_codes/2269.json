{"2269": {"code": ["def", "import", "def", "def", "def"], "prompt": "\nQUESTION:\nYou are given a string $s$ such that each its character is either 1, 2, or 3. You have to choose the shortest contiguous substring of $s$ such that it contains each of these three characters at least once.\n\nA contiguous substring of string $s$ is a string that can be obtained from $s$ by removing some (possibly zero) characters from the beginning of $s$ and some (possibly zero) characters from the end of $s$.\n\n\n-----Input-----\n\nThe first line contains one integer $t$ ($1 \\le t \\le 20000$) \u2014 the number of test cases.\n\nEach test case consists of one line containing the string $s$ ($1 \\le |s| \\le 200000$). It is guaranteed that each character of $s$ is either 1, 2, or 3.\n\nThe sum of lengths of all strings in all test cases does not exceed $200000$.\n\n\n-----Output-----\n\nFor each test case, print one integer \u2014 the length of the shortest contiguous substring of $s$ containing all three types of characters at least once. If there is no such substring, print $0$ instead.\n\n\n-----Example-----\nInput\n7\n123\n12222133333332\n112233\n332211\n12121212\n333333\n31121\n\nOutput\n3\n3\n4\n4\n0\n0\n4\n\n\n\n-----Note-----\n\nConsider the example test:\n\nIn the first test case, the substring 123 can be used.\n\nIn the second test case, the substring 213 can be used.\n\nIn the third test case, the substring 1223 can be used.\n\nIn the fourth test case, the substring 3221 can be used.\n\nIn the fifth test case, there is no character 3 in $s$.\n\nIn the sixth test case, there is no character 1 in $s$.\n\nIn the seventh test case, the substring 3112 can be used.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}