{"3270": {"code": ["QUESTION:\nA Word Ladder is a puzzle in which you transform one word into another, by changing one letter at a time. But, there\u2019s a catch: every word that you form in each step must be in the dictionary! Here\u2019s an example of how to transform CAT into GAS:CAT $\\rightarrow $ CAR $\\rightarrow $ WAR $\\rightarrow $ WAS $\\rightarrow $ GAS\n\nOf course, you want to use the fewest number of transitions possible. These puzzles can be tough, and often you\u2019ll think to yourself: \u201cDarn it! If only [some word] was in the dictionary!\u201d\n\nWell, now is your chance! Given a dictionary, and a starting and ending word, what ONE single word could you add to the dictionary to minimize the number of steps to get from the starting word to the ending word, changing only one letter at a time, and making sure that every word at every step is in the dictionary?\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each test case will start with a line with a single integer $n$ ($2 \\le n \\le 1000$) which indicates the number of words in the dictionary. The dictionary will follow on the next $n$ lines, with one word per line. All words will consist of between $1$ and $8$ capital letters only, and all of the words in a test case will be of the same length. The first word in the list will be the starting word of the word ladder, and the second will be the ending word of the word ladder.\n\n-----Output-----\nOutput exactly two lines. The first line holds the one single word that you would add to the dictionary, and the second holds an integer indicating the minimum number of steps to get from the starting word to the ending word, adding your word.\n\nIt is possible that there\u2019s more than one word you can add that will make your path as short as possible. In this case, output the solution word that comes first alphabetically.\n\nIt is possible that there\u2019s no word you can add that will that will make your path any shorter. In this case, output 0 (zero) as the word.\n\nIt is possible that there\u2019s no word you can add that makes the solution possible. In this case, output 0 (zero) as the word, and -1 as the number of steps.\n\n-----Examples-----\nSample Input 1:\n3\nCAT\nDOG\nCOT\nSample Output 1:\nCOG\n3\n\nSample Input 2:\n2\nCAT\nDOG\nSample Output 2:\n0\n-1\nPlease provide the python", "QUESTION:\nA Word Ladder is a puzzle in which you transform one word into another, by changing one letter at a time. But, there\u2019s a catch: every word that you form in each step must be in the dictionary! Here\u2019s an example of how to transform CAT into GAS:CAT $\\rightarrow $ CAR $\\rightarrow $ WAR $\\rightarrow $ WAS $\\rightarrow $ GAS\n\nOf course, you want to use the fewest number of transitions possible. These puzzles can be tough, and often you\u2019ll think to yourself: \u201cDarn it! If only [some word] was in the dictionary!\u201d\n\nWell, now is your chance! Given a dictionary, and a starting and ending word, what ONE single word could you add to the dictionary to minimize the number of steps to get from the starting word to the ending word, changing only one letter at a time, and making sure that every word at every step is in the dictionary?\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each test case will start with a line with a single integer $n$ ($2 \\le n \\le 1000$) which indicates the number of words in the dictionary. The dictionary will follow on the next $n$ lines, with one word per line. All words will consist of between $1$ and $8$ capital letters only, and all of the words in a test case will be of the same length. The first word in the list will be the starting word of the word ladder, and the second will be the ending word of the word ladder.\n\n-----Output-----\nOutput exactly two lines. The first line holds the one single word that you would add to the dictionary, and the second holds an integer indicating the minimum number of steps to get from the starting word to the ending word, adding your word.\n\nIt is possible that there\u2019s more than one word you can add that will make your path as short as possible. In this case, output the solution word that comes first alphabetically.\n\nIt is possible that there\u2019s no word you can add that will that will make your path any shorter. In this case, output 0 (zero) as the word.\n\nIt is possible that there\u2019s no word you can add that makes the solution possible. In this case, output 0 (zero) as the word, and -1 as the number of steps.\n\n-----Examples-----\nSample Input 1:\n3\nCAT\nDOG\nCOT\nSample Output 1:\nCOG\n3\n\nSample Input 2:\n2\nCAT\nDOG\nSample Output 2:\n0\n-1\nPlease provide the python", "QUESTION:\nA Word Ladder is a puzzle in which you transform one word into another, by changing one letter at a time. But, there\u2019s a catch: every word that you form in each step must be in the dictionary! Here\u2019s an example of how to transform CAT into GAS:CAT $\\rightarrow $ CAR $\\rightarrow $ WAR $\\rightarrow $ WAS $\\rightarrow $ GAS\n\nOf course, you want to use the fewest number of transitions possible. These puzzles can be tough, and often you\u2019ll think to yourself: \u201cDarn it! If only [some word] was in the dictionary!\u201d\n\nWell, now is your chance! Given a dictionary, and a starting and ending word, what ONE single word could you add to the dictionary to minimize the number of steps to get from the starting word to the ending word, changing only one letter at a time, and making sure that every word at every step is in the dictionary?\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each test case will start with a line with a single integer $n$ ($2 \\le n \\le 1000$) which indicates the number of words in the dictionary. The dictionary will follow on the next $n$ lines, with one word per line. All words will consist of between $1$ and $8$ capital letters only, and all of the words in a test case will be of the same length. The first word in the list will be the starting word of the word ladder, and the second will be the ending word of the word ladder.\n\n-----Output-----\nOutput exactly two lines. The first line holds the one single word that you would add to the dictionary, and the second holds an integer indicating the minimum number of steps to get from the starting word to the ending word, adding your word.\n\nIt is possible that there\u2019s more than one word you can add that will make your path as short as possible. In this case, output the solution word that comes first alphabetically.\n\nIt is possible that there\u2019s no word you can add that will that will make your path any shorter. In this case, output 0 (zero) as the word.\n\nIt is possible that there\u2019s no word you can add that makes the solution possible. In this case, output 0 (zero) as the word, and -1 as the number of steps.\n\n-----Examples-----\nSample Input 1:\n3\nCAT\nDOG\nCOT\nSample Output 1:\nCOG\n3\n\nSample Input 2:\n2\nCAT\nDOG\nSample Output 2:\n0\n-1\nPlease provide the Python", "QUESTION:\nA Word Ladder is a puzzle in which you transform one word into another, by changing one letter at a time. But, there\u2019s a catch: every word that you form in each step must be in the dictionary! Here\u2019s an example of how to transform CAT into GAS:CAT $\\rightarrow $ CAR $\\rightarrow $ WAR $\\rightarrow $ WAS $\\rightarrow $ GAS\n\nOf course, you want to use the fewest number of transitions possible. These puzzles can be tough, and often you\u2019ll think to yourself: \u201cDarn it! If only [some word] was in the dictionary!\u201d\n\nWell, now is your chance! Given a dictionary, and a starting and ending word, what ONE single word could you add to the dictionary to minimize the number of steps to get from the starting word to the ending word, changing only one letter at a time, and making sure that every word at every step is in the dictionary?\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each test case will start with a line with a single integer $n$ ($2 \\le n \\le 1000$) which indicates the number of words in the dictionary. The dictionary will follow on the next $n$ lines, with one word per line. All words will consist of between $1$ and $8$ capital letters only, and all of the words in a test case will be of the same length. The first word in the list will be the starting word of the word ladder, and the second will be the ending word of the word ladder.\n\n-----Output-----\nOutput exactly two lines. The first line holds the one single word that you would add to the dictionary, and the second holds an integer indicating the minimum number of steps to get from the starting word to the ending word, adding your word.\n\nIt is possible that there\u2019s more than one word you can add that will make your path as short as possible. In this case, output the solution word that comes first alphabetically.\n\nIt is possible that there\u2019s no word you can add that will that will make your path any shorter. In this case, output 0 (zero) as the word.\n\nIt is possible that there\u2019s no word you can add that makes the solution possible. In this case, output 0 (zero) as the word, and -1 as the number of steps.\n\n-----Examples-----\nSample Input 1:\n3\nCAT\nDOG\nCOT\nSample Output 1:\nCOG\n3\n\nSample Input 2:\n2\nCAT\nDOG\nSample Output 2:\n0\n-1\nPlease provide the solution", "QUESTION:\nA Word Ladder is a puzzle in which you transform one word into another, by changing one letter at a time. But, there\u2019s a catch: every word that you form in each step must be in the dictionary! Here\u2019s an example of how to transform CAT into GAS:CAT $\\rightarrow $ CAR $\\rightarrow $ WAR $\\rightarrow $ WAS $\\rightarrow $ GAS\n\nOf course, you want to use the fewest number of transitions possible. These puzzles can be tough, and often you\u2019ll think to yourself: \u201cDarn it! If only [some word] was in the dictionary!\u201d\n\nWell, now is your chance! Given a dictionary, and a starting and ending word, what ONE single word could you add to the dictionary to minimize the number of steps to get from the starting word to the ending word, changing only one letter at a time, and making sure that every word at every step is in the dictionary?\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each test case will start with a line with a single integer $n$ ($2 \\le n \\le 1000$) which indicates the number of words in the dictionary. The dictionary will follow on the next $n$ lines, with one word per line. All words will consist of between $1$ and $8$ capital letters only, and all of the words in a test case will be of the same length. The first word in the list will be the starting word of the word ladder, and the second will be the ending word of the word ladder.\n\n-----Output-----\nOutput exactly two lines. The first line holds the one single word that you would add to the dictionary, and the second holds an integer indicating the minimum number of steps to get from the starting word to the ending word, adding your word.\n\nIt is possible that there\u2019s more than one word you can add that will make your path as short as possible. In this case, output the solution word that comes first alphabetically.\n\nIt is possible that there\u2019s no word you can add that will that will make your path any shorter. In this case, output 0 (zero) as the word.\n\nIt is possible that there\u2019s no word you can add that makes the solution possible. In this case, output 0 (zero) as the word, and -1 as the number of steps.\n\n-----Examples-----\nSample Input 1:\n3\nCAT\nDOG\nCOT\nSample Output 1:\nCOG\n3\n\nSample Input 2:\n2\nCAT\nDOG\nSample Output 2:\n0\n-1\nPlease provide the code"], "prompt": "\nQUESTION:\nA Word Ladder is a puzzle in which you transform one word into another, by changing one letter at a time. But, there\u2019s a catch: every word that you form in each step must be in the dictionary! Here\u2019s an example of how to transform CAT into GAS:CAT $\\rightarrow $ CAR $\\rightarrow $ WAR $\\rightarrow $ WAS $\\rightarrow $ GAS\n\nOf course, you want to use the fewest number of transitions possible. These puzzles can be tough, and often you\u2019ll think to yourself: \u201cDarn it! If only [some word] was in the dictionary!\u201d\n\nWell, now is your chance! Given a dictionary, and a starting and ending word, what ONE single word could you add to the dictionary to minimize the number of steps to get from the starting word to the ending word, changing only one letter at a time, and making sure that every word at every step is in the dictionary?\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each test case will start with a line with a single integer $n$ ($2 \\le n \\le 1000$) which indicates the number of words in the dictionary. The dictionary will follow on the next $n$ lines, with one word per line. All words will consist of between $1$ and $8$ capital letters only, and all of the words in a test case will be of the same length. The first word in the list will be the starting word of the word ladder, and the second will be the ending word of the word ladder.\n\n-----Output-----\nOutput exactly two lines. The first line holds the one single word that you would add to the dictionary, and the second holds an integer indicating the minimum number of steps to get from the starting word to the ending word, adding your word.\n\nIt is possible that there\u2019s more than one word you can add that will make your path as short as possible. In this case, output the solution word that comes first alphabetically.\n\nIt is possible that there\u2019s no word you can add that will that will make your path any shorter. In this case, output 0 (zero) as the word.\n\nIt is possible that there\u2019s no word you can add that makes the solution possible. In this case, output 0 (zero) as the word, and -1 as the number of steps.\n\n-----Examples-----\nSample Input 1:\n3\nCAT\nDOG\nCOT\nSample Output 1:\nCOG\n3\n\nSample Input 2:\n2\nCAT\nDOG\nSample Output 2:\n0\n-1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}