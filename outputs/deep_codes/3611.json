{"3611": {"code": ["import heapq\n\ndef solve(graph, start, end):\n    n = len(graph)\n    visited = [False] * n\n    dist = [float('inf')] * n\n    prev = [None] * n\n    heap = [(0, start)]\n\n    while heap:\n        (d, u) = heapq.heapp", "from heapq import heappop, heappush\n\ndef shortest_path(graph, start, end):\n    queue = [(0, start)]\n    distances = {node: float('infinity') for node in graph}\n    distances[start] = 0\n    while queue:\n        current_distance, current_node = heappop(queue", "from heapq import heappush, heappop\n\ndef shortest_path(edges, start, end):\n    g = [[] for _ in range(len(edges))]\n    for u, v, w in edges:\n        g[u].append((v, w))\n        g[v].append((u, w))\n    q", "import heapq\n\ndef shortest_path(graph, start, end):\n    queue = [(0, start)]\n    distances = {node: float('infinity') for node in graph}\n    distances[start] = 0\n    while queue:\n        current_distance, current_node = heapq.heappop(queue)\n        if current", "import heapq\n\ndef shortest_path(graph, start, end):\n    shortest_distances = {node: float('infinity') for node in graph}\n    shortest_distances[start] = 0\n    heap = [(0, start)]\n    while heap:\n        current_distance, current_node = heapq.heapp"], "prompt": "\nQUESTION:\nFatima commutes from KTH to home by subway every day. Today Robert decided to surprise Fatima by baking cookies and bringing them to an intermediate station. Fatima does not always take the same route home, because she loves to admire the artwork inside different stations in Stockholm. However, she always optimizes her travel by taking the shortest route. Can you tell Robert which station he should go to in order to surely intercept Fatima?\n\n-----Input-----\nThe first line contains two integers $N$ and $M$, $1 \\leq N,M \\leq 100000$, where $N$ is the number of subway stations and $M$ is the number of subway links. $M$ lines follow, each with three integers $u$, $v$, $w$, $0 \\leq u,v < N$, $0 < w \\leq 1000000000$, meaning that there is a one-way link from $u$ to $v$ that takes $w$ seconds to complete. Note that different subway lines may serve the same route.\n\nThe last line contains two integers $s$ and $t$, $0 \\leq s,t < N$ the number of the station closest to KTH and closest to home, respectively. It is possible to reach $t$ from $s$.\n\n-----Output-----\nA space separated list of all the station numbers $u$ such that all shortest paths from $s$ to $t$ pass through $u$, in increasing order.\n\n-----Examples-----\nSample Input:\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\nSample Output:\n0 3\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}