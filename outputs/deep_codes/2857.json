{"2857": {"code": ["from collections import Counter\n\ndef solve(points):\n    x_count = Counter(x for x, y in points)\n    y_count = Counter(y for x, y in points)\n    return sum(x_count[x] * y_count[y] * (x_count[x] - 1) // 2 for x, y in points)\n\nN = int(input())\npoints = [tuple(map(int, input().split())) for _ in range(N)]\nprint(solve(points))\n\nThis code uses the concept of combinatorics and Counter from collections in Python. It counts the number of points for each x and y coordinate. Then for each point, it calculates the number of ways to choose 2 points from x_count and y_count respectively (which is nC2), multiplies it by the number of points at the same x or y coordinate (which is x_count[x] or y_count[y]), and then divides by 2", "from collections import Counter\n\ndef solve(n, points):\n    x_counter = Counter(x for x, y in points)\n    y_counter = Counter(y for x, y in points)\n    x_points = sorted(x_counter.keys())\n    y_points = sorted(y_counter.keys())\n    \n    ans = 0\n    for x in x_points:\n        for y in y_points:\n            ans += x_counter[x] * y_counter[y] * (n - x_counter[x] - y_counter[y])\n            ans += (x_counter[x] - 1) * y_counter[y] * (y_counter[y] - 1) // 2\n            ans += x_counter[x] * (y_counter[y] - 1) * (y_counter[y] - 2) // 2\n            ans += (x_counter[x] - 1)", "from collections import Counter\n\ndef solve(N, points):\n    count_x = Counter(x for x, y in points)\n    count_y = Counter(y for x, y in points)\n    return sum(x * (x - 1) // 2 * count_y[y] for x, y in points) + sum(y * (y - 1) // 2 * count_x[x] for x, y in points)\n\nN = int(input().strip())\npoints = [tuple(map(int, input().strip().split())) for _ in range(N)]\nprint(solve(N, points))\n\nThis code uses a Counter from the collections module to count the number of points for each x and y coordinate. It then uses these counts to calculate the number of triangles that can be formed with each point as a vertex. The number of triangles is the sum of the number of triangles that can be formed with each point as the base of the triangle. This is", "from collections import Counter\n\ndef solve(n, points):\n    count = Counter()\n    for x, y in points:\n        count[min(x,y)] += 1\n    return sum(count[x]*(count[x]-1)*(count[x]-2)//6 for x in count)\n\nn = int(input().strip())\npoints = [tuple(map(int, input().strip().split())) for _ in range(n)]\nprint(solve(n, points))\n\n\nExplanation:\nThe problem is asking to find the number of ways to choose 3 points out of n points such that they form a right triangle with legs parallel to the axes.\n\nA right triangle has one 90-degree internal angle. The legs of a right triangle are its two shorter sides. In a right triangle, the shorter sides are either x or y. \n\nWe can use the Counter class from the collections module to count the number of points for each x and y. Then we can", "from collections import defaultdict\n\ndef solve(n, points):\n    count_x = defaultdict(int)\n    count_y = defaultdict(int)\n    for x, y in points:\n        count_x[x] += 1\n        count_y[y] += 1\n    total = 0\n    for x, count in count_x.items():\n        total += count * (count - 1) * (count - 2) // 6\n    for y, count in count_y.items():\n        total += count * (count - 1) * (count - 2) // 6\n    return total\n\nn = int(input().strip())\npoints = [tuple(map(int, input().strip().split())) for _ in range(n)]\nprint(solve(n, points))\n\n\nThis Python program uses a combination formula to count the number of ways to choose 3 points from a set of points. The formula counts the number of ways to choose 3 elements from"], "prompt": "\nQUESTION:\n$N$ points are placed in the coordinate plane.\n\nWrite a program that calculates how many ways we can choose three points so that they form a right triangle with legs parallel to the coordinate axes.\n\nA right triangle has one 90-degree internal angle. The legs of a right triangle are its two shorter sides.\n\n-----Input-----\nThe first line of input contains the integer $N$ ($3 \\le N \\le 100000$), the number of points.\n\nEach of the following $N$ lines contains two integers $X$ and $Y$ ($1 \\le X, Y \\le 100000$), the coordinates of one point.\n\nNo pair of points will share the same pair of coordinates.\n\n-----Output-----\nOutput the number of triangles.\n\n-----Examples-----\nSample Input 1:\n3\n4 2\n2 1\n1 3\nSample Output 1:\n0\n\nSample Input 2:\n5\n1 2\n2 1\n2 2\n2 3\n3 2\nSample Output 2:\n4\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}