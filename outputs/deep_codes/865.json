{"865": {"code": ["import sys\n\ndef solve():\n    input = sys.stdin.readline\n    N, T = map(int, input().split())\n    dishes = [list(map(int, input().split())) for _ in range(N)]\n    dishes.sort(key=lambda x: x[0])\n    dp = [0] * (T +", "import sys\n\ndef solve():\n    N, T = map(int, sys.stdin.readline().split())\n    dishes = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\n    dishes.sort()\n\n    dp = [[0] * (T + 1) for _ in range(", "import sys\n\ndef solve():\n    n, t = map(int, sys.stdin.readline().split())\n    dishes = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n\n    # Sort dishes by time and deliciousness\n    dishes.sort(key=lambda x: (x[0", "N, T = map(int, input().split())\ndishes = [list(map(int, input().split())) for _ in range(N)]\ndp = [-1 << 60 for _ in range(T + 1)]\ndp[0] = 0\n\nfor a, b in dishes:\n    for t in range(T - a, -1,", "import sys\n\ndef solve():\n    N, T = map(int, sys.stdin.readline().split())\n    dishes = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\n\n    dishes.sort(key=lambda x: x[0] + x[1])\n\n    dp"], "prompt": "\nQUESTION:\nTakahashi is at an all-you-can-eat restaurant.\nThe restaurant offers N kinds of dishes. It takes A_i minutes to eat the i-th dish, whose deliciousness is B_i.\nThe restaurant has the following rules:\n - You can only order one dish at a time. The dish ordered will be immediately served and ready to eat.\n - You cannot order the same kind of dish more than once.\n - Until you finish eating the dish already served, you cannot order a new dish.\n - After T-0.5 minutes from the first order, you can no longer place a new order, but you can continue eating the dish already served.\nLet Takahashi's happiness be the sum of the deliciousness of the dishes he eats in this restaurant.\nWhat is the maximum possible happiness achieved by making optimal choices?\n\n-----Constraints-----\n - 2 \\leq N \\leq 3000\n - 1 \\leq T \\leq 3000\n - 1 \\leq A_i \\leq 3000\n - 1 \\leq B_i \\leq 3000\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN T\nA_1 B_1\n:\nA_N B_N\n\n-----Output-----\nPrint the maximum possible happiness Takahashi can achieve.\n\n-----Sample Input-----\n2 60\n10 10\n100 100\n\n-----Sample Output-----\n110\n\nBy ordering the first and second dishes in this order, Takahashi's happiness will be 110.\nNote that, if we manage to order a dish in time, we can spend any amount of time to eat it.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}