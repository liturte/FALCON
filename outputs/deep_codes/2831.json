{"2831": {"code": ["import sys\n\nn = int(sys.stdin.readline())\nvehicles = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]", "import sys\n\ndef read_ints():\n    return list(map(int, sys.stdin.readline().split()))\n\nn = int(sys.stdin.readline())\nveh", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n = int(input())\n    vehicles = [list(map(int, input().split())) for _ in range(", "def min_distance():\n    n = int(input())\n    vehicles = [list(map(int, input().split())) for _ in range(n)]\n    vehicles.sort()\n    min_", "import sys\n\ndef solve():\n    n = int(input())\n    vehicles = [tuple(map(int, input().split())) for _ in range(n)]\n    vehicles.sort(key"], "prompt": "\nQUESTION:\nYou have located a major supply line that the enemy has been using. With satellite imaging, you\u2019ve been able to determine the current location and velocity of every vehicle along the supply line, which is for all practical purposes an infinitely long straight line. Furthermore, you know that each vehicle moves at constant velocity, and that they can pass by each other without incident along this supply line. What you need to do now is deploy an air drone with special sensors that can give you readings of the contents of the vehicles. The sensor is capable of reading everything in its range instantaneously, but power limitations allow it to do so only once. In order to minimize the required range, you want to deploy it when the vehicles are as close to each other as possible. Given knowledge of the current location and velocity of all the vehicles, what is the closest that the vehicles will get to each other?\n\n-----Input-----\nThere will be a single test case in the input. This test case will begin with a line with a single integer $n$ ($1 \\le n \\le 100000$) representing the number of vehicles. Each of the next $n$ lines will have two integers, $x$ and $v$ ($-100000 \\le x,v \\le 100000$), indicating the position ($x$, in meters) and velocity ($v$, in meters/hour) of that vehicle. The sign of velocity indicates direction.\n\n-----Output-----\nOutput a single number equal to the minimum distance that will cover all of the vehicles at some time, in meters. Your result should have an absolute or relative error of less than $10^{-3}$.\n\n-----Examples-----\nSample Input 1:\n2\n-100 1\n100 -1\nSample Output 1:\n0\n\nSample Input 2:\n3\n-100 1\n100 -1\n101 -1\nSample Output 2:\n1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}