{"2495": {"code": ["n = int(input())\na = list(map(int, input().split()))\n\nops = 0\n\nfor i in range(1, n):\n    if a[i] == a[i-1]:\n        ops += 1\n        a[i] += 1 if a[i] > 0 else -1\n    elif a[i] * a[i-1] < 0:\n        ops += 1\n        a[i] += -2 * min(a[i], a[i-1])\n    else:\n        continue\n\nprint(ops)\n\n\nThis solution works by iterating over the sequence and checking the", "n = int(input())\na = list(map(int, input().split()))\n\ntotal = 0\nprev_sum = 0\nprev_sign = False\nres = 0\n\nfor i in range(n):\n    total += abs(a[i])\n    if i > 0:\n        if prev_sum == 0:\n            res += 1\n            prev_sum = 1 if a[i] > 0 else -1\n        else:\n            if (a[i] > 0 and prev_sum < 0) or (a[i] < 0 and prev_sum > 0):\n                res += 1\n                prev_sum = a[i", "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve():\n    ans = 0\n    for i in range(1, n):\n        if a[i-1] + a[i] == 0:\n            ans += 1\n            a[i] += 1\n        elif a[i-1] + a[i] != 0 and a[i-1] * a[i] < 0:\n            ans += 1\n    return ans\n\nprint(solve())\n\nThis solution uses a simple iteration over the input", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, n):\n    if a[i] * a[i-1] <= 0:\n        ans += 1\n        if a[i] == 0:\n            a[i] = 1\nprint(ans)\n\n\nThis code reads an integer n and a list of integers from the input, then calculates the minimum number of operations needed to satisfy the conditions. It uses a for loop to iterate over the list, checking if the product of the current and", "def min_operations(n, sequence):\n    operations = 0\n    for i in range(1, n):\n        if sequence[i] == sequence[i-1]:\n            operations += 1\n            sequence[i] += 1 if sequence[i] > 0 else -1\n        elif sequence[i] * sequence[i-1] < 0:\n            operations += 1\n            sequence[i] += -2 * sequence[i-1]\n    return operations\n\nn = int(input())\nsequence = list(map(int, input().split()))\nprint(min_operations(n, sequence))\n\n\nThis solution works by iter"], "prompt": "\nQUESTION:\nYou are given an integer sequence of length N. The i-th term in the sequence is a_i.\nIn one operation, you can select a term and either increment or decrement it by one.\nAt least how many operations are necessary to satisfy the following conditions?\n - For every i (1\u2264i\u2264n), the sum of the terms from the 1-st through i-th term is not zero.\n - For every i (1\u2264i\u2264n-1), the sign of the sum of the terms from the 1-st through i-th term, is different from the sign of the sum of the terms from the 1-st through (i+1)-th term.\n\n-----Constraints-----\n - 2 \u2264 n \u2264 10^5\n - |a_i| \u2264 10^9\n - Each a_i is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nn\na_1 a_2 ... a_n\n\n-----Output-----\nPrint the minimum necessary count of operations.\n\n-----Sample Input-----\n4\n1 -3 1 0\n\n-----Sample Output-----\n4\n\nFor example, the given sequence can be transformed into 1, -2, 2, -2 by four operations. The sums of the first one, two, three and four terms are 1, -1, 1 and -1, respectively, which satisfy the conditions.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}