{"1476": {"code": ["n = int(input().strip())\nif n == 1:\n    print(1)\n    print(1)\nelse:\n    print(n)\n    if n % 2 == 0:\n        for i in range(2, n+1, 2):\n            print(i, end=\" \")\n        for i in range(1, n, 2):\n            print(i, end=\" \")\n    else:\n        for i in range(1, n+1, 2):\n            print(i, end=\" \")\n        for i in range", "def arrange_students(n):\n    if n == 1:\n        return [1]\n    elif n <= 3:\n        return [1, n, 2]\n    else:\n        return [1, n, 2] + arrange_students(n - 2)\n\nn = int(input())\nprint(n)\nprint(*arrange_students(n))\n\nThis solution works by recursively arranging students in the room. If there are 1 or 2 students, they are arranged in a single line. For 3 or more students, the", "def arrange_students(n):\n    if n == 1:\n        return [1]\n    elif n <= 3:\n        return [3, 1, 2]\n    else:\n        arrangement = [3, 1, 2]\n        for i in range(4, n+1):\n            arrangement.insert(i//2, i)\n        return arrangement\n\nn = int(input())\nprint(n)\nprint(' '.join(map(str, arrange_students(n))))\n\nThis code first checks if the number of students is", "def arrange_students(n):\n    if n == 1:\n        return [1]\n    if n == 2:\n        return [1, 2]\n    if n % 2 == 0:\n        return [1, 3, 2] + [i for i in range(4, n+1, 2)]\n    else:\n        return [1, 2, 3] + [i for i in range(4, n+1, 2)]\n\nprint(len(arrange_students(int(input()))))\nprint(' '.join", "def arrange_students(n):\n    if n % 2 == 0:\n        return [n-i for i in range(n//2)] + [n-i for i in range(n//2-1, -1, -1)]\n    else:\n        return [n-i for i in range(n//2+1)] + [n-i for i in range(n//2, 0, -1)]\n\nn = int(input())\nprint(n)\nprint(' '.join(map(str, arrange_students(n))))"], "prompt": "\nQUESTION:\nAn exam for n students will take place in a long and narrow room, so the students will sit in a line in some order. The teacher suspects that students with adjacent numbers (i and i + 1) always studied side by side and became friends and if they take an exam sitting next to each other, they will help each other for sure.\n\nYour task is to choose the maximum number of students and make such an arrangement of students in the room that no two students with adjacent numbers sit side by side.\n\n\n-----Input-----\n\nA single line contains integer n (1 \u2264 n \u2264 5000) \u2014 the number of students at an exam.\n\n\n-----Output-----\n\nIn the first line print integer k \u2014 the maximum number of students who can be seated so that no two students with adjacent numbers sit next to each other.\n\nIn the second line print k distinct integers a_1, a_2, ..., a_{k} (1 \u2264 a_{i} \u2264 n), where a_{i} is the number of the student on the i-th position. The students on adjacent positions mustn't have adjacent numbers. Formally, the following should be true: |a_{i} - a_{i} + 1| \u2260 1 for all i from 1 to k - 1.\n\nIf there are several possible answers, output any of them.\n\n\n-----Examples-----\nInput\n6\nOutput\n6\n1 5 3 6 2 4\nInput\n3\n\nOutput\n2\n1 3\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}