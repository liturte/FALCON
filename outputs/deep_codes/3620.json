{"3620": {"code": ["def solve():\n    N, M, k, P = map(int, input().split())\n    edges = [0] * N\n    for _ in range(M):\n        a, b = map(int, input().split())\n        edges[a-1] += 1\n        edges[b-1] += 1\n    dp = [0] * (max(edges)+3)\n    dp[0] = 1\n    for i in range", "from collections import defaultdict\n\ndef powmod(a, b, m):\n    r = 1\n    while b > 0:\n        if b & 1:\n            r = (r * a) % m\n        b >>= 1\n        a = (a * a) % m\n    return r\n\ndef solve(n, m, k, p, edges):\n    adj = defaultdict(list)\n    for u, v in edges:\n        adj[", "MOD = 10**9 + 7\n\ndef powmod(a, b):\n    r = 1\n    while b > 0:\n        if b % 2 == 1:\n            r = r * a % MOD\n        a = a * a % MOD\n        b = b // 2\n    return r\n\ndef solve(n, m, k, p):\n    fac = [0] * (n + m + 1)\n    fac[0]", "MOD = 10**9 + 7\n\ndef powmod(a, b):\n    r = 1\n    while b > 0:\n        if b & 1:\n            r = r * a % MOD\n        b >>= 1\n        a = a * a % MOD\n    return r\n\nN, M, k, P = map(int, input().split())\nadj = [0] * (N+1)\nfor _ in range(M):", "import sys\nfrom collections import defaultdict\n\nMOD = 10**9 + 7\n\ndef main():\n    N, M, k, P = map(int, sys.stdin.readline().split())\n    graph = defaultdict(list)\n    for _ in range(M):\n        a, b = map(int, sys.stdin.readline().split())\n        graph[a].append(b)\n        graph[b].append(a)"], "prompt": "\nQUESTION:\nYou are given a simple graph with $N$ nodes and $M$ edges. The graph has the special property that any connected component of size $s$ contains no more than $s + 2$ edges. You are also given two integers $k$ and $P$. Find the number of $k$-colourings of the graph, modulo $P$.\n\nRecall that a simple graph is an undirected graph with no self loops and no repeated edges. A $k$-colouring of a graph is a way to assign to each node of the graph exactly one of $k$ colours, such that if edge $(u, v)$ is present in the graph, then $u$ and $v$ receive different colors.\n\n-----Input-----\nThe first line of input consists of four integers, $N, M, k$, and $P$ ($1 \\leq N \\leq 50000$, $0 \\leq M \\leq 1.5 N$, $1 \\leq k \\leq 10^9$, $1 \\leq P \\leq 2 \\cdot 10^9$). The next $M$ lines of input each contains a pair of integers $A$ and $B$ ($1 \\leq A \\leq N$, $1 \\leq B \\leq N$), describing an edge in the graph connecting nodes $A$ and $B$.\n\n-----Output-----\nOutput the number of $k$-colourings of the given graph, modulo $P$.\n\n-----Examples-----\nSample Input:\n3 3 2 10000\n1 2\n2 3\n3 1\nSample Output:\n0\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}