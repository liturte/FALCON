{"2873": {"code": ["def count_pleasant_words(word):\n    vowels = 'AEIOU'\n    n = len(word)\n    count = 0\n    for i in range(n):\n        if word[i] == '_':\n            for l in range(i+1, n):\n                if word[l] == '_':\n                    for k in range(l+1, n):\n                        if word[k] == '_':\n                            for a in range(k+1, n):\n                                for e in range(a+1, n):\n                                    for i in range(e+1, n):\n                                        for o in range(i+1, n):\n                                            for u in range(o+1", "def count_words(word):\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    n = len(word)\n    dp = [[[0]*n for _ in range(n)] for _ in range(n)]\n    for length in range(1, n+1):\n        for start in range(n-length+1):\n            end = start + length - 1\n            if length == 1:\n                dp[start][end][0] = dp[start][end][1] = 1\n            else:\n                for k in range(start, end):\n                    if word[k] == '_':\n                        for v in range(2", "def count_words(word):\n    vowels = 'AEIOU'\n    n = len(word)\n    dp = [[[0]*3 for _ in range(3)] for _ in range(n+1)]\n    dp[0][0][0] = 1\n    for i in range(n):\n        for j in k in range(3):\n            for k in range(3):\n                for c in range(26):\n                    if word[i] == '_' or word[i] == chr(c+65):\n                        if chr(c+65) in vowels:\n                            dp[i+1][j][0] += dp", "def count_words(s):\n    vowels = 'AEIOU'\n    consonants = 'BCDFGHJKLMNPQRSTVWXYZ'\n    n = len(s)\n    dp = [[[0]*5 for _ in range(n+1)] for _ in range(4)]\n    dp[0][0][0] = 1\n    for i in range(1, n+1):\n        c = s[i-1]\n        for j in range(4):\n            for k in range(5):\n                if c == '_':\n                    for v in vowels:\n                        dp[i][j][k] += sum(dp", "def count_words(s):\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    vowel_count = 0\n    consonant_count = 0\n    word_count = 0\n    for c in s:\n        if c in vowels:\n            vowel_count += 1\n            consonant_count = 0\n        elif c == 'L':\n            vowel_count = 0\n            consonant_count = 0\n        else:\n            consonant_count += 1\n            vowel_count = 0\n        if vowel_count == 3:\n            vowel_count = 0\n            consonant_count = 0\n        if"], "prompt": "\nQUESTION:\nLea runs into a lot of words in her life. A lot of them she finds unpleasant. To compensate for that she started making up pleasant words. Lea makes up new words by writing a nice looking string of characters on a piece of paper. She than erases a few of the most nasty looking characters and replaces them with underscores \u2018_\u2019. After that she tries to replace the underscores with more acceptable characters trying to form a pleasant word.\n\nLea considers words pleasant if they do not contain $3$ sequential vowels, $3$ sequential consonants and contain at least one letter \u2018L\u2019.\n\nIn Croatian, the vowels are the letters A, E, I, O, and U only. All other lettters are consonants.\n\n-----Input-----\nThe first and only line of input contains a string of characters, at most $100$. The string contains only of uppercase English letters and \u2018_\u2019 characters. There will be at most $10$ \u2018_\u2019 characters.\n\n-----Output-----\nThe first and only line of output should cotain a single integer \u2013 the total number of pleasant words that can be formed by substituting underscores with uppercase letters of the English alphabet.\n\n-----Examples-----\nSample Input 1:\nL_V\nSample Output 1:\n5\n\nSample Input 2:\nV__K\nSample Output 2:\n10\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}