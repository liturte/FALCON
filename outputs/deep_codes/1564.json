{"1564": {"code": ["def", "def", "from", "n", "def"], "prompt": "\nQUESTION:\nMonocarp has got two strings $s$ and $t$ having equal length. Both strings consist of lowercase Latin letters \"a\" and \"b\". \n\nMonocarp wants to make these two strings $s$ and $t$ equal to each other. He can do the following operation any number of times: choose an index $pos_1$ in the string $s$, choose an index $pos_2$ in the string $t$, and swap $s_{pos_1}$ with $t_{pos_2}$.\n\nYou have to determine the minimum number of operations Monocarp has to perform to make $s$ and $t$ equal, and print any optimal sequence of operations \u2014 or say that it is impossible to make these strings equal.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ $(1 \\le n \\le 2 \\cdot 10^{5})$ \u2014 the length of $s$ and $t$.\n\nThe second line contains one string $s$ consisting of $n$ characters \"a\" and \"b\". \n\nThe third line contains one string $t$ consisting of $n$ characters \"a\" and \"b\". \n\n\n-----Output-----\n\nIf it is impossible to make these strings equal, print $-1$.\n\nOtherwise, in the first line print $k$ \u2014 the minimum number of operations required to make the strings equal. In each of the next $k$ lines print two integers \u2014 the index in the string $s$ and the index in the string $t$ that should be used in the corresponding swap operation. \n\n\n-----Examples-----\nInput\n4\nabab\naabb\n\nOutput\n2\n3 3\n3 2\n\nInput\n1\na\nb\n\nOutput\n-1\n\nInput\n8\nbabbaabb\nabababaa\n\nOutput\n3\n2 6\n1 3\n7 8\n\n\n\n-----Note-----\n\nIn the first example two operations are enough. For example, you can swap the third letter in $s$ with the third letter in $t$. Then $s = $ \"abbb\", $t = $ \"aaab\". Then swap the third letter in $s$ and the second letter in $t$. Then both $s$ and $t$ are equal to \"abab\".\n\nIn the second example it's impossible to make two strings equal.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}