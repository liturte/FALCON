{"1350": {"code": ["from collections import Counter\n\nn, k = map(int, input().split())\ns = input()\n\ncounter = Counter(s)\n\nmin_freq = min(counter.values())\n\nprint(min_freq)\n\nThis Python", "from collections import Counter\n\nn, k = map(int, input().split())\ns = input()\n\ncount = Counter(s)\n\nif len(count) != k:\n    print(0)\nelse:\n    min_freq =", "from collections import Counter\n\nn, k = map(int, input().split())\ns = input()\n\nc = Counter(s)\n\n# If the frequency of any letter is more than n // k, it's impossible to have a good subsequence", "from collections import Counter\n\nn, k = map(int, input().split())\ns = input()\n\ncounter = Counter(s)\n\nletters = sorted(counter.values())\n\nif len(letters) < k:\n    print(0", "from collections import Counter\n\nn, k = map(int, input().split())\ns = input()\n\ncount = Counter(s)\n\nif len(count) < k:\n    print(0)\nelse:\n    print(min(count."], "prompt": "\nQUESTION:\nYou are given a string $s$ of length $n$, which consists only of the first $k$ letters of the Latin alphabet. All letters in string $s$ are uppercase.\n\nA subsequence of string $s$ is a string that can be derived from $s$ by deleting some of its symbols without changing the order of the remaining symbols. For example, \"ADE\" and \"BD\" are subsequences of \"ABCDE\", but \"DEA\" is not.\n\nA subsequence of $s$ called good if the number of occurences of each of the first $k$ letters of the alphabet is the same.\n\nFind the length of the longest good subsequence of $s$. \n\n\n-----Input-----\n\nThe first line of the input contains integers $n$ ($1\\le n \\le 10^5$) and $k$ ($1 \\le k \\le 26$).\n\nThe second line of the input contains the string $s$ of length $n$. String $s$ only contains uppercase letters from 'A' to the $k$-th letter of Latin alphabet.\n\n\n-----Output-----\n\nPrint the only integer\u00a0\u2014 the length of the longest good subsequence of string $s$.\n\n\n-----Examples-----\nInput\n9 3\nACAABCCAB\n\nOutput\n6\nInput\n9 4\nABCABCABC\n\nOutput\n0\n\n\n-----Note-----\n\nIn the first example, \"ACBCAB\" (\"ACAABCCAB\") is one of the subsequences that has the same frequency of 'A', 'B' and 'C'. Subsequence \"CAB\" also has the same frequency of these letters, but doesn't have the maximum possible length.\n\nIn the second example, none of the subsequences can have 'D', hence the answer is $0$.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}