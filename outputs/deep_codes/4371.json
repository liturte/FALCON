{"4371": {"code": ["import sys\nfrom itertools import combinations\n\nS = sys.stdin.readline().strip()\n\nmin_diff = float('inf')\nfor comb in combinations(range(1, len(S)), 2):\n    if S[comb[0]-1] != '1' and S[comb[1]+1] != '9':\n        X = int(S[comb[0]:comb[1]+1])\n        diff = abs(X - 753)\n        if diff < min_diff:", "import sys\nfrom itertools import combinations\n\nS = sys.stdin.readline().strip()\nN = len(S)\n\ndef calc(x):\n    return abs(753 - int(S[x:x+3]))\n\nans = float('inf')\nfor i in range(N-2):\n    ans = min(ans, calc(i))\n\nprint(ans)\n\n\nThis Python script uses itertools.combinations to generate all possible combinations of 3 digits in S. It then calcul", "import sys\nfrom itertools import combinations\n\nS = sys.stdin.readline().strip()\nN = len(S)\ndiff = 1e9\n\nfor i in range(N-2):\n    X = int(S[i:i+3])\n    d = abs(X - 753)\n    if d < diff:\n        diff = d\n\nprint(diff)\n\nThis Python code reads a string S of digits from standard input, then iterates over all possible triples of consecutive digits in S", "from collections import deque\n\nS = input()\nn = len(S)\ndiff = [abs(int(S[i:i+3])-753) for i in range(n-2)]\nq = deque(sorted((d,i) for i,d in enumerate(diff)))\n\nwhile True:\n    d,i = q[0]\n    if i+3 < n:\n        new_d = abs(int(S[i:i+3])-753)\n        if new", "import sys\nfrom itertools import combinations\n\nS = sys.stdin.readline().rstrip()\nnums = [int(S[i:j]) for i, j in combinations(range(len(S) + 1), 2) if j - i <= 3]\nprint(min(abs(num - 753) for num in nums))\n\n\nThis solution uses Python's built-in library `itertools` to generate all possible combinations of the string `S`. For each combination, it extracts a substring"], "prompt": "\nQUESTION:\nThere is a string S consisting of digits 1, 2, ..., 9.\nLunlun, the Dachshund, will take out three consecutive digits from S, treat them as a single integer X and bring it to her master. (She cannot rearrange the digits.)\nThe master's favorite number is 753. The closer to this number, the better.\nWhat is the minimum possible (absolute) difference between X and 753?\n\n-----Constraints-----\n - S is a string of length between 4 and 10 (inclusive).\n - Each character in S is 1, 2, ..., or 9.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\n\n-----Output-----\nPrint the minimum possible difference between X and 753.\n\n-----Sample Input-----\n1234567876\n\n-----Sample Output-----\n34\n\nTaking out the seventh to ninth characters results in X = 787, and the difference between this and 753 is 787 - 753 = 34. The difference cannot be made smaller, no matter where X is taken from.\nNote that the digits cannot be rearranged. For example, taking out 567 and rearranging it to 765 is not allowed.\nWe cannot take out three digits that are not consecutive from S, either. For example, taking out the seventh digit 7, the ninth digit 7 and the tenth digit 6 to obtain 776 is not allowed.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}