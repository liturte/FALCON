{"1772": {"code": ["import", "import", "n", "n", "n"], "prompt": "\nQUESTION:\nA flower shop has got n bouquets, and the i-th bouquet consists of a_{i} flowers. Vasya, the manager of the shop, decided to make large bouquets from these bouquets. \n\nVasya thinks that a bouquet is large if it is made of two or more initial bouquets, and there is a constraint: the total number of flowers in a large bouquet should be odd. Each of the initial bouquets can be a part of at most one large bouquet. If an initial bouquet becomes a part of a large bouquet, all its flowers are included in the large bouquet.\n\nDetermine the maximum possible number of large bouquets Vasya can make. \n\n\n-----Input-----\n\nThe first line contains a single positive integer n (1 \u2264 n \u2264 10^5) \u2014 the number of initial bouquets.\n\nThe second line contains a sequence of integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^6) \u2014 the number of flowers in each of the initial bouquets.\n\n\n-----Output-----\n\nPrint the maximum number of large bouquets Vasya can make. \n\n\n-----Examples-----\nInput\n5\n2 3 4 2 7\n\nOutput\n2\n\nInput\n6\n2 2 6 8 6 12\n\nOutput\n0\n\nInput\n3\n11 4 10\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first example Vasya can make 2 large bouquets. For example, the first bouquet can contain the first and the fifth initial bouquets (the total number of flowers is then equal to 9), and the second bouquet can consist of the second and the third initial bouquets (the total number of flowers is then equal to 7). The fourth initial bouquet is unused in this scheme. \n\nIn the second example it is not possible to form a single bouquet with odd number of flowers.\n\nIn the third example Vasya can make one large bouquet. For example, he can make it using all three initial bouquets. The size of the large bouquet is then equal to 11 + 4 + 10 = 25.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}