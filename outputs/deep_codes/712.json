{"712": {"code": ["import sys\n\ndef escalator_load_factor():\n    n, p, t = map(float, sys.stdin.readline().split())\n    dp = [0.0] * 2001\n    d", "def escalator(n, p, t):\n    dp = [[0 for _ in range(n+2)] for _ in range(n+2)]\n    dp[0][0] = 1\n    for i in range(", "import sys\nfrom functools import lru_cache\n\nn, p, t = map(float, sys.stdin.readline().split())\n\n@lru_cache(None)\ndef prob(i, j):", "def escalator_load_factor(n, p, t):\n    dp = [[0 for _ in range(n + 1)] for _ in range(t + 1)]\n    dp[0][0] = 1\n    for", "import sys\nfrom functools import lru_cache\n\ndef read_data():\n    n, p, t = map(float, sys.stdin.readline().split())\n    return n, p, t\n\n@l"], "prompt": "\nQUESTION:\nIlya got tired of sports programming, left university and got a job in the subway. He was given the task to determine the escalator load factor. \n\nLet's assume that n people stand in the queue for the escalator. At each second one of the two following possibilities takes place: either the first person in the queue enters the escalator with probability p, or the first person in the queue doesn't move with probability (1 - p), paralyzed by his fear of escalators and making the whole queue wait behind him.\n\nFormally speaking, the i-th person in the queue cannot enter the escalator until people with indices from 1 to i - 1 inclusive enter it. In one second only one person can enter the escalator. The escalator is infinite, so if a person enters it, he never leaves it, that is he will be standing on the escalator at any following second. Ilya needs to count the expected value of the number of people standing on the escalator after t seconds. \n\nYour task is to help him solve this complicated task.\n\n\n-----Input-----\n\nThe first line of the input contains three numbers n, p, t (1 \u2264 n, t \u2264 2000, 0 \u2264 p \u2264 1). Numbers n and t are integers, number p is real, given with exactly two digits after the decimal point.\n\n\n-----Output-----\n\nPrint a single real number \u2014 the expected number of people who will be standing on the escalator after t seconds. The absolute or relative error mustn't exceed 10^{ - 6}.\n\n\n-----Examples-----\nInput\n1 0.50 1\n\nOutput\n0.5\n\nInput\n1 0.50 4\n\nOutput\n0.9375\n\nInput\n4 0.20 2\n\nOutput\n0.4\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}