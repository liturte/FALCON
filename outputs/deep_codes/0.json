{"0": {"code": ["def max_accordion_length(s):\n    open_brackets = [i for i, c in enumerate(s) if c == '[']\n    close_brackets = [i for i, c in enumerate(s) if c == ']']\n    colons = [i for i, c in enumerate(s) if c == ':']\n    verticals = [i for i", "s = input().strip()\nn = len(s)\nif n < 3:\n    print(-1)\nelse:\n    count = [0] * n\n    if s[0] == '[':\n        count[0] = 1\n    for i in range(1, n):\n        if s[i] == '|':\n            count[i] = count[i-1] +", "def solve(s):\n    count = [0]*4\n    max_len = 0\n    for c in s:\n        if c == '[':\n            count[0] += 1\n        elif c == ']':\n            count[3] += 1\n        elif c == ':':\n            count[1] += 1\n        elif c == '|':\n            count[2] += 1", "def max_accordion_length(s):\n    if len(s) < 3:\n        return -1\n    stack = []\n    max_length = 0\n    current_length = 0\n    for c in s:\n        if c in '[|':\n            stack.append(c)\n            current_length += 1\n        elif c == ':':\n            if stack and stack[-1]", "s = input()\nn = len(s)\nstack = []\nans = 0\n\nif s[0] == ']' or s[-1] == '[':\n    print(-1)\nelse:\n    for i in range(n):\n        if s[i] == '[' or s[i] == ':':\n            stack.append(s[i])\n        else:\n            if"], "prompt": "\nQUESTION:\nAn accordion is a string (yes, in the real world accordions are musical instruments, but let's forget about it for a while) which can be represented as a concatenation of: an opening bracket (ASCII code $091$), a colon (ASCII code $058$), some (possibly zero) vertical line characters (ASCII code $124$), another colon, and a closing bracket (ASCII code $093$). The length of the accordion is the number of characters in it.\n\nFor example, [::], [:||:] and [:|||:] are accordions having length $4$, $6$ and $7$. (:|:), {:||:}, [:], ]:||:[ are not accordions. \n\nYou are given a string $s$. You want to transform it into an accordion by removing some (possibly zero) characters from it. Note that you may not insert new characters or reorder existing ones. Is it possible to obtain an accordion by removing characters from $s$, and if so, what is the maximum possible length of the result?\n\n\n-----Input-----\n\nThe only line contains one string $s$ ($1 \\le |s| \\le 500000$). It consists of lowercase Latin letters and characters [, ], : and |.\n\n\n-----Output-----\n\nIf it is not possible to obtain an accordion by removing some characters from $s$, print $-1$. Otherwise print maximum possible length of the resulting accordion.\n\n\n-----Examples-----\nInput\n|[a:b:|]\n\nOutput\n4\n\nInput\n|]:[|:]\n\nOutput\n-1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}