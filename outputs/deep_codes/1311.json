{"1311": {"code": ["def binary_", "from operator import", "from operator import", "from operator import", "from operator import"], "prompt": "\nQUESTION:\nThe clique problem is one of the most well-known NP-complete problems. Under some simplification it can be formulated as follows. Consider an undirected graph G. It is required to find a subset of vertices C of the maximum size such that any two of them are connected by an edge in graph G. Sounds simple, doesn't it? Nobody yet knows an algorithm that finds a solution to this problem in polynomial time of the size of the graph. However, as with many other NP-complete problems, the clique problem is easier if you consider a specific type of a graph.\n\nConsider n distinct points on a line. Let the i-th point have the coordinate x_{i} and weight w_{i}. Let's form graph G, whose vertices are these points and edges connect exactly the pairs of points (i, j), such that the distance between them is not less than the sum of their weights, or more formally: |x_{i} - x_{j}| \u2265 w_{i} + w_{j}.\n\nFind the size of the maximum clique in such graph.\n\n\n-----Input-----\n\nThe first line contains the integer n (1 \u2264 n \u2264 200 000) \u2014 the number of points.\n\nEach of the next n lines contains two numbers x_{i}, w_{i} (0 \u2264 x_{i} \u2264 10^9, 1 \u2264 w_{i} \u2264 10^9) \u2014 the coordinate and the weight of a point. All x_{i} are different.\n\n\n-----Output-----\n\nPrint a single number \u2014 the number of vertexes in the maximum clique of the given graph.\n\n\n-----Examples-----\nInput\n4\n2 3\n3 1\n6 1\n0 2\n\nOutput\n3\n\n\n\n-----Note-----\n\nIf you happen to know how to solve this problem without using the specific properties of the graph formulated in the problem statement, then you are able to get a prize of one million dollars!\n\nThe picture for the sample test. [Image]\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}