{"777": {"code": ["import string\n\ndef distinct_booklets(s):\n    return 26 ** len(s)\n\nprint(distinct_booklets(input()))\n\n\nThis code works by calculating the number of distinct photobooks Kyoya Ootori can make by inserting one extra photo into the photobook he already has. The number of distinct photobooks is equal to the number of letters in the alphabet (26) raised to the power of the length of the input string (the number of photos in the photobook Kyoya Ootori already has). This is because for each additional photo, Kyoya Ootori can choose any of the", "def photobooks(s):\n    return (len(s)+1)*(26**len(s))\n\nprint(photobooks(input()))\n\n\nThis program calculates the number of distinct photobooks Kyoya Ootori can make by inserting one extra photo into the photobook he already has. It does this by taking the length of the input string, adding one (for the extra photo), and raising 26 to the power of that length. The result is the number of distinct photobooks Kyoya Ootori can make.\n\nFor example, if the input string is 'hi', the length of the string", "def photobooks(s):\n    return (len(s) + 1) * 26 - len(set(s))\n\nprint(photobooks(input()))\n\n\nExplanation:\nThe number of distinct photobooks is equal to the length of the string plus one times the number of letters in the alphabet minus the number of distinct characters in the string. This is because for each additional character, we can insert it into any position of the string, so the number of distinct photobooks is proportional to the length of the string plus one.\n\nFor each distinct character in the string, we can create a photobook with one extra character", "def photobooks(s):\n    return (len(s)+1)*(26**(len(s)+1))-sum(26**i for i in range(len(s)+1))\n\nprint(photobooks(input()))\n\n\n\n\n\n-----Hint-----\n\nThe problem can be solved by using the principle of combinatorics and dynamic programming.\n\n\n\n-----Explanation-----\n\nIn the first case, the total number of distinct photobooks is 51.\nIn the second case, the total number of distinct photobooks is 76.\n\n\n-----Analysis-----", "print(26**2+1)\n\n\nThis code will print the number of distinct photobooks Kyoya Ootori can make. The formula is `(26^2)+1` because there are 26 letters and each letter can be inserted at any position in the string, so 26 positions are available for each letter. The `+1` is for the case where no letters are inserted, giving 26 distinct photobooks.\n\nThis code is written in Python language.\n\n\nThis problem is a combination of combinatorics and string manipulation. The string can be inserted into any position, so the total number of permutations is `"], "prompt": "\nQUESTION:\nKyoya Ootori is selling photobooks of the Ouran High School Host Club. He has 26 photos, labeled \"a\" to \"z\", and he has compiled them into a photo booklet with some photos in some order (possibly with some photos being duplicated). A photo booklet can be described as a string of lowercase letters, consisting of the photos in the booklet in order. He now wants to sell some \"special edition\" photobooks, each with one extra photo inserted anywhere in the book. He wants to make as many distinct photobooks as possible, so he can make more money. He asks Haruhi, how many distinct photobooks can he make by inserting one extra photo into the photobook he already has?\n\nPlease help Haruhi solve this problem.\n\n\n-----Input-----\n\nThe first line of input will be a single string s (1 \u2264 |s| \u2264 20). String s consists only of lowercase English letters. \n\n\n-----Output-----\n\nOutput a single integer equal to the number of distinct photobooks Kyoya Ootori can make.\n\n\n-----Examples-----\nInput\na\n\nOutput\n51\n\nInput\nhi\n\nOutput\n76\n\n\n\n-----Note-----\n\nIn the first case, we can make 'ab','ac',...,'az','ba','ca',...,'za', and 'aa', producing a total of 51 distinct photo booklets.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}