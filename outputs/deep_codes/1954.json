{"1954": {"code": ["MOD", "MOD", "def", "MOD", "MOD"], "prompt": "\nQUESTION:\nToday is Devu's birthday. For celebrating the occasion, he bought n sweets from the nearby market. He has invited his f friends. He would like to distribute the sweets among them. As he is a nice guy and the occasion is great, he doesn't want any friend to be sad, so he would ensure to give at least one sweet to each friend. \n\nHe wants to celebrate it in a unique style, so he would like to ensure following condition for the distribution of sweets. Assume that he has distributed n sweets to his friends such that i^{th} friend is given a_{i} sweets. He wants to make sure that there should not be any positive integer x > 1, which divides every a_{i}.\n\nPlease find the number of ways he can distribute sweets to his friends in the required way. Note that the order of distribution is important, for example [1, 2] and [2, 1] are distinct distributions. As the answer could be very large, output answer modulo 1000000007 (10^9 + 7).\n\nTo make the problem more interesting, you are given q queries. Each query contains an n, f pair. For each query please output the required number of ways modulo 1000000007 (10^9 + 7).\n\n\n-----Input-----\n\nThe first line contains an integer q representing the number of queries (1 \u2264 q \u2264 10^5). Each of the next q lines contains two space space-separated integers n, f (1 \u2264 f \u2264 n \u2264 10^5).\n\n\n-----Output-----\n\nFor each query, output a single integer in a line corresponding to the answer of each query.\n\n\n-----Examples-----\nInput\n5\n6 2\n7 2\n6 3\n6 4\n7 4\n\nOutput\n2\n6\n9\n10\n20\n\n\n\n-----Note-----\n\nFor first query: n = 6, f = 2. Possible partitions are [1, 5] and [5, 1].\n\nFor second query: n = 7, f = 2. Possible partitions are [1, 6] and [2, 5] and [3, 4] and [4, 3] and [5, 3] and [6, 1]. So in total there are 6 possible ways of partitioning.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}