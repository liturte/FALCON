{"879": {"code": ["def find_path(n, parent):\n    path = [n]\n    while parent[n] != 0:\n        n = parent[n]\n        path.append(n)\n    return path[::-1]\n\nn = int(input())\nparent = [0] + list(map(int, input().split()))\nprint(*find_path(n, parent))\n\n\nExplanation:\nThis Python solution uses a recursive", "def find_path(n, p):\n    path = [0] * n\n    for i in range(n-1, -1, -1):\n        if i == n-1 or p[i] > p[i+1]:\n            path[i] = i+1\n        else:\n            path[i] = path[i+1]\n    return path\n\nn = int(input().strip())\np = list(map(int", "def trace_path(n, p):\n    path = [0] * n\n    for i in range(n - 1, -1, -1):\n        path[i] = i + 1\n        if i > 0:\n            path[i] = max(path[i], path[p[i] - 1])\n    return path\n\nn = int(input())\np = list(map(int, input().split()))\nprint(*", "def find_path(n, p):\n    path = [n]\n    while n > 1:\n        n = p[n-2]\n        path.append(n)\n    return path[::-1]\n\nn = int(input())\np = list(map(int, input().split()))\nprint(*find_path(n, p))\n\n\nThis code takes the number of routers and the list of connections as input, and then", "def trace_path(n, p):\n    path = [n]\n    while n != 1:\n        n = p[n-2]\n        path.append(n)\n    return path[::-1]\n\nn = int(input())\np = list(map(int, input().split()))\nprint(' '.join(map(str, trace_path(n, p))))\n\n\nThis code works by following the connections backwards from"], "prompt": "\nQUESTION:\nOnce upon a time there was only one router in the well-known company Bmail. Years went by and over time new routers were purchased. Every time they bought a new router, they connected it to one of the routers bought before it. You are given the values $p_i$ \u2014 the index of the router to which the $i$-th router was connected after being purchased ($p_i < i$).\n\nThere are $n$ routers in Boogle in total now. Print the sequence of routers on the path from the first to the $n$-th router.\n\n\n-----Input-----\n\nThe first line contains integer number $n$ ($2 \\le n \\le 200000$) \u2014 the number of the routers. The following line contains $n-1$ integers $p_2, p_3, \\dots, p_n$ ($1 \\le p_i < i$), where $p_i$ is equal to index of the router to which the $i$-th was connected after purchase.\n\n\n-----Output-----\n\nPrint the path from the $1$-st to the $n$-th router. It starts with $1$ and ends with $n$. All the elements in the path should be distinct.\n\n\n-----Examples-----\nInput\n8\n1 1 2 2 3 2 5\n\nOutput\n1 2 5 8 \nInput\n6\n1 2 3 4 5\n\nOutput\n1 2 3 4 5 6 \nInput\n7\n1 1 2 3 4 3\n\nOutput\n1 3 7\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}