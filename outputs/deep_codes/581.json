{"581": {"code": ["import", "import", "from", "import", "from"], "prompt": "\nQUESTION:\nYou are given an unweighted tree with n vertices. Then n - 1 following operations are applied to the tree. A single operation consists of the following steps:   choose two leaves;  add the length of the simple path between them to the answer;  remove one of the chosen leaves from the tree. \n\nInitial answer (before applying operations) is 0. Obviously after n - 1 such operations the tree will consist of a single vertex. \n\nCalculate the maximal possible answer you can achieve, and construct a sequence of operations that allows you to achieve this answer!\n\n\n-----Input-----\n\nThe first line contains one integer number n (2 \u2264 n \u2264 2\u00b710^5) \u2014 the number of vertices in the tree. \n\nNext n - 1 lines describe the edges of the tree in form a_{i}, b_{i} (1 \u2264 a_{i}, b_{i} \u2264 n, a_{i} \u2260 b_{i}). It is guaranteed that given graph is a tree.\n\n\n-----Output-----\n\nIn the first line print one integer number \u2014 maximal possible answer. \n\nIn the next n - 1 lines print the operations in order of their applying in format a_{i}, b_{i}, c_{i}, where a_{i}, b_{i} \u2014 pair of the leaves that are chosen in the current operation (1 \u2264 a_{i}, b_{i} \u2264 n), c_{i} (1 \u2264 c_{i} \u2264 n, c_{i} = a_{i} or c_{i} = b_{i}) \u2014 choosen leaf that is removed from the tree in the current operation. \n\nSee the examples for better understanding.\n\n\n-----Examples-----\nInput\n3\n1 2\n1 3\n\nOutput\n3\n2 3 3\n2 1 1\n\nInput\n5\n1 2\n1 3\n2 4\n2 5\n\nOutput\n9\n3 5 5\n4 3 3\n4 1 1\n4 2 2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}