{"2782": {"code": ["QUESTION:\nAn airline called Divided Airlines has recently made the news due to their tendency to overbook their flights rather aggressively. For some flights, they even resorted to dragging passengers out from the plane! This was of course not very popular, so they decided to \u201cresolve\u201d the issue by making the seating assignments very chaotic (airlines do like unnecessary complexity). \n\nA particular flights has $n$ passengers. The seats are divided into $r$ rows each containing $c$ seats. Every passenger $i$ is assigned to some particular seat located at row $a_ i$ and column $b_ i$. However, some passengers may be assigned to the same seat.\n\nOf course, passengers are usually okay with sitting somewhere else than their assigned seat, but they may still want to be somewhat close to their original seat. Perhaps they want to be able to speak to their friends, or sit close to their overhead luggage. More specifically, passenger $i$ accepts sitting at most $s_ i$ rows away from the row on their ticket.\n\nDue to budget reasons, you decided to travel on a Divided flight. As expected, all the passengers assigned to an overbooked seat started to fight with each other, moving around in complex ways and causing a long delay. You proposed a fair resolution: you will construct a seat assignment which takes into account how far the passengers accepts to sit from their assigned seats so that as many passengers as possible get a seat. Now, all that remains is to actually find this assignment.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$, $r$ and $c$ ($1 \\le n, r, c \\le 10^5$), the number of passengers, rows and columns in the flight.\n - $n$ lines with the integers $a_ i, b_ i$ and $s_ i$ ($1 \\le a_ i \\le r$, $1 \\le b_ i \\le c$, $0 \\le s_ i \\le r$). The $i$\u2019th line has the assigned row $a_ i$ and column $b_ i$, and maximum distance $s_ i$ of the $i$\u2019th passenger. The maximum distance is given in rows.\n\n-----Output-----\nOutput the maximum number of passengers that can be assigned a seat in an optimal assignment.\n\n-----Examples-----\nSample Input 1:\n3 2 1\n1 1 0\n1 1 1\n2 1 0\nSample Output 1:\n2\n\nSample Input 2:\n3 3 1\n1 1 0\n1 1 1\n1 1 2\nSample Output 2:", "QUESTION:\nAn airline called Divided Airlines has recently made the news due to their tendency to overbook their flights rather aggressively. For some flights, they even resorted to dragging passengers out from the plane! This was of course not very popular, so they decided to \u201cresolve\u201d the issue by making the seating assignments very chaotic (airlines do like unnecessary complexity). \n\nA particular flights has $n$ passengers. The seats are divided into $r$ rows each containing $c$ seats. Every passenger $i$ is assigned to some particular seat located at row $a_ i$ and column $b_ i$. However, some passengers may be assigned to the same seat.\n\nOf course, passengers are usually okay with sitting somewhere else than their assigned seat, but they may still want to be somewhat close to their original seat. Perhaps they want to be able to speak to their friends, or sit close to their overhead luggage. More specifically, passenger $i$ accepts sitting at most $s_ i$ rows away from the row on their ticket.\n\nDue to budget reasons, you decided to travel on a Divided flight. As expected, all the passengers assigned to an overbooked seat started to fight with each other, moving around in complex ways and causing a long delay. You proposed a fair resolution: you will construct a seat assignment which takes into account how far the passengers accepts to sit from their assigned seats so that as many passengers as possible get a seat. Now, all that remains is to actually find this assignment.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$, $r$ and $c$ ($1 \\le n, r, c \\le 10^5$), the number of passengers, rows and columns in the flight.\n - $n$ lines with the integers $a_ i, b_ i$ and $s_ i$ ($1 \\le a_ i \\le r$, $1 \\le b_ i \\le c$, $0 \\le s_ i \\le r$). The $i$\u2019th line has the assigned row $a_ i$ and column $b_ i$, and maximum distance $s_ i$ of the $i$\u2019th passenger. The maximum distance is given in rows.\n\n-----Output-----\nOutput the maximum number of passengers that can be assigned a seat in an optimal assignment.\n\n-----Examples-----\nSample Input 1:\n3 2 1\n1 1 0\n1 1 1\n2 1 0\nSample Output 1:\n2\n\nSample Input 2:\n3 3 1\n1 1 0\n1 1 1\n1 1 2\nSample Output 2:", "QUESTION:\nAn airline called Divided Airlines has recently made the news due to their tendency to overbook their flights rather aggressively. For some flights, they even resorted to dragging passengers out from the plane! This was of course not very popular, so they decided to \u201cresolve\u201d the issue by making the seating assignments very chaotic (airlines do like unnecessary complexity). \n\nA particular flights has $n$ passengers. The seats are divided into $r$ rows each containing $c$ seats. Every passenger $i$ is assigned to some particular seat located at row $a_ i$ and column $b_ i$. However, some passengers may be assigned to the same seat.\n\nOf course, passengers are usually okay with sitting somewhere else than their assigned seat, but they may still want to be somewhat close to their original seat. Perhaps they want to be able to speak to their friends, or sit close to their overhead luggage. More specifically, passenger $i$ accepts sitting at most $s_ i$ rows away from the row on their ticket.\n\nDue to budget reasons, you decided to travel on a Divided flight. As expected, all the passengers assigned to an overbooked seat started to fight with each other, moving around in complex ways and causing a long delay. You proposed a fair resolution: you will construct a seat assignment which takes into account how far the passengers accepts to sit from their assigned seats so that as many passengers as possible get a seat. Now, all that remains is to actually find this assignment.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$, $r$ and $c$ ($1 \\le n, r, c \\le 10^5$), the number of passengers, rows and columns in the flight.\n - $n$ lines with the integers $a_ i, b_ i$ and $s_ i$ ($1 \\le a_ i \\le r$, $1 \\le b_ i \\le c$, $0 \\le s_ i \\le r$). The $i$\u2019th line has the assigned row $a_ i$ and column $b_ i$, and maximum distance $s_ i$ of the $i$\u2019th passenger. The maximum distance is given in rows.\n\n-----Output-----\nOutput the maximum number of passengers that can be assigned a seat in an optimal assignment.\n\n-----Examples-----\nSample Input 1:\n3 2 1\n1 1 0\n1 1 1\n2 1 0\nSample Output 1:\n2\n\nSample Input 2:\n3 3 1\n1 1 0\n1 1 1\n1 1 2\nSample Output 2:", "QUESTION:\nAn airline called Divided Airlines has recently made the news due to their tendency to overbook their flights rather aggressively. For some flights, they even resorted to dragging passengers out from the plane! This was of course not very popular, so they decided to \u201cresolve\u201d the issue by making the seating assignments very chaotic (airlines do like unnecessary complexity). \n\nA particular flights has $n$ passengers. The seats are divided into $r$ rows each containing $c$ seats. Every passenger $i$ is assigned to some particular seat located at row $a_ i$ and column $b_ i$. However, some passengers may be assigned to the same seat.\n\nOf course, passengers are usually okay with sitting somewhere else than their assigned seat, but they may still want to be somewhat close to their original seat. Perhaps they want to be able to speak to their friends, or sit close to their overhead luggage. More specifically, passenger $i$ accepts sitting at most $s_ i$ rows away from the row on their ticket.\n\nDue to budget reasons, you decided to travel on a Divided flight. As expected, all the passengers assigned to an overbooked seat started to fight with each other, moving around in complex ways and causing a long delay. You proposed a fair resolution: you will construct a seat assignment which takes into account how far the passengers accepts to sit from their assigned seats so that as many passengers as possible get a seat. Now, all that remains is to actually find this assignment.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$, $r$ and $c$ ($1 \\le n, r, c \\le 10^5$), the number of passengers, rows and columns in the flight.\n - $n$ lines with the integers $a_ i, b_ i$ and $s_ i$ ($1 \\le a_ i \\le r$, $1 \\le b_ i \\le c$, $0 \\le s_ i \\le r$). The $i$\u2019th line has the assigned row $a_ i$ and column $b_ i$, and maximum distance $s_ i$ of the $i$\u2019th passenger. The maximum distance is given in rows.\n\n-----Output-----\nOutput the maximum number of passengers that can be assigned a seat in an optimal assignment.\n\n-----Examples-----\nSample Input 1:\n3 2 1\n1 1 0\n1 1 1\n2 1 0\nSample Output 1:\n2\n\nSample Input 2:\n3 3 1\n1 1 0\n1 1 1\n1 1 2\nSample Output 2:", "QUESTION:\nAn airline called Divided Airlines has recently made the news due to their tendency to overbook their flights rather aggressively. For some flights, they even resorted to dragging passengers out from the plane! This was of course not very popular, so they decided to \u201cresolve\u201d the issue by making the seating assignments very chaotic (airlines do like unnecessary complexity). \n\nA particular flights has $n$ passengers. The seats are divided into $r$ rows each containing $c$ seats. Every passenger $i$ is assigned to some particular seat located at row $a_ i$ and column $b_ i$. However, some passengers may be assigned to the same seat.\n\nOf course, passengers are usually okay with sitting somewhere else than their assigned seat, but they may still want to be somewhat close to their original seat. Perhaps they want to be able to speak to their friends, or sit close to their overhead luggage. More specifically, passenger $i$ accepts sitting at most $s_ i$ rows away from the row on their ticket.\n\nDue to budget reasons, you decided to travel on a Divided flight. As expected, all the passengers assigned to an overbooked seat started to fight with each other, moving around in complex ways and causing a long delay. You proposed a fair resolution: you will construct a seat assignment which takes into account how far the passengers accepts to sit from their assigned seats so that as many passengers as possible get a seat. Now, all that remains is to actually find this assignment.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$, $r$ and $c$ ($1 \\le n, r, c \\le 10^5$), the number of passengers, rows and columns in the flight.\n - $n$ lines with the integers $a_ i, b_ i$ and $s_ i$ ($1 \\le a_ i \\le r$, $1 \\le b_ i \\le c$, $0 \\le s_ i \\le r$). The $i$\u2019th line has the assigned row $a_ i$ and column $b_ i$, and maximum distance $s_ i$ of the $i$\u2019th passenger. The maximum distance is given in rows.\n\n-----Output-----\nOutput the maximum number of passengers that can be assigned a seat in an optimal assignment.\n\n-----Examples-----\nSample Input 1:\n3 2 1\n1 1 0\n1 1 1\n2 1 0\nSample Output 1:\n2\n\nSample Input 2:\n3 3 1\n1 1 0\n1 1 1\n1 1 2\nSample Output 2:"], "prompt": "\nQUESTION:\nAn airline called Divided Airlines has recently made the news due to their tendency to overbook their flights rather aggressively. For some flights, they even resorted to dragging passengers out from the plane! This was of course not very popular, so they decided to \u201cresolve\u201d the issue by making the seating assignments very chaotic (airlines do like unnecessary complexity). \n\nA particular flights has $n$ passengers. The seats are divided into $r$ rows each containing $c$ seats. Every passenger $i$ is assigned to some particular seat located at row $a_ i$ and column $b_ i$. However, some passengers may be assigned to the same seat.\n\nOf course, passengers are usually okay with sitting somewhere else than their assigned seat, but they may still want to be somewhat close to their original seat. Perhaps they want to be able to speak to their friends, or sit close to their overhead luggage. More specifically, passenger $i$ accepts sitting at most $s_ i$ rows away from the row on their ticket.\n\nDue to budget reasons, you decided to travel on a Divided flight. As expected, all the passengers assigned to an overbooked seat started to fight with each other, moving around in complex ways and causing a long delay. You proposed a fair resolution: you will construct a seat assignment which takes into account how far the passengers accepts to sit from their assigned seats so that as many passengers as possible get a seat. Now, all that remains is to actually find this assignment.\n\n-----Input-----\nThe input consists of:\n - one line with the integers $n$, $r$ and $c$ ($1 \\le n, r, c \\le 10^5$), the number of passengers, rows and columns in the flight.\n - $n$ lines with the integers $a_ i, b_ i$ and $s_ i$ ($1 \\le a_ i \\le r$, $1 \\le b_ i \\le c$, $0 \\le s_ i \\le r$). The $i$\u2019th line has the assigned row $a_ i$ and column $b_ i$, and maximum distance $s_ i$ of the $i$\u2019th passenger. The maximum distance is given in rows.\n\n-----Output-----\nOutput the maximum number of passengers that can be assigned a seat in an optimal assignment.\n\n-----Examples-----\nSample Input 1:\n3 2 1\n1 1 0\n1 1 1\n2 1 0\nSample Output 1:\n2\n\nSample Input 2:\n3 3 1\n1 1 0\n1 1 1\n1 1 2\nSample Output 2:\n3\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}