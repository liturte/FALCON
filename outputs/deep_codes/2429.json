{"2429": {"code": ["def min_difference(n):\n    coins = [2**i for i in range(1, n+1)]\n    total_weight = sum(coins)\n    half_weight = total_weight // 2\n    dp = [0] * (half_weight + 1)\n    for coin", "from itertools import combinations\n\ndef min_difference(n, coins):\n    min_diff = float('inf')\n    for c in combinations(coins, n//2):\n        pile1 = list(c)\n        pile2 = [coin for coin in coins if coin not in pile1]", "def min_weight_difference(n):\n    weights = [2**i for i in range(1, n+1)]\n    half = n // 2\n    dp = [0] * (half + 1)\n    for weight in weights:\n        for i in range(half, weight -", "def min_difference(n):\n    coins = [2**i for i in range(1, n+1)]\n    half = n // 2\n    dp = [[0]*(half+1) for _ in range(half+1)]\n    total = sum(coins)\n    for i", "def min_difference(n):\n    coins = [2**i for i in range(1, n+1)]\n    total_weight = sum(coins)\n    half_weight = total_weight // 2\n    dp = [0]*(half_weight+1)\n    for coin in"], "prompt": "\nQUESTION:\nPhoenix has $n$ coins with weights $2^1, 2^2, \\dots, 2^n$. He knows that $n$ is even.\n\nHe wants to split the coins into two piles such that each pile has exactly $\\frac{n}{2}$ coins and the difference of weights between the two piles is minimized. Formally, let $a$ denote the sum of weights in the first pile, and $b$ denote the sum of weights in the second pile. Help Phoenix minimize $|a-b|$, the absolute value of $a-b$.\n\n\n-----Input-----\n\nThe input consists of multiple test cases. The first line contains an integer $t$ ($1 \\le t \\le 100$)\u00a0\u2014 the number of test cases.\n\nThe first line of each test case contains an integer $n$ ($2 \\le n \\le 30$; $n$ is even)\u00a0\u2014 the number of coins that Phoenix has. \n\n\n-----Output-----\n\nFor each test case, output one integer\u00a0\u2014 the minimum possible difference of weights between the two piles.\n\n\n-----Example-----\nInput\n2\n2\n4\n\nOutput\n2\n6\n\n\n\n-----Note-----\n\nIn the first test case, Phoenix has two coins with weights $2$ and $4$. No matter how he divides the coins, the difference will be $4-2=2$.\n\nIn the second test case, Phoenix has four coins of weight $2$, $4$, $8$, and $16$. It is optimal for Phoenix to place coins with weights $2$ and $16$ in one pile, and coins with weights $4$ and $8$ in another pile. The difference is $(2+16)-(4+8)=6$.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}