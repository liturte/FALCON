{"850": {"code": ["def solve():\n    k = int(input())\n    numbers = list(map(int, input().split()))\n\n    numbers.sort(reverse=True)\n\n    chosen = [numbers[0]]\n    for num in numbers[1:]:\n        if all(int(str(num)[i]) <= int(str(chosen[0])[i]) for i in range(max(len(str(num)), len(str(chosen[0]))))):\n            chosen.append(num)\n\n    print(len(chosen))\n    print(' '.join(map(str, chosen)))\n\nsolve()", "def solve():\n    k = int(input())\n    nums = list(map(int, input().split()))\n    nums.sort(reverse=True)\n    res = [nums[0]]\n    for i in range(1, k):\n        if str(nums[i])[0] == '0' or str(nums[i-1])[0] == '0':\n            res.append(nums[i])\n        else:\n            res[0] += nums[i]\n    print(len(res))\n    print(' '.join(map(str, res)))\n\nsolve()", "def solve():\n    k = int(input())\n    numbers = list(map(int, input().split()))\n    numbers.sort()\n    result = []\n    for i in range(k-1, -1, -1):\n        if numbers[i] != 0:\n            result.append(numbers[i])\n            numbers[i] = 0\n            for j in range(i-1, -1, -1):\n                if numbers[j] != 0:\n                    result.append(numbers[j])\n                    numbers[j] = 0\n                    break\n    print(len(result))\n    print(' '.", "k = int(input())\nd = list(map(int, input().split()))\n\nd.sort(reverse=True)\nprint(2)\nprint(d[0], d[1])\n\n\nThis solution works by sorting the input list in descending order. The maximum number of integers that can be chosen is 2, as any two numbers from the sorted list can be summed together without violating the condition that at least one digit is 0. The two chosen numbers are the largest two numbers in the list.", "def solve(k, d):\n    d.sort(reverse=True)\n    res = []\n    for i in d:\n        if i == 0:\n            res.append(i)\n            break\n        else:\n            res.append(i)\n            for j in range(len(res)-1, -1, -1):\n                if res[j] >= 10:\n                    if res[j] - res[j]%10 >= 10:\n                        res[j] -= res[j]%10\n                        if len(res) < k:\n                            res.append(res[j]//1"], "prompt": "\nQUESTION:\nUnfortunately, Vasya can only sum pairs of integers (a, b), such that for any decimal place at least one number has digit 0 in this place. For example, Vasya can sum numbers 505 and 50, but he cannot sum 1 and 4.\n\nVasya has a set of k distinct non-negative integers d_1, d_2, ..., d_{k}.\n\nVasya wants to choose some integers from this set so that he could sum any two chosen numbers. What maximal number of integers can he choose in the required manner?\n\n\n-----Input-----\n\nThe first input line contains integer k (1 \u2264 k \u2264 100) \u2014 the number of integers.\n\nThe second line contains k distinct space-separated integers d_1, d_2, ..., d_{k} (0 \u2264 d_{i} \u2264 100).\n\n\n-----Output-----\n\nIn the first line print a single integer n the maximum number of the chosen integers. In the second line print n distinct non-negative integers \u2014 the required integers.\n\nIf there are multiple solutions, print any of them. You can print the numbers in any order.\n\n\n-----Examples-----\nInput\n4\n100 10 1 0\n\nOutput\n4\n0 1 10 100 \nInput\n3\n2 70 3\n\nOutput\n2\n2 70\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}