{"326": {"code": ["from collections import defaultdict\nfrom itertools import combinations\n\ndef solve():\n    N = int(input())\n    costs = []\n    for _ in range(N):\n        S", "from collections import defaultdict\nfrom sys import stdin\n\ndef read_int():\n    return int(stdin.readline())\n\ndef read_ints():\n    return list(", "import sys\nfrom collections import defaultdict\nfrom itertools import combinations\n\ndef main():\n    N = int(input())\n    strings = []\n    costs = []\n    for _", "from sys import stdin\nfrom collections import defaultdict\nfrom itertools import combinations\n\ndef solve():\n    n = int(stdin.readline())\n    s = [0]", "import sys\nfrom collections import defaultdict\nfrom itertools import combinations\n\ndef min_palindrome_cost(strings):\n    N = len(strings)\n    dp = [["], "prompt": "\nQUESTION:\nWe have N strings of lowercase English letters: S_1, S_2, \\cdots, S_N.\nTakahashi wants to make a string that is a palindrome by choosing one or more of these strings - the same string can be chosen more than once - and concatenating them in some order of his choice.\nThe cost of using the string S_i once is C_i, and the cost of using it multiple times is C_i multiplied by that number of times.\nFind the minimum total cost needed to choose strings so that Takahashi can make a palindrome.\nIf there is no choice of strings in which he can make a palindrome, print -1.\n\n-----Constraints-----\n - 1 \\leq N \\leq 50\n - 1 \\leq |S_i| \\leq 20\n - S_i consists of lowercase English letters.\n - 1 \\leq C_i \\leq 10^9\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nS_1 C_1\nS_2 C_2\n:\nS_N C_N\n\n-----Output-----\nPrint the minimum total cost needed to choose strings so that Takahashi can make a palindrome, or -1 if there is no such choice.\n\n-----Sample Input-----\n3\nba 3\nabc 4\ncbaa 5\n\n-----Sample Output-----\n7\n\nWe have ba, abc, and cbaa.\nFor example, we can use ba once and abc once for a cost of 7, then concatenate them in the order abc, ba to make a palindrome.\nAlso, we can use abc once and cbaa once for a cost of 9, then concatenate them in the order cbaa, abc to make a palindrome.\nWe cannot make a palindrome for a cost less than 7, so we should print 7.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}