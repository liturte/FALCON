{"4200": {"code": ["N, M = map(int, input().split())\nA = sorted(map(int, input().split()), reverse=True)\n\nif A[M-1] > sum(A[M:]) / (4*M):\n    print('Yes')\nelse:\n\n    print('No')\n\n\nThis code takes the input from the user and sorts the votes in descending order. It then checks if the Mth most popular item has more votes than the sum of votes for the M least popular items divided by 4M. If it is, then M popular items can be selected and \"Yes\" is printed. Otherwise, \"No\" is printed.\n\nNote: The sum(A[M:]) / (4*M) is the total number of votes required for the M least popular items to be less popular than the Mth most popular item.\n\nPlease note that this solution assumes that the input is valid as per the constraints given in the problem.\n\nAlso, the code does not handle any exceptions, so if the input is not in the correct format or out of the constraints, it may not work as expected.\n\nThis", "N, M = map(int, input().split())\nA = sorted(list(map(int, input().split())), reverse=True)\ntotal_votes = sum(A)\n\nif A[M-1] > total_votes / (4*M):\n    print('Yes')\nelse:\n    print('No')\n\n\nThis solution works by first sorting the list of votes in descending order. Then it checks if the Mth largest vote is greater than the number of votes required to select at least one item. If it is, it prints 'Yes'; otherwise, it prints 'No'.\n\nThis solution assumes that the input is always valid according to the problem constraints. If it's possible that the input might not be valid, you should add error checking to handle that case.\n\nAlso, please note that this solution assumes that the items are numbered 1 to N in the order of their votes (i.e., A[i] is the number of votes for item i+1). If this is not the case, you will need to adjust the solution accordingly.", "N, M = map(int, input().split())\nvotes = list(map(int, input().split()))\n\ntotal_votes = sum(votes)\nmin_votes = total_votes // (4 * M)\n\nif max(votes) <= min_votes:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n\nThis solution works by first calculating the total number of votes and the minimum number of votes required for any item to be selected. It then checks if any item has more votes than the minimum required. If it does, it prints \"Yes\"; otherwise, it prints \"No\".\n\nThe time complexity of this solution is O(N), where N is the number of items. This is because it needs to iterate over all the items once to calculate the total number of votes and the minimum number of votes required. The space complexity is O(N), as it stores the votes for all the items.\n\nNote: This solution assumes that the items are numbered from 1 to N and the votes for each item are given in the order of the numbers. If this is not the case,", "N, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ntotal_votes = sum(A)\nmin_votes = total_votes // (4 * M)\n\nif max(A) >= min_votes:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\nThis code first reads the input values for N, M, and A. It then calculates the minimum number of votes required for an item to be selected by dividing the total number of votes by 4M. If the maximum value in A (the maximum number of votes among the items) is greater than or equal to this minimum number of votes, it prints \"Yes\". Otherwise, it prints \"No\".\n\nThe code assumes that the input values are all integers and that they meet the given constraints.\n\nAlso, the code doesn't handle the case where the number of items is less than the number of popular items to be selected (M). The problem statement guarantees that M <= N.", "N, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nA.sort(reverse=True)\n\nif A[M-1] > sum(A) / (4 * M):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n\n\nThis code first sorts the list of votes in descending order. Then it checks if the Mth largest vote is greater than the average number of votes divided by 4M. If it is, it prints \"No\" because we cannot select an item with less than 1/4M of the total votes. Otherwise, it prints \"Yes\".\n\nPlease note that this code assumes that the input is always valid, i.e., that the number of items N and the number of popular items M are within the specified range, that the number of votes for each item A_i is within the specified range, and that the votes for each item are distinct.\n\nAlso note that this code assumes that the items are numbered starting from 1 and that the most popular item is the one with the highest number of votes."], "prompt": "\nQUESTION:\nWe have held a popularity poll for N items on sale. Item i received A_i votes.\nFrom these N items, we will select M as popular items. However, we cannot select an item with less than \\dfrac{1}{4M} of the total number of votes.\nIf M popular items can be selected, print Yes; otherwise, print No.\n\n-----Constraints-----\n - 1 \\leq M \\leq N \\leq 100\n - 1 \\leq A_i \\leq 1000\n - A_i are distinct.\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\nA_1 ... A_N\n\n-----Output-----\nIf M popular items can be selected, print Yes; otherwise, print No.\n\n-----Sample Input-----\n4 1\n5 4 2 1\n\n-----Sample Output-----\nYes\n\nThere were 12 votes in total. The most popular item received 5 votes, and we can select it.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}