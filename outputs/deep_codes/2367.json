{"2367": {"code": ["MOD = 10**9+7\nH, W, A, B = map(int, input().split())\n\ndef powmod(a, b):\n    r = 1\n    while b > 0:\n        if b & 1:\n            r = r * a % MOD\n        a = a * a % MOD\n        b >>= 1\n    return r\n\ndef comb(n, r):\n    if n < r:\n        return 0\n    return fact[n] * powmod(fact[r], MOD - 2) % MOD * powmod(fact[n - r], MOD - 2) % MOD\n\nfact = [1] * (H*W + 1)\nfor i in range(1, H*W", "H, W, A, B = map(int, input().split())\nMOD = 10**9+7\n\nfact = [0]*(H+W+2)\nfactinv = [0]*(H+W+2)\nfact[0] = factinv[0] = 1\n\nfor i in range(1, H+W+2):\n    fact[i] = (fact[i-1]*i)%MOD\n    factinv[i] = factinv[i-1]*pow(i, MOD-2, MOD)\n\ndef comb(n, k):\n    return fact[n]*factinv[k]*factinv[n-k]%MOD\n\nprint((comb(H+W-2, H-1", "MOD = 10**9 + 7\nH, W, A, B = map(int, input().split())\n\nfac = [0] * (H+W+1)\ninv = [0] * (H+W+1)\n\nfac[0] = inv[0] = 1\nfor i in range(1, H+W+1):\n    fac[i] = (i * fac[i-1]) % MOD\n    inv[i] = pow(fac[i], MOD-2, MOD)\n\ndef nCr(n, r):\n    if n < r or r < 0:\n        return 0\n    return (fac[n] * inv[r] % MOD) * inv[n-r] % MOD", "def solve(H, W, A, B):\n    MOD = 10**9+7\n    fact = [1]*(H+W+1)\n    inv = [1]*(H+W+1)\n    for i in range(1, H+W+1):\n        fact[i] = (fact[i-1]*i)%MOD\n        inv[i] = pow(fact[i], MOD-2, MOD)\n    def comb(n, r):\n        if r < 0 or n < r:\n            return 0\n        return (fact[n]*inv[r]*inv[n-r])%MOD\n    return (comb(H+W-2, H-1)*comb(H+W-A", "MOD = 10**9 + 7\n\ndef powmod(a, b):\n    if b == 0:\n        return 1\n    if b % 2 == 0:\n        return powmod((a*a) % MOD, b // 2)\n    return (a * powmod((a*a) % MOD, b // 2)) % MOD\n\ndef solve(H, W, A, B):\n    fact = [0]*(H+W+1)\n    factinv = [0]*(H+W+1)\n    fact[0] = factinv[0] = 1\n    for i in range(1, H+W+1):\n        fact[i] = (fact[i-1] * i) % MOD"], "prompt": "\nQUESTION:\nWe have a large square grid with H rows and W columns.\nIroha is now standing in the top-left cell.\nShe will repeat going right or down to the adjacent cell, until she reaches the bottom-right cell.\nHowever, she cannot enter the cells in the intersection of the bottom A rows and the leftmost B columns. (That is, there are A\u00d7B forbidden cells.) There is no restriction on entering the other cells.\nFind the number of ways she can travel to the bottom-right cell.\nSince this number can be extremely large, print the number modulo 10^9+7.\n\n-----Constraints-----\n -  1 \u2266 H, W \u2266 100,000\n -  1 \u2266 A < H\n -  1 \u2266 B < W\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nH W A B\n\n-----Output-----\nPrint the number of ways she can travel to the bottom-right cell, modulo 10^9+7.\n\n-----Sample Input-----\n2 3 1 1\n\n-----Sample Output-----\n2\n\nWe have a 2\u00d73 grid, but entering the bottom-left cell is forbidden. The number of ways to travel is two: \"Right, Right, Down\" and \"Right, Down, Right\".\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}