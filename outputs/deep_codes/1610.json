{"1610": {"code": ["def solve(n, k):\n    if k == 0:\n        return list(range(1, n+1))\n    if n == 1:\n        return [1]\n    if k >= n-1:\n        return [-1]\n    res = [0] * n\n    res[0] = n\n    res[1] = 1\n    for i in range(2, n):\n        if k > (n-i)*(i-1):\n            res[i] = i+1", "n, k = map(int, input().split())\n\nif k == 0:\n    print(*range(1, n+1))\nelse:\n    ans = list(range(1, n-k+1)) + list(range(n-k+1, 0, -1))\n    print(*ans)\n\nIn this code, we first check if the decreasing coefficient is 0. If it is, we simply print the numbers from 1 to n in ascending order.\n\nIf the decreasing", "n, k = map(int, input().split())\nif k >= n:\n    print(-1)\nelse:\n    p = [i for i in range(1, n-k+1)]\n    for i in range(n-k, n):\n        p.append(p[i-1]+1)\n    print(' '.join(map(str, p)))\n\n\nThis solution works by first checking if k is greater than or equal to n. If it is, we know that no permut", "n, k = map(int, input().split())\np = list(range(1, n + 1))\n\nif k >= n:\n    print(*p)\nelse:\n    p[k], p[k + 1] = p[k + 1], p[k]\n    print(*p[1:])\n\n\nThis code works by first checking if k is greater than or equal to n. If it is, the code simply prints the numbers 1 through n. If k is less than n, the", "n, k = map(int, input().split())\nif k == 0:\n    print(*range(1, n+1))\nelse:\n    p = [0]*n\n    p[0:k+1] = list(range(1, k+2))[::-1]\n    p[k+1:] = list(range(k+2, n+1))\n    print(*p)\n\n\nThis solution works by first checking if the decreasing coefficient is zero. If it is,"], "prompt": "\nQUESTION:\nPermutation p is an ordered set of integers p_1,  p_2,  ...,  p_{n}, consisting of n distinct positive integers, each of them doesn't exceed n. We'll denote the i-th element of permutation p as p_{i}. We'll call number n the size or the length of permutation p_1,  p_2,  ...,  p_{n}.\n\nThe decreasing coefficient of permutation p_1, p_2, ..., p_{n} is the number of such i (1 \u2264 i < n), that p_{i} > p_{i} + 1.\n\nYou have numbers n and k. Your task is to print the permutation of length n with decreasing coefficient k.\n\n\n-----Input-----\n\nThe single line contains two space-separated integers: n, k (1 \u2264 n \u2264 10^5, 0 \u2264 k < n) \u2014 the permutation length and the decreasing coefficient.\n\n\n-----Output-----\n\nIn a single line print n space-separated integers: p_1, p_2, ..., p_{n} \u2014 the permutation of length n with decreasing coefficient k. \n\nIf there are several permutations that meet this condition, print any of them. It is guaranteed that the permutation with the sought parameters exists.\n\n\n-----Examples-----\nInput\n5 2\n\nOutput\n1 5 2 4 3\n\nInput\n3 0\n\nOutput\n1 2 3\n\nInput\n3 2\n\nOutput\n3 2 1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}