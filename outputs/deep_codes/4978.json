{"4978": {"code": ["from copy import deepcopy\n\nN, M = map(int, input().split())\ngrid = [list(input()) for _ in range(N)]\n\nwhile True:\n    new_grid = deepcopy(grid)\n    moved = False\n\n    for r in range(N):\n        for c in range(M):\n            if grid[r][c] == 'V':\n                if r > 0 and grid[r-1][c] == '.':\n                    new_grid[r-1][c", "N, M = map(int, input().split())\ngrid = [list(input()) for _ in range(N)]\n\ndef spread_water():\n    water = [(i, j) for i in range(N) for j in range(M) if grid[i][j] == 'V']\n    while True:\n        new_water = []\n        for i, j in water:\n            if i > 0 and grid[i-1][j] == '.':\n                grid[i-1][", "def spread_water(grid):\n    N, M = len(grid), len(grid[0])\n    def in_grid(i, j):\n        return 0 <= i < N and 0 <= j < M\n\n    def spread(i, j):\n        if not in_grid(i, j) or grid[i][j] != 'V':\n            return\n        grid[i][j] = '.'\n        spread(i - 1, j)\n        spread(i + 1", "from copy import deepcopy\n\nN, M = map(int, input().split())\ngrid = [list(input()) for _ in range(N)]\n\nwhile True:\n    new_grid = deepcopy(grid)\n    changed = False\n    for i in range(N):\n        for j in range(M):\n            if grid[i][j] == 'V':\n                if i > 0 and grid[i-1][j] == '.':\n                    new_grid[i-1][j]", "def spread_water(grid):\n    R, C = len(grid), len(grid[0])\n    dirs = [(0, -1), (-1, 0), (0, 1), (1, 0)]\n    while True:\n        changes = False\n        new_grid = [row[:] for row in grid]\n        for r in range(R):\n            for c in range(C):\n                if grid[r][c] == 'V':\n                    for dr, dc"], "prompt": "\nQUESTION:\nConsider a grid consisting of $N$ rows and $M$ columns, where each cell is either air, stone, or water. Each second, the water spreads in the following fashion:\n - If a water cell is directly above an air cell then the air cell turns into water in the next second.\n - If a water cell is directly above a stone cell then any air cells directly left or right of the water cell turn into water in the next second.\n\nAfter some number of seconds, the water will have stopped spreading. Show how the grid looks when that happens. You can assume that all cells outside of the grid behave as air cells; for instance, if a water cell is at the bottommost row then its water will not spread to the sides.\n\n-----Input-----\nThe first line consists of two integers $N$ and $M$ ($2 \\leq N,M \\leq 50$), the number of rows and columns in the grid.\n\nEach of the following $N$ lines contains a string $S$ of length $M$. The string $S$ represents one of the rows in the grid. It consists of the symbols \u201c.\u201d (air), \u201c#\u201d (stone), and \u201cV\u201d (water).\n\n-----Output-----\nPrint $N$ lines, each consisting of a string of length $M$, describing the grid as it looks when the water has stopped spreading.\n\n-----Examples-----\nSample Input:\n5 7\n...V...\n.......\n.......\n...#...\n..###..\nSample Output:\n...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}