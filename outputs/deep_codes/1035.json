{"1035": {"code": ["import math\n\ndef gcd(a, b):\n    if b==0:\n        return a\n    else:\n        return gcd(b, a%b)\n\ndef coprime(a, b):\n    return gcd(a, b) == 1\n\ndef get_divisors(n):\n    divisors = []\n    for i in range(1, int(math.sqrt(n))+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n // i)\n    return divisors\n\ndef solve(", "import math\n\ndef phi(n):\n    result = n\n    p = 2\n    while p * p <= n:\n        if n % p:\n            p += 1\n        else:\n            while n % p == 0:\n                n //= p\n            result -= result // p\n    if n > 1:\n        result -= result // n\n    return result\n\ndef solve(a, b):\n    g = math.gcd(a, b)\n    return phi(phi(g)) // 2 + 1\n\na, b = map(int, input().split())\nprint(solve(a, b))", "import math\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef coprime(a, b):\n    return gcd(a, b) == 1\n\ndef max_divisors(a, b):\n    divisors = []\n    for i in range(1, int(math.sqrt(a)) + 1):\n        if a % i == 0:\n            divisors.append(i)\n            if a // i != i:\n                divisors.append(a // i)\n    divisors.sort()\n    count = 0\n    for", "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef coprimes(a, b):\n    return all(gcd(i, a) == 1 and gcd(i, b) == 1 for i in range(2, min(a, b) + 1))\n\ndef count_divisors(n):\n    count = 2  # 1 and n are always divisors\n    i = 2\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            if n // i == i:\n                count += 1", "import math\n\ndef gcd(a, b):\n    if b==0:\n        return a\n    return gcd(b, a%b)\n\ndef coprimes(a, b):\n    if gcd(a, b)==1:\n        return True\n    return False\n\ndef count_divisors(n):\n    cnt = 0\n    for i in range(1, int(math.sqrt(n))+1):\n        if n%i==0:\n            if coprimes(i, n//i):\n                cnt += 1\n    return cnt\n\ndef solve(a, b):\n    g = gcd"], "prompt": "\nQUESTION:\nGiven are positive integers A and B.\nLet us choose some number of positive common divisors of A and B.\nHere, any two of the chosen divisors must be coprime.\nAt most, how many divisors can we choose?Definition of common divisor\nAn integer d is said to be a common divisor of integers x and y when d divides both x and y.Definition of being coprime\nIntegers x and y are said to be coprime when x and y have no positive common divisors other than 1.Definition of dividing\nAn integer x is said to divide another integer y when there exists an integer \\alpha such that y = \\alpha x.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq A, B \\leq 10^{12}\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B\n\n-----Output-----\nPrint the maximum number of divisors that can be chosen to satisfy the condition.\n\n-----Sample Input-----\n12 18\n\n-----Sample Output-----\n3\n\n12 and 18 have the following positive common divisors: 1, 2, 3, and 6.\n1 and 2 are coprime, 2 and 3 are coprime, and 3 and 1 are coprime, so we can choose 1, 2, and 3, which achieve the maximum result.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}