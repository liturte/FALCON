{"548": {"code": ["def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    dp = [0] * (s + 1)\n    dp[0] = 1\n    for i in range(n):\n        for j in range(s, a[i] - 1, -1):\n            dp[j] = max(dp[j], dp[j - a[i]])\n    if dp[s] == 1:\n        print(\"First\")\n    else:\n        print(\"Second\")\nsolve()\n\n\nExplanation:\nThis is a dynamic programming problem. The dp[i] will be", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if sum(a) % 2 == 0:\n        print(\"Second\")\n    else:\n        print(\"First\")\n\nif __name__ == \"__main__\":\n    main()\n\n\nThis code takes an array of integers as input and checks if the sum of the array is even or odd. If the sum is even, the first player can't make a move and loses, so the output is \"Second\". If the sum is odd, the first player can remove the array in one move and wins, so the output is \"First\".\n\nThis solution is based on the fact that the sum of the array is", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(\"First\" if sum(a) % 2 == 1 else \"Second\")\n\nmain()\n\n\nExplanation:\nThe game can be played optimally. If the sum of the array is odd, the first player can always remove a subsegment of odd sum, thus winning. If the sum is even, the first player will lose if the array starts with an even number and can only remove odd numbers, so the second player will win.\n\nThis Python code reads the input and checks the sum of the array. It then prints \"First\" if the sum is odd and \"Second\" otherwise.", "def find_winner(n, arr):\n    even_sum = sum(x % 2 == 0 for x in arr)\n    odd_sum = sum(x % 2 != 0 for x in arr)\n    return \"First\" if odd_sum > even_sum else \"Second\"\n\nn = int(input())\narr = list(map(int, input().split()))\nprint(find_winner(n, arr))\n\n\nThis code works by first counting the number of even and odd numbers in the array. If there are more odd numbers than even numbers, the first player can win by always removing a subsegment with an odd sum. Otherwise, the second player can always remove a subsegment with an even sum", "n = int(input())\na = list(map(int, input().split()))\nprint('First' if sum(a) % 2 == 1 else 'Second')\n\n\nExplanation:\nThe game can be won by the first player if the sum of all elements in the array is odd. This is because the first player can always remove a subsegment of odd sum, and the sum of the remaining elements will be even, which can be removed by the second player. Conversely, if the sum of all elements is even, the first player will lose the game as they can't remove a subsegment of even sum.\n\nThe python code checks if the sum of the array elements is odd or even and prints \"First\" or \"Second\""], "prompt": "\nQUESTION:\nLeha somehow found an array consisting of n integers. Looking at it, he came up with a task. Two players play the game on the array. Players move one by one. The first player can choose for his move a subsegment of non-zero length with an odd sum of numbers and remove it from the array, after that the remaining parts are glued together into one array and the game continues. The second player can choose a subsegment of non-zero length with an even sum and remove it. Loses the one who can not make a move. Who will win if both play optimally?\n\n\n-----Input-----\n\nFirst line of input data contains single integer n (1 \u2264 n \u2264 10^6) \u2014 length of the array.\n\nNext line contains n integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 10^9).\n\n\n-----Output-----\n\nOutput answer in single line. \"First\", if first player wins, and \"Second\" otherwise (without quotes).\n\n\n-----Examples-----\nInput\n4\n1 3 2 3\n\nOutput\nFirst\n\nInput\n2\n2 2\n\nOutput\nSecond\n\n\n\n-----Note-----\n\nIn first sample first player remove whole array in one move and win.\n\nIn second sample first player can't make a move and lose.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}