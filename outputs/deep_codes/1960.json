{"1960": {"code": ["QUESTION:\nThe next \"Data Structures and Algorithms\" lesson will be about Longest Increasing Subsequence (LIS for short) of a sequence. For better understanding, Nam decided to learn it a few days before the lesson.\n\nNam created a sequence a consisting of n (1 \u2264 n \u2264 10^5) elements a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5). A subsequence a_{i}_1, a_{i}_2, ..., a_{i}_{k} where 1 \u2264 i_1 < i_2 < ... < i_{k} \u2264 n is called increasing if a_{i}_1 < a_{i}_2 < a_{i}_3 < ... < a_{i}_{k}. An increasing subsequence is called longest if it has maximum length among all increasing subsequences. \n\nNam realizes that a sequence may have several longest increasing subsequences. Hence, he divides all indexes i (1 \u2264 i \u2264 n), into three groups: group of all i such that a_{i} belongs to no longest increasing subsequences. group of all i such that a_{i} belongs to at least one but not every longest increasing subsequence. group of all i such that a_{i} belongs to every longest increasing subsequence. \n\nSince the number of longest increasing subsequences of a may be very large, categorizing process is very difficult. Your task is to help him finish this job.\n\n\n-----Input-----\n\nThe first line contains the single integer n (1 \u2264 n \u2264 10^5) denoting the number of elements of sequence a.\n\nThe second line contains n space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5).\n\n\n-----Output-----\n\nPrint a string consisting of n characters. i-th character should be '1', '2' or '3' depending on which group among listed above index i belongs to.\n\n\n-----Examples-----\nInput\n1\n4\n\nOutput\n3\n\nInput\n4\n1 3 2 5\n\nOutput\n3223\n\nInput\n4\n1 5 2 3\n\nOutput\n3133\n\n\n\n-----Note-----\n\nIn the second sample, sequence a consists of 4 elements: {a_1, a_2, a_3, a_4} = {1, 3, 2, 5}. Sequence a has exactly", "QUESTION:\nThe next \"Data Structures and Algorithms\" lesson will be about Longest Increasing Subsequence (LIS for short) of a sequence. For better understanding, Nam decided to learn it a few days before the lesson.\n\nNam created a sequence a consisting of n (1 \u2264 n \u2264 10^5) elements a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5). A subsequence a_{i}_1, a_{i}_2, ..., a_{i}_{k} where 1 \u2264 i_1 < i_2 < ... < i_{k} \u2264 n is called increasing if a_{i}_1 < a_{i}_2 < a_{i}_3 < ... < a_{i}_{k}. An increasing subsequence is called longest if it has maximum length among all increasing subsequences. \n\nNam realizes that a sequence may have several longest increasing subsequences. Hence, he divides all indexes i (1 \u2264 i \u2264 n), into three groups: group of all i such that a_{i} belongs to no longest increasing subsequences. group of all i such that a_{i} belongs to at least one but not every longest increasing subsequence. group of all i such that a_{i} belongs to every longest increasing subsequence. \n\nSince the number of longest increasing subsequences of a may be very large, categorizing process is very difficult. Your task is to help him finish this job.\n\n\n-----Input-----\n\nThe first line contains the single integer n (1 \u2264 n \u2264 10^5) denoting the number of elements of sequence a.\n\nThe second line contains n space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5).\n\n\n-----Output-----\n\nPrint a string consisting of n characters. i-th character should be '1', '2' or '3' depending on which group among listed above index i belongs to.\n\n\n-----Examples-----\nInput\n1\n4\n\nOutput\n3\n\nInput\n4\n1 3 2 5\n\nOutput\n3223\n\nInput\n4\n1 5 2 3\n\nOutput\n3133\n\n\n\n-----Note-----\n\nIn the second sample, sequence a consists of 4 elements: {a_1, a_2, a_3, a_4} = {1, 3, 2, 5}. Sequence a has exactly one", "QUESTION:\nThe next \"Data Structures and Algorithms\" lesson will be about Longest Increasing Subsequence (LIS for short) of a sequence. For better understanding, Nam decided to learn it a few days before the lesson.\n\nNam created a sequence a consisting of n (1 \u2264 n \u2264 10^5) elements a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5). A subsequence a_{i}_1, a_{i}_2, ..., a_{i}_{k} where 1 \u2264 i_1 < i_2 < ... < i_{k} \u2264 n is called increasing if a_{i}_1 < a_{i}_2 < a_{i}_3 < ... < a_{i}_{k}. An increasing subsequence is called longest if it has maximum length among all increasing subsequences. \n\nNam realizes that a sequence may have several longest increasing subsequences. Hence, he divides all indexes i (1 \u2264 i \u2264 n), into three groups: group of all i such that a_{i} belongs to no longest increasing subsequences. group of all i such that a_{i} belongs to at least one but not every longest increasing subsequence. group of all i such that a_{i} belongs to every longest increasing subsequence. \n\nSince the number of longest increasing subsequences of a may be very large, categorizing process is very difficult. Your task is to help him finish this job.\n\n\n-----Input-----\n\nThe first line contains the single integer n (1 \u2264 n \u2264 10^5) denoting the number of elements of sequence a.\n\nThe second line contains n space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5).\n\n\n-----Output-----\n\nPrint a string consisting of n characters. i-th character should be '1', '2' or '3' depending on which group among listed above index i belongs to.\n\n\n-----Examples-----\nInput\n1\n4\n\nOutput\n3\n\nInput\n4\n1 3 2 5\n\nOutput\n3223\n\nInput\n4\n1 5 2 3\n\nOutput\n3133\n\n\n\n-----Note-----\n\nIn the second sample, sequence a consists of 4 elements: {a_1, a_2, a_3, a_4} = {1, 3, 2, 5}. Sequence a has exactly one", "QUESTION:\nThe next \"Data Structures and Algorithms\" lesson will be about Longest Increasing Subsequence (LIS for short) of a sequence. For better understanding, Nam decided to learn it a few days before the lesson.\n\nNam created a sequence a consisting of n (1 \u2264 n \u2264 10^5) elements a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5). A subsequence a_{i}_1, a_{i}_2, ..., a_{i}_{k} where 1 \u2264 i_1 < i_2 < ... < i_{k} \u2264 n is called increasing if a_{i}_1 < a_{i}_2 < a_{i}_3 < ... < a_{i}_{k}. An increasing subsequence is called longest if it has maximum length among all increasing subsequences. \n\nNam realizes that a sequence may have several longest increasing subsequences. Hence, he divides all indexes i (1 \u2264 i \u2264 n), into three groups: group of all i such that a_{i} belongs to no longest increasing subsequences. group of all i such that a_{i} belongs to at least one but not every longest increasing subsequence. group of all i such that a_{i} belongs to every longest increasing subsequence. \n\nSince the number of longest increasing subsequences of a may be very large, categorizing process is very difficult. Your task is to help him finish this job.\n\n\n-----Input-----\n\nThe first line contains the single integer n (1 \u2264 n \u2264 10^5) denoting the number of elements of sequence a.\n\nThe second line contains n space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5).\n\n\n-----Output-----\n\nPrint a string consisting of n characters. i-th character should be '1', '2' or '3' depending on which group among listed above index i belongs to.\n\n\n-----Examples-----\nInput\n1\n4\n\nOutput\n3\n\nInput\n4\n1 3 2 5\n\nOutput\n3223\n\nInput\n4\n1 5 2 3\n\nOutput\n3133\n\n\n\n-----Note-----\n\nIn the second sample, sequence a consists of 4 elements: {a_1, a_2, a_3, a_4} = {1, 3, 2, 5}. Sequence a has exactly one", "QUESTION:\nThe next \"Data Structures and Algorithms\" lesson will be about Longest Increasing Subsequence (LIS for short) of a sequence. For better understanding, Nam decided to learn it a few days before the lesson.\n\nNam created a sequence a consisting of n (1 \u2264 n \u2264 10^5) elements a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5). A subsequence a_{i}_1, a_{i}_2, ..., a_{i}_{k} where 1 \u2264 i_1 < i_2 < ... < i_{k} \u2264 n is called increasing if a_{i}_1 < a_{i}_2 < a_{i}_3 < ... < a_{i}_{k}. An increasing subsequence is called longest if it has maximum length among all increasing subsequences. \n\nNam realizes that a sequence may have several longest increasing subsequences. Hence, he divides all indexes i (1 \u2264 i \u2264 n), into three groups: group of all i such that a_{i} belongs to no longest increasing subsequences. group of all i such that a_{i} belongs to at least one but not every longest increasing subsequence. group of all i such that a_{i} belongs to every longest increasing subsequence. \n\nSince the number of longest increasing subsequences of a may be very large, categorizing process is very difficult. Your task is to help him finish this job.\n\n\n-----Input-----\n\nThe first line contains the single integer n (1 \u2264 n \u2264 10^5) denoting the number of elements of sequence a.\n\nThe second line contains n space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5).\n\n\n-----Output-----\n\nPrint a string consisting of n characters. i-th character should be '1', '2' or '3' depending on which group among listed above index i belongs to.\n\n\n-----Examples-----\nInput\n1\n4\n\nOutput\n3\n\nInput\n4\n1 3 2 5\n\nOutput\n3223\n\nInput\n4\n1 5 2 3\n\nOutput\n3133\n\n\n\n-----Note-----\n\nIn the second sample, sequence a consists of 4 elements: {a_1, a_2, a_3, a_4} = {1, 3, 2, 5}. Sequence a has exactly one"], "prompt": "\nQUESTION:\nThe next \"Data Structures and Algorithms\" lesson will be about Longest Increasing Subsequence (LIS for short) of a sequence. For better understanding, Nam decided to learn it a few days before the lesson.\n\nNam created a sequence a consisting of n (1 \u2264 n \u2264 10^5) elements a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5). A subsequence a_{i}_1, a_{i}_2, ..., a_{i}_{k} where 1 \u2264 i_1 < i_2 < ... < i_{k} \u2264 n is called increasing if a_{i}_1 < a_{i}_2 < a_{i}_3 < ... < a_{i}_{k}. An increasing subsequence is called longest if it has maximum length among all increasing subsequences. \n\nNam realizes that a sequence may have several longest increasing subsequences. Hence, he divides all indexes i (1 \u2264 i \u2264 n), into three groups: group of all i such that a_{i} belongs to no longest increasing subsequences. group of all i such that a_{i} belongs to at least one but not every longest increasing subsequence. group of all i such that a_{i} belongs to every longest increasing subsequence. \n\nSince the number of longest increasing subsequences of a may be very large, categorizing process is very difficult. Your task is to help him finish this job.\n\n\n-----Input-----\n\nThe first line contains the single integer n (1 \u2264 n \u2264 10^5) denoting the number of elements of sequence a.\n\nThe second line contains n space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5).\n\n\n-----Output-----\n\nPrint a string consisting of n characters. i-th character should be '1', '2' or '3' depending on which group among listed above index i belongs to.\n\n\n-----Examples-----\nInput\n1\n4\n\nOutput\n3\n\nInput\n4\n1 3 2 5\n\nOutput\n3223\n\nInput\n4\n1 5 2 3\n\nOutput\n3133\n\n\n\n-----Note-----\n\nIn the second sample, sequence a consists of 4 elements: {a_1, a_2, a_3, a_4} = {1, 3, 2, 5}. Sequence a has exactly 2 longest increasing subsequences of length 3, they are {a_1, a_2, a_4} = {1, 3, 5} and {a_1, a_3, a_4} = {1, 2, 5}.\n\nIn the third sample, sequence a consists of 4 elements: {a_1, a_2, a_3, a_4} = {1, 5, 2, 3}. Sequence a have exactly 1 longest increasing subsequence of length 3, that is {a_1, a_3, a_4} = {1, 2, 3}.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}