{"4538": {"code": ["import sys\nimport math\n\nN, D = map(int, sys.stdin.readline().split())\npoints = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\n\ncount = 0\nfor x, y in points:\n    if math.sqrt(x**2 + y**2) <= D:\n        count += 1\n\nprint(count)\n\n\nThe code first reads the number", "import sys\nimport math\n\nN, D = map(int, sys.stdin.readline().split())\nD2 = D ** 2\npoints = [tuple(map(int, sys.stdin.readline().split())) for _ in range(N)]\n\nprint(sum(x ** 2 + y ** 2 <= D2 for x, y in points))\n\n\nExplanation:\nThe code reads the number of points `N", "import sys\nimport math\n\nN, D = map(int, sys.stdin.readline().split())\npoints = [tuple(map(int, sys.stdin.readline().split())) for _ in range(N)]\n\ncount = 0\nfor x, y in points:\n    if x*x + y*y <= D*D:\n        count += 1\n\nprint(count)\n\n\nThis Python code reads the input from standard", "import sys\nimport math\n\nN, D = map(int, sys.stdin.readline().split())\npoints = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\n\ncount = 0\nfor point in points:\n    distance = math.sqrt(point[0]**2 + point[1]**2)\n    if distance <= D:\n        count += 1\n\nprint(count)", "import sys\nimport math\n\nN, D = map(int, sys.stdin.readline().split())\nD2 = D ** 2\npoints = [tuple(map(int, sys.stdin.readline().split())) for _ in range(N)]\nprint(sum(x ** 2 + y ** 2 <= D2 for x, y in points))\n\n\nThis Python program reads the input data and calculates the distance from the origin"], "prompt": "\nQUESTION:\nWe have N points in the two-dimensional plane. The coordinates of the i-th point are (X_i,Y_i).\nAmong them, we are looking for the points such that the distance from the origin is at most D. How many such points are there?\nWe remind you that the distance between the origin and the point (p, q) can be represented as \\sqrt{p^2+q^2}.\n\n-----Constraints-----\n - 1 \\leq N \\leq 2\\times 10^5\n - 0 \\leq D \\leq 2\\times 10^5\n - |X_i|,|Y_i| \\leq 2\\times 10^5\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN D\nX_1 Y_1\n\\vdots\nX_N Y_N\n\n-----Output-----\nPrint an integer representing the number of points such that the distance from the origin is at most D.\n\n-----Sample Input-----\n4 5\n0 5\n-2 4\n3 4\n4 -4\n\n-----Sample Output-----\n3\n\nThe distance between the origin and each of the given points is as follows:\n - \\sqrt{0^2+5^2}=5\n - \\sqrt{(-2)^2+4^2}=4.472\\ldots\n - \\sqrt{3^2+4^2}=5\n - \\sqrt{4^2+(-4)^2}=5.656\\ldots\nThus, we have three points such that the distance from the origin is at most 5.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}