{"4336": {"code": ["W, H, x, y = map(int, input().split())\nif x == W / 2:\n    print(max(x * y, (W - x) * y, x * (H - y), (W - x) * (H - y)) / 2, 1 if y == H / 2 else 0)\nelse:\n    print(max(x * y, (W - x) * y, x * (H - y), (W - x) * (H - y)) / 2, 1 if x == W / 2 or y == H / 2 else 0)\n\nThis python code takes the input for W, H, x and y and calculates the maximum area of the part whose area is not", "W, H, x, y = map(int, input().split())\n\n# Calculate the areas of the two parts\narea1 = max(x, W-x) * max(y, H-y)\narea2 = min(x, W-x) * min(y, H-y)\n\n# Calculate the maximum area\nmax_area = max(area1, area2)\n\n# Determine if there are multiple ways to cut the rectangle\n# and achieve the maximum area\nmultiple_ways = area1 != area2\n\n# Print the result\nprint(max_area, int(multiple_ways))\n\n\nThis code reads the input values, calculates the areas of the two parts of the rectangle, finds the maximum area,", "W, H, x, y = map(int, input().split())\n\n# The line is vertical, x = W/2\nif x == W/2:\n    print(min(W*H/2, (W/2*H + (W/2)*y))*2, 1 if y <= H/2 else 0)\n# The line is horizontal, y = H/2\nelif y == H/2:\n    print(min(W*H/2, (H/2*W + (H/2)*x))*2, 1 if x <= W/2 else 0)\n# The line is diagonal, x = W/2 and y = H/2\nelif x == W/2 and y == H/", "W, H, x, y = map(int, input().split())\n\n# the area of the rectangle\narea = W * H\n\n# the area of the part to be cut\npart = max(x * y, W * (H - y), x * H, (W - x) * H)\n\n# the area of the remaining part\nremain = area - part\n\n# if the part is larger than the remaining part, switch them\nif part > remain:\n    part, remain = remain, part\n\n# print the maximum possible area of the part and whether there are multiple ways to cut the rectangle\nprint(part, int(part != remain))\n\n\nThis code first calculates the area of the rectangle and the part to be cut. It then", "W, H, x, y = map(int, input().split())\n\nif x == 0:\n    a1, a2 = W * y, (W * H) - (W * y)\nelif x == W:\n    a1, a2 = W * (H - y), W * y\nelif y == 0:\n    a1, a2 = x * H, (W * H) - (x * H)\nelse:\n    a1, a2 = x * (H - y), (W - x) * y\n\nprint(max(a1, a2), int(a1 != a2))\n\nThis code reads the input, calculates the areas of the two parts of the rectangle that result from the"], "prompt": "\nQUESTION:\nThere is a rectangle in a coordinate plane. The coordinates of the four vertices are (0,0), (W,0), (W,H), and (0,H).\nYou are given a point (x,y) which is within the rectangle or on its border. We will draw a straight line passing through (x,y) to cut the rectangle into two parts. Find the maximum possible area of the part whose area is not larger than that of the other. Additionally, determine if there are multiple ways to cut the rectangle and achieve that maximum.\n\n-----Constraints-----\n - 1 \\leq W,H \\leq 10^9\n - 0\\leq x\\leq W\n - 0\\leq y\\leq H\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nW H x y\n\n-----Output-----\nPrint the maximum possible area of the part whose area is not larger than that of the other, followed by 1 if there are multiple ways to cut the rectangle and achieve that maximum, and 0 otherwise.\nThe area printed will be judged correct when its absolute or relative error is at most 10^{-9}.\n\n-----Sample Input-----\n2 3 1 2\n\n-----Sample Output-----\n3.000000 0\n\nThe line x=1 gives the optimal cut, and no other line does.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}