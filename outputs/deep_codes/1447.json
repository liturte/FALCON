{"1447": {"code": ["n", "def", "def", "def", "def"], "prompt": "\nQUESTION:\nAlex enjoys performing magic tricks. He has a trick that requires a deck of n cards. He has m identical decks of n different cards each, which have been mixed together. When Alex wishes to perform the trick, he grabs n cards at random and performs the trick with those. The resulting deck looks like a normal deck, but may have duplicates of some cards.\n\nThe trick itself is performed as follows: first Alex allows you to choose a random card from the deck. You memorize the card and put it back in the deck. Then Alex shuffles the deck, and pulls out a card. If the card matches the one you memorized, the trick is successful.\n\nYou don't think Alex is a very good magician, and that he just pulls a card randomly from the deck. Determine the probability of the trick being successful if this is the case.\n\n\n-----Input-----\n\nFirst line of the input consists of two integers n and m (1 \u2264 n, m \u2264 1000), separated by space \u2014 number of cards in each deck, and number of decks.\n\n\n-----Output-----\n\nOn the only line of the output print one floating point number \u2013 probability of Alex successfully performing the trick. Relative or absolute error of your answer should not be higher than 10^{ - 6}.\n\n\n-----Examples-----\nInput\n2 2\n\nOutput\n0.6666666666666666\n\nInput\n4 4\n\nOutput\n0.4000000000000000\n\nInput\n1 2\n\nOutput\n1.0000000000000000\n\n\n\n-----Note-----\n\nIn the first sample, with probability $\\frac{1}{3}$ Alex will perform the trick with two cards with the same value from two different decks. In this case the trick is guaranteed to succeed.\n\nWith the remaining $\\frac{2}{3}$ probability he took two different cards, and the probability of pulling off the trick is $\\frac{1}{2}$.\n\nThe resulting probability is $\\frac{1}{3} \\times 1 + \\frac{2}{3} \\times \\frac{1}{2} = \\frac{2}{3}$\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}