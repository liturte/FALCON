{"3589": {"code": ["from sys import stdin\n\ndef solve(L, R):\n    def digit_product(n):\n        res = 1\n        while n > 0:\n            res *= n %", "import sys\n\ndef digit_product(x):\n    prod = 1\n    while x:\n        digit = x % 10\n        if digit != 0:\n            prod *=", "def digit_product(n):\n    product = 1\n    while n:\n        digit = n % 10\n        n //= 10\n        if digit != 0:", "from collections import defaultdict\n\ndef digit_product(n):\n    product = 1\n    while n:\n        digit = n % 10\n        if digit:\n            product *=", "from sys import stdin, stdout\n\ndef get_digits(n):\n    while n:\n        yield n % 10\n        n //= 10\n\ndef solve("], "prompt": "\nQUESTION:\nNikolaj works at a company that sells a large number of products. Each product has a product ID, which is a large integer. For error detection, in particular in connection with manual database entry, it would be useful if each product also had a single \u201ccheck\u201d digit between $1$ and $9$ that can be quickly computed from the product ID. Nikolaj has been tasked with implementing this. He recently solved the problem \u201cDigit Product\u201d on Open Kattis and considers using the procedure described there.\n\nHe recalls that the idea is to start with a positive integer $x$ and repeatedly multiply all its nonzero digits, until only a single digit is left. For instance, if $x$ is $808$ then the resulting digit is $8$, because $8 \\cdot 8 = 64$, $6 \\cdot 4 = 24$, and $2 \\cdot 4 = 8$.\n\nHowever, Nikolaj is unsure about using this method, because the distribution of resulting digits seems uneven to him. To determine how the distribution looks, he writes a program that given two integers $L$ and $R$ determines how many numbers in the interval $[L, R]$ result in each digit.\n\n-----Input-----\nA single line consisting of two integers $L$ and $R$ with $1 \\leq L \\leq R \\leq 10^{15}$.\n\n-----Output-----\nPrint $9$ integers $a_1, a_2, \\ldots , a_9$ on a single line. The $i$th number $a_ i$ is the number of integers $x$ satisfying $L \\leq x \\leq R$ such that repeated multiplication of the nonzero digits of $x$ results in the digit $i$.\n\n-----Examples-----\nSample Input:\n50 100\nSample Output:\n3 7 4 6 5 7 2 15 2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}