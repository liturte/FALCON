{"3196": {"code": ["import sys\nfrom collections import defaultdict\nfrom heapq import heappop, heappush\n\ndef solve(n, m, roads):\n    graph = defaultdict(list)\n    for u, v in roads:\n        graph[u].append(v)\n        graph[v].append(u)\n    dist = [None] + [0]*n\n    heap = [(0, 1)]\n    while heap:\n        d, u = heappop(heap)\n        if dist[u] is", "from collections import defaultdict\nfrom heapq import heappop, heappush\n\nMOD = 10**9\n\ndef solve(N, M, roads):\n    graph = defaultdict(list)\n    for u, v in roads:\n        graph[u].append(v)\n\n    dist = [float('inf')] * (N+1)\n    dist[1] = 0\n    pq = [(0, 1)]\n    while pq:\n        d, u = heappop(pq", "import sys\nfrom collections import defaultdict\nfrom heapq import heappop, heappush\n\nMOD = 10**9\nN, M = map(int, sys.stdin.readline().split())\ngraph = defaultdict(list)\n\nfor _ in range(M):\n    a, b = map(int, sys.stdin.readline().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\ndistances = [float('inf')] * (N+", "import sys\nfrom collections import defaultdict\nfrom heapq import heappop, heappush\n\nMOD = 10**9\nN, M = map(int, sys.stdin.readline().split())\ngraph = defaultdict(list)\nfor _ in range(M):\n    a, b = map(int, sys.stdin.readline().split())\n    graph[a].append(b)\n\ndist = [0] * (N + 1)\ndist[1] = 1\n\npq = [", "import sys\nfrom collections import defaultdict\nfrom heapq import heappop, heappush\n\nMOD = 10**9\nN, M = map(int, sys.stdin.readline().split())\ngraph = defaultdict(list)\nfor _ in range(M):\n    A, B = map(int, sys.stdin.readline().split())\n    graph[A].append(B)\n\ndist = [0] + [-1]*(N-1)\nheap = [(0, 1"], "prompt": "\nQUESTION:\nA bicycle race is being organized in a land far, far away. There are $N$ towns in the land, numbered $1$ through $N$. There are also $M$ one-way roads between the towns. The race will start in town $1$ and end in town $2$.\n\nHow many different ways can the route be set? Two routes are considered different if they do not use the exact same roads.\n\n-----Input-----\nThe first line of input contains two integers $N$ and $M$ ($1 \\le N \\le 10000$, $1 \\le M \\le 100000$), the number of towns and roads.\n\nEach of the next $M$ lines contains two different integers $A$ and $B$, representing a road from town $A$ to town $B$.\n\nTowns may be connected by more than one road.\n\n-----Output-----\nOutput the number of distinct routes that can be set on a single line. If that number has more than nine digits, output only the last nine digits of the number. If there are infinitely many routes, output \u201cinf\u201d.\n\n-----Examples-----\nSample Input 1:\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\nSample Output 1:\n3\n\nSample Input 2:\n6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\nSample Output 2:\ninf\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}