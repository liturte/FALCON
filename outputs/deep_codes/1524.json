{"1524": {"code": ["def solve():\n    S = input()\n    N = len(S)\n    ans = [0]*N\n    r = S.count('R')\n    l = 0\n    for i in range(N):\n        if S[i] == 'R':\n            ans[i] = r\n            r", "import sys\n\ndef count_children(s):\n    n = len(s)\n    counts = [0]*n\n    for i in range(n):\n        if s[i] == 'R':\n            if i < n-1 and s[i+1] == 'L':\n                counts[i] +=", "from collections import defaultdict\n\nS = input()\nN = len(S)\n\n# Initialize the list of children standing on each square\nchildren = [0] * N\n\n# Initialize the defaultdict to count the number of children standing on each square\ncount = defaultdict(int)\n\n# Perform the moves\nfor", "from sys import stdin\nfrom collections import defaultdict\n\ns = stdin.readline().strip()\nn = len(s)\n\nleft_right = defaultdict(lambda: [0]*n)\nright_left = defaultdict(lambda: [0]*n)\n\nfor i in range(n):", "from collections import deque\n\nS = input()\nN = len(S)\nL = deque([0] * N)\nR = deque([0] * N)\n\nfor i in range(N):\n    if S[i] == \"L\":\n        if i > 0:\n            L[i] ="], "prompt": "\nQUESTION:\nGiven is a string S consisting of L and R.\nLet N be the length of S. There are N squares arranged from left to right, and the i-th character of S from the left is written on the i-th square from the left.\nThe character written on the leftmost square is always R, and the character written on the rightmost square is always L.\nInitially, one child is standing on each square.\nEach child will perform the move below 10^{100} times:\n - Move one square in the direction specified by the character written in the square on which the child is standing. L denotes left, and R denotes right.\nFind the number of children standing on each square after the children performed the moves.\n\n-----Constraints-----\n - S is a string of length between 2 and 10^5 (inclusive).\n - Each character of S is L or R.\n - The first and last characters of S are R and L, respectively.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\n\n-----Output-----\nPrint the number of children standing on each square after the children performed the moves, in order from left to right.\n\n-----Sample Input-----\nRRLRL\n\n-----Sample Output-----\n0 1 2 1 1\n\n - After each child performed one move, the number of children standing on each square is 0, 2, 1, 1, 1 from left to right.\n - After each child performed two moves, the number of children standing on each square is 0, 1, 2, 1, 1 from left to right.\n - After each child performed 10^{100} moves, the number of children standing on each square is 0, 1, 2, 1, 1 from left to right.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}