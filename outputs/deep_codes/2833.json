{"2833": {"code": ["import numpy as np\n\ndef rotate_table(table, k):\n    k = k % 360\n    if k == 0:\n        return table\n    elif k == 90:\n        return np.rot90(table, -1)\n    elif k == 180:\n        return np.rot90(np.rot90(table, -1), -1)\n    elif k == 270:\n        return np.rot90(np.rot90(table, -1))", "R, C = map(int, input().split())\ntable = [input() for _ in range(R)]\nK = int(input())\n\ndef rotate(matrix, degree):\n    rotated = list(map(list, zip(*matrix[::-1])))\n    return rotated\n\nrotations = K // 45\nfor _ in range(rotations):\n    table = rotate(table, 45)\n    R, C = len(table), len(table[0])\n\nfor row in table:", "R, C = map(int, input().split())\ntable = [input() for _ in range(R)]\nK = int(input())\n\ndef rotate(table, K):\n    rotated = [[\"\" for _ in range(R)] for _ in range(C)]\n    for i in range(R):\n        for j in range(C):\n            rotated[j][R-i-1] = table[i][j]\n    return rotated\n\nfor _ in range(K//45):\n    table =", "R, C = map(int, input().split())\ntable = [input() for _ in range(R)]\nK = int(input())\n\ndef rotate(table, K):\n    if K == 0:\n        return table\n    else:\n        return [''.join([row[i] for row in table[::-1]]) for i in range(len(table[0]))]\n\ndef print_table(table):\n    for row in table:\n        print(row.rstrip())\n\ntable = rotate(", "import sys\nimport math\n\nR, C = map(int, sys.stdin.readline().split())\ntable = [sys.stdin.readline().strip() for _ in range(R)]\nK = int(sys.stdin.readline())\n\n# Convert the angle from degrees to radians\nK = math.radians(K)\n\n# Compute the new dimensions of the table\nnew_R = int(math.ceil(abs(math.cos(K)) * R + abs(math.sin(K))"], "prompt": "\nQUESTION:\nDamir likes to rotate. Right now he is rotating tables of letters. He wrote an $R\\times C$ table onto a piece of paper. He has also chosen an angle $K$, a multiple of $45$, and wants to rotate his table that many degrees clockwise.\n\nIt turns out this task is a bit too hard for Damir, so help him out.\n\n-----Input-----\nThe first line contains two integers $R$ and $C$ separated by a space ($1 \\leq R \\leq 10$, $1 \\leq C \\leq 10$), the number of rows and columns in Damir\u2019s table. Each of the next $R$ lines contains one row of Damir\u2019s table, a string of $C$ lowercase letters. The last line contains an integer $K$, a multiple of $45$ between $0$ and $360$ (inclusive).\n\n-----Output-----\nOutput Damir\u2019s table rotated $K$ degrees clockwise, like shown in the examples. The output should contain the smallest number of rows necessary. Some rows may have leading spaces, but no rows may have trailing spaces.\n\n-----Examples-----\nSample Input 1:\n3 5\ndamir\nmarko\ndarko\n45\nSample Output 1:\n  d\n m a\nd a m\n a r i\n  r k r\n   k o\n    o\n\nSample Input 2:\n3 5\ndamir\nmarko\ndarko\n90\nSample Output 2:\ndmd\naaa\nrrm\nkki\noor\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}