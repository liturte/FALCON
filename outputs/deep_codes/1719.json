{"1719": {"code": ["MOD = 10**9+7\ndp = [[[0]*4 for _ in range(105)] for _ in range(105)]\ndp[0][0][0] = 1\nfor i in range(100):\n    for j in range(i+1):\n        for k in range(4):\n            if j:\n                dp[i+1][j][0] = (dp[i+1][j][0]+dp[i][j-1][0]*4)%MOD\n            if k^1<4:\n                dp[i+1][j][k^1] = (dp[i+1][j][k^1]+dp[i][j][k]*3)%MOD\n            if k^2<4:\n                dp", "MOD = 10**9+7\ndp = [[[[0]*4 for _ in range(4)] for _ in range(4)] for _ in range(101)]\ndp[0][0][0][0] = 1\n\nfor n in range(1, 101):\n    for a in range(4):\n        for c in range(4):\n            for g in range(4):\n                for t in range(4):\n                    if a+c+g+t < 4:\n                        dp[n][c][g][t] = (dp[n-1][a][c][g] + dp[n-1][a][c][t] + dp[n-1][a][g][t] + dp[n-1][c][g][t]) % M", "MOD = 10**9 + 7\n\ndef solve(n):\n    dp = [[0]*5 for _ in range(n+1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(5):\n            for k in range(4):\n                if j>>k&1 and j>>(k+1)&1:\n                    dp[i+1][j] = (dp[i+1][j] + dp[i][j^(1<<k)]*3)%MOD\n                else:\n                    dp[i+1][j] = (dp[i+1][j] + dp[i][j]*3)%MOD\n                if j>>k&1 and j>>(k+1)&1 and j>>", "MOD = 10**9+7\nN = int(input())\ndp = [[[0]*4 for _ in range(N+1)] for _ in range(4)]\ndp[0][0][0] = 1\nfor i in range(N):\n    for j in range(4):\n        for k in range(4):\n            for l in range(4):\n                if j+k+l>3: continue\n                dp[i+1][k][l] += dp[i][j][k]\n                dp[i+1][k][l] %= MOD\n            if j+1<4:\n                dp[i+1][j+1][0] += dp[i][j][0]\n                dp[i+1][j+1][0]", "MOD = 10**9+7\ndp = [[[0]*4 for _ in range(2)] for _ in range(101)]\ndp[0][0][0] = 1\n\nfor i in range(1, 101):\n    for j in range(2):\n        for k in range(4):\n            for l in range(4):\n                if l==1 and j==1: continue\n                if l==2 and k==1: continue\n                if l==3 and k==2: continue\n                dp[i][j][l] += dp[i-1][j][k]\n                if dp[i][j][l]>=MOD: dp[i][j][l] -= MOD\n            if dp[i][j][3]>=MOD:"], "prompt": "\nQUESTION:\nYou are given an integer N. Find the number of strings of length N that satisfy the following conditions, modulo 10^9+7:\n - The string does not contain characters other than A, C, G and T.\n - The string does not contain AGC as a substring.\n - The condition above cannot be violated by swapping two adjacent characters once.\n\n-----Notes-----\nA substring of a string T is a string obtained by removing zero or more characters from the beginning and the end of T.\nFor example, the substrings of ATCODER include TCO, AT, CODER, ATCODER and  (the empty string), but not AC.\n\n-----Constraints-----\n - 3 \\leq N \\leq 100\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the number of strings of length N that satisfy the following conditions, modulo 10^9+7.\n\n-----Sample Input-----\n3\n\n-----Sample Output-----\n61\n\nThere are 4^3 = 64 strings of length 3 that do not contain characters other than A, C, G and T. Among them, only AGC, ACG and GAC violate the condition, so the answer is 64 - 3 = 61.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}