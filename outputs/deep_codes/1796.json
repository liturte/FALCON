{"1796": {"code": ["n = int(input())\nx = 0\nfor i in range(n):\n    statement = input()\n    if \"++\" in statement:\n        x += 1\n    elif \"--\" in statement:\n        x -= 1\nprint(x)\n\n\nThis code reads the number of statements from the user, then for each statement, it checks if the statement contains \"++\", if so it increments the value of x by 1, if not it decrements the value of x by 1. Finally, it prints the value of x.\n\nPlease note", "n = int(input())\nx = 0\nfor i in range(n):\n    statement = input()\n    if statement[1] == '+':\n        x += 1\n    else:\n        x -= 1\nprint(x)\n\n\nThis Python program reads the number of statements and each statement from the input, then executes each statement by checking the second character of the statement. If the second character is '+', it increases the value of x by 1. If the second character is '-', it decreases the value of x by 1. Finally,", "n = int(input())\nx = 0\nfor i in range(n):\n    statement = input()\n    if statement == \"++X\" or statement == \"X++\":\n        x += 1\n    elif statement == \"--X\" or statement == \"X--\":\n        x -= 1\nprint(x)\n\n\nThis Python code reads the number of statements from the input, then for each statement, it checks if it's either \"++X\" or \"X++\" and if it is, it increments the value of x by 1.", "n = int(input())\nx = 0\nfor i in range(n):\n    statement = input()\n    if '++' in statement:\n        x += 1\n    elif '--' in statement:\n        x -= 1\nprint(x)\n\n\nThis program reads the number of statements from the user, then for each statement it reads, it checks if the statement contains '++' or '--' and increments or decrements the value of x accordingly. Finally, it prints the value of x.\n\nNote: This solution assumes that the input statements", "n = int(input())\nx = 0\nfor i in range(n):\n    statement = input()\n    if statement[1] == '+':\n        x += 1\n    else:\n        x -= 1\nprint(x)\n\n\nThe solution uses a for loop to iterate over the number of statements. It then checks the second character of each statement (the operation) and either increments x by 1 or decrements x by 1. The final value of x is then printed.\n\nThis solution assumes that the input will always be in the"], "prompt": "\nQUESTION:\nThe classic programming language of Bitland is Bit++. This language is so peculiar and complicated.\n\nThe language is that peculiar as it has exactly one variable, called x. Also, there are two operations:\n\n  Operation ++ increases the value of variable x by 1.  Operation -- decreases the value of variable x by 1. \n\nA statement in language Bit++ is a sequence, consisting of exactly one operation and one variable x. The statement is written without spaces, that is, it can only contain characters \"+\", \"-\", \"X\". Executing a statement means applying the operation it contains.\n\nA programme in Bit++ is a sequence of statements, each of them needs to be executed. Executing a programme means executing all the statements it contains.\n\nYou're given a programme in language Bit++. The initial value of x is 0. Execute the programme and find its final value (the value of the variable when this programme is executed).\n\n\n-----Input-----\n\nThe first line contains a single integer n (1 \u2264 n \u2264 150) \u2014 the number of statements in the programme.\n\nNext n lines contain a statement each. Each statement contains exactly one operation (++ or --) and exactly one variable x (denoted as letter \u00abX\u00bb). Thus, there are no empty statements. The operation and the variable can be written in any order.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the final value of x.\n\n\n-----Examples-----\nInput\n1\n++X\n\nOutput\n1\n\nInput\n2\nX++\n--X\n\nOutput\n0\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}