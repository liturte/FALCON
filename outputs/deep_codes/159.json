{"159": {"code": ["import math\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef make_coprime(arr):\n    n = len(arr)\n    coprime_arr = [arr[0]]\n    for i in range(1, n):\n        if gcd(coprime_arr[-1], arr[i]) == 1:\n            coprime_arr.append(arr[i])\n        else:\n            coprime_arr.append(arr[i] // gcd(copr", "def gcd(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\n\ndef coprime_array(n, arr):\n    coprime_count = 0\n    for i in range(1, n):\n        if gcd(arr[i-1], arr[i]) != 1:\n            coprime_count += 1\n    if coprime_count == 0:\n        return 0, arr\n    for i in range(1, 10**9+1):\n        if gcd(arr[-1], i", "n = int(input())\na = list(map(int, input().split()))\n\ndef gcd(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\n\ncnt = 0\nfor i in range(1, n):\n    if gcd(a[i-1], a[i]) != 1:\n        cnt += 1\n        while True:\n            a.insert(i, a[i-1]+1)\n            if gcd(a[i-1], a[i]) == 1:\n                break", "def gcd(a, b):\n    if b==0:\n        return a\n    return gcd(b, a%b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nres = []\nfor i in range(n-1, -1, -1):\n    if i==n-1 or gcd(a[i], res[-1])>1:\n        res.append(a[i])\n    else:\n        res.append(a[i]+1)\n\nprint(n-len(res))\nprint(*res", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nres = []\n\nfor i in range(n):\n    if i == 0:\n        res.append(a[i])\n    else:\n        g = gcd(res[-1], a[i])\n        while g != 1:\n            res.append(g)\n            g = gcd(res[-1], a[i])\n        res."], "prompt": "\nQUESTION:\nYou are given an array of n elements, you must make it a co-prime array in as few moves as possible.\n\nIn each move you can insert any positive integral number you want not greater than 10^9 in any place in the array.\n\nAn array is co-prime if any two adjacent numbers of it are co-prime.\n\nIn the number theory, two integers a and b are said to be co-prime if the only positive integer that divides both of them is 1.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 1000) \u2014 the number of elements in the given array.\n\nThe second line contains n integers a_{i} (1 \u2264 a_{i} \u2264 10^9) \u2014 the elements of the array a.\n\n\n-----Output-----\n\nPrint integer k on the first line \u2014 the least number of elements needed to add to the array a to make it co-prime.\n\nThe second line should contain n + k integers a_{j} \u2014 the elements of the array a after adding k elements to it. Note that the new array should be co-prime, so any two adjacent values should be co-prime. Also the new array should be got from the original array a by adding k elements to it.\n\nIf there are multiple answers you can print any one of them.\n\n\n-----Example-----\nInput\n3\n2 7 28\n\nOutput\n1\n2 7 9 28\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}