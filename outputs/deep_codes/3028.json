{"3028": {"code": ["from", "from", "from", "from", "from"], "prompt": "\nQUESTION:\nPrimonimo is a game played on an $n \\times m$ board filled with numbers taken from the range $1 \\ldots p$ for some prime number $p$. At each move, a player selects a square and adds $1$ to the numbers in all squares in the same row and column as the selected square. If a square already shows the number $p$, it wraps around to $1$.\n\nThe game is won if all squares show $p$. Given an initial board, find a sequence of moves that wins the game!\n\n-----Input-----\nThe input consists of a single test case. The first line contains three numbers $n \\ m \\ p$ denoting the number of rows $n$ ($1 \\le n \\le 20$), the number of columns $m$ ($1 \\le m \\le 20$), and a prime number $p$ ($2 \\le p \\le 97$). Each of the next $n$ lines consists of $m$ numbers in the range $1 \\ldots p$.\n\n-----Output-----\nIf a winning sequence of at most $p \\cdot m \\cdot n$ moves exists, output an integer $k \\le p \\cdot m \\cdot n$ denoting the number of moves in the sequence. Then output $k$ moves as a sequence of integers that numbers the board in row-major order, starting with $1$. If there are multiple such sequences, you may output any one of them. If no winning sequence exists, output -1.\n\n-----Examples-----\nSample Input 1:\n4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\nSample Output 1:\n6\n19 12 2 18 5 5\n\nSample Input 2:\n3 3 3\n3 1 1\n1 3 2\n3 2 3\nSample Output 2:\n13\n4 2 6 1 9 7 5 5 7 1 2 3 3\n\nSample Input 3:\n3 2 2\n1 2\n2 1\n1 2\nSample Output 3:\n-1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}