{"4159": {"code": ["A, B, K = map(int, input().split())\n\nfor _ in range(K):\n    if A > 0:\n        A -= 1\n    elif B > 0:\n        B -= 1\nprint(A, B)\n\n\nThe code reads the number of cookies Takahashi and Aoki have, and the number of actions K. It then performs the actions K times, decrementing the number of cookies Takahashi and Aoki have as they eat a cookie. After K actions, it prints the number of cookies Takahashi and Aoki have left.", "A, B, K = map(int, input().split())\n\nfor _ in range(K):\n    if A > 0:\n        A -= 1\n    elif B > 0:\n        B -= 1\n\nprint(A, B)\n\n\"\"\"\n\nA, B, K = map(int, input().split())\n\nfor _ in range(K):\n    if A > 0:\n        A -= 1\n    elif B > 0:\n        B -= 1\n\nprint(A, B)\n\n\nThe solution is a simple iteration over the number of actions `K`. On each iteration, it checks if", "A, B, K = map(int, input().split())\n\nfor _ in range(K):\n    if A > 0:\n        A -= 1\n    elif B > 0:\n        B -= 1\n\nprint(A, B)\n\n\nExplanation:\nThis code reads the number of cookies Takahashi and Aoki have, and the number of actions K from the input. Then it performs the actions K times. If Takahashi has at least one cookie, it eats one. If not, but Aoki has at least one cookie, it eats one. Finally, it prints the number of cookies Takah", "A, B, K = map(int, input().split())\n\nfor _ in range(K):\n    if A > 0:\n        A -= 1\n    elif B > 0:\n        B -= 1\nprint(A, B)\n\n\"\"\"\n\n# SOLUTION\n\"\"\"\nThis solution uses a for loop to iterate K times, where in each iteration, it checks if Takahashi has cookies. If he does, he eats one and the loop continues. If he doesn't, but Aoki does, Aoki eats one and the loop continues. If neither has cookies, the loop continues without doing anything.", "A, B, K = map(int, input().split())\n\nif A + B <= K:\n    print('0 0')\nelse:\n    if A <= K:\n        K -= A\n        A = 0\n        B = max(0, B - K)\n    else:\n        A -= K\n\n    print(A, B)\n\n\nExplanation:\nThe solution is a straightforward implementation of the problem's rules. We first check if Takahashi and Aoki have less than or equal to K cookies in total. If they do, both Takahashi and Aoki will have 0 cookies"], "prompt": "\nQUESTION:\nTakahashi has A cookies, and Aoki has B cookies.\nTakahashi will do the following action K times:\n - If Takahashi has one or more cookies, eat one of his cookies.\n - Otherwise, if Aoki has one or more cookies, eat one of Aoki's cookies.\n - If they both have no cookies, do nothing.\nIn the end, how many cookies will Takahashi and Aoki have, respectively?\n\n-----Constraints-----\n - 0 \\leq A \\leq 10^{12}\n - 0 \\leq B \\leq 10^{12}\n - 0 \\leq K \\leq 10^{12}\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B K\n\n-----Output-----\nPrint the numbers of Takahashi's and Aoki's cookies after K actions.\n\n-----Sample Input-----\n2 3 3\n\n-----Sample Output-----\n0 2\n\nTakahashi will do the following:\n - He has two cookies, so he eats one of them.\n - Now he has one cookie left, and he eats it.\n - Now he has no cookies left, but Aoki has three, so Takahashi eats one of them.\nThus, in the end, Takahashi will have 0 cookies, and Aoki will have 2.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}