{"3151": {"code": ["import math\n\nn = int(input())\n\nfor k in range(int(math.sqrt(n)) + 1):\n    m_square = n + k * k\n    m = int(math.sqrt(m_square))\n    if m * m == m_square:\n        print(m, k)\n        break\nelse:\n        print('impossible')\n\n\nEXPLANATION:\nThis Python program takes an input $n$ and calculates the possible values of $m^2$ and $k^2$ for which $n = m^2 - k^", "import math\n\nn = int(input().strip())\n\n# calculate the square root of n\nroot = int(math.sqrt(n))\n\n# iterate from the square root to 0\nfor m in range(root, 0, -1):\n    # calculate the square of m\n    m2 = m * m\n    # calculate the value of n - m^2\n    k2 = m2 - n\n    # check if k2 is a perfect square\n    if int(math.sqrt(k2)) ** 2 == k2:\n        print(m, int(", "import math\n\nn = int(input())\nk = 1\nm = math.isqrt(n)\n\nwhile k <= m:\n    if m * m - k * k == n:\n        print(m, k)\n        exit(0)\n    k += 1\n    m = math.isqrt(n // k)\n\nprint('impossible')\n\nThis python program uses a brute-force approach to solve the problem. It starts by setting $k$ to 1 and $m$ to the integer square root of $n$. Then it enters a loop where", "import math\n\ndef solve(n):\n    for k in range(int(math.sqrt(n))+1):\n        m_square = n + k*k\n        m = int(math.sqrt(m_square))\n        if m*m == m_square:\n            return m, k\n    return \"impossible\"\n\nn = int(input().strip())\nm, k = solve(n)\nif m != \"impossible\":\n    print(m, k)\nelse:\n    print(m)\n\n\nEXPLANATION:\nThe code", "import math\n\ndef find_m_k(n):\n    for m in range(1, int(math.sqrt(n))+1):\n        for k in range(0, m):\n            if m*m - k*k == n:\n                return m, k\n    return \"impossible\"\n\nn = int(input())\nm, k = find_m_k(n)\nif m != \"impossible\":\n    print(f\"{m} {k}\")\nelse:\n    print(m)\n\nThis code uses a brute-force"], "prompt": "\nQUESTION:\nYou are an architect and you have just been appointed to build a new swimming hall. The organisation behind these plans has acquired funding for a swimming pool and surrounding building as large as they want, but unfortunately they could not find anyone willing to pay for the floor surrounding the pool. They decided to pay for the floor tiles out of their own pocket. Because this has already cost them an arm and a leg, they want you to use all the floor tiles in your proposed plan.\n\nBeing an architect, you care for aesthetics. You see it as absolutely vital that both the swimming pool and the surrounding building are perfect squares. This raises an interesting problem: how can you make sure that the square shapes are guaranteed, while still using all the floor tiles the organisation bought?\n\nGiven the number of tiles $n$, find the length of the side of the building $m$ and and the length of the side of the pool $k$ such that $n=m^2-k^2$, or print impossible if no suitable $m$ and $k$ exist.\n\n-----Input-----\n - One line containing a single integer $1\\leq n\\leq 10^9$.\n\n-----Output-----\nPrint two non-negative integers $m$, $k$ such that $n = m^2 - k^2$, or print impossible if no such integers exist. If there are multiple valid solutions, you may output any one of them.\n\n-----Examples-----\nSample Input 1:\n7\nSample Output 1:\n4 3\n\nSample Input 2:\n10\nSample Output 2:\nimpossible\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}