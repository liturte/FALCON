{"1482": {"code": ["n, k =", "n, k =", "n, k =", "n, k =", "n, k ="], "prompt": "\nQUESTION:\nOne day Ms Swan bought an orange in a shop. The orange consisted of n\u00b7k segments, numbered with integers from 1 to n\u00b7k. \n\nThere were k children waiting for Ms Swan at home. The children have recently learned about the orange and they decided to divide it between them. For that each child took a piece of paper and wrote the number of the segment that he would like to get: the i-th (1 \u2264 i \u2264 k) child wrote the number a_{i} (1 \u2264 a_{i} \u2264 n\u00b7k). All numbers a_{i} accidentally turned out to be different.\n\nNow the children wonder, how to divide the orange so as to meet these conditions:  each child gets exactly n orange segments;  the i-th child gets the segment with number a_{i} for sure;  no segment goes to two children simultaneously. \n\nHelp the children, divide the orange and fulfill the requirements, described above.\n\n\n-----Input-----\n\nThe first line contains two integers n, k (1 \u2264 n, k \u2264 30). The second line contains k space-separated integers a_1, a_2, ..., a_{k} (1 \u2264 a_{i} \u2264 n\u00b7k), where a_{i} is the number of the orange segment that the i-th child would like to get.\n\nIt is guaranteed that all numbers a_{i} are distinct.\n\n\n-----Output-----\n\nPrint exactly n\u00b7k distinct integers. The first n integers represent the indexes of the segments the first child will get, the second n integers represent the indexes of the segments the second child will get, and so on. Separate the printed numbers with whitespaces.\n\nYou can print a child's segment indexes in any order. It is guaranteed that the answer always exists. If there are multiple correct answers, print any of them.\n\n\n-----Examples-----\nInput\n2 2\n4 1\n\nOutput\n2 4 \n1 3 \n\nInput\n3 1\n2\n\nOutput\n3 2 1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}