{"2886": {"code": ["def solve():\n    s = input()\n    n = len(s)\n    cnt = [0]*26\n    for i in range(n):\n        cnt[ord(s[i])-97] += 1\n    for i in range(2, n//2+1):\n        if cnt[ord(s[i-1])-97] >= i//2 and cnt[ord(s[i-2])-97] >= i//2", "def unbalanced_substring(s):\n    for i in range(len(s)-1):\n        for j in range(i+2, len(s)+1):\n            substring = s[i:j]\n            if len(set(substring)) == 1:\n                return i+1, j\n    return -1, -1\n\ns = input()\nprint(*unbalanced_unbalanced_substring(s))\n\nThis solution works by iter", "from collections import Counter\n\ndef unbalanced_substring(s):\n    n = len(s)\n    for l in range(2, n+1):\n        for i in range(n-l+1):\n            sub = s[i:i+l]\n            counter = Counter(sub)\n            if max(counter.values()) > l//2:\n                return i+1, i+l\n    return -1, -1\n\ns = input()", "s = input()\n\ndef check_unbalanced(sub):\n    counts = dict()\n    for char in sub:\n        if char in counts:\n            counts[char] += 1\n        else:\n            counts[char] = 1\n    values = list(counts.values())\n    return max(values) > len(sub) // 2\n\nfor i in range(len(s)):\n    for j in range(i+2, len(s)+1):", "s = input()\n\ndef check_unbalanced(sub):\n    counts = [0]*26\n    for letter in sub:\n        counts[ord(letter)-97] += 1\n    max_count = max(counts)\n    return max_count > len(sub)//2\n\nfor i in range(len(s)-1):\n    for j in range(i+2, len(s)+1):\n        if check_unbalanced(s["], "prompt": "\nQUESTION:\nGiven a string t, we will call it unbalanced if and only if the length of t is at least 2, and more than half of the letters in t are the same. For example, both voodoo and melee are unbalanced, while neither noon nor a is.\nYou are given a string s consisting of lowercase letters. Determine if there exists a (contiguous) substring of s that is unbalanced. If the answer is positive, show a position where such a substring occurs in s.\n\n-----Constraints-----\n - 2 \u2266 |s| \u2266 10^5\n - s consists of lowercase letters.\n\n-----Partial Score-----\n - 200 points will be awarded for passing the test set satisfying 2 \u2266 N \u2266 100.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\ns\n\n-----Output-----\nIf there exists no unbalanced substring of s, print -1 -1.\nIf there exists an unbalanced substring of s, let one such substring be s_a s_{a+1} ... s_{b} (1 \u2266 a < b \u2266 |s|), and print a b. If there exists more than one such substring, any of them will be accepted.\n\n-----Sample Input-----\nneeded\n\n-----Sample Output-----\n2 5\n\nThe string s_2 s_3 s_4 s_5 = eede is unbalanced. There are also other unbalanced substrings. For example, the output 2 6 will also be accepted.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}