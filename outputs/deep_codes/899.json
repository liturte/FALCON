{"899": {"code": ["QUESTION:\nYou are given an undirected connected weighted graph with N vertices and M edges that contains neither self-loops nor double edges.\n\nThe i-th (1\u2264i\u2264M) edge connects vertex a_i and vertex b_i with a distance of c_i.\n\nHere, a self-loop is an edge where a_i = b_i (1\u2264i\u2264M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1\u2264i<j\u2264M).\n\nA connected graph is a graph where there is a path between every pair of different vertices.\n\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices.  \n\n-----Constraints-----\n - 2\u2264N\u2264100 \n - N-1\u2264M\u2264min(N(N-1)/2,1000) \n - 1\u2264a_i,b_i\u2264N \n - 1\u2264c_i\u22641000\n - c_i is an integer.\n - The given graph contains neither self-loops nor double edges.\n - The given graph is connected.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN M  \na_1 b_1 c_1  \na_2 b_2 c_2\n:  \na_M b_M c_M  \n\n-----Output-----\nPrint the number of the edges in the graph that are not contained in any shortest path between any pair of different vertices.\n\n-----Sample Input-----\n3 3\n1 2 1\n1 3 1\n2 3 3\n\n-----Sample Output-----\n1\n\nIn the given graph, the shortest paths between all pairs of different vertices are as follows:\n - The shortest path from vertex 1 to vertex 2 is: vertex 1 \u2192 vertex 2, with the length of 1.\n - The shortest path from vertex 1 to vertex 3 is: vertex 1 \u2192 vertex 3, with the length of 1.\n - The shortest path from vertex 2 to vertex 1 is: vertex 2 \u2192 vertex 1, with the length of 1.\n - The shortest path from vertex 2 to vertex 3 is: vertex 2 \u2192 vertex 1 \u2192 vertex 3, with the length of 2.\n - The", "QUESTION:\nYou are given an undirected connected weighted graph with N vertices and M edges that contains neither self-loops nor double edges.\n\nThe i-th (1\u2264i\u2264M) edge connects vertex a_i and vertex b_i with a distance of c_i.\n\nHere, a self-loop is an edge where a_i = b_i (1\u2264i\u2264M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1\u2264i<j\u2264M).\n\nA connected graph is a graph where there is a path between every pair of different vertices.\n\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices.  \n\n-----Constraints-----\n - 2\u2264N\u2264100 \n - N-1\u2264M\u2264min(N(N-1)/2,1000) \n - 1\u2264a_i,b_i\u2264N \n - 1\u2264c_i\u22641000\n - c_i is an integer.\n - The given graph contains neither self-loops nor double edges.\n - The given graph is connected.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN M  \na_1 b_1 c_1  \na_2 b_2 c_2\n:  \na_M b_M c_M  \n\n-----Output-----\nPrint the number of the edges in the graph that are not contained in any shortest path between any pair of different vertices.\n\n-----Sample Input-----\n3 3\n1 2 1\n1 3 1\n2 3 3\n\n-----Sample Output-----\n1\n\nIn the given graph, the shortest paths between all pairs of different vertices are as follows:\n - The shortest path from vertex 1 to vertex 2 is: vertex 1 \u2192 vertex 2, with the length of 1.\n - The shortest path from vertex 1 to vertex 3 is: vertex 1 \u2192 vertex 3, with the length of 1.\n - The shortest path from vertex 2 to vertex 1 is: vertex 2 \u2192 vertex 1, with the length of 1.\n - The shortest path from vertex 2 to vertex 3 is: vertex 2 \u2192 vertex 1 \u2192 vertex 3, with the length of 2.\n - The", "QUESTION:\nYou are given an undirected connected weighted graph with N vertices and M edges that contains neither self-loops nor double edges.\n\nThe i-th (1\u2264i\u2264M) edge connects vertex a_i and vertex b_i with a distance of c_i.\n\nHere, a self-loop is an edge where a_i = b_i (1\u2264i\u2264M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1\u2264i<j\u2264M).\n\nA connected graph is a graph where there is a path between every pair of different vertices.\n\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices.  \n\n-----Constraints-----\n - 2\u2264N\u2264100 \n - N-1\u2264M\u2264min(N(N-1)/2,1000) \n - 1\u2264a_i,b_i\u2264N \n - 1\u2264c_i\u22641000\n - c_i is an integer.\n - The given graph contains neither self-loops nor double edges.\n - The given graph is connected.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN M  \na_1 b_1 c_1  \na_2 b_2 c_2\n:  \na_M b_M c_M  \n\n-----Output-----\nPrint the number of the edges in the graph that are not contained in any shortest path between any pair of different vertices.\n\n-----Sample Input-----\n3 3\n1 2 1\n1 3 1\n2 3 3\n\n-----Sample Output-----\n1\n\nIn the given graph, the shortest paths between all pairs of different vertices are as follows:\n - The shortest path from vertex 1 to vertex 2 is: vertex 1 \u2192 vertex 2, with the length of 1.\n - The shortest path from vertex 1 to vertex 3 is: vertex 1 \u2192 vertex 3, with the length of 1.\n - The shortest path from vertex 2 to vertex 1 is: vertex 2 \u2192 vertex 1, with the length of 1.\n - The shortest path from vertex 2 to vertex 3 is: vertex 2 \u2192 vertex 1 \u2192 vertex 3, with the length of 2.\n - The", "QUESTION:\nYou are given an undirected connected weighted graph with N vertices and M edges that contains neither self-loops nor double edges.\n\nThe i-th (1\u2264i\u2264M) edge connects vertex a_i and vertex b_i with a distance of c_i.\n\nHere, a self-loop is an edge where a_i = b_i (1\u2264i\u2264M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1\u2264i<j\u2264M).\n\nA connected graph is a graph where there is a path between every pair of different vertices.\n\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices.  \n\n-----Constraints-----\n - 2\u2264N\u2264100 \n - N-1\u2264M\u2264min(N(N-1)/2,1000) \n - 1\u2264a_i,b_i\u2264N \n - 1\u2264c_i\u22641000\n - c_i is an integer.\n - The given graph contains neither self-loops nor double edges.\n - The given graph is connected.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN M  \na_1 b_1 c_1  \na_2 b_2 c_2\n:  \na_M b_M c_M  \n\n-----Output-----\nPrint the number of the edges in the graph that are not contained in any shortest path between any pair of different vertices.\n\n-----Sample Input-----\n3 3\n1 2 1\n1 3 1\n2 3 3\n\n-----Sample Output-----\n1\n\nIn the given graph, the shortest paths between all pairs of different vertices are as follows:\n - The shortest path from vertex 1 to vertex 2 is: vertex 1 \u2192 vertex 2, with the length of 1.\n - The shortest path from vertex 1 to vertex 3 is: vertex 1 \u2192 vertex 3, with the length of 1.\n - The shortest path from vertex 2 to vertex 1 is: vertex 2 \u2192 vertex 1, with the length of 1.\n - The shortest path from vertex 2 to vertex 3 is: vertex 2 \u2192 vertex 1 \u2192 vertex 3, with the length of 2.\n - The", "QUESTION:\nYou are given an undirected connected weighted graph with N vertices and M edges that contains neither self-loops nor double edges.\n\nThe i-th (1\u2264i\u2264M) edge connects vertex a_i and vertex b_i with a distance of c_i.\n\nHere, a self-loop is an edge where a_i = b_i (1\u2264i\u2264M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1\u2264i<j\u2264M).\n\nA connected graph is a graph where there is a path between every pair of different vertices.\n\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices.  \n\n-----Constraints-----\n - 2\u2264N\u2264100 \n - N-1\u2264M\u2264min(N(N-1)/2,1000) \n - 1\u2264a_i,b_i\u2264N \n - 1\u2264c_i\u22641000\n - c_i is an integer.\n - The given graph contains neither self-loops nor double edges.\n - The given graph is connected.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN M  \na_1 b_1 c_1  \na_2 b_2 c_2\n:  \na_M b_M c_M  \n\n-----Output-----\nPrint the number of the edges in the graph that are not contained in any shortest path between any pair of different vertices.\n\n-----Sample Input-----\n3 3\n1 2 1\n1 3 1\n2 3 3\n\n-----Sample Output-----\n1\n\nIn the given graph, the shortest paths between all pairs of different vertices are as follows:\n - The shortest path from vertex 1 to vertex 2 is: vertex 1 \u2192 vertex 2, with the length of 1.\n - The shortest path from vertex 1 to vertex 3 is: vertex 1 \u2192 vertex 3, with the length of 1.\n - The shortest path from vertex 2 to vertex 1 is: vertex 2 \u2192 vertex 1, with the length of 1.\n - The shortest path from vertex 2 to vertex 3 is: vertex 2 \u2192 vertex 1 \u2192 vertex 3, with the length of 2.\n - The"], "prompt": "\nQUESTION:\nYou are given an undirected connected weighted graph with N vertices and M edges that contains neither self-loops nor double edges.\n\nThe i-th (1\u2264i\u2264M) edge connects vertex a_i and vertex b_i with a distance of c_i.\n\nHere, a self-loop is an edge where a_i = b_i (1\u2264i\u2264M), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1\u2264i<j\u2264M).\n\nA connected graph is a graph where there is a path between every pair of different vertices.\n\nFind the number of the edges that are not contained in any shortest path between any pair of different vertices.  \n\n-----Constraints-----\n - 2\u2264N\u2264100 \n - N-1\u2264M\u2264min(N(N-1)/2,1000) \n - 1\u2264a_i,b_i\u2264N \n - 1\u2264c_i\u22641000\n - c_i is an integer.\n - The given graph contains neither self-loops nor double edges.\n - The given graph is connected.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN M  \na_1 b_1 c_1  \na_2 b_2 c_2\n:  \na_M b_M c_M  \n\n-----Output-----\nPrint the number of the edges in the graph that are not contained in any shortest path between any pair of different vertices.\n\n-----Sample Input-----\n3 3\n1 2 1\n1 3 1\n2 3 3\n\n-----Sample Output-----\n1\n\nIn the given graph, the shortest paths between all pairs of different vertices are as follows:\n - The shortest path from vertex 1 to vertex 2 is: vertex 1 \u2192 vertex 2, with the length of 1.\n - The shortest path from vertex 1 to vertex 3 is: vertex 1 \u2192 vertex 3, with the length of 1.\n - The shortest path from vertex 2 to vertex 1 is: vertex 2 \u2192 vertex 1, with the length of 1.\n - The shortest path from vertex 2 to vertex 3 is: vertex 2 \u2192 vertex 1 \u2192 vertex 3, with the length of 2.\n - The shortest path from vertex 3 to vertex 1 is: vertex 3 \u2192 vertex 1, with the length of 1.\n - The shortest path from vertex 3 to vertex 2 is: vertex 3 \u2192 vertex 1 \u2192 vertex 2, with the length of 2.\nThus, the only edge that is not contained in any shortest path, is the edge of length 3 connecting vertex 2 and vertex 3, hence the output should be 1.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}