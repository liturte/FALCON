{"481": {"code": ["n, x = map(int, input().split())\nprint(min(n, x // i) - max(1, x // (i + 1)) for i in range(1, n + 1))", "n, x = map(int, input().split())\nprint(min(x//i for i in range(1, n+1)) * min(x//i for i in range(1, n+1)))\n\n\n\nEXPLANATION:\nThis program reads the input and splits it into two variables, n and x. It then uses the min function to find the minimum number of rows and columns that x can be divided by without leaving a remainder. The result of this is the number of cells in the table that contain x. It then multiplies this number by itself to get the total number of cells that contain x.\n\nThe reason for using the min function is because x can't be divided by a number larger than itself or n. The range function generates numbers from 1 to n, and for each number i, it calculates the number of times x can be divided by i without leaving a remainder. The min function then finds the smallest of these numbers.\n\nThe reason for squaring the result is because each cell in the table corresponds to a unique pair of rows", "n, x = map(int, input().split())\ncount = 0\nfor i in range(1, n+1):\n    if x % i == 0 and x / i <= n:\n        count += 1\nprint(count)\n\nThis solution works by iterating from 1 to n and checking if x is divisible by i (i.e., x is a multiple of i) and if x divided by i is less than or equal to n (i.e., the corresponding j is within the table bounds). If both conditions are met, we increment the count.\n\nThe time complexity of this solution is O(n) as it involves a single loop over the range of 1 to n. The space complexity is O(1) as it only uses a constant amount of space to store the input values and the count.\n\nThis solution will work correctly for all valid inputs and will count the number of occurrences of x in a table of size n.\n\nThe test cases given in the problem statement are also handled correctly by this solution. For example, in the", "n, x = map(int, input().split())\ncount = 0\nfor i in range(1, n+1):\n    if x % i == 0 and x / i <= n:\n        count += 1\nprint(count)\n\n\nEXPLANATION:\nThis code works by iterating over the range of numbers from 1 to n (inclusive). For each number i, it checks if x is divisible by i and if x divided by i is less than or equal to n. If both conditions are met, it means that the number i is a valid row index and the number i is a valid column index for the cell containing x in the table. It increments the count for each valid pair. Finally, it prints the count, which is the number of cells in the table that contain the number x.", "n, x = map(int, input().split())\ncount = 0\nfor i in range(1, n + 1):\n    if x % i == 0 and x / i <= n:\n        count += 1\nprint(count)\n\n\nThis Python program works by iterating over each row (i) of the table from 1 to n (inclusive), and checking if x is divisible by i (i.e., i is a factor of x) and if x divided by i is less than or equal to n (i.e., the corresponding column index is within the table). If both conditions are met, it means that the cell at the intersection of the i-th row and the corresponding column contains x. The number of such cells is incremented by 1. The process is repeated until all rows have been checked. The final count is then printed.\n\nNote: This solution assumes that the table is square, i.e., the number of rows and columns are the same.\n\nThis solution has a time complexity of O(n), which is the best possible"], "prompt": "\nQUESTION:\nLet's consider a table consisting of n rows and n columns. The cell located at the intersection of i-th row and j-th column contains number i \u00d7 j. The rows and columns are numbered starting from 1.\n\nYou are given a positive integer x. Your task is to count the number of cells in a table that contain number x.\n\n\n-----Input-----\n\nThe single line contains numbers n and x (1 \u2264 n \u2264 10^5, 1 \u2264 x \u2264 10^9) \u2014 the size of the table and the number that we are looking for in the table.\n\n\n-----Output-----\n\nPrint a single number: the number of times x occurs in the table.\n\n\n-----Examples-----\nInput\n10 5\n\nOutput\n2\n\nInput\n6 12\n\nOutput\n4\n\nInput\n5 13\n\nOutput\n0\n\n\n\n-----Note-----\n\nA table for the second sample test is given below. The occurrences of number 12 are marked bold.  [Image]\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}