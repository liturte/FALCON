{"484": {"code": ["def max_area(n, a, b", "import itertools\n\ndef max_area(", "n, a, b = map(int,", "n, a, b = map(int,", "def max_area(n, a, b"], "prompt": "\nQUESTION:\nOne very important person has a piece of paper in the form of a rectangle a \u00d7 b.\n\nAlso, he has n seals. Each seal leaves an impression on the paper in the form of a rectangle of the size x_{i} \u00d7 y_{i}. Each impression must be parallel to the sides of the piece of paper (but seal can be rotated by 90 degrees).\n\nA very important person wants to choose two different seals and put them two impressions. Each of the selected seals puts exactly one impression. Impressions should not overlap (but they can touch sides), and the total area occupied by them should be the largest possible. What is the largest area that can be occupied by two seals?\n\n\n-----Input-----\n\nThe first line contains three integer numbers n, a and b (1 \u2264 n, a, b \u2264 100).\n\nEach of the next n lines contain two numbers x_{i}, y_{i} (1 \u2264 x_{i}, y_{i} \u2264 100).\n\n\n-----Output-----\n\nPrint the largest total area that can be occupied by two seals. If you can not select two seals, print 0.\n\n\n-----Examples-----\nInput\n2 2 2\n1 2\n2 1\n\nOutput\n4\n\nInput\n4 10 9\n2 3\n1 1\n5 10\n9 11\n\nOutput\n56\n\nInput\n3 10 10\n6 6\n7 7\n20 5\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example you can rotate the second seal by 90 degrees. Then put impression of it right under the impression of the first seal. This will occupy all the piece of paper.\n\nIn the second example you can't choose the last seal because it doesn't fit. By choosing the first and the third seals you occupy the largest area.\n\nIn the third example there is no such pair of seals that they both can fit on a piece of paper.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}