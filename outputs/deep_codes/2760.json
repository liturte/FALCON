{"2760": {"code": ["n = int(input())\narr = [int(input()) for _ in range(n)]\nswaps = [0]*n\n\ndef swap(i, j):\n    arr[i], arr[j] = arr[j], arr[i]\n    swaps[j-i-", "def turbosort():\n    N = int(input())\n    arr = [int(input()) for _ in range(N)]\n    sorted_arr = sorted(arr)\n    count = [0] * N\n    for i in range(N):\n        if arr[i] != sorted", "def turbosort(n, arr):\n    swaps = [0] * n\n    for i in range(n):\n        while arr[i] != i + 1:\n            swaps[i] += 1\n            arr[i], arr[arr[i] - 1] =", "N = int(input())\nnums = [int(input()) for _ in range(N)]\nswaps = [0]*N\n\ndef swap(n, arr):\n    if n == 1 or n == N:\n        return arr, 0\n    if n % 2 == 0", "N = int(input())\narr = [int(input()) for _ in range(N)]\nswaps = [0] * N\n\nfor i in range(N):\n    while arr[i] != i + 1:\n        arr[arr[i] - 1], arr[i"], "prompt": "\nQUESTION:\nFrane has been given the task of sorting an array of numbers. The array consists of $N$ integers, each between $1$ and $N$ (inclusive), with each of those appearing exactly once in the array. Frane has come up with the following sorting algorithm which operates in $N$ phases, and named it turbosort:\n - In the first phase, the number $1$ is moved to position $1$ by repeatedly swapping consecutive elements.\n - In the second phase, the number $N$ is moved to position $N$ in the same manner.\n - In the third phase, the number $2$ is moved to position $2$.\n - In the fourth phase, the number $N-1$ is moved to position $N-1$.\n - And so on...\n\nIn other words, when the number of the phase is odd, Frane will choose the smallest number not yet chosen, and move it to its final position. In even phases he chooses the largest number not yet chosen. Write a program which, given the initial array, output the number of swaps in each phase of the algorithm.\n\n-----Input-----\nThe first line contains an integer $N$ ($1 \\le N \\le 100000$), the number of elements in the array. Each of the following $N$ lines contains an integer between $1$ and $N$ (inclusive), the array to be sorted. The array will contain no duplicates.\n\n-----Output-----\nFor each of the $N$ phases, output the number of swaps on a single line.\n\n-----Examples-----\nSample Input 1:\n3\n2\n1\n3\nSample Output 1:\n1\n0\n0\n\nSample Input 2:\n5\n5\n4\n3\n2\n1\nSample Output 2:\n4\n3\n2\n1\n0\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}