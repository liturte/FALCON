{"4262": {"code": ["from math import factorial\n\nN = int(input())\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\n\ndef to_num(p):\n    n = len(p)\n    res = 0\n    used = [False] * (n + 1)\n    for i in range(n):\n        cnt = 0\n        for j in range(1, p[i]):\n            if not used", "import sys\nfrom math import factorial\n\nN = int(sys.stdin.readline())\nP = list(map(int, sys.stdin.readline().split()))\nQ = list(map(int, sys.stdin.readline().split()))\n\ndef permutation_to_num(p):\n    n = len(p)\n    f = factorial(n)\n    count = [0] * (n+1)\n    for i in range", "import sys\nfrom math import factorial\n\nN = int(sys.stdin.readline().strip())\nP = list(map(int, sys.stdin.readline().strip().split()))\nQ = list(map(int, sys.stdin.readline().strip().split()))\n\ndef lexicographical_rank(p):\n    n = len(p)\n    rank = 0\n    for i in range(n):\n        less = sum(1 for j", "from math import factorial\n\nN = int(input())\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\n\nP_num = 0\nQ_num = 0\nF = factorial(N)\nf = F\nfor i in range(1, N+1):\n    f //= i\n    P_num += (P[i-1]-1) * f\n    Q_num += (Q[", "from math import factorial\n\nN = int(input())\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\n\ndef lexicographic_rank(p):\n    n = len(p)\n    rank = 0\n    for i in range(n):\n        count = 0\n        for j in range(i+1, n):\n            if p[j] < p[i]:\n                count += 1"], "prompt": "\nQUESTION:\nWe have two permutations P and Q of size N (that is, P and Q are both rearrangements of (1,~2,~...,~N)).\nThere are N! possible permutations of size N. Among them, let P and Q be the a-th and b-th lexicographically smallest permutations, respectively. Find |a - b|.\n\n-----Notes-----\nFor two sequences X and Y, X is said to be lexicographically smaller than Y if and only if there exists an integer k such that X_i = Y_i~(1 \\leq i < k) and X_k < Y_k.\n\n-----Constraints-----\n - 2 \\leq N \\leq 8\n - P and Q are permutations of size N.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nP_1 P_2 ... P_N\nQ_1 Q_2 ... Q_N\n\n-----Output-----\nPrint |a - b|.\n\n-----Sample Input-----\n3\n1 3 2\n3 1 2\n\n-----Sample Output-----\n3\n\nThere are 6 permutations of size 3: (1,~2,~3), (1,~3,~2), (2,~1,~3), (2,~3,~1), (3,~1,~2), and (3,~2,~1). Among them, (1,~3,~2) and (3,~1,~2) come 2-nd and 5-th in lexicographical order, so the answer is |2 - 5| = 3.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}