{"1037": {"code": ["N = int(input())\nA = list(map(int, input().split()))\n\ndp = [[0]*2001 for _ in range(2001)]\ns = [0]*(N+1)\n\nfor i in range(1, N+1):\n    s[i] = s[i-1]+A[i-1]\n\nfor l in range(2, N+1):\n    for i in range(1, N-l+3):\n        j = i+l-1\n        dp[i][j] = max(dp[i+1][j]+", "n = int(input())\na = list(map(int, input().split()))\na.sort()\n\nprint(sum(a[i] * (n - i - 1) for i in range(n)) - sum(a[:-1]))\n\n\nExplanation:\nThe idea is to sort the input array `a` in ascending order.\nThen, for each child, the happiness he or she can earn is `a[i] * (n - i - 1)`, where `i` is the position of the child in the sorted array.\nWe calculate the total happiness by summing up the happiness of all", "import sys\n\ndef solve():\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n\n    a = [[a[i], i] for i in range(n)]\n    a.sort()\n\n    ans = 0\n    s = 0\n    for i in range(n):\n        ans += s - a[i][1] * a[i][0]\n        s += a[i][1] * a[i][0]\n\n    print(ans)\n\nsolve()", "def max_happiness():\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    A = [[A[i], i+1] for i in range(N)]\n    A.sort()\n\n    ans = 0\n    s = 0\n    for i in range(N):\n        ans += s\n        s += A[i][1] * A[i][0]\n\n    print(ans)\n\nmax_happiness()\n\n\nThis code is a solution to the problem. It first reads the number of children `N` and the activeness of each child", "N = int(input())\nA = list(map(int, input().split()))\n\ndp = [[0]*2001 for _ in range(2001)]\nprefix = [0]*(N+1)\n\nfor i in range(1, N+1):\n    for j in range(1, N+1):\n        dp[i][j] = max(dp[i-1][j-1] + A[i-1]*(abs(i-j)+1), dp[i-1][j] + A[i-1]*(abs(i-j-1)+"], "prompt": "\nQUESTION:\nThere are N children standing in a line from left to right. The activeness of the i-th child from the left is A_i.\nYou can rearrange these children just one time in any order you like.\nWhen a child who originally occupies the x-th position from the left in the line moves to the y-th position from the left, that child earns A_x \\times |x-y| happiness points.\nFind the maximum total happiness points the children can earn.\n\n-----Constraints-----\n - 2 \\leq N \\leq 2000\n - 1 \\leq A_i \\leq 10^9\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n-----Output-----\nPrint the maximum total happiness points the children can earn.\n\n-----Sample Input-----\n4\n1 3 4 2\n\n-----Sample Output-----\n20\n\nIf we move the 1-st child from the left to the 3-rd position from the left, the 2-nd child to the 4-th position, the 3-rd child to the 1-st position, and the 4-th child to the 2-nd position, the children earns 1 \\times |1-3|+3 \\times |2-4|+4 \\times |3-1|+2 \\times |4-2|=20 happiness points in total.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}