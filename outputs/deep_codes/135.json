{"135": {"code": ["n, k = map(int, input().split())\nif k >= n:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n\n\nThis solution is based on the fact that the remainder of division by any number is less than the number itself. So, if k >= n, the remainder of division n by any i (1 <= i <= k) is always less than n and therefore cannot be distinct. If k < n, all remainders are distinct and the program outputs \"Yes\".\n\nThis solution runs in O(1) time, as it only performs a few constant-time operations.\n\nPlease note that this solution assumes that the input will be in the correct format and that n and k are integers.", "def solve():\n    n, k = map(int, input().split())\n    if k >= n:\n        print('No')\n    else:\n        print('Yes')\n\nsolve()\n\n\nThis code reads the input, checks if k is greater than or equal to n and prints \"No\" if it is, otherwise it prints \"Yes\".\n\nThe reason for this is that if k is greater than or equal to n, then for any i from 1 to k, the remainder of n divided by i will be the same, because n is less than or equal to i, and thus the remainder is n itself. Therefore, there won't be any distinct remainders.\n\nOn the other hand,", "n, k = map(int, input().split())\nprint(\"Yes\" if n % k != 0 else \"No\")\n\n\nThis is a Python solution that directly checks if the remainder of the division of n by k is 0 or not. If it is 0, it means that there exists a number i such that n is a multiple of i, which is not possible for all i from 1 to k. Therefore, all the remainders are distinct and the answer is \"Yes\". If the remainder is not 0, it means that there exists a number i such that n and k have a common divisor, which is not possible for all i from 1 to k. Therefore, not all the remainders are distinct and", "def check_remainders(n, k):\n    for i in range(1, k+1):\n        if n % i == 0:\n            return \"No\"\n    return \"Yes\"\n\nn, k = map(int, input().split())\nprint(check_remainders(n, k))\n\n\nEXPLANATION:\nThe function `check_remainders` checks each number from 1 to k to see if it divides n. If it does, it returns \"No\". If no number divides n, it returns \"Yes\". The inputs are read from the command line and passed to the `check_remainders` function. The result is printed to the command line", "n, k = map(int, input().split())\nif n < k:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n\n\nThis solution assumes that all remainders are distinct if the divisor (i) is less than the number (n). This is because the remainder of division of any number by itself is always zero. So, if n < k, there must be at least one number that n mod i = 0, which contradicts the condition that all remainders are distinct. Therefore, if n >= k, all remainders are distinct.\n\nThis solution is based on the fact that the remainder of division of a number by itself is zero. It's also based on the fact that if n <"], "prompt": "\nQUESTION:\nImp is watching a documentary about cave painting. [Image] \n\nSome numbers, carved in chaotic order, immediately attracted his attention. Imp rapidly proposed a guess that they are the remainders of division of a number n by all integers i from 1 to k. Unfortunately, there are too many integers to analyze for Imp.\n\nImp wants you to check whether all these remainders are distinct. Formally, he wants to check, if all $n \\text{mod} i$, 1 \u2264 i \u2264 k, are distinct, i.\u00a0e. there is no such pair (i, j) that:   1 \u2264 i < j \u2264 k,  $n \\operatorname{mod} i = n \\operatorname{mod} j$, where $x \\operatorname{mod} y$ is the remainder of division x by y. \n\n\n-----Input-----\n\nThe only line contains two integers n, k (1 \u2264 n, k \u2264 10^18).\n\n\n-----Output-----\n\nPrint \"Yes\", if all the remainders are distinct, and \"No\" otherwise.\n\nYou can print each letter in arbitrary case (lower or upper).\n\n\n-----Examples-----\nInput\n4 4\n\nOutput\nNo\n\nInput\n5 3\n\nOutput\nYes\n\n\n\n-----Note-----\n\nIn the first sample remainders modulo 1 and 4 coincide.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}