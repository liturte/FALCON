{"1424": {"code": ["def count_friends(n, m, k):\n    x = [int(input()) for _ in range(m+1)]\n    x.sort()\n    count = 0\n    for i in range", "def count_friends(n, m, k):\n    def bin_diff(x, y):\n        return bin(x ^ y).count('1')\n\n    fedor_army = int(", "def count_friends(n, m, k):\n    fedor_army = input()\n    friends = 0\n    for i in range(m):\n        army = input()\n        if bin(", "def binary_diff(x, y):\n    return bin(x ^ y).count('1')\n\ndef count_friends(n, m, k, armies):\n    fedor = armies[", "def binary_diff(a, b):\n    return bin(a ^ b).count('1')\n\ndef count_friends(n, m, k, x):\n    count = 0\n    for i"], "prompt": "\nQUESTION:\nAfter you had helped George and Alex to move in the dorm, they went to help their friend Fedor play a new computer game \u00abCall of Soldiers 3\u00bb.\n\nThe game has (m + 1) players and n types of soldiers in total. Players \u00abCall of Soldiers 3\u00bb are numbered form 1 to (m + 1). Types of soldiers are numbered from 0 to n - 1. Each player has an army. Army of the i-th player can be described by non-negative integer x_{i}. Consider binary representation of x_{i}: if the j-th bit of number x_{i} equal to one, then the army of the i-th player has soldiers of the j-th type. \n\nFedor is the (m + 1)-th player of the game. He assume that two players can become friends if their armies differ in at most k types of soldiers (in other words, binary representations of the corresponding numbers differ in at most k bits). Help Fedor and count how many players can become his friends.\n\n\n-----Input-----\n\nThe first line contains three integers n, m, k (1 \u2264 k \u2264 n \u2264 20;\u00a01 \u2264 m \u2264 1000).\n\nThe i-th of the next (m + 1) lines contains a single integer x_{i} (1 \u2264 x_{i} \u2264 2^{n} - 1), that describes the i-th player's army. We remind you that Fedor is the (m + 1)-th player.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of Fedor's potential friends.\n\n\n-----Examples-----\nInput\n7 3 1\n8\n5\n111\n17\n\nOutput\n0\n\nInput\n3 3 3\n1\n2\n3\n4\n\nOutput\n3\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}