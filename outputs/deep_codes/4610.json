{"4610": {"code": ["from collections import Counter\n\ndef min_balls_to_change(n, k, balls):\n    counter = Counter(balls)\n    return max(0, len(counter) - k)\n\nn, k = map(int, input().split())\nballs = list(map(int, input().split()))\nprint(min_balls_to_change(n, k, balls))\n\n\nThis code uses the Counter class from the collections module to count the occurrences of each integer in the list of balls. It then returns the maximum of 0 and the difference between the total number of unique integers and K. This is the minimum number of balls that Takahashi needs to rewrite the integers on.\n\nThe input is read from Standard Input in the format specified in the problem statement, and the result is printed to Standard Output.\n\nThe time complexity of this code is O(N), where N is the number of", "from collections import Counter\n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\ncounter = Counter(A)\nkeys = list(counter.keys())\nkeys.sort(key=lambda x: counter[x], reverse=True)\n\ncount = 0\nfor i in range(len(keys)):\n    if i < K:\n        count += counter[keys[i]]\n    else:\n        break\n\nprint(N - count)\n\n\nExplanation:\nThis solution uses the Counter class from the collections module in Python to count the frequency of each integer in the list A. Then it sorts the keys of the counter by their frequencies in descending order. After that, it iterates over the sorted keys and adds up the frequencies of the first K keys to get the count of balls that need to be rewritten. Finally, it subtracts the count from the", "from collections import Counter\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nc = Counter(A)\nkeys = list(c.keys())\nkeys.sort(key=lambda x: c[x], reverse=True)\n\nans = N\nfor i in range(len(keys)):\n    if i < K:\n        ans = min(ans, N - sum(c.values()) + i + 1)\n    else:\n        ans = min(ans, N - sum(c.values()) + K)\n\nprint(ans)\n\n\nThis python script uses the Counter class from the collections module to count the number of occurrences of each integer in the list of balls. The keys from the Counter object are sorted in descending order of their count, and then the script iterates over these keys, keeping track of the minimum number of", "from collections import Counter\nfrom sys import stdin\n\nN, K = map(int, stdin.readline().split())\nA = list(map(int, stdin.readline().split()))\n\ncount = Counter(A)\n\nif len(count) <= K:\n    print(0)\nelse:\n    print(len(A) - max(count.values()))\n\n\nThis solution uses the Counter class from the collections module to count the number of occurrences of each integer in the list A. If the number of different integers is less than or equal to K, it means that there are not enough distinct integers to make K different integers, so it prints 0. Otherwise, it calculates the minimum number of balls that Takahashi needs to rewrite the integers on by subtracting the maximum number of occurrences from the total number of balls. This is because the maximum number of occurrences means that the most frequent integer", "from collections import Counter\n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\ncounter = Counter(A)\n\nif len(counter) <= K:\n    print(0)\nelse:\n    print(len(counter) - K)\n\nThis python program uses the Counter class from the collections module to count the occurrences of each integer in the list A. If the number of unique integers is less than or equal to K, it means that there are at most K different integers in A, so Takahashi doesn't need to rewrite any balls, so it prints 0. Otherwise, it prints the difference between the number of unique integers and K, which is the minimum number of balls Takahashi needs to rewrite.\n\nThis program works by first reading the number of balls N and the maximum number of different integers K, and then reading the integers on the balls. It"], "prompt": "\nQUESTION:\nTakahashi has N balls. Initially, an integer A_i is written on the i-th ball.\nHe would like to rewrite the integer on some balls so that there are at most K different integers written on the N balls.\nFind the minimum number of balls that Takahashi needs to rewrite the integers on them.\n\n-----Constraints-----\n - 1 \\leq K \\leq N \\leq 200000\n - 1 \\leq A_i \\leq N\n - All input values are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\nA_1 A_2 ... A_N\n\n-----Output-----\nPrint the minimum number of balls that Takahashi needs to rewrite the integers on them.\n\n-----Sample Input-----\n5 2\n1 1 2 2 5\n\n-----Sample Output-----\n1\n\nFor example, if we rewrite the integer on the fifth ball to 2, there are two different integers written on the balls: 1 and 2.\nOn the other hand, it is not possible to rewrite the integers on zero balls so that there are at most two different integers written on the balls, so we should print 1.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}