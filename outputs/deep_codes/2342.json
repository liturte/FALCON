{"2342": {"code": ["QUESTION:\nVivek has encountered a problem. He has a maze that can be represented as an $n \\times m$ grid. Each of the grid cells may represent the following:  Empty\u00a0\u2014 '.'  Wall\u00a0\u2014 '#'  Good person \u00a0\u2014 'G'  Bad person\u00a0\u2014 'B' \n\nThe only escape from the maze is at cell $(n, m)$.\n\nA person can move to a cell only if it shares a side with their current cell and does not contain a wall. Vivek wants to block some of the empty cells by replacing them with walls in such a way, that all the good people are able to escape, while none of the bad people are able to. A cell that initially contains 'G' or 'B' cannot be blocked and can be travelled through.\n\nHelp him determine if there exists a way to replace some (zero or more) empty cells with walls to satisfy the above conditions.\n\nIt is guaranteed that the cell $(n,m)$ is empty. Vivek can also block this cell.\n\n\n-----Input-----\n\nThe first line contains one integer $t$ $(1 \\le t \\le 100)$\u00a0\u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$, $m$ $(1 \\le n, m \\le 50)$\u00a0\u2014 the number of rows and columns in the maze.\n\nEach of the next $n$ lines contain $m$ characters. They describe the layout of the maze. If a character on a line equals '.', the corresponding cell is empty. If it equals '#', the cell has a wall. 'G' corresponds to a good person and 'B' corresponds to a bad person.\n\n\n-----Output-----\n\nFor each test case, print \"Yes\" if there exists a way to replace some empty cells with walls to satisfy the given conditions. Otherwise print \"No\"\n\nYou may print every letter in any case (upper or lower).\n\n\n-----Example-----\nInput\n6\n1 1\n.\n1 2\nG.\n2 2\n#B\nG.\n2 3\nG.#\nB#.\n3 3\n#B.\n#..\nGG.\n2 2\n#B\nB.\n\nOutput\nYes\nYes\nNo\nNo\nYes\nYes\n\n\n\n-----Note-----\n\nFor the first and second test cases, all conditions are already satisfied.\n\nFor the third test case, there is only one empty cell $(2,2)$, and if it is replaced with a wall then the good person at $(1,2", "QUESTION:\nVivek has encountered a problem. He has a maze that can be represented as an $n \\times m$ grid. Each of the grid cells may represent the following:  Empty\u00a0\u2014 '.'  Wall\u00a0\u2014 '#'  Good person \u00a0\u2014 'G'  Bad person\u00a0\u2014 'B' \n\nThe only escape from the maze is at cell $(n, m)$.\n\nA person can move to a cell only if it shares a side with their current cell and does not contain a wall. Vivek wants to block some of the empty cells by replacing them with walls in such a way, that all the good people are able to escape, while none of the bad people are able to. A cell that initially contains 'G' or 'B' cannot be blocked and can be travelled through.\n\nHelp him determine if there exists a way to replace some (zero or more) empty cells with walls to satisfy the above conditions.\n\nIt is guaranteed that the cell $(n,m)$ is empty. Vivek can also block this cell.\n\n\n-----Input-----\n\nThe first line contains one integer $t$ $(1 \\le t \\le 100)$\u00a0\u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$, $m$ $(1 \\le n, m \\le 50)$\u00a0\u2014 the number of rows and columns in the maze.\n\nEach of the next $n$ lines contain $m$ characters. They describe the layout of the maze. If a character on a line equals '.', the corresponding cell is empty. If it equals '#', the cell has a wall. 'G' corresponds to a good person and 'B' corresponds to a bad person.\n\n\n-----Output-----\n\nFor each test case, print \"Yes\" if there exists a way to replace some empty cells with walls to satisfy the given conditions. Otherwise print \"No\"\n\nYou may print every letter in any case (upper or lower).\n\n\n-----Example-----\nInput\n6\n1 1\n.\n1 2\nG.\n2 2\n#B\nG.\n2 3\nG.#\nB#.\n3 3\n#B.\n#..\nGG.\n2 2\n#B\nB.\n\nOutput\nYes\nYes\nNo\nNo\nYes\nYes\n\n\n\n-----Note-----\n\nFor the first and second test cases, all conditions are already satisfied.\n\nFor the third test case, there is only one empty cell $(2,2)$, and if it is replaced with a wall then the good person at $(1,2", "QUESTION:\nVivek has encountered a problem. He has a maze that can be represented as an $n \\times m$ grid. Each of the grid cells may represent the following:  Empty\u00a0\u2014 '.'  Wall\u00a0\u2014 '#'  Good person \u00a0\u2014 'G'  Bad person\u00a0\u2014 'B' \n\nThe only escape from the maze is at cell $(n, m)$.\n\nA person can move to a cell only if it shares a side with their current cell and does not contain a wall. Vivek wants to block some of the empty cells by replacing them with walls in such a way, that all the good people are able to escape, while none of the bad people are able to. A cell that initially contains 'G' or 'B' cannot be blocked and can be travelled through.\n\nHelp him determine if there exists a way to replace some (zero or more) empty cells with walls to satisfy the above conditions.\n\nIt is guaranteed that the cell $(n,m)$ is empty. Vivek can also block this cell.\n\n\n-----Input-----\n\nThe first line contains one integer $t$ $(1 \\le t \\le 100)$\u00a0\u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$, $m$ $(1 \\le n, m \\le 50)$\u00a0\u2014 the number of rows and columns in the maze.\n\nEach of the next $n$ lines contain $m$ characters. They describe the layout of the maze. If a character on a line equals '.', the corresponding cell is empty. If it equals '#', the cell has a wall. 'G' corresponds to a good person and 'B' corresponds to a bad person.\n\n\n-----Output-----\n\nFor each test case, print \"Yes\" if there exists a way to replace some empty cells with walls to satisfy the given conditions. Otherwise print \"No\"\n\nYou may print every letter in any case (upper or lower).\n\n\n-----Example-----\nInput\n6\n1 1\n.\n1 2\nG.\n2 2\n#B\nG.\n2 3\nG.#\nB#.\n3 3\n#B.\n#..\nGG.\n2 2\n#B\nB.\n\nOutput\nYes\nYes\nNo\nNo\nYes\nYes\n\n\n\n-----Note-----\n\nFor the first and second test cases, all conditions are already satisfied.\n\nFor the third test case, there is only one empty cell $(2,2)$, and if it is replaced with a wall then the good person at $(1,2", "QUESTION:\nVivek has encountered a problem. He has a maze that can be represented as an $n \\times m$ grid. Each of the grid cells may represent the following:  Empty\u00a0\u2014 '.'  Wall\u00a0\u2014 '#'  Good person \u00a0\u2014 'G'  Bad person\u00a0\u2014 'B' \n\nThe only escape from the maze is at cell $(n, m)$.\n\nA person can move to a cell only if it shares a side with their current cell and does not contain a wall. Vivek wants to block some of the empty cells by replacing them with walls in such a way, that all the good people are able to escape, while none of the bad people are able to. A cell that initially contains 'G' or 'B' cannot be blocked and can be travelled through.\n\nHelp him determine if there exists a way to replace some (zero or more) empty cells with walls to satisfy the above conditions.\n\nIt is guaranteed that the cell $(n,m)$ is empty. Vivek can also block this cell.\n\n\n-----Input-----\n\nThe first line contains one integer $t$ $(1 \\le t \\le 100)$\u00a0\u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$, $m$ $(1 \\le n, m \\le 50)$\u00a0\u2014 the number of rows and columns in the maze.\n\nEach of the next $n$ lines contain $m$ characters. They describe the layout of the maze. If a character on a line equals '.', the corresponding cell is empty. If it equals '#', the cell has a wall. 'G' corresponds to a good person and 'B' corresponds to a bad person.\n\n\n-----Output-----\n\nFor each test case, print \"Yes\" if there exists a way to replace some empty cells with walls to satisfy the given conditions. Otherwise print \"No\"\n\nYou may print every letter in any case (upper or lower).\n\n\n-----Example-----\nInput\n6\n1 1\n.\n1 2\nG.\n2 2\n#B\nG.\n2 3\nG.#\nB#.\n3 3\n#B.\n#..\nGG.\n2 2\n#B\nB.\n\nOutput\nYes\nYes\nNo\nNo\nYes\nYes\n\n\n\n-----Note-----\n\nFor the first and second test cases, all conditions are already satisfied.\n\nFor the third test case, there is only one empty cell $(2,2)$, and if it is replaced with a wall then the good person at $(1,2", "QUESTION:\nVivek has encountered a problem. He has a maze that can be represented as an $n \\times m$ grid. Each of the grid cells may represent the following:  Empty\u00a0\u2014 '.'  Wall\u00a0\u2014 '#'  Good person \u00a0\u2014 'G'  Bad person\u00a0\u2014 'B' \n\nThe only escape from the maze is at cell $(n, m)$.\n\nA person can move to a cell only if it shares a side with their current cell and does not contain a wall. Vivek wants to block some of the empty cells by replacing them with walls in such a way, that all the good people are able to escape, while none of the bad people are able to. A cell that initially contains 'G' or 'B' cannot be blocked and can be travelled through.\n\nHelp him determine if there exists a way to replace some (zero or more) empty cells with walls to satisfy the above conditions.\n\nIt is guaranteed that the cell $(n,m)$ is empty. Vivek can also block this cell.\n\n\n-----Input-----\n\nThe first line contains one integer $t$ $(1 \\le t \\le 100)$\u00a0\u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$, $m$ $(1 \\le n, m \\le 50)$\u00a0\u2014 the number of rows and columns in the maze.\n\nEach of the next $n$ lines contain $m$ characters. They describe the layout of the maze. If a character on a line equals '.', the corresponding cell is empty. If it equals '#', the cell has a wall. 'G' corresponds to a good person and 'B' corresponds to a bad person.\n\n\n-----Output-----\n\nFor each test case, print \"Yes\" if there exists a way to replace some empty cells with walls to satisfy the given conditions. Otherwise print \"No\"\n\nYou may print every letter in any case (upper or lower).\n\n\n-----Example-----\nInput\n6\n1 1\n.\n1 2\nG.\n2 2\n#B\nG.\n2 3\nG.#\nB#.\n3 3\n#B.\n#..\nGG.\n2 2\n#B\nB.\n\nOutput\nYes\nYes\nNo\nNo\nYes\nYes\n\n\n\n-----Note-----\n\nFor the first and second test cases, all conditions are already satisfied.\n\nFor the third test case, there is only one empty cell $(2,2)$, and if it is replaced with a wall then the good person at $(1,2"], "prompt": "\nQUESTION:\nVivek has encountered a problem. He has a maze that can be represented as an $n \\times m$ grid. Each of the grid cells may represent the following:  Empty\u00a0\u2014 '.'  Wall\u00a0\u2014 '#'  Good person \u00a0\u2014 'G'  Bad person\u00a0\u2014 'B' \n\nThe only escape from the maze is at cell $(n, m)$.\n\nA person can move to a cell only if it shares a side with their current cell and does not contain a wall. Vivek wants to block some of the empty cells by replacing them with walls in such a way, that all the good people are able to escape, while none of the bad people are able to. A cell that initially contains 'G' or 'B' cannot be blocked and can be travelled through.\n\nHelp him determine if there exists a way to replace some (zero or more) empty cells with walls to satisfy the above conditions.\n\nIt is guaranteed that the cell $(n,m)$ is empty. Vivek can also block this cell.\n\n\n-----Input-----\n\nThe first line contains one integer $t$ $(1 \\le t \\le 100)$\u00a0\u2014 the number of test cases. The description of the test cases follows.\n\nThe first line of each test case contains two integers $n$, $m$ $(1 \\le n, m \\le 50)$\u00a0\u2014 the number of rows and columns in the maze.\n\nEach of the next $n$ lines contain $m$ characters. They describe the layout of the maze. If a character on a line equals '.', the corresponding cell is empty. If it equals '#', the cell has a wall. 'G' corresponds to a good person and 'B' corresponds to a bad person.\n\n\n-----Output-----\n\nFor each test case, print \"Yes\" if there exists a way to replace some empty cells with walls to satisfy the given conditions. Otherwise print \"No\"\n\nYou may print every letter in any case (upper or lower).\n\n\n-----Example-----\nInput\n6\n1 1\n.\n1 2\nG.\n2 2\n#B\nG.\n2 3\nG.#\nB#.\n3 3\n#B.\n#..\nGG.\n2 2\n#B\nB.\n\nOutput\nYes\nYes\nNo\nNo\nYes\nYes\n\n\n\n-----Note-----\n\nFor the first and second test cases, all conditions are already satisfied.\n\nFor the third test case, there is only one empty cell $(2,2)$, and if it is replaced with a wall then the good person at $(1,2)$ will not be able to escape.\n\nFor the fourth test case, the good person at $(1,1)$ cannot escape.\n\nFor the fifth test case, Vivek can block the cells $(2,3)$ and $(2,2)$.\n\nFor the last test case, Vivek can block the destination cell $(2, 2)$.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}