{"1179": {"code": ["def snowball(n, k", "def snowball(n, k", "def solve(n, k,", "n, k = map(int", "def find_kth_identifier"], "prompt": "\nQUESTION:\nIn late autumn evening n robots gathered in the cheerful company of friends. Each robot has a unique identifier\u00a0\u2014 an integer from 1 to 10^9.\n\nAt some moment, robots decided to play the game \"Snowball\". Below there are the rules of this game. First, all robots stand in a row. Then the first robot says his identifier. After that the second robot says the identifier of the first robot and then says his own identifier. Then the third robot says the identifier of the first robot, then says the identifier of the second robot and after that says his own. This process continues from left to right until the n-th robot says his identifier.\n\nYour task is to determine the k-th identifier to be pronounced.\n\n\n-----Input-----\n\nThe first line contains two positive integers n and k (1 \u2264 n \u2264 100 000, 1 \u2264 k \u2264 min(2\u00b710^9, n\u00b7(n + 1) / 2).\n\nThe second line contains the sequence id_1, id_2, ..., id_{n} (1 \u2264 id_{i} \u2264 10^9)\u00a0\u2014 identifiers of roborts. It is guaranteed that all identifiers are different.\n\n\n-----Output-----\n\nPrint the k-th pronounced identifier (assume that the numeration starts from 1).\n\n\n-----Examples-----\nInput\n2 2\n1 2\n\nOutput\n1\n\nInput\n4 5\n10 4 18 3\n\nOutput\n4\n\n\n\n-----Note-----\n\nIn the first sample identifiers of robots will be pronounced in the following order: 1, 1, 2. As k = 2, the answer equals to 1.\n\nIn the second test case identifiers of robots will be pronounced in the following order: 10, 10, 4, 10, 4, 18, 10, 4, 18, 3. As k = 5, the answer equals to 4.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}