{"976": {"code": ["QUESTION:\nYou have decided to watch the best moments of some movie. There are two buttons on your player:   Watch the current minute of the movie. By pressing this button, you watch the current minute of the movie and the player automatically proceeds to the next minute of the movie.  Skip exactly x minutes of the movie (x is some fixed positive integer). If the player is now at the t-th minute of the movie, then as a result of pressing this button, it proceeds to the minute (t + x). \n\nInitially the movie is turned on in the player on the first minute, and you want to watch exactly n best moments of the movie, the i-th best moment starts at the l_{i}-th minute and ends at the r_{i}-th minute (more formally, the i-th best moment consists of minutes: l_{i}, l_{i} + 1, ..., r_{i}). \n\nDetermine, what is the minimum number of minutes of the movie you have to watch if you want to watch all the best moments?\n\n\n-----Input-----\n\nThe first line contains two space-separated integers n, x (1 \u2264 n \u2264 50, 1 \u2264 x \u2264 10^5) \u2014 the number of the best moments of the movie and the value of x for the second button.\n\nThe following n lines contain the descriptions of the best moments of the movie, the i-th line of the description contains two integers separated by a space l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 10^5).\n\nIt is guaranteed that for all integers i from 2 to n the following condition holds: r_{i} - 1 < l_{i}.\n\n\n-----Output-----\n\nOutput a single number \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n2 3\n5 6\n10 12\n\nOutput\n6\n\nInput\n1 1\n1 100000\n\nOutput\n100000\n\n\n\n-----Note-----\n\nIn the first sample, the player was initially standing on the first minute. As the minutes from the 1-st to the 4-th one don't contain interesting moments, we press the second button. Now we can not press the second button and skip 3 more minutes, because some of them contain interesting moments. Therefore, we watch the movie from the 4-th to the 6-th minute, after that the current time is 7. Similarly, we again skip 3 minutes and then watch from the 10-th", "QUESTION:\nYou have decided to watch the best moments of some movie. There are two buttons on your player:   Watch the current minute of the movie. By pressing this button, you watch the current minute of the movie and the player automatically proceeds to the next minute of the movie.  Skip exactly x minutes of the movie (x is some fixed positive integer). If the player is now at the t-th minute of the movie, then as a result of pressing this button, it proceeds to the minute (t + x). \n\nInitially the movie is turned on in the player on the first minute, and you want to watch exactly n best moments of the movie, the i-th best moment starts at the l_{i}-th minute and ends at the r_{i}-th minute (more formally, the i-th best moment consists of minutes: l_{i}, l_{i} + 1, ..., r_{i}). \n\nDetermine, what is the minimum number of minutes of the movie you have to watch if you want to watch all the best moments?\n\n\n-----Input-----\n\nThe first line contains two space-separated integers n, x (1 \u2264 n \u2264 50, 1 \u2264 x \u2264 10^5) \u2014 the number of the best moments of the movie and the value of x for the second button.\n\nThe following n lines contain the descriptions of the best moments of the movie, the i-th line of the description contains two integers separated by a space l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 10^5).\n\nIt is guaranteed that for all integers i from 2 to n the following condition holds: r_{i} - 1 < l_{i}.\n\n\n-----Output-----\n\nOutput a single number \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n2 3\n5 6\n10 12\n\nOutput\n6\n\nInput\n1 1\n1 100000\n\nOutput\n100000\n\n\n\n-----Note-----\n\nIn the first sample, the player was initially standing on the first minute. As the minutes from the 1-st to the 4-th one don't contain interesting moments, we press the second button. Now we can not press the second button and skip 3 more minutes, because some of them contain interesting moments. Therefore, we watch the movie from the 4-th to the 6-th minute, after that the current time is 7. Similarly, we again skip 3 minutes and then watch from the 10-th", "QUESTION:\nYou have decided to watch the best moments of some movie. There are two buttons on your player:   Watch the current minute of the movie. By pressing this button, you watch the current minute of the movie and the player automatically proceeds to the next minute of the movie.  Skip exactly x minutes of the movie (x is some fixed positive integer). If the player is now at the t-th minute of the movie, then as a result of pressing this button, it proceeds to the minute (t + x). \n\nInitially the movie is turned on in the player on the first minute, and you want to watch exactly n best moments of the movie, the i-th best moment starts at the l_{i}-th minute and ends at the r_{i}-th minute (more formally, the i-th best moment consists of minutes: l_{i}, l_{i} + 1, ..., r_{i}). \n\nDetermine, what is the minimum number of minutes of the movie you have to watch if you want to watch all the best moments?\n\n\n-----Input-----\n\nThe first line contains two space-separated integers n, x (1 \u2264 n \u2264 50, 1 \u2264 x \u2264 10^5) \u2014 the number of the best moments of the movie and the value of x for the second button.\n\nThe following n lines contain the descriptions of the best moments of the movie, the i-th line of the description contains two integers separated by a space l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 10^5).\n\nIt is guaranteed that for all integers i from 2 to n the following condition holds: r_{i} - 1 < l_{i}.\n\n\n-----Output-----\n\nOutput a single number \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n2 3\n5 6\n10 12\n\nOutput\n6\n\nInput\n1 1\n1 100000\n\nOutput\n100000\n\n\n\n-----Note-----\n\nIn the first sample, the player was initially standing on the first minute. As the minutes from the 1-st to the 4-th one don't contain interesting moments, we press the second button. Now we can not press the second button and skip 3 more minutes, because some of them contain interesting moments. Therefore, we watch the movie from the 4-th to the 6-th minute, after that the current time is 7. Similarly, we again skip 3 minutes and then watch from the 10-th", "QUESTION:\nYou have decided to watch the best moments of some movie. There are two buttons on your player:   Watch the current minute of the movie. By pressing this button, you watch the current minute of the movie and the player automatically proceeds to the next minute of the movie.  Skip exactly x minutes of the movie (x is some fixed positive integer). If the player is now at the t-th minute of the movie, then as a result of pressing this button, it proceeds to the minute (t + x). \n\nInitially the movie is turned on in the player on the first minute, and you want to watch exactly n best moments of the movie, the i-th best moment starts at the l_{i}-th minute and ends at the r_{i}-th minute (more formally, the i-th best moment consists of minutes: l_{i}, l_{i} + 1, ..., r_{i}). \n\nDetermine, what is the minimum number of minutes of the movie you have to watch if you want to watch all the best moments?\n\n\n-----Input-----\n\nThe first line contains two space-separated integers n, x (1 \u2264 n \u2264 50, 1 \u2264 x \u2264 10^5) \u2014 the number of the best moments of the movie and the value of x for the second button.\n\nThe following n lines contain the descriptions of the best moments of the movie, the i-th line of the description contains two integers separated by a space l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 10^5).\n\nIt is guaranteed that for all integers i from 2 to n the following condition holds: r_{i} - 1 < l_{i}.\n\n\n-----Output-----\n\nOutput a single number \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n2 3\n5 6\n10 12\n\nOutput\n6\n\nInput\n1 1\n1 100000\n\nOutput\n100000\n\n\n\n-----Note-----\n\nIn the first sample, the player was initially standing on the first minute. As the minutes from the 1-st to the 4-th one don't contain interesting moments, we press the second button. Now we can not press the second button and skip 3 more minutes, because some of them contain interesting moments. Therefore, we watch the movie from the 4-th to the 6-th minute, after that the current time is 7. Similarly, we again skip 3 minutes and then watch from the 10-th", "QUESTION:\nYou have decided to watch the best moments of some movie. There are two buttons on your player:   Watch the current minute of the movie. By pressing this button, you watch the current minute of the movie and the player automatically proceeds to the next minute of the movie.  Skip exactly x minutes of the movie (x is some fixed positive integer). If the player is now at the t-th minute of the movie, then as a result of pressing this button, it proceeds to the minute (t + x). \n\nInitially the movie is turned on in the player on the first minute, and you want to watch exactly n best moments of the movie, the i-th best moment starts at the l_{i}-th minute and ends at the r_{i}-th minute (more formally, the i-th best moment consists of minutes: l_{i}, l_{i} + 1, ..., r_{i}). \n\nDetermine, what is the minimum number of minutes of the movie you have to watch if you want to watch all the best moments?\n\n\n-----Input-----\n\nThe first line contains two space-separated integers n, x (1 \u2264 n \u2264 50, 1 \u2264 x \u2264 10^5) \u2014 the number of the best moments of the movie and the value of x for the second button.\n\nThe following n lines contain the descriptions of the best moments of the movie, the i-th line of the description contains two integers separated by a space l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 10^5).\n\nIt is guaranteed that for all integers i from 2 to n the following condition holds: r_{i} - 1 < l_{i}.\n\n\n-----Output-----\n\nOutput a single number \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n2 3\n5 6\n10 12\n\nOutput\n6\n\nInput\n1 1\n1 100000\n\nOutput\n100000\n\n\n\n-----Note-----\n\nIn the first sample, the player was initially standing on the first minute. As the minutes from the 1-st to the 4-th one don't contain interesting moments, we press the second button. Now we can not press the second button and skip 3 more minutes, because some of them contain interesting moments. Therefore, we watch the movie from the 4-th to the 6-th minute, after that the current time is 7. Similarly, we again skip 3 minutes and then watch from the 10-th"], "prompt": "\nQUESTION:\nYou have decided to watch the best moments of some movie. There are two buttons on your player:   Watch the current minute of the movie. By pressing this button, you watch the current minute of the movie and the player automatically proceeds to the next minute of the movie.  Skip exactly x minutes of the movie (x is some fixed positive integer). If the player is now at the t-th minute of the movie, then as a result of pressing this button, it proceeds to the minute (t + x). \n\nInitially the movie is turned on in the player on the first minute, and you want to watch exactly n best moments of the movie, the i-th best moment starts at the l_{i}-th minute and ends at the r_{i}-th minute (more formally, the i-th best moment consists of minutes: l_{i}, l_{i} + 1, ..., r_{i}). \n\nDetermine, what is the minimum number of minutes of the movie you have to watch if you want to watch all the best moments?\n\n\n-----Input-----\n\nThe first line contains two space-separated integers n, x (1 \u2264 n \u2264 50, 1 \u2264 x \u2264 10^5) \u2014 the number of the best moments of the movie and the value of x for the second button.\n\nThe following n lines contain the descriptions of the best moments of the movie, the i-th line of the description contains two integers separated by a space l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 10^5).\n\nIt is guaranteed that for all integers i from 2 to n the following condition holds: r_{i} - 1 < l_{i}.\n\n\n-----Output-----\n\nOutput a single number \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n2 3\n5 6\n10 12\n\nOutput\n6\n\nInput\n1 1\n1 100000\n\nOutput\n100000\n\n\n\n-----Note-----\n\nIn the first sample, the player was initially standing on the first minute. As the minutes from the 1-st to the 4-th one don't contain interesting moments, we press the second button. Now we can not press the second button and skip 3 more minutes, because some of them contain interesting moments. Therefore, we watch the movie from the 4-th to the 6-th minute, after that the current time is 7. Similarly, we again skip 3 minutes and then watch from the 10-th to the 12-th minute of the movie. In total, we watch 6 minutes of the movie.\n\nIn the second sample, the movie is very interesting, so you'll have to watch all 100000 minutes of the movie.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}