{"748": {"code": ["def solve(n, a):\n    a.sort()\n    res = []\n    for i in range(n // 3):\n        if a[i * 3] == a[i * 3 + 1] == a[i * 3 + 2]:\n            return -1\n        res.append((a[i * 3], a[i * 3 + 1], a[i * 3 + 2]))\n    return res\n\nn = int(input())\na = list(", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    groups = [[] for _ in range(n//3)]\n    for i in range(n):\n        if i % 3 == 0 or i % 3 == 1:\n            if not groups[i//3].append(a[i]):\n                return -1\n    for group in groups:\n        print(*group)\n    return 0", "def solve(n, seq):\n    if n % 3 != 0:\n        return -1\n    seq.sort()\n    groups = [[] for _ in range(n // 3)]\n    for i in range(n):\n        groups[i // 3].append(seq[i])\n    for group in groups:\n        if group[0] >= group[1] or group[1] >= group[2]:\n            return -1\n    return '\\n'.join(['", "n = int(input())\nnums = list(map(int, input().split()))\nnums.sort()\n\nif n % 3 != 0:\n    print(-1)\nelse:\n    for i in range(0, n, n // 3):\n        print(' '.join(map(str, nums[i:i + n // 3])))\n\nThis Python solution first checks if the number of elements is divisible by 3, if not it prints -1.", "n = int(input())\nnums = list(map(int, input().split()))\nnums.sort()\n\nif n % 3 != 0:\n    print(-1)\nelse:\n    for i in range(0, len(nums), n // 3):\n        group = nums[i:i + n // 3]\n        if len(group) != n // 3 or group[0] >= group[1] or group[1] >= group[2"], "prompt": "\nQUESTION:\nXenia the mathematician has a sequence consisting of n (n is divisible by 3) positive integers, each of them is at most 7. She wants to split the sequence into groups of three so that for each group of three a, b, c the following conditions held:  a < b < c;  a divides b, b divides c. \n\nNaturally, Xenia wants each element of the sequence to belong to exactly one group of three. Thus, if the required partition exists, then it has $\\frac{n}{3}$ groups of three.\n\nHelp Xenia, find the required partition or else say that it doesn't exist.\n\n\n-----Input-----\n\nThe first line contains integer n (3 \u2264 n \u2264 99999) \u2014 the number of elements in the sequence. The next line contains n positive integers, each of them is at most 7.\n\nIt is guaranteed that n is divisible by 3.\n\n\n-----Output-----\n\nIf the required partition exists, print $\\frac{n}{3}$ groups of three. Print each group as values of the elements it contains. You should print values in increasing order. Separate the groups and integers in groups by whitespaces. If there are multiple solutions, you can print any of them.\n\nIf there is no solution, print -1.\n\n\n-----Examples-----\nInput\n6\n1 1 1 2 2 2\n\nOutput\n-1\n\nInput\n6\n2 2 1 1 4 6\n\nOutput\n1 2 4\n1 2 6\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}