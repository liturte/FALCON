{"2211": {"code": ["QUESTION:\nSmart Beaver recently got interested in a new word game. The point is as follows: count the number of distinct good substrings of some string s. To determine if a string is good or not the game uses rules. Overall there are n rules. Each rule is described by a group of three (p, l, r), where p is a string and l and r (l \u2264 r) are integers. We\u2019ll say that string t complies with rule (p, l, r), if the number of occurrences of string t in string p lies between l and r, inclusive. For example, string \"ab\", complies with rules (\"ab\", 1, 2) and (\"aab\", 0, 1), but does not comply with rules (\"cd\", 1, 2) and (\"abab\", 0, 1).\n\nA substring s[l... r] (1 \u2264 l \u2264 r \u2264 |s|) of string s = s_1s_2... s_{|}s| (|s| is a length of s) is string s_{l}s_{l} + 1... s_{r}.\n\nConsider a number of occurrences  of string t in string p as a number of pairs of integers l, r (1 \u2264 l \u2264 r \u2264 |p|) such that p[l... r] = t.\n\nWe\u2019ll say that string t is good if it complies with all n rules. Smart Beaver asks you to help him to write a program that can calculate the number of distinct good substrings of string s. Two substrings s[x... y] and s[z... w] are cosidered to be distinct iff s[x... y] \u2260 s[z... w].\n\n\n-----Input-----\n\nThe first line contains string s. The second line contains integer n. Next n lines contain the rules, one per line. Each of these lines contains a string and two integers p_{i}, l_{i}, r_{i}, separated by single spaces (0 \u2264 l_{i} \u2264 r_{i} \u2264 |p_{i}|). It is guaranteed that all the given strings are non-empty and only contain lowercase English letters.\n\nThe input limits for scoring 30 points are (subproblem G1):   0 \u2264 n \u2264 10.  The length of string s and the maximum length of string p is  \u2264 200. \n\nThe input limits for scoring 70 points are (subproblems G1+G2):   0 \u2264", "QUESTION:\nSmart Beaver recently got interested in a new word game. The point is as follows: count the number of distinct good substrings of some string s. To determine if a string is good or not the game uses rules. Overall there are n rules. Each rule is described by a group of three (p, l, r), where p is a string and l and r (l \u2264 r) are integers. We\u2019ll say that string t complies with rule (p, l, r), if the number of occurrences of string t in string p lies between l and r, inclusive. For example, string \"ab\", complies with rules (\"ab\", 1, 2) and (\"aab\", 0, 1), but does not comply with rules (\"cd\", 1, 2) and (\"abab\", 0, 1).\n\nA substring s[l... r] (1 \u2264 l \u2264 r \u2264 |s|) of string s = s_1s_2... s_{|}s| (|s| is a length of s) is string s_{l}s_{l} + 1... s_{r}.\n\nConsider a number of occurrences  of string t in string p as a number of pairs of integers l, r (1 \u2264 l \u2264 r \u2264 |p|) such that p[l... r] = t.\n\nWe\u2019ll say that string t is good if it complies with all n rules. Smart Beaver asks you to help him to write a program that can calculate the number of distinct good substrings of string s. Two substrings s[x... y] and s[z... w] are cosidered to be distinct iff s[x... y] \u2260 s[z... w].\n\n\n-----Input-----\n\nThe first line contains string s. The second line contains integer n. Next n lines contain the rules, one per line. Each of these lines contains a string and two integers p_{i}, l_{i}, r_{i}, separated by single spaces (0 \u2264 l_{i} \u2264 r_{i} \u2264 |p_{i}|). It is guaranteed that all the given strings are non-empty and only contain lowercase English letters.\n\nThe input limits for scoring 30 points are (subproblem G1):   0 \u2264 n \u2264 10.  The length of string s and the maximum length of string p is  \u2264 200. \n\nThe input limits for scoring 70 points are (subproblems G1+G2):   0 \u2264", "QUESTION:\nSmart Beaver recently got interested in a new word game. The point is as follows: count the number of distinct good substrings of some string s. To determine if a string is good or not the game uses rules. Overall there are n rules. Each rule is described by a group of three (p, l, r), where p is a string and l and r (l \u2264 r) are integers. We\u2019ll say that string t complies with rule (p, l, r), if the number of occurrences of string t in string p lies between l and r, inclusive. For example, string \"ab\", complies with rules (\"ab\", 1, 2) and (\"aab\", 0, 1), but does not comply with rules (\"cd\", 1, 2) and (\"abab\", 0, 1).\n\nA substring s[l... r] (1 \u2264 l \u2264 r \u2264 |s|) of string s = s_1s_2... s_{|}s| (|s| is a length of s) is string s_{l}s_{l} + 1... s_{r}.\n\nConsider a number of occurrences  of string t in string p as a number of pairs of integers l, r (1 \u2264 l \u2264 r \u2264 |p|) such that p[l... r] = t.\n\nWe\u2019ll say that string t is good if it complies with all n rules. Smart Beaver asks you to help him to write a program that can calculate the number of distinct good substrings of string s. Two substrings s[x... y] and s[z... w] are cosidered to be distinct iff s[x... y] \u2260 s[z... w].\n\n\n-----Input-----\n\nThe first line contains string s. The second line contains integer n. Next n lines contain the rules, one per line. Each of these lines contains a string and two integers p_{i}, l_{i}, r_{i}, separated by single spaces (0 \u2264 l_{i} \u2264 r_{i} \u2264 |p_{i}|). It is guaranteed that all the given strings are non-empty and only contain lowercase English letters.\n\nThe input limits for scoring 30 points are (subproblem G1):   0 \u2264 n \u2264 10.  The length of string s and the maximum length of string p is  \u2264 200. \n\nThe input limits for scoring 70 points are (subproblems G1+G2):   0 \u2264", "QUESTION:\nSmart Beaver recently got interested in a new word game. The point is as follows: count the number of distinct good substrings of some string s. To determine if a string is good or not the game uses rules. Overall there are n rules. Each rule is described by a group of three (p, l, r), where p is a string and l and r (l \u2264 r) are integers. We\u2019ll say that string t complies with rule (p, l, r), if the number of occurrences of string t in string p lies between l and r, inclusive. For example, string \"ab\", complies with rules (\"ab\", 1, 2) and (\"aab\", 0, 1), but does not comply with rules (\"cd\", 1, 2) and (\"abab\", 0, 1).\n\nA substring s[l... r] (1 \u2264 l \u2264 r \u2264 |s|) of string s = s_1s_2... s_{|}s| (|s| is a length of s) is string s_{l}s_{l} + 1... s_{r}.\n\nConsider a number of occurrences  of string t in string p as a number of pairs of integers l, r (1 \u2264 l \u2264 r \u2264 |p|) such that p[l... r] = t.\n\nWe\u2019ll say that string t is good if it complies with all n rules. Smart Beaver asks you to help him to write a program that can calculate the number of distinct good substrings of string s. Two substrings s[x... y] and s[z... w] are cosidered to be distinct iff s[x... y] \u2260 s[z... w].\n\n\n-----Input-----\n\nThe first line contains string s. The second line contains integer n. Next n lines contain the rules, one per line. Each of these lines contains a string and two integers p_{i}, l_{i}, r_{i}, separated by single spaces (0 \u2264 l_{i} \u2264 r_{i} \u2264 |p_{i}|). It is guaranteed that all the given strings are non-empty and only contain lowercase English letters.\n\nThe input limits for scoring 30 points are (subproblem G1):   0 \u2264 n \u2264 10.  The length of string s and the maximum length of string p is  \u2264 200. \n\nThe input limits for scoring 70 points are (subproblems G1+G2):   0 \u2264", "QUESTION:\nSmart Beaver recently got interested in a new word game. The point is as follows: count the number of distinct good substrings of some string s. To determine if a string is good or not the game uses rules. Overall there are n rules. Each rule is described by a group of three (p, l, r), where p is a string and l and r (l \u2264 r) are integers. We\u2019ll say that string t complies with rule (p, l, r), if the number of occurrences of string t in string p lies between l and r, inclusive. For example, string \"ab\", complies with rules (\"ab\", 1, 2) and (\"aab\", 0, 1), but does not comply with rules (\"cd\", 1, 2) and (\"abab\", 0, 1).\n\nA substring s[l... r] (1 \u2264 l \u2264 r \u2264 |s|) of string s = s_1s_2... s_{|}s| (|s| is a length of s) is string s_{l}s_{l} + 1... s_{r}.\n\nConsider a number of occurrences  of string t in string p as a number of pairs of integers l, r (1 \u2264 l \u2264 r \u2264 |p|) such that p[l... r] = t.\n\nWe\u2019ll say that string t is good if it complies with all n rules. Smart Beaver asks you to help him to write a program that can calculate the number of distinct good substrings of string s. Two substrings s[x... y] and s[z... w] are cosidered to be distinct iff s[x... y] \u2260 s[z... w].\n\n\n-----Input-----\n\nThe first line contains string s. The second line contains integer n. Next n lines contain the rules, one per line. Each of these lines contains a string and two integers p_{i}, l_{i}, r_{i}, separated by single spaces (0 \u2264 l_{i} \u2264 r_{i} \u2264 |p_{i}|). It is guaranteed that all the given strings are non-empty and only contain lowercase English letters.\n\nThe input limits for scoring 30 points are (subproblem G1):   0 \u2264 n \u2264 10.  The length of string s and the maximum length of string p is  \u2264 200. \n\nThe input limits for scoring 70 points are (subproblems G1+G2):   0 \u2264"], "prompt": "\nQUESTION:\nSmart Beaver recently got interested in a new word game. The point is as follows: count the number of distinct good substrings of some string s. To determine if a string is good or not the game uses rules. Overall there are n rules. Each rule is described by a group of three (p, l, r), where p is a string and l and r (l \u2264 r) are integers. We\u2019ll say that string t complies with rule (p, l, r), if the number of occurrences of string t in string p lies between l and r, inclusive. For example, string \"ab\", complies with rules (\"ab\", 1, 2) and (\"aab\", 0, 1), but does not comply with rules (\"cd\", 1, 2) and (\"abab\", 0, 1).\n\nA substring s[l... r] (1 \u2264 l \u2264 r \u2264 |s|) of string s = s_1s_2... s_{|}s| (|s| is a length of s) is string s_{l}s_{l} + 1... s_{r}.\n\nConsider a number of occurrences  of string t in string p as a number of pairs of integers l, r (1 \u2264 l \u2264 r \u2264 |p|) such that p[l... r] = t.\n\nWe\u2019ll say that string t is good if it complies with all n rules. Smart Beaver asks you to help him to write a program that can calculate the number of distinct good substrings of string s. Two substrings s[x... y] and s[z... w] are cosidered to be distinct iff s[x... y] \u2260 s[z... w].\n\n\n-----Input-----\n\nThe first line contains string s. The second line contains integer n. Next n lines contain the rules, one per line. Each of these lines contains a string and two integers p_{i}, l_{i}, r_{i}, separated by single spaces (0 \u2264 l_{i} \u2264 r_{i} \u2264 |p_{i}|). It is guaranteed that all the given strings are non-empty and only contain lowercase English letters.\n\nThe input limits for scoring 30 points are (subproblem G1):   0 \u2264 n \u2264 10.  The length of string s and the maximum length of string p is  \u2264 200. \n\nThe input limits for scoring 70 points are (subproblems G1+G2):   0 \u2264 n \u2264 10.  The length of string s and the maximum length of string p is  \u2264 2000. \n\nThe input limits for scoring 100 points are (subproblems G1+G2+G3):   0 \u2264 n \u2264 10.  The length of string s and the maximum length of string p is  \u2264 50000. \n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of good substrings of string s.\n\n\n-----Examples-----\nInput\naaab\n2\naa 0 0\naab 1 1\n\nOutput\n3\n\nInput\nltntlnen\n3\nn 0 0\nttlneenl 1 4\nlelllt 1 1\n\nOutput\n2\n\nInput\na\n0\n\nOutput\n1\n\n\n\n-----Note-----\n\nThere are three good substrings in the first sample test: \u00abaab\u00bb, \u00abab\u00bb and \u00abb\u00bb.\n\nIn the second test only substrings \u00abe\u00bb and \u00abt\u00bb are good.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}