{"592": {"code": ["n = int(input())\nif n % 2 == 0:\n    print(n**2)\nelse:\n    print(n*(n-1)*(n-2)//6)\n\n\nExplanation:\n\nThe maximum score that can be achieved with the transformations is when the absolute values of the transformations are as large as possible.\n\nIf `n` is even, we can perform the transformation `n` times, each time multiplying the current number by `n` to get a score of `", "def max_score(n):\n    if n % 2 == 0:\n        return 2*n*n\n    else:\n        return 2*(n*n-n)\n\nn = int(input())\nprint(max_score(n))\n\nIn this solution, we first check if the input number is even. If it is, we multiply the square of the number by 2 and return the result. If the number is odd, we subtract the number from the square of the number,", "def solve(n):\n    if n % 2 == 0:\n        return (n // 2) ** 2\n    else:\n        return (n // 2) ** 2 + (n // 2)\n\nn = int(input())\nprint(solve(n))\n\n\nThis solution is based on the observation that for each pair of numbers $(a, b)$, the score increases by $|x|$ where $|x|$ is the absolute value of $a - b$. The", "def max_score(n):\n    if n % 2 == 0:\n        return 2 * n * (n + 1) // 2 - n\n    else:\n        return 2 * n * ((n + 1) // 2)\n\nn = int(input())\nprint(max_score(n))\n\nThis code works by calculating the sum of the series $1, 2, ..., n$ for even $n$ and the sum of the series $1, 2, ...", "def max_score(n):\n    if n % 2 == 0:\n        return n * n\n    else:\n        return (n - 1) * (n - 1)\n\nn = int(input())\nprint(max_score(n))\n\nThis Python code solves the problem by first checking if the input integer `n` is even. If it is, it calculates the square of `n` as the maximum score, since every number can be transformed into `-n`, and"], "prompt": "\nQUESTION:\nYou are given a positive integer $n$ greater or equal to $2$. For every pair of integers $a$ and $b$ ($2 \\le |a|, |b| \\le n$), you can transform $a$ into $b$ if and only if there exists an integer $x$ such that $1 < |x|$ and ($a \\cdot x = b$ or $b \\cdot x = a$), where $|x|$ denotes the absolute value of $x$.\n\nAfter such a transformation, your score increases by $|x|$ points and you are not allowed to transform $a$ into $b$ nor $b$ into $a$ anymore.\n\nInitially, you have a score of $0$. You can start at any integer and transform it as many times as you like. What is the maximum score you can achieve?\n\n\n-----Input-----\n\nA single line contains a single integer $n$ ($2 \\le n \\le 100\\,000$)\u00a0\u2014 the given integer described above.\n\n\n-----Output-----\n\nPrint an only integer\u00a0\u2014 the maximum score that can be achieved with the transformations. If it is not possible to perform even a single transformation for all possible starting integers, print $0$.\n\n\n-----Examples-----\nInput\n4\n\nOutput\n8\nInput\n6\n\nOutput\n28\nInput\n2\n\nOutput\n0\n\n\n-----Note-----\n\nIn the first example, the transformations are $2 \\rightarrow 4 \\rightarrow (-2) \\rightarrow (-4) \\rightarrow 2$.\n\nIn the third example, it is impossible to perform even a single transformation.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}