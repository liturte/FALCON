{"1654": {"code": ["from collections import Counter\n\ndef solve(s, t):\n    s_count = Counter(s)\n    t_count = Counter(t)\n    unknowns = s_count['?']\n    s_count.subtract(t_count)\n    pairs = sum(min(s_count[c], t_count[", "from collections import Counter\n\ndef solve(s, t):\n    s = list(s)\n    t = list(t)\n    s_count = Counter(s)\n    t_count = Counter(t)\n    q_count = s_count['?']\n    s_count.pop('?')\n    diff = s", "from collections import Counter\nfrom string import ascii_lowercase\n\ndef max_suitability(s, t):\n    s = list(s)\n    t = list(t)\n    s_count = Counter(s)\n    t_count = Counter(t)\n    unknown = s_count['?']", "from collections import Counter\n\ns, t = input(), input()\ns_count = Counter(s)\nt_count = Counter(t)\n\nmissing_letters = {k: v for k, v in s_count.items() if k != '?'}\n\nanswer = list(s)\nfor i in range(", "from collections import Counter\ndef replace_question_marks(s, t):\n    s = list(s)\n    t = list(t)\n    s_counter = Counter(s)\n    t_counter = Counter(t)\n    remaining_question_marks = s_counter['?']\n    for i in range(26):"], "prompt": "\nQUESTION:\nYou are given two strings s and t consisting of small Latin letters, string s can also contain '?' characters. \n\nSuitability of string s is calculated by following metric:\n\nAny two letters can be swapped positions, these operations can be performed arbitrary number of times over any pair of positions. Among all resulting strings s, you choose the one with the largest number of non-intersecting occurrences of string t. Suitability is this number of occurrences.\n\nYou should replace all '?' characters with small Latin letters in such a way that the suitability of string s is maximal.\n\n\n-----Input-----\n\nThe first line contains string s (1 \u2264 |s| \u2264 10^6).\n\nThe second line contains string t (1 \u2264 |t| \u2264 10^6).\n\n\n-----Output-----\n\nPrint string s with '?' replaced with small Latin letters in such a way that suitability of that string is maximal.\n\nIf there are multiple strings with maximal suitability then print any of them.\n\n\n-----Examples-----\nInput\n?aa?\nab\n\nOutput\nbaab\n\nInput\n??b?\nza\n\nOutput\nazbz\n\nInput\nabcd\nabacaba\n\nOutput\nabcd\n\n\n\n-----Note-----\n\nIn the first example string \"baab\" can be transformed to \"abab\" with swaps, this one has suitability of 2. That means that string \"baab\" also has suitability of 2.\n\nIn the second example maximal suitability you can achieve is 1 and there are several dozens of such strings, \"azbz\" is just one of them.\n\nIn the third example there are no '?' characters and the suitability of the string is 0.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}