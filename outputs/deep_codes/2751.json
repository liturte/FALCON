{"2751": {"code": ["from math import gcd\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp =", "import math\nimport heapq\n\ndef max_score(n, arr):\n    operations = 0\n    heap = [-i for i in arr]\n    heapq", "import math\nfrom collections import deque\n\ndef solve(n, a):\n    a.sort()\n    d = deque(a)\n    ans,", "from math import gcd\nfrom heapq import heappop, heappush\n\ndef min_operations(n, a):\n    h = []\n    o", "from math import gcd\nfrom collections import deque\n\ndef solve(n, a):\n    dp = [[0, 0] for _ in range(n"], "prompt": "\nQUESTION:\nMirko\u2019s great grandmother Katica is an avid mathematician. She likes to torment Mirko with math games. This time she wrote down a sequence of numbers on a piece of paper and told Mirko he may do the following:\n - Choose any two numbers in the sequence (let\u2019s call them $A$ and $B$) and a prime number $X$ such that $A$ is divisible by $X$. After that, Mirko erases $A$ and writes $A/X$ in its place. In the end he erases $B$ and writes $B\\cdot X$ in its place.\n\nMirko may perform this operation as many times he wants. His goal is to obtain the maximum possible score, because he gets candy from his great grandmother if he does so. The score for one sequence is the greatest common divisor of all the numbers in the sequence.\n\nHe is not very good at this, and he likes his candy so he has asked you to help him. Write a program that will calculate the maximum possible score. Since you are such a nice person, you should also print the smallest number of times Mirko must perform the operation to obtain the maximum possible score.\n\n-----Input-----\nThe first line of input contains one integer $N$, ($1 \\leq N \\leq 100$), the number of elements in the starting sequence.\n\nThe second line of input contains $N$ positive integers smaller than or equal to $1000000$, the sequence Katica gave to Mirko.\n\n-----Output-----\nThe one and only line of output should contain two integers. The first integer is the maximal possible score Mirko can obtain. The second integer is the smallest number of operations Mirko needs to perform to obtain it.\n\n-----Examples-----\nSample Input 1:\n3\n4 4 1\nSample Output 1:\n2 1\n\nSample Input 2:\n3\n8 24 9\nSample Output 2:\n12 3\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}