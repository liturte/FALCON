{"1399": {"code": ["import sys\n\ndef solve():\n    n = int(sys.stdin.readline())\n    segments = []\n    for _ in range(n):\n        x1", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nn = int(input())", "from sys import stdin\nfrom collections import defaultdict\n\nn = int(stdin.readline().strip())\nsegments = []\nfor _ in range(n):", "from collections import defaultdict\n\ndef solve(n, segments):\n    points = defaultdict(int)\n    for segment in segments:\n        Ax, Ay, Bx", "def solve():\n    n = int(input())\n    points = set()\n    for _ in range(n):\n        x1, y1, x2, y2"], "prompt": "\nQUESTION:\nYou are given $n$ segments on a Cartesian plane. Each segment's endpoints have integer coordinates. Segments can intersect with each other. No two segments lie on the same line.\n\nCount the number of distinct points with integer coordinates, which are covered by at least one segment.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 1000$) \u2014 the number of segments.\n\nEach of the next $n$ lines contains four integers $Ax_i, Ay_i, Bx_i, By_i$ ($-10^6 \\le Ax_i, Ay_i, Bx_i, By_i \\le 10^6$) \u2014 the coordinates of the endpoints $A$, $B$ ($A \\ne B$) of the $i$-th segment.\n\nIt is guaranteed that no two segments lie on the same line.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of distinct points with integer coordinates, which are covered by at least one segment.\n\n\n-----Examples-----\nInput\n9\n0 0 4 4\n-1 5 4 0\n4 0 4 4\n5 2 11 2\n6 1 6 7\n5 6 11 6\n10 1 10 7\n7 0 9 8\n10 -1 11 -1\n\nOutput\n42\n\nInput\n4\n-1 2 1 2\n-1 0 1 0\n-1 0 0 3\n0 3 1 0\n\nOutput\n7\n\n\n\n-----Note-----\n\nThe image for the first example: [Image] \n\nSeveral key points are marked blue, the answer contains some non-marked points as well.\n\nThe image for the second example: [Image]\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}