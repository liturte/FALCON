{"2360": {"code": ["QUESTION:\nRecently n students from city S moved to city P to attend a programming camp.\n\nThey moved there by train. In the evening, all students in the train decided that they want to drink some tea. Of course, no two people can use the same teapot simultaneously, so the students had to form a queue to get their tea.\n\ni-th student comes to the end of the queue at the beginning of l_{i}-th second. If there are multiple students coming to the queue in the same moment, then the student with greater index comes after the student with lesser index. Students in the queue behave as follows: if there is nobody in the queue before the student, then he uses the teapot for exactly one second and leaves the queue with his tea; otherwise the student waits for the people before him to get their tea. If at the beginning of r_{i}-th second student i still cannot get his tea (there is someone before him in the queue), then he leaves the queue without getting any tea. \n\nFor each student determine the second he will use the teapot and get his tea (if he actually gets it).\n\n\n-----Input-----\n\nThe first line contains one integer t \u2014 the number of test cases to solve (1 \u2264 t \u2264 1000).\n\nThen t test cases follow. The first line of each test case contains one integer n (1 \u2264 n \u2264 1000) \u2014 the number of students.\n\nThen n lines follow. Each line contains two integer l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 5000) \u2014 the second i-th student comes to the end of the queue, and the second he leaves the queue if he still cannot get his tea.\n\nIt is guaranteed that for every $i \\in [ 2 ; n ]$ condition l_{i} - 1 \u2264 l_{i} holds.\n\nThe sum of n over all test cases doesn't exceed 1000.\n\nNote that in hacks you have to set t = 1.\n\n\n-----Output-----\n\nFor each test case print n integers. i-th of them must be equal to the second when i-th student gets his tea, or 0 if he leaves without tea.\n\n\n-----Example-----\nInput\n2\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n\nOutput\n1 2 \n1 0 2 \n\n\n\n-----Note-----\n\nThe example contains 2 tests:\n\n  During 1-st test", "QUESTION:\nRecently n students from city S moved to city P to attend a programming camp.\n\nThey moved there by train. In the evening, all students in the train decided that they want to drink some tea. Of course, no two people can use the same teapot simultaneously, so the students had to form a queue to get their tea.\n\ni-th student comes to the end of the queue at the beginning of l_{i}-th second. If there are multiple students coming to the queue in the same moment, then the student with greater index comes after the student with lesser index. Students in the queue behave as follows: if there is nobody in the queue before the student, then he uses the teapot for exactly one second and leaves the queue with his tea; otherwise the student waits for the people before him to get their tea. If at the beginning of r_{i}-th second student i still cannot get his tea (there is someone before him in the queue), then he leaves the queue without getting any tea. \n\nFor each student determine the second he will use the teapot and get his tea (if he actually gets it).\n\n\n-----Input-----\n\nThe first line contains one integer t \u2014 the number of test cases to solve (1 \u2264 t \u2264 1000).\n\nThen t test cases follow. The first line of each test case contains one integer n (1 \u2264 n \u2264 1000) \u2014 the number of students.\n\nThen n lines follow. Each line contains two integer l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 5000) \u2014 the second i-th student comes to the end of the queue, and the second he leaves the queue if he still cannot get his tea.\n\nIt is guaranteed that for every $i \\in [ 2 ; n ]$ condition l_{i} - 1 \u2264 l_{i} holds.\n\nThe sum of n over all test cases doesn't exceed 1000.\n\nNote that in hacks you have to set t = 1.\n\n\n-----Output-----\n\nFor each test case print n integers. i-th of them must be equal to the second when i-th student gets his tea, or 0 if he leaves without tea.\n\n\n-----Example-----\nInput\n2\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n\nOutput\n1 2 \n1 0 2 \n\n\n\n-----Note-----\n\nThe example contains 2 tests:\n\n  During 1-st test", "QUESTION:\nRecently n students from city S moved to city P to attend a programming camp.\n\nThey moved there by train. In the evening, all students in the train decided that they want to drink some tea. Of course, no two people can use the same teapot simultaneously, so the students had to form a queue to get their tea.\n\ni-th student comes to the end of the queue at the beginning of l_{i}-th second. If there are multiple students coming to the queue in the same moment, then the student with greater index comes after the student with lesser index. Students in the queue behave as follows: if there is nobody in the queue before the student, then he uses the teapot for exactly one second and leaves the queue with his tea; otherwise the student waits for the people before him to get their tea. If at the beginning of r_{i}-th second student i still cannot get his tea (there is someone before him in the queue), then he leaves the queue without getting any tea. \n\nFor each student determine the second he will use the teapot and get his tea (if he actually gets it).\n\n\n-----Input-----\n\nThe first line contains one integer t \u2014 the number of test cases to solve (1 \u2264 t \u2264 1000).\n\nThen t test cases follow. The first line of each test case contains one integer n (1 \u2264 n \u2264 1000) \u2014 the number of students.\n\nThen n lines follow. Each line contains two integer l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 5000) \u2014 the second i-th student comes to the end of the queue, and the second he leaves the queue if he still cannot get his tea.\n\nIt is guaranteed that for every $i \\in [ 2 ; n ]$ condition l_{i} - 1 \u2264 l_{i} holds.\n\nThe sum of n over all test cases doesn't exceed 1000.\n\nNote that in hacks you have to set t = 1.\n\n\n-----Output-----\n\nFor each test case print n integers. i-th of them must be equal to the second when i-th student gets his tea, or 0 if he leaves without tea.\n\n\n-----Example-----\nInput\n2\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n\nOutput\n1 2 \n1 0 2 \n\n\n\n-----Note-----\n\nThe example contains 2 tests:\n\n  During 1-st test", "QUESTION:\nRecently n students from city S moved to city P to attend a programming camp.\n\nThey moved there by train. In the evening, all students in the train decided that they want to drink some tea. Of course, no two people can use the same teapot simultaneously, so the students had to form a queue to get their tea.\n\ni-th student comes to the end of the queue at the beginning of l_{i}-th second. If there are multiple students coming to the queue in the same moment, then the student with greater index comes after the student with lesser index. Students in the queue behave as follows: if there is nobody in the queue before the student, then he uses the teapot for exactly one second and leaves the queue with his tea; otherwise the student waits for the people before him to get their tea. If at the beginning of r_{i}-th second student i still cannot get his tea (there is someone before him in the queue), then he leaves the queue without getting any tea. \n\nFor each student determine the second he will use the teapot and get his tea (if he actually gets it).\n\n\n-----Input-----\n\nThe first line contains one integer t \u2014 the number of test cases to solve (1 \u2264 t \u2264 1000).\n\nThen t test cases follow. The first line of each test case contains one integer n (1 \u2264 n \u2264 1000) \u2014 the number of students.\n\nThen n lines follow. Each line contains two integer l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 5000) \u2014 the second i-th student comes to the end of the queue, and the second he leaves the queue if he still cannot get his tea.\n\nIt is guaranteed that for every $i \\in [ 2 ; n ]$ condition l_{i} - 1 \u2264 l_{i} holds.\n\nThe sum of n over all test cases doesn't exceed 1000.\n\nNote that in hacks you have to set t = 1.\n\n\n-----Output-----\n\nFor each test case print n integers. i-th of them must be equal to the second when i-th student gets his tea, or 0 if he leaves without tea.\n\n\n-----Example-----\nInput\n2\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n\nOutput\n1 2 \n1 0 2 \n\n\n\n-----Note-----\n\nThe example contains 2 tests:\n\n  During 1-st test", "QUESTION:\nRecently n students from city S moved to city P to attend a programming camp.\n\nThey moved there by train. In the evening, all students in the train decided that they want to drink some tea. Of course, no two people can use the same teapot simultaneously, so the students had to form a queue to get their tea.\n\ni-th student comes to the end of the queue at the beginning of l_{i}-th second. If there are multiple students coming to the queue in the same moment, then the student with greater index comes after the student with lesser index. Students in the queue behave as follows: if there is nobody in the queue before the student, then he uses the teapot for exactly one second and leaves the queue with his tea; otherwise the student waits for the people before him to get their tea. If at the beginning of r_{i}-th second student i still cannot get his tea (there is someone before him in the queue), then he leaves the queue without getting any tea. \n\nFor each student determine the second he will use the teapot and get his tea (if he actually gets it).\n\n\n-----Input-----\n\nThe first line contains one integer t \u2014 the number of test cases to solve (1 \u2264 t \u2264 1000).\n\nThen t test cases follow. The first line of each test case contains one integer n (1 \u2264 n \u2264 1000) \u2014 the number of students.\n\nThen n lines follow. Each line contains two integer l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 5000) \u2014 the second i-th student comes to the end of the queue, and the second he leaves the queue if he still cannot get his tea.\n\nIt is guaranteed that for every $i \\in [ 2 ; n ]$ condition l_{i} - 1 \u2264 l_{i} holds.\n\nThe sum of n over all test cases doesn't exceed 1000.\n\nNote that in hacks you have to set t = 1.\n\n\n-----Output-----\n\nFor each test case print n integers. i-th of them must be equal to the second when i-th student gets his tea, or 0 if he leaves without tea.\n\n\n-----Example-----\nInput\n2\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n\nOutput\n1 2 \n1 0 2 \n\n\n\n-----Note-----\n\nThe example contains 2 tests:\n\n  During 1-st test"], "prompt": "\nQUESTION:\nRecently n students from city S moved to city P to attend a programming camp.\n\nThey moved there by train. In the evening, all students in the train decided that they want to drink some tea. Of course, no two people can use the same teapot simultaneously, so the students had to form a queue to get their tea.\n\ni-th student comes to the end of the queue at the beginning of l_{i}-th second. If there are multiple students coming to the queue in the same moment, then the student with greater index comes after the student with lesser index. Students in the queue behave as follows: if there is nobody in the queue before the student, then he uses the teapot for exactly one second and leaves the queue with his tea; otherwise the student waits for the people before him to get their tea. If at the beginning of r_{i}-th second student i still cannot get his tea (there is someone before him in the queue), then he leaves the queue without getting any tea. \n\nFor each student determine the second he will use the teapot and get his tea (if he actually gets it).\n\n\n-----Input-----\n\nThe first line contains one integer t \u2014 the number of test cases to solve (1 \u2264 t \u2264 1000).\n\nThen t test cases follow. The first line of each test case contains one integer n (1 \u2264 n \u2264 1000) \u2014 the number of students.\n\nThen n lines follow. Each line contains two integer l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 5000) \u2014 the second i-th student comes to the end of the queue, and the second he leaves the queue if he still cannot get his tea.\n\nIt is guaranteed that for every $i \\in [ 2 ; n ]$ condition l_{i} - 1 \u2264 l_{i} holds.\n\nThe sum of n over all test cases doesn't exceed 1000.\n\nNote that in hacks you have to set t = 1.\n\n\n-----Output-----\n\nFor each test case print n integers. i-th of them must be equal to the second when i-th student gets his tea, or 0 if he leaves without tea.\n\n\n-----Example-----\nInput\n2\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n\nOutput\n1 2 \n1 0 2 \n\n\n\n-----Note-----\n\nThe example contains 2 tests:\n\n  During 1-st second, students 1 and 2 come to the queue, and student 1 gets his tea. Student 2 gets his tea during 2-nd second.  During 1-st second, students 1 and 2 come to the queue, student 1 gets his tea, and student 2 leaves without tea. During 2-nd second, student 3 comes and gets his tea.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}