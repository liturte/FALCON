{"1966": {"code": ["from collections import deque\n\nn = int(input())\nboard = [list(map(int, input())) for _ in range(n)]\n\ndx = [-1, 0, 1, 0]\ndy = [0, 1, 0, -1]\n\ndef is_valid(x, y", "def min_swaps(board):\n    n = len(board)\n    total = 0\n    for i in range(n):\n        for j in range(n):\n            if i % 2 == 0:\n                if j % 2 == 0:\n                    if board[i][j] == 0:", "def min_changes(n, pieces):\n    def is_valid(piece):\n        for i in range(n):\n            for j in range(n):\n                if piece[i][j] == 1:\n                    if i > 0 and piece[i-1][j] == piece[i][j]:\n                        return", "def min_changes(n, pieces):\n    def is_valid(piece):\n        for i in range(n):\n            for j in range(n):\n                if piece[i][j] == 1:\n                    if (i > 0 and piece[i-1][j] == piece[i][j]) or (", "def solve(n, pieces):\n    def get_diff(piece1, piece2):\n        return sum(abs(a1-a2) for (a1, a2) in zip(piece1, piece2))\n\n    def get_diffs(piece):\n        return [get_diff(piece, p)"], "prompt": "\nQUESTION:\nMagnus decided to play a classic chess game. Though what he saw in his locker shocked him! His favourite chessboard got broken into 4 pieces, each of size n by n, n is always odd. And what's even worse, some squares were of wrong color. j-th square of the i-th row of k-th piece of the board has color a_{k}, i, j; 1 being black and 0 being white. \n\nNow Magnus wants to change color of some squares in such a way that he recolors minimum number of squares and obtained pieces form a valid chessboard. Every square has its color different to each of the neightbouring by side squares in a valid board. Its size should be 2n by 2n. You are allowed to move pieces but not allowed to rotate or flip them.\n\n\n-----Input-----\n\nThe first line contains odd integer n (1 \u2264 n \u2264 100) \u2014 the size of all pieces of the board. \n\nThen 4 segments follow, each describes one piece of the board. Each consists of n lines of n characters; j-th one of i-th line is equal to 1 if the square is black initially and 0 otherwise. Segments are separated by an empty line.\n\n\n-----Output-----\n\nPrint one number \u2014 minimum number of squares Magnus should recolor to be able to obtain a valid chessboard.\n\n\n-----Examples-----\nInput\n1\n0\n\n0\n\n1\n\n0\n\nOutput\n1\n\nInput\n3\n101\n010\n101\n\n101\n000\n101\n\n010\n101\n011\n\n010\n101\n010\n\nOutput\n2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}