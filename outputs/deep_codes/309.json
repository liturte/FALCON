{"309": {"code": ["l, r = map(int, input().split())\nresult = l ^ l\nfor i in range(l + 1, r + 1):\n    for j in range(i, r + 1):\n        result = max(result, i ^ j)\nprint(result)\n\n\nThis code reads two integers l and r from the input, then calculates the maximum value of a ^ b for all pairs of integers a, b (l \u2264 a \u2264 b \u2264 r). It does this by iterating over all pairs of integers and calculating the bitwise xor of each pair, storing the maximum value seen so far. The result is then printed.", "l, r = map(int, input().split())\nprint(max(l ^ i ^ j for i in range(l, r + 1) for j in range(i, r + 1)))\n\n\nThis solution works by generating all possible pairs of integers `(i, j)` where `i <= j` and `l <= i <= j <= r`. For each pair, it calculates the bitwise XOR of `i`, `j`, and `l`, and keeps track of the maximum result.\n\nThe XOR operation is applied in the following order: `l` XOR `i` XOR `j`. This means that the result is first XOR", "l, r = map(int, input().split())\nres = 0\nfor a in range(l, r+1):\n    for b in range(a+1, r+1):\n        res = max(res, a^b)\nprint(res)\n\n\ncpp\n#include <iostream>\nusing namespaceream std;\nint main() {\n    long long l, r, res = 0;\n    cin >> l >> r;\n    for (long long a = l; a <= r; a++) {\n        for (long long b = a+1; b <= r; b++) {\n            res = max(res, a", "l, r = map(int, input().split())\nres = l ^ l\nfor a in range(l, r + 1):\n    for b in range(a + 1, r + 1):\n        res = max(res, a ^ b)\nprint(res)\n\n\n\nl, r = map(int, input().split())\nres = 0\nwhile l <= r:\n    while (l & (l - 1)) != 0:\n        l += 1\n    while l + 1 <= r and (r & (r - 1)) != 0:\n        r -= 1\n    if l == r:\n        res = max", "def max_xor(l, r):\n    max_xor = 0\n    for a in range(l, r+1):\n        for b in range(a, r+1):\n            max_xor = max(max_xor, a^b)\n    return max_xor\n\nl, r = map(int, input().split())\nprint(max_xor(l, r))\n\n\nThis code defines a function `max_xor` that calculates the maximum value of `a ^ b` for all pairs `a, b` in the range from `l` to `r`. It then reads the values `l` and `"], "prompt": "\nQUESTION:\nA little girl loves problems on bitwise operations very much. Here's one of them.\n\nYou are given two integers l and r. Let's consider the values of $a \\oplus b$ for all pairs of integers a and b (l \u2264 a \u2264 b \u2264 r). Your task is to find the maximum value among all considered ones.\n\nExpression $x \\oplus y$ means applying bitwise excluding or operation to integers x and y. The given operation exists in all modern programming languages, for example, in languages C++ and Java it is represented as \"^\", in Pascal \u2014 as \u00abxor\u00bb.\n\n\n-----Input-----\n\nThe single line contains space-separated integers l and r (1 \u2264 l \u2264 r \u2264 10^18).\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Output-----\n\nIn a single line print a single integer \u2014 the maximum value of $a \\oplus b$ for all pairs of integers a, b (l \u2264 a \u2264 b \u2264 r).\n\n\n-----Examples-----\nInput\n1 2\n\nOutput\n3\n\nInput\n8 16\n\nOutput\n31\n\nInput\n1 1\n\nOutput\n0\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}