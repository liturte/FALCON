{"2399": {"code": ["QUESTION:\nAlice and Bob play a game. Initially they have a string $s_1, s_2, \\dots, s_n$, consisting of only characters . and X. They take alternating turns, and Alice is moving first. During each turn, the player has to select a contiguous substring consisting only of characters . and replaces each of them with X. Alice must select a substing of length $a$, and Bob must select a substring of length $b$. It is guaranteed that $a > b$.\n\nFor example, if $s =$ ...X.. and $a = 3$, $b = 2$, then after Alice's move string can turn only into XXXX... And if it's Bob's turn and the string $s =$ ...X.., then after Bob's move the string can turn into XX.X.., .XXX.. or ...XXX.\n\nWhoever is unable to make a move, loses. You have to determine who wins if they both play optimally.\n\nYou have to answer $q$ independent queries.\n\n\n-----Input-----\n\nThe first line contains one integer $q$ ($1 \\le q \\le 3 \\cdot 10^5$) \u2014 the number of queries.\n\nThe first line of each query contains two integers $a$ and $b$ ($1 \\le b < a \\le 3 \\cdot 10^5$).\n\nThe second line of each query contains the string $s$ ($1 \\le |s| \\le 3 \\cdot 10^5$), consisting of only characters . and X.\n\nIt is guaranteed that sum of all $|s|$ over all queries not exceed $3 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case print YES if Alice can win and NO otherwise.\n\nYou may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).\n\n\n-----Example-----\nInput\n3\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n\nOutput\nYES\nNO\nYES\n\n\n\n-----Note-----\n\nIn the first query Alice can select substring $s_3 \\dots s_5$. After that $s$ turns into XXXXX...XX...X. After that, no matter what move Bob makes, Alice can make the move (this will be her second move), but Bob can't make his second move.\n\nIn the second query Alice can not win because she can", "QUESTION:\nAlice and Bob play a game. Initially they have a string $s_1, s_2, \\dots, s_n$, consisting of only characters . and X. They take alternating turns, and Alice is moving first. During each turn, the player has to select a contiguous substring consisting only of characters . and replaces each of them with X. Alice must select a substing of length $a$, and Bob must select a substring of length $b$. It is guaranteed that $a > b$.\n\nFor example, if $s =$ ...X.. and $a = 3$, $b = 2$, then after Alice's move string can turn only into XXXX... And if it's Bob's turn and the string $s =$ ...X.., then after Bob's move the string can turn into XX.X.., .XXX.. or ...XXX.\n\nWhoever is unable to make a move, loses. You have to determine who wins if they both play optimally.\n\nYou have to answer $q$ independent queries.\n\n\n-----Input-----\n\nThe first line contains one integer $q$ ($1 \\le q \\le 3 \\cdot 10^5$) \u2014 the number of queries.\n\nThe first line of each query contains two integers $a$ and $b$ ($1 \\le b < a \\le 3 \\cdot 10^5$).\n\nThe second line of each query contains the string $s$ ($1 \\le |s| \\le 3 \\cdot 10^5$), consisting of only characters . and X.\n\nIt is guaranteed that sum of all $|s|$ over all queries not exceed $3 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case print YES if Alice can win and NO otherwise.\n\nYou may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).\n\n\n-----Example-----\nInput\n3\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n\nOutput\nYES\nNO\nYES\n\n\n\n-----Note-----\n\nIn the first query Alice can select substring $s_3 \\dots s_5$. After that $s$ turns into XXXXX...XX...X. After that, no matter what move Bob makes, Alice can make the move (this will be her second move), but Bob can't make his second move.\n\nIn the second query Alice can not win because she can", "QUESTION:\nAlice and Bob play a game. Initially they have a string $s_1, s_2, \\dots, s_n$, consisting of only characters . and X. They take alternating turns, and Alice is moving first. During each turn, the player has to select a contiguous substring consisting only of characters . and replaces each of them with X. Alice must select a substing of length $a$, and Bob must select a substring of length $b$. It is guaranteed that $a > b$.\n\nFor example, if $s =$ ...X.. and $a = 3$, $b = 2$, then after Alice's move string can turn only into XXXX... And if it's Bob's turn and the string $s =$ ...X.., then after Bob's move the string can turn into XX.X.., .XXX.. or ...XXX.\n\nWhoever is unable to make a move, loses. You have to determine who wins if they both play optimally.\n\nYou have to answer $q$ independent queries.\n\n\n-----Input-----\n\nThe first line contains one integer $q$ ($1 \\le q \\le 3 \\cdot 10^5$) \u2014 the number of queries.\n\nThe first line of each query contains two integers $a$ and $b$ ($1 \\le b < a \\le 3 \\cdot 10^5$).\n\nThe second line of each query contains the string $s$ ($1 \\le |s| \\le 3 \\cdot 10^5$), consisting of only characters . and X.\n\nIt is guaranteed that sum of all $|s|$ over all queries not exceed $3 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case print YES if Alice can win and NO otherwise.\n\nYou may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).\n\n\n-----Example-----\nInput\n3\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n\nOutput\nYES\nNO\nYES\n\n\n\n-----Note-----\n\nIn the first query Alice can select substring $s_3 \\dots s_5$. After that $s$ turns into XXXXX...XX...X. After that, no matter what move Bob makes, Alice can make the move (this will be her second move), but Bob can't make his second move.\n\nIn the second query Alice can not win because she can", "QUESTION:\nAlice and Bob play a game. Initially they have a string $s_1, s_2, \\dots, s_n$, consisting of only characters . and X. They take alternating turns, and Alice is moving first. During each turn, the player has to select a contiguous substring consisting only of characters . and replaces each of them with X. Alice must select a substing of length $a$, and Bob must select a substring of length $b$. It is guaranteed that $a > b$.\n\nFor example, if $s =$ ...X.. and $a = 3$, $b = 2$, then after Alice's move string can turn only into XXXX... And if it's Bob's turn and the string $s =$ ...X.., then after Bob's move the string can turn into XX.X.., .XXX.. or ...XXX.\n\nWhoever is unable to make a move, loses. You have to determine who wins if they both play optimally.\n\nYou have to answer $q$ independent queries.\n\n\n-----Input-----\n\nThe first line contains one integer $q$ ($1 \\le q \\le 3 \\cdot 10^5$) \u2014 the number of queries.\n\nThe first line of each query contains two integers $a$ and $b$ ($1 \\le b < a \\le 3 \\cdot 10^5$).\n\nThe second line of each query contains the string $s$ ($1 \\le |s| \\le 3 \\cdot 10^5$), consisting of only characters . and X.\n\nIt is guaranteed that sum of all $|s|$ over all queries not exceed $3 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case print YES if Alice can win and NO otherwise.\n\nYou may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).\n\n\n-----Example-----\nInput\n3\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n\nOutput\nYES\nNO\nYES\n\n\n\n-----Note-----\n\nIn the first query Alice can select substring $s_3 \\dots s_5$. After that $s$ turns into XXXXX...XX...X. After that, no matter what move Bob makes, Alice can make the move (this will be her second move), but Bob can't make his second move.\n\nIn the second query Alice can not win because she can", "QUESTION:\nAlice and Bob play a game. Initially they have a string $s_1, s_2, \\dots, s_n$, consisting of only characters . and X. They take alternating turns, and Alice is moving first. During each turn, the player has to select a contiguous substring consisting only of characters . and replaces each of them with X. Alice must select a substing of length $a$, and Bob must select a substring of length $b$. It is guaranteed that $a > b$.\n\nFor example, if $s =$ ...X.. and $a = 3$, $b = 2$, then after Alice's move string can turn only into XXXX... And if it's Bob's turn and the string $s =$ ...X.., then after Bob's move the string can turn into XX.X.., .XXX.. or ...XXX.\n\nWhoever is unable to make a move, loses. You have to determine who wins if they both play optimally.\n\nYou have to answer $q$ independent queries.\n\n\n-----Input-----\n\nThe first line contains one integer $q$ ($1 \\le q \\le 3 \\cdot 10^5$) \u2014 the number of queries.\n\nThe first line of each query contains two integers $a$ and $b$ ($1 \\le b < a \\le 3 \\cdot 10^5$).\n\nThe second line of each query contains the string $s$ ($1 \\le |s| \\le 3 \\cdot 10^5$), consisting of only characters . and X.\n\nIt is guaranteed that sum of all $|s|$ over all queries not exceed $3 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case print YES if Alice can win and NO otherwise.\n\nYou may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).\n\n\n-----Example-----\nInput\n3\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n\nOutput\nYES\nNO\nYES\n\n\n\n-----Note-----\n\nIn the first query Alice can select substring $s_3 \\dots s_5$. After that $s$ turns into XXXXX...XX...X. After that, no matter what move Bob makes, Alice can make the move (this will be her second move), but Bob can't make his second move.\n\nIn the second query Alice can not win because she can"], "prompt": "\nQUESTION:\nAlice and Bob play a game. Initially they have a string $s_1, s_2, \\dots, s_n$, consisting of only characters . and X. They take alternating turns, and Alice is moving first. During each turn, the player has to select a contiguous substring consisting only of characters . and replaces each of them with X. Alice must select a substing of length $a$, and Bob must select a substring of length $b$. It is guaranteed that $a > b$.\n\nFor example, if $s =$ ...X.. and $a = 3$, $b = 2$, then after Alice's move string can turn only into XXXX... And if it's Bob's turn and the string $s =$ ...X.., then after Bob's move the string can turn into XX.X.., .XXX.. or ...XXX.\n\nWhoever is unable to make a move, loses. You have to determine who wins if they both play optimally.\n\nYou have to answer $q$ independent queries.\n\n\n-----Input-----\n\nThe first line contains one integer $q$ ($1 \\le q \\le 3 \\cdot 10^5$) \u2014 the number of queries.\n\nThe first line of each query contains two integers $a$ and $b$ ($1 \\le b < a \\le 3 \\cdot 10^5$).\n\nThe second line of each query contains the string $s$ ($1 \\le |s| \\le 3 \\cdot 10^5$), consisting of only characters . and X.\n\nIt is guaranteed that sum of all $|s|$ over all queries not exceed $3 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case print YES if Alice can win and NO otherwise.\n\nYou may print every letter in any case you want (so, for example, the strings yEs, yes, Yes and YES will all be recognized as positive answer).\n\n\n-----Example-----\nInput\n3\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n\nOutput\nYES\nNO\nYES\n\n\n\n-----Note-----\n\nIn the first query Alice can select substring $s_3 \\dots s_5$. After that $s$ turns into XXXXX...XX...X. After that, no matter what move Bob makes, Alice can make the move (this will be her second move), but Bob can't make his second move.\n\nIn the second query Alice can not win because she cannot even make one move.\n\nIn the third query Alice can choose substring $s_2 \\dots s_6$. After that $s$ turns into .XXXXX.X..X, and Bob can't make a move after that.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}