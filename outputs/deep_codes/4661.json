{"4661": {"code": ["cube = lambda x: x**3\n\ndef fibonacci(n):\n    fib_seq = [0, 1]\n    for i in range(2,", "cube = lambda x: x**3\n\ndef fibonacci(n):\n    fib = [0, 1]\n    for i in range(2, n):", "cube = lambda x: x**3\n\ndef fibonacci(n):\n    fib_seq = [0, 1]\n    for i in range(2,", "cube = lambda x: x**3\n\ndef fibonacci(n):\n    fib_seq = [0, 1]\n    for i in range(2,", "cube = lambda x: x**3\n\ndef fibonacci(n):\n    fibs = [0, 1]\n    for i in range(2, n"], "prompt": "\nQUESTION:\n=====Problem Statement=====\nLet's learn some new Python concepts! You have to generate a list of the first N fibonacci numbers, 0 being the first number. Then, apply the map function and a lambda expression to cube each fibonacci number and print the list.\n\nConcept\n\nThe map() function applies a function to every member of an iterable and returns the result. It takes two parameters: first, the function that is to be applied and secondly, the iterables.\nLet's say you are given a list of names, and you have to print a list that contains the length of each name.\n\n>> print (list(map(len, ['Tina', 'Raj', 'Tom'])))  \n[4, 3, 3]  \n\nLambda is a single expression anonymous function often used as an inline function. In simple words, it is a function that has only one line in its body. It proves very handy in functional and GUI programming.\n\n>> sum = lambda a, b, c: a + b + c\n>> sum(1, 2, 3)\n6\n\nNote:\n\nLambda functions cannot use the return statement and can only have a single expression. Unlike def, which creates a function and assigns it a name, lambda creates a function and returns the function itself. Lambda can be used inside lists and dictionaries. \n\n=====Input Format=====\nOne line of input: an integer N.\n\n=====Output Format=====\nA list on a single line containing the cubes of the first N fibonacci numbers.\nSTARTER CODE:\ncube = lambda x: # complete the lambda function \n\ndef fibonacci(n):\n    # return a list of fibonacci numbers\n\nif __name__ == '__main__':\n    n = int(input())\n    print(list(map(cube, fibonacci(n))))\n\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}