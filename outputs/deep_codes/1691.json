{"1691": {"code": ["from math import gcd\n\nn, k = map(int, input().", "def gcd(a,b): \n    if b==0:", "from math import gcd\nfrom collections import deque\n\ndef solve(n", "def gcd(a, b):\n    if b==0:", "def gcd(a, b):\n    while b != 0:"], "prompt": "\nQUESTION:\nPolandBall has such a convex polygon with n veritces that no three of its diagonals intersect at the same point. PolandBall decided to improve it and draw some red segments. \n\nHe chose a number k such that gcd(n, k) = 1. Vertices of the polygon are numbered from 1 to n in a clockwise way. PolandBall repeats the following process n times, starting from the vertex 1: \n\nAssume you've ended last operation in vertex x (consider x = 1 if it is the first operation). Draw a new segment from vertex x to k-th next vertex in clockwise direction. This is a vertex x + k or x + k - n depending on which of these is a valid index of polygon's vertex.\n\nYour task is to calculate number of polygon's sections after each drawing. A section is a clear area inside the polygon bounded with drawn diagonals or the polygon's sides.\n\n\n-----Input-----\n\nThere are only two numbers in the input: n and k (5 \u2264 n \u2264 10^6, 2 \u2264 k \u2264 n - 2, gcd(n, k) = 1).\n\n\n-----Output-----\n\nYou should print n values separated by spaces. The i-th value should represent number of polygon's sections after drawing first i lines.\n\n\n-----Examples-----\nInput\n5 2\n\nOutput\n2 3 5 8 11 \nInput\n10 3\n\nOutput\n2 3 4 6 9 12 16 21 26 31 \n\n\n-----Note-----\n\nThe greatest common divisor (gcd) of two integers a and b is the largest positive integer that divides both a and b without a remainder.\n\nFor the first sample testcase, you should output \"2 3 5 8 11\". Pictures below correspond to situations after drawing lines. [Image] [Image] [Image] [Image] [Image] [Image]\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}