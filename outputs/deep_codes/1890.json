{"1890": {"code": ["MOD = 10**9 + 7\n\ndef solve(s, k):\n    n = len(s)\n    dp = [[", "MOD = 10**9+7\n\ndef powmod(a, b):\n    r = 1\n    while b > 0:", "MOD = 1000000007\n\ndef solve():\n    a = input()\n    k = int(input())", "MOD = 10**9+7\nMAXN = 100005\n\na = input()\nk = int(input())", "MOD = 10**9+7\ns = input()*int(input())\ndp = [0]*len(s)\ndp"], "prompt": "\nQUESTION:\nThere is a long plate s containing n digits. Iahub wants to delete some digits (possibly none, but he is not allowed to delete all the digits) to form his \"magic number\" on the plate, a number that is divisible by 5. Note that, the resulting number may contain leading zeros.\n\nNow Iahub wants to count the number of ways he can obtain magic number, modulo 1000000007 (10^9 + 7). Two ways are different, if the set of deleted positions in s differs.\n\nLook at the input part of the statement, s is given in a special form.\n\n\n-----Input-----\n\nIn the first line you're given a string a (1 \u2264 |a| \u2264 10^5), containing digits only. In the second line you're given an integer k (1 \u2264 k \u2264 10^9). The plate s is formed by concatenating k copies of a together. That is n = |a|\u00b7k.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the required number of ways modulo 1000000007 (10^9 + 7).\n\n\n-----Examples-----\nInput\n1256\n1\n\nOutput\n4\n\nInput\n13990\n2\n\nOutput\n528\n\nInput\n555\n2\n\nOutput\n63\n\n\n\n-----Note-----\n\nIn the first case, there are four possible ways to make a number that is divisible by 5: 5, 15, 25 and 125.\n\nIn the second case, remember to concatenate the copies of a. The actual plate is 1399013990.\n\nIn the third case, except deleting all digits, any choice will do. Therefore there are 2^6 - 1 = 63 possible ways to delete digits.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}