{"1841": {"code": ["from collections import defaultdict\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nl = list(map", "n, m = map(int, input().split())\na = list(map(int, input().split()))\nl = list(map(int, (input() for", "from collections import defaultdict\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nl = list(map(", "from collections import defaultdict\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nl = list(map", "from collections import defaultdict\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nl = list(map"], "prompt": "\nQUESTION:\nSereja has an array a, consisting of n integers a_1, a_2, ..., a_{n}. The boy cannot sit and do nothing, he decided to study an array. Sereja took a piece of paper and wrote out m integers l_1, l_2, ..., l_{m} (1 \u2264 l_{i} \u2264 n). For each number l_{i} he wants to know how many distinct numbers are staying on the positions l_{i}, l_{i} + 1, ..., n. Formally, he want to find the number of distinct numbers among a_{l}_{i}, a_{l}_{i} + 1, ..., a_{n}.?\n\nSereja wrote out the necessary array elements but the array was so large and the boy was so pressed for time. Help him, find the answer for the described question for each l_{i}.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 10^5). The second line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5) \u2014 the array elements.\n\nNext m lines contain integers l_1, l_2, ..., l_{m}. The i-th line contains integer l_{i} (1 \u2264 l_{i} \u2264 n).\n\n\n-----Output-----\n\nPrint m lines \u2014 on the i-th line print the answer to the number l_{i}.\n\n\n-----Examples-----\nInput\n10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\nOutput\n6\n6\n6\n6\n6\n5\n4\n3\n2\n1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}