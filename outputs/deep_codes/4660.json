{"4660": {"code": ["import", "import", "import", "import", "import"], "prompt": "\nQUESTION:\n=====Problem Statement=====\nYou are given an integer N followed by N email addresses. Your task is to print a list containing only valid email addresses in lexicographical order.\nValid email addresses must follow these rules:\nIt must have the username@websitename.extension format type.\nThe username can only contain letters, digits, dashes and underscores.\nThe website name can only have letters and digits.\nThe maximum length of the extension is 3. \n\nConcept\n\nA filter takes a function returning True or False and applies it to a sequence, returning a list of only those members of the sequence where the function returned True. A Lambda function can be used with filters.\n\nLet's say you have to make a list of the squares of integers from 0 to 9 (both included).\n\n>> l = list(range(10))\n>> l = list(map(lambda x:x*x, l))\n\nNow, you only require those elements that are greater than 10 but less than 80.\n\n>> l = list(filter(lambda x: x > 10 and x < 80, l))\n\nEasy, isn't it?\n\n=====Input Format=====\nThe first line of input is the integer N, the number of email addresses.\nN lines follow, each containing a string.\n\n\n=====Constraints=====\nEach line is a non-empty string.\n\n=====Output Format=====\nOutput a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].\nSTARTER CODE:\ndef fun(s):\n    # return True if s is a valid email, else return False\n\ndef filter_mail(emails):\n    return list(filter(fun, emails))\n\nif __name__ == '__main__':\n    n = int(input())\n    emails = []\n    for _ in range(n):\n        emails.append(input())\n\nfiltered_emails = filter_mail(emails)\nfiltered_emails.sort()\nprint(filtered_emails)\n\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}