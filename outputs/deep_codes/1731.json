{"1731": {"code": ["MOD = 10**9 + 7\nn, m = map(int, input().split())\n\nfact = [1] * (n + m + 1)\nfor i in range(1, n + m + 1):\n    fact[i] = (fact[i - 1] * i) % MOD\n\ninv = [1", "MOD = 10**9 + 7\nn, m = map(int, input().split())\n\nfact = [1] * (n + m + 1)\nfor i in range(1, n + m + 1):\n    fact[i] = (fact[i - 1] * i) % MOD\n\ninvfact = [", "MOD = 10**9+7\nn, m = map(int, input().split())\n\nfact = [1]*(n+1)\nfor i in range(1, n+1):\n    fact[i] = (fact[i-1]*i)%MOD\n\ninv = [1]*(n+1)", "MOD = 10**9+7\n\nn, m = map(int, input().split())\n\nfact = [1]*(n+1)\nfor i in range(1, n+1):\n    fact[i] = (fact[i-1]*i)%MOD\n\ninvfact = [1]*(n+1", "MOD = 10**9+7\n\ndef pow_mod(a, b):\n    r = 1\n    while b:\n        if b & 1:\n            r = r * a % MOD\n        a = a * a % MOD\n        b >>= 1\n    return r\n\nn, m = map(int,"], "prompt": "\nQUESTION:\nYou are given two integers $n$ and $m$. Calculate the number of pairs of arrays $(a, b)$ such that:\n\n  the length of both arrays is equal to $m$;  each element of each array is an integer between $1$ and $n$ (inclusive);  $a_i \\le b_i$ for any index $i$ from $1$ to $m$;  array $a$ is sorted in non-descending order;  array $b$ is sorted in non-ascending order. \n\nAs the result can be very large, you should print it modulo $10^9+7$.\n\n\n-----Input-----\n\nThe only line contains two integers $n$ and $m$ ($1 \\le n \\le 1000$, $1 \\le m \\le 10$).\n\n\n-----Output-----\n\nPrint one integer \u2013 the number of arrays $a$ and $b$ satisfying the conditions described above modulo $10^9+7$.\n\n\n-----Examples-----\nInput\n2 2\n\nOutput\n5\n\nInput\n10 1\n\nOutput\n55\n\nInput\n723 9\n\nOutput\n157557417\n\n\n\n-----Note-----\n\nIn the first test there are $5$ suitable arrays:   $a = [1, 1], b = [2, 2]$;  $a = [1, 2], b = [2, 2]$;  $a = [2, 2], b = [2, 2]$;  $a = [1, 1], b = [2, 1]$;  $a = [1, 1], b = [1, 1]$.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}