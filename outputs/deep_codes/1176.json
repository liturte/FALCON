{"1176": {"code": ["N = int(input())\nA = list(map(int, input().split()))\nprint(sum(max(a, -a) for a in A))\n\n\nExplanation:\nThe problem can be solved by realizing that it's always better to perform the operation that will make the absolute value of the number the smallest. This is because the operation will make the number positive. Therefore, we can always choose to perform the operation on the smallest positive number, which will maximize the sum. The Python code takes advantage of this observation by using", "N = int(input())\nA = list(map(int, input().split()))\nprint(sum(max(a, -a) for a in A))\n\n\nThis solution works by using the built-in sum function in Python, combined with a generator expression that calculates the maximum of a and -a for each element in A. This effectively calculates the sum of the absolute values of all elements in A, which is the definition of the maximum possible value of B_1 + B_2 + ... + B_N under the constraints of", "import sys\n\nN = int(sys.stdin.readline().strip())\nA = list(map(int, sys.stdin.readline().strip().split()))\n\nmax_sum = sum(A)\nmin_sum = sum(A[i] * A[i+1] < 0 and abs(A[i]) > abs(A[i+1]) for i in range(N-1)) * 2\n\nprint(max_sum - min_sum)\n\n\nEXPLANATION:", "N = int(input())\nA = list(map(int, input().split()))\n\nnegs = [i for i in range(N-1) if A[i] < 0 and A[i+1] < 0]\nneg_sum = sum(A[i] * A[i+1] for i in negs)\n\npos_sum = sum(A[i] for i in range(N-1) if A[i] >= 0 and A[i+1] >= 0)\n\nprint(", "n = int(input())\na = list(map(int, input().split()))\nprint(sum(max(a[i], -a[i]) for i in range(n)))\n\n\nEXPLANATION:\nThe solution is simple: for each number, we choose the maximum between the number itself and its negative. This is because when a number is multiplied by -1, its absolute value increases but its sign reverses. Hence, we are maximizing the sum of the absolute values of the numbers, which is equivalent to maximizing"], "prompt": "\nQUESTION:\nThere are N integers, A_1, A_2, ..., A_N, arranged in a row in this order.\nYou can perform the following operation on this integer sequence any number of times:\nOperation: Choose an integer i satisfying 1 \\leq i \\leq N-1. Multiply both A_i and A_{i+1} by -1.\nLet B_1, B_2, ..., B_N be the integer sequence after your operations.\nFind the maximum possible value of B_1 + B_2 + ... + B_N.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq N \\leq 10^5\n - -10^9 \\leq A_i \\leq 10^9\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n-----Output-----\nPrint the maximum possible value of B_1 + B_2 + ... + B_N.\n\n-----Sample Input-----\n3\n-10 5 -4\n\n-----Sample Output-----\n19\n\nIf we perform the operation as follows:\n - Choose 1 as i, which changes the sequence to 10, -5, -4.\n - Choose 2 as i, which changes the sequence to 10, 5, 4.\nwe have B_1 = 10, B_2 = 5, B_3 = 4. The sum here, B_1 + B_2 + B_3 = 10 + 5 + 4 = 19, is the maximum possible result.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}