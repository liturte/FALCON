{"1372": {"code": ["import sys\n\ndef solve(H, N, A, B):\n    dp = [0] + [-1]*H\n    for i in range(H):\n        if dp[i] != -1:\n            for j in range(N):\n                for k in range(A[j], H+1, A[j]):\n                    if i+k <= H and (dp[i+k] == -1 or dp[i+k]", "import sys\nfrom functools import lru_cache\n\nH, N = map(int, sys.stdin.readline().split())\nspells = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\n\n@lru_cache(None)\ndef dp(h):\n    if h <= 0: return 0\n    return min(dp(h - a) + b for a, b in spells", "import sys\n\ndef solve():\n    H, N = map(int, sys.stdin.readline().split())\n    spells = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\n\n    dp = [0] + [-1]*H\n    for i in range(1, H+1):\n        for spell in spells:\n            if i >= spell[0] and dp[i-", "import sys\n\ndef main():\n    H, N = map(int, sys.stdin.readline().split())\n    spells = [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\n\n    dp = [float('inf')] * (H+1)\n    dp[0] = 0\n\n    for spell in spells:\n        for h in range(spell[0], H+1", "H, N = map(int, input().split())\nspells = [list(map(int, input().split())) for _ in range(N)]\ndp = [float('inf')] * (H + 1)\ndp[0] = 0\nfor i in range(1, H + 1):\n    for A, B in spells:\n        if i - A >= 0:\n            dp[i] = min(dp[i], dp[i - A"], "prompt": "\nQUESTION:\nIbis is fighting with a monster.\nThe health of the monster is H.\nIbis can cast N kinds of spells. Casting the i-th spell decreases the monster's health by A_i, at the cost of B_i Magic Points.\nThe same spell can be cast multiple times. There is no way other than spells to decrease the monster's health.\nIbis wins when the health of the monster becomes 0 or below.\nFind the minimum total Magic Points that have to be consumed before winning.\n\n-----Constraints-----\n - 1 \\leq H \\leq 10^4\n - 1 \\leq N \\leq 10^3\n - 1 \\leq A_i \\leq 10^4\n - 1 \\leq B_i \\leq 10^4\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nH N\nA_1 B_1\n:\nA_N B_N\n\n-----Output-----\nPrint the minimum total Magic Points that have to be consumed before winning.\n\n-----Sample Input-----\n9 3\n8 3\n4 2\n2 1\n\n-----Sample Output-----\n4\n\nFirst, let us cast the first spell to decrease the monster's health by 8, at the cost of 3 Magic Points. The monster's health is now 1.\nThen, cast the third spell to decrease the monster's health by 2, at the cost of 1 Magic Point. The monster's health is now -1.\nIn this way, we can win at the total cost of 4 Magic Points.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}