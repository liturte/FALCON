{"2914": {"code": ["import math\n\ndef binomial(n, k):\n    if k > n or k < 0:\n        return 0\n    return math.factorial(n) // (math.factorial(k) * math.factorial(n - k))\n\ndef prob_distinct_numbers(n, s, k):\n    return sum(binomial(n, i)", "from math import comb\n\ndef binomial(n, k):\n    if k > n:\n        return 0\n    res = 1\n    for i in range(k):\n        res *= (n - i) / (i + 1)\n    return res\n\nn, s, k = map(int, input().split())\np = 1 / s\nres = 0", "import math\n\ndef comb(n, r):\n    return math.factorial(n) / (math.factorial(r) * math.factorial(n - r))\n\ndef solve(n, s, k):\n    p = 0.0\n    for i in range(k, n + 1):\n        p += comb(s, i) * comb(s, n", "import math\n\ndef comb(n, r):\n    return math.factorial(n) / (math.factorial(r) * math.factorial(n - r))\n\ndef solve(n, s, k):\n    dp = [[0] * (k + 1) for _ in range(n + 1)]\n    dp[0][0] = 1", "import math\n\ndef binomial_coefficient(n, k):\n    \"\"\"Calculate binomial coefficient (n choose k).\"\"\"\n    if k > n:\n        return 0\n    if k > n - k:\n        k = n - k\n    numerator = 1\n    for i in range(1, k + 1):\n        numerator = numerator * ("], "prompt": "\nQUESTION:\nGunnar and his friends like games which involve rolling dice. Gunnar has a huge collection of 6-sided, 12-sided and 20-sided dice. All the games with dice started to bore him, so he came up with a new game. He rolls an $s$-sided die $n$ times and wins if at least $k$ different numbers appear in the $n$ throws. An $s$-sided die contains $s$ distinct numbers $1, \\dots , s$ on its sides.\n\nSince this is a game only for one person, Gunnar and his friends decided to make it more fun by letting other people bet on a particular game. Before you bet on a particular game, you would like to know how probable it is to throw at least $k$ different numbers in $n$ throws with an $s$-sided die. We assume that all numbers have the same probability of being thrown in each throw.\n\n-----Input-----\nThe input consists of a single line with three integers $n$, $s$, and $k$ ($1\\le n\\le 10000, 1 \\le k \\le s \\le 500$). $n$ is the number of throws, $k$ the number of different numbers that are needed to win and $s$ is the number of sides the die has.\n\n-----Output-----\nOutput one line with the probability that a player throws at least $k$ different numbers within $n$ throws with an $s$-sided die. Your answer should be within absolute or relative error at most $10^{-7}$.\n\n-----Examples-----\nSample Input:\n3 3 2\nSample Output:\n0.888888889\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}