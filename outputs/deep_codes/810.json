{"810": {"code": ["MOD = 10**9 + 7\na, b, n = map(int, input().split())\ndp = [[[0]*12 for _ in range(12)] for _ in range(2)]\ndp[0][0][0] = 1\nfor i in range(8*n):\n    for j in range(i//2+1):\n        k = i-j\n        dp[i+1%2][j][k] = (dp[i%2][j][k]*(a+b) + dp[i%2][j-1][k-1]*a", "a, b, n = map(int, input().split())\nmod = 10**9+7\ndp = [[0]*10 for _ in range(n+1)]\nfor i in range(1, 10):\n    dp[1][i] = 1\nfor i in range(2, n+1):\n    for j in range(10):\n        dp[i][j] = (dp[i-1][j]*2 + dp[i][j-1] - (dp[i-2][j-1] if j-1>=1 else 0))", "MOD = 10**9 + 7\na, b, n = map(int, input().split())\ndp = [[[0, 0, 0] for _ in range(n+1)] for _ in range(n+1)]\ndp[0][0][0] = 1\nfor i in range(n+1):\n    for j in range(i+1):\n        for k in range(2):\n            if dp[i][j][k] == 0: continue\n            for x in [a, b]:\n                if x == 0 and k == 1: continue\n                dp[i", "MOD = 10**9 + 7\na, b, n = map(int, input().split())\n\nf = [[0]*10 for _ in range(n+1)]\nf[0][0] = 1\nfor i in range(1, n+1):\n    f[i][0] = f[i-1][0] + f[i-1][1]\n    f[i][1] = f[i-1][0]\n    for j in range(2, 10):\n        f[i][j] = f[i-1][j-1]", "MOD = 10**9 + 7\n\ndef solve(a, b, n):\n    dp = [[0]*n for _ in range(n)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(i+1):\n            if j+1 < n:\n                dp[j+1][i%2] = (dp[j+1][i%2] + dp[j][i%2]) % MOD\n            if i+2 <= n:\n                dp[i+2][(i+2)%2"], "prompt": "\nQUESTION:\nVitaly is a very weird man. He's got two favorite digits a and b. Vitaly calls a positive integer good, if the decimal representation of this integer only contains digits a and b. Vitaly calls a good number excellent, if the sum of its digits is a good number.\n\nFor example, let's say that Vitaly's favourite digits are 1 and 3, then number 12 isn't good and numbers 13 or 311 are. Also, number 111 is excellent and number 11 isn't. \n\nNow Vitaly is wondering, how many excellent numbers of length exactly n are there. As this number can be rather large, he asks you to count the remainder after dividing it by 1000000007 (10^9 + 7).\n\nA number's length is the number of digits in its decimal representation without leading zeroes.\n\n\n-----Input-----\n\nThe first line contains three integers: a, b, n (1 \u2264 a < b \u2264 9, 1 \u2264 n \u2264 10^6).\n\n\n-----Output-----\n\nPrint a single integer \u2014 the answer to the problem modulo 1000000007 (10^9 + 7).\n\n\n-----Examples-----\nInput\n1 3 3\n\nOutput\n1\n\nInput\n2 3 10\n\nOutput\n165\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}