{"2471": {"code": ["from collections import defaultdict\n\nH, W, N = map(int, input().split())\n\npoints = [list(map(int, input().split())) for _ in range", "H, W, N = map(int, input().split())\n\na = [0]*H\nblack = [[0]*W for _ in range(H)]\nc", "from collections import defaultdict\n\nH, W, N = map(int, input().split())\na = [0]*N\nb = [0]*N\n\nfor", "from collections import defaultdict\n\nH, W, N = map(int, input().split())\n\n# Count the number of cells in each row and each column\nrows = [0", "from collections import defaultdict\n\ndef solve(H, W, N, a, b):\n    h = [0] * (H+1)\n    w = [0]"], "prompt": "\nQUESTION:\nWe have a grid with H rows and W columns. At first, all cells were painted white.\nSnuke painted N of these cells. The i-th ( 1 \\leq i \\leq N ) cell he painted is the cell at the a_i-th row and b_i-th column.\nCompute the following:\n - For each integer j ( 0 \\leq j \\leq 9 ), how many subrectangles of size 3\u00d73 of the grid contains exactly j black cells, after Snuke painted N cells?\n\n-----Constraints-----\n - 3 \\leq H \\leq 10^9\n - 3 \\leq W \\leq 10^9\n - 0 \\leq N \\leq min(10^5,H\u00d7W)\n - 1 \\leq a_i \\leq H (1 \\leq i \\leq N)\n - 1 \\leq b_i \\leq W (1 \\leq i \\leq N)\n - (a_i, b_i) \\neq (a_j, b_j) (i \\neq j)\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nH W N\na_1 b_1\n:\na_N b_N\n\n-----Output-----\nPrint 10 lines.\nThe (j+1)-th ( 0 \\leq j \\leq 9 ) line should contain the number of the subrectangles of size 3\u00d73 of the grid that contains exactly j black cells.\n\n-----Sample Input-----\n4 5 8\n1 1\n1 4\n1 5\n2 3\n3 1\n3 2\n3 4\n4 4\n\n-----Sample Output-----\n0\n0\n0\n2\n4\n0\n0\n0\n0\n0\n\n\nThere are six subrectangles of size 3\u00d73. Two of them contain three black cells each, and the remaining four contain four black cells each.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}