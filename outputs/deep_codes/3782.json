{"3782": {"code": ["N, K, Q = map(int, input().split())\nA = list(map(int, input().split()))\n\ndef solve():\n    A.sort()\n    ans = 10**18\n    for i in range(N-K+1):\n        ans = min(ans,", "from sys import stdin\nfrom bisect import bisect_left as bl\n\ndef read_ints():\n    return list(map(int, stdin.readline().split()))\n\nN, K, Q = read_ints()\nA = read_ints()\n\ndef solve():\n    A.sort()", "from sortedcontainers import SortedList\n\nN, K, Q = map(int, input().split())\nA = list(map(int, input().split()))\n\nsl = SortedList(A[:K])\nremoved = SortedList()\n\nans = float('inf')\nfor i in range", "import heapq\n\nN, K, Q = map(int, input().split())\nA = list(map(int, input().split()))\n\nmin_heap = []\nmax_diff = float('inf')\n\nfor i in range(N - K + 1):\n    for j in range(i", "import heapq\n\nN, K, Q = map(int, input().split())\nA = list(map(int, input().split()))\n\nhq = []\nfor i in range(N):\n    if len(hq) < K:\n        heapq.heappush(hq, -"], "prompt": "\nQUESTION:\nYou are given an integer sequence A of length N and an integer K.\nYou will perform the following operation on this sequence Q times:\n - Choose a contiguous subsequence of length K, then remove the smallest element among the K elements contained in the chosen subsequence (if there are multiple such elements, choose one of them as you like).\nLet X and Y be the values of the largest and smallest element removed in the Q operations. You would like X-Y to be as small as possible.\nFind the smallest possible value of X-Y when the Q operations are performed optimally.\n\n-----Constraints-----\n - 1 \\leq N \\leq 2000\n - 1 \\leq K \\leq N\n - 1 \\leq Q \\leq N-K+1\n - 1 \\leq A_i \\leq 10^9\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K Q\nA_1 A_2 ... A_N\n\n-----Output-----\nPrint the smallest possible value of X-Y.\n\n-----Sample Input-----\n5 3 2\n4 3 1 5 2\n\n-----Sample Output-----\n1\n\nIn the first operation, whichever contiguous subsequence of length 3 we choose, the minimum element in it is 1.\nThus, the first operation removes A_3=1 and now we have A=(4,3,5,2).\nIn the second operation, it is optimal to choose (A_2,A_3,A_4)=(3,5,2) as the contiguous subsequence of length 3 and remove A_4=2.\nIn this case, the largest element removed is 2, and the smallest is 1, so their difference is 2-1=1.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}