{"1508": {"code": ["import", "def", "n", "def", "import"], "prompt": "\nQUESTION:\nYou want to arrange n integers a_1, a_2, ..., a_{n} in some order in a row. Let's define the value of an arrangement as the sum of differences between all pairs of adjacent integers.\n\nMore formally, let's denote some arrangement as a sequence of integers x_1, x_2, ..., x_{n}, where sequence x is a permutation of sequence a. The value of such an arrangement is (x_1 - x_2) + (x_2 - x_3) + ... + (x_{n} - 1 - x_{n}).\n\nFind the largest possible value of an arrangement. Then, output the lexicographically smallest sequence x that corresponds to an arrangement of the largest possible value.\n\n\n-----Input-----\n\nThe first line of the input contains integer n (2 \u2264 n \u2264 100). The second line contains n space-separated integers a_1, a_2, ..., a_{n} (|a_{i}| \u2264 1000).\n\n\n-----Output-----\n\nPrint the required sequence x_1, x_2, ..., x_{n}. Sequence x should be the lexicographically smallest permutation of a that corresponds to an arrangement of the largest possible value.\n\n\n-----Examples-----\nInput\n5\n100 -100 50 0 -50\n\nOutput\n100 -50 0 50 -100 \n\n\n\n-----Note-----\n\nIn the sample test case, the value of the output arrangement is (100 - ( - 50)) + (( - 50) - 0) + (0 - 50) + (50 - ( - 100)) = 200. No other arrangement has a larger value, and among all arrangements with the value of 200, the output arrangement is the lexicographically smallest one.\n\nSequence x_1, x_2, ... , x_{p} is lexicographically smaller than sequence y_1, y_2, ... , y_{p} if there exists an integer r (0 \u2264 r < p) such that x_1 = y_1, x_2 = y_2, ... , x_{r} = y_{r} and x_{r} + 1 < y_{r} + 1.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}