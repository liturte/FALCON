{"3767": {"code": ["QUESTION:\nNick has n bottles of soda left after his birthday. Each bottle is described by two values: remaining amount of soda a_{i} and bottle volume b_{i} (a_{i} \u2264 b_{i}).\n\nNick has decided to pour all remaining soda into minimal number of bottles, moreover he has to do it as soon as possible. Nick spends x seconds to pour x units of soda from one bottle to another.\n\nNick asks you to help him to determine k \u2014 the minimal number of bottles to store all remaining soda and t \u2014 the minimal time to pour soda into k bottles. A bottle can't store more soda than its volume. All remaining soda should be saved.\n\n\n-----Input-----\n\nThe first line contains positive integer n (1 \u2264 n \u2264 100) \u2014 the number of bottles.\n\nThe second line contains n positive integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 100), where a_{i} is the amount of soda remaining in the i-th bottle.\n\nThe third line contains n positive integers b_1, b_2, ..., b_{n} (1 \u2264 b_{i} \u2264 100), where b_{i} is the volume of the i-th bottle.\n\nIt is guaranteed that a_{i} \u2264 b_{i} for any i.\n\n\n-----Output-----\n\nThe only line should contain two integers k and t, where k is the minimal number of bottles that can store all the soda and t is the minimal time to pour the soda into k bottles.\n\n\n-----Examples-----\nInput\n4\n3 3 4 3\n4 7 6 5\n\nOutput\n2 6\n\nInput\n2\n1 1\n100 100\n\nOutput\n1 1\n\nInput\n5\n10 30 5 6 24\n10 41 7 8 24\n\nOutput\n3 11\n\n\n\n-----Note-----\n\nIn the first example Nick can pour soda from the first bottle to the second bottle. It will take 3 seconds. After it the second bottle will contain 3 + 3 = 6 units of soda. Then he can pour soda from the fourth bottle to the second bottle and to the third bottle: one unit to the second and two units to the third. It will take 1 + 2 = 3 seconds. So, all the soda will be in two bottles and he will spend 3 +", "QUESTION:\nNick has n bottles of soda left after his birthday. Each bottle is described by two values: remaining amount of soda a_{i} and bottle volume b_{i} (a_{i} \u2264 b_{i}).\n\nNick has decided to pour all remaining soda into minimal number of bottles, moreover he has to do it as soon as possible. Nick spends x seconds to pour x units of soda from one bottle to another.\n\nNick asks you to help him to determine k \u2014 the minimal number of bottles to store all remaining soda and t \u2014 the minimal time to pour soda into k bottles. A bottle can't store more soda than its volume. All remaining soda should be saved.\n\n\n-----Input-----\n\nThe first line contains positive integer n (1 \u2264 n \u2264 100) \u2014 the number of bottles.\n\nThe second line contains n positive integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 100), where a_{i} is the amount of soda remaining in the i-th bottle.\n\nThe third line contains n positive integers b_1, b_2, ..., b_{n} (1 \u2264 b_{i} \u2264 100), where b_{i} is the volume of the i-th bottle.\n\nIt is guaranteed that a_{i} \u2264 b_{i} for any i.\n\n\n-----Output-----\n\nThe only line should contain two integers k and t, where k is the minimal number of bottles that can store all the soda and t is the minimal time to pour the soda into k bottles.\n\n\n-----Examples-----\nInput\n4\n3 3 4 3\n4 7 6 5\n\nOutput\n2 6\n\nInput\n2\n1 1\n100 100\n\nOutput\n1 1\n\nInput\n5\n10 30 5 6 24\n10 41 7 8 24\n\nOutput\n3 11\n\n\n\n-----Note-----\n\nIn the first example Nick can pour soda from the first bottle to the second bottle. It will take 3 seconds. After it the second bottle will contain 3 + 3 = 6 units of soda. Then he can pour soda from the fourth bottle to the second bottle and to the third bottle: one unit to the second and two units to the third. It will take 1 + 2 = 3 seconds. So, all the soda will be in two bottles and he will spend 3 +", "QUESTION:\nNick has n bottles of soda left after his birthday. Each bottle is described by two values: remaining amount of soda a_{i} and bottle volume b_{i} (a_{i} \u2264 b_{i}).\n\nNick has decided to pour all remaining soda into minimal number of bottles, moreover he has to do it as soon as possible. Nick spends x seconds to pour x units of soda from one bottle to another.\n\nNick asks you to help him to determine k \u2014 the minimal number of bottles to store all remaining soda and t \u2014 the minimal time to pour soda into k bottles. A bottle can't store more soda than its volume. All remaining soda should be saved.\n\n\n-----Input-----\n\nThe first line contains positive integer n (1 \u2264 n \u2264 100) \u2014 the number of bottles.\n\nThe second line contains n positive integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 100), where a_{i} is the amount of soda remaining in the i-th bottle.\n\nThe third line contains n positive integers b_1, b_2, ..., b_{n} (1 \u2264 b_{i} \u2264 100), where b_{i} is the volume of the i-th bottle.\n\nIt is guaranteed that a_{i} \u2264 b_{i} for any i.\n\n\n-----Output-----\n\nThe only line should contain two integers k and t, where k is the minimal number of bottles that can store all the soda and t is the minimal time to pour the soda into k bottles.\n\n\n-----Examples-----\nInput\n4\n3 3 4 3\n4 7 6 5\n\nOutput\n2 6\n\nInput\n2\n1 1\n100 100\n\nOutput\n1 1\n\nInput\n5\n10 30 5 6 24\n10 41 7 8 24\n\nOutput\n3 11\n\n\n\n-----Note-----\n\nIn the first example Nick can pour soda from the first bottle to the second bottle. It will take 3 seconds. After it the second bottle will contain 3 + 3 = 6 units of soda. Then he can pour soda from the fourth bottle to the second bottle and to the third bottle: one unit to the second and two units to the third. It will take 1 + 2 = 3 seconds. So, all the soda will be in two bottles and he will spend 3 +", "QUESTION:\nNick has n bottles of soda left after his birthday. Each bottle is described by two values: remaining amount of soda a_{i} and bottle volume b_{i} (a_{i} \u2264 b_{i}).\n\nNick has decided to pour all remaining soda into minimal number of bottles, moreover he has to do it as soon as possible. Nick spends x seconds to pour x units of soda from one bottle to another.\n\nNick asks you to help him to determine k \u2014 the minimal number of bottles to store all remaining soda and t \u2014 the minimal time to pour soda into k bottles. A bottle can't store more soda than its volume. All remaining soda should be saved.\n\n\n-----Input-----\n\nThe first line contains positive integer n (1 \u2264 n \u2264 100) \u2014 the number of bottles.\n\nThe second line contains n positive integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 100), where a_{i} is the amount of soda remaining in the i-th bottle.\n\nThe third line contains n positive integers b_1, b_2, ..., b_{n} (1 \u2264 b_{i} \u2264 100), where b_{i} is the volume of the i-th bottle.\n\nIt is guaranteed that a_{i} \u2264 b_{i} for any i.\n\n\n-----Output-----\n\nThe only line should contain two integers k and t, where k is the minimal number of bottles that can store all the soda and t is the minimal time to pour the soda into k bottles.\n\n\n-----Examples-----\nInput\n4\n3 3 4 3\n4 7 6 5\n\nOutput\n2 6\n\nInput\n2\n1 1\n100 100\n\nOutput\n1 1\n\nInput\n5\n10 30 5 6 24\n10 41 7 8 24\n\nOutput\n3 11\n\n\n\n-----Note-----\n\nIn the first example Nick can pour soda from the first bottle to the second bottle. It will take 3 seconds. After it the second bottle will contain 3 + 3 = 6 units of soda. Then he can pour soda from the fourth bottle to the second bottle and to the third bottle: one unit to the second and two units to the third. It will take 1 + 2 = 3 seconds. So, all the soda will be in two bottles and he will spend 3 +", "QUESTION:\nNick has n bottles of soda left after his birthday. Each bottle is described by two values: remaining amount of soda a_{i} and bottle volume b_{i} (a_{i} \u2264 b_{i}).\n\nNick has decided to pour all remaining soda into minimal number of bottles, moreover he has to do it as soon as possible. Nick spends x seconds to pour x units of soda from one bottle to another.\n\nNick asks you to help him to determine k \u2014 the minimal number of bottles to store all remaining soda and t \u2014 the minimal time to pour soda into k bottles. A bottle can't store more soda than its volume. All remaining soda should be saved.\n\n\n-----Input-----\n\nThe first line contains positive integer n (1 \u2264 n \u2264 100) \u2014 the number of bottles.\n\nThe second line contains n positive integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 100), where a_{i} is the amount of soda remaining in the i-th bottle.\n\nThe third line contains n positive integers b_1, b_2, ..., b_{n} (1 \u2264 b_{i} \u2264 100), where b_{i} is the volume of the i-th bottle.\n\nIt is guaranteed that a_{i} \u2264 b_{i} for any i.\n\n\n-----Output-----\n\nThe only line should contain two integers k and t, where k is the minimal number of bottles that can store all the soda and t is the minimal time to pour the soda into k bottles.\n\n\n-----Examples-----\nInput\n4\n3 3 4 3\n4 7 6 5\n\nOutput\n2 6\n\nInput\n2\n1 1\n100 100\n\nOutput\n1 1\n\nInput\n5\n10 30 5 6 24\n10 41 7 8 24\n\nOutput\n3 11\n\n\n\n-----Note-----\n\nIn the first example Nick can pour soda from the first bottle to the second bottle. It will take 3 seconds. After it the second bottle will contain 3 + 3 = 6 units of soda. Then he can pour soda from the fourth bottle to the second bottle and to the third bottle: one unit to the second and two units to the third. It will take 1 + 2 = 3 seconds. So, all the soda will be in two bottles and he will spend 3 +"], "prompt": "\nQUESTION:\nNick has n bottles of soda left after his birthday. Each bottle is described by two values: remaining amount of soda a_{i} and bottle volume b_{i} (a_{i} \u2264 b_{i}).\n\nNick has decided to pour all remaining soda into minimal number of bottles, moreover he has to do it as soon as possible. Nick spends x seconds to pour x units of soda from one bottle to another.\n\nNick asks you to help him to determine k \u2014 the minimal number of bottles to store all remaining soda and t \u2014 the minimal time to pour soda into k bottles. A bottle can't store more soda than its volume. All remaining soda should be saved.\n\n\n-----Input-----\n\nThe first line contains positive integer n (1 \u2264 n \u2264 100) \u2014 the number of bottles.\n\nThe second line contains n positive integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 100), where a_{i} is the amount of soda remaining in the i-th bottle.\n\nThe third line contains n positive integers b_1, b_2, ..., b_{n} (1 \u2264 b_{i} \u2264 100), where b_{i} is the volume of the i-th bottle.\n\nIt is guaranteed that a_{i} \u2264 b_{i} for any i.\n\n\n-----Output-----\n\nThe only line should contain two integers k and t, where k is the minimal number of bottles that can store all the soda and t is the minimal time to pour the soda into k bottles.\n\n\n-----Examples-----\nInput\n4\n3 3 4 3\n4 7 6 5\n\nOutput\n2 6\n\nInput\n2\n1 1\n100 100\n\nOutput\n1 1\n\nInput\n5\n10 30 5 6 24\n10 41 7 8 24\n\nOutput\n3 11\n\n\n\n-----Note-----\n\nIn the first example Nick can pour soda from the first bottle to the second bottle. It will take 3 seconds. After it the second bottle will contain 3 + 3 = 6 units of soda. Then he can pour soda from the fourth bottle to the second bottle and to the third bottle: one unit to the second and two units to the third. It will take 1 + 2 = 3 seconds. So, all the soda will be in two bottles and he will spend 3 + 3 = 6 seconds to do it.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}