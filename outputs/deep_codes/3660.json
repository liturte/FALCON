{"3660": {"code": ["def min_cost(message, stickers):\n    dp = [0] + [-1]*len(message)\n    for i in range(len(message)):\n        if dp[i] != -1:\n            for word, price in stickers:\n                j = i\n                while True:\n                    j = message.find(word, j)\n                    if j == -1:\n                        break\n                    if dp[j] == -1 or dp[i", "def min_cost(message, stickers):\n    dp = [0] + [-1]*len(message)\n    for i in range(len(message)):\n        if dp[i] != -1:\n            for word, price in stickers:\n                j = i+1\n                while word in message[i:j]:\n                    if dp[j] == -1 or dp[j] > dp[i] + price:\n                        dp[", "def sticker_message(message, stickers):\n    dp = [0] + [-1]*len(message)\n    for i in range(1, len(message)+1):\n        for sticker in stickers:\n            word, price = sticker.split()\n            price = int(price)\n            if message[:i].endswith(word) and dp[i-len(word)] != -1:\n                dp[i] = max(dp", "def min_cost(message, stickers):\n    dp = [0] + [float('inf')]*len(message)\n    for i in range(1, len(message)+1):\n        for word, price in stickers:\n            if word == message[:i][-len(word):]:\n                dp[i] = min(dp[i], dp[i-len(word)]+price)\n    return dp[-1] if dp[-1]", "def solve(message, stickers):\n    dp = [0] + [-1]*len(message)\n    for i in range(len(message)):\n        if dp[i] != -1:\n            for word, price in stickers:\n                j = i\n                for c in word:\n                    if j < len(message) and c == message[j]:\n                        j += 1\n                    else:\n                        break\n                if j == i or (j < len"], "prompt": "\nQUESTION:\nFilom\u00e9na wants to write a message on her newly opened sticker store. She wants to write the message using stickers that she sells in the store. Each sticker spells a word and has a price. She has unlimited supply of any type of sticker. The stickers can overlap but the maximum thickness of the message is two stickers, that is, at no place should more than two stickers overlap (otherwise the message would stick out too much). Now she wonders whether it is possible to write the message and if so, what is the minimal cost of doing it?\n\n-----Input-----\nThe first line contains the message written as one word in capital letters. The second line contains $n$, the number of different types of stickers. Each of the next $n$ lines contains the word spelled by the sticker and the price of the sticker (the word is a single word in capital letters; the price of the sticker is a positive integer $\\leq 100000$). You may assume that $n\\leq 500$ and that length of each sticker is at most $20$. The length of the message is at most $1000$.\n\n-----Output-----\nThe output consists of a single line. If the message can be assembled from the stickers with no more than two stickers overlapping at any place then it should contain the minimal cost of creating the message. Otherwise it should contain the string IMPOSSIBLE.\n\n-----Examples-----\nSample Input:\nBUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nSample Output:\n28\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}