{"2391": {"code": ["N", "n", "from", "import", "N"], "prompt": "\nQUESTION:\nGiven are two sequences a=\\{a_0,\\ldots,a_{N-1}\\} and b=\\{b_0,\\ldots,b_{N-1}\\} of N non-negative integers each.\nSnuke will choose an integer k such that 0 \\leq k < N and an integer x not less than 0, to make a new sequence of length N, a'=\\{a_0',\\ldots,a_{N-1}'\\}, as follows:\n - a_i'= a_{i+k \\mod N}\\ XOR \\ x\nFind all pairs (k,x) such that a' will be equal to b.What is \\mbox{ XOR }?\n\nThe XOR of integers A and B, A \\mbox{ XOR } B, is defined as follows:\n\n - When A \\mbox{ XOR } B is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if either A or B, but not both, has 1 in the 2^k's place, and 0 otherwise.\nFor example, 3 \\mbox{ XOR } 5 = 6. (In base two: 011 \\mbox{ XOR } 101 = 110.)\n\n\n-----Constraints-----\n - 1 \\leq N \\leq 2 \\times 10^5\n - 0 \\leq a_i,b_i < 2^{30}\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\na_0 a_1 ... a_{N-1}\nb_0 b_1 ... b_{N-1}\n\n-----Output-----\nPrint all pairs (k, x) such that a' and b will be equal, using one line for each pair, in ascending order of k (ascending order of x for pairs with the same k).\nIf there are no such pairs, the output should be empty.\n\n-----Sample Input-----\n3\n0 2 1\n1 2 3\n\n-----Sample Output-----\n1 3\n\nIf (k,x)=(1,3),\n - a_0'=(a_1\\ XOR \\ 3)=1\n - a_1'=(a_2\\ XOR \\ 3)=2\n - a_2'=(a_0\\ XOR \\ 3)=3\nand we have a' = b.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}