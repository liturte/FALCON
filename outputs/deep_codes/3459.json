{"3459": {"code": ["from collections import defaultdict\n\ndef solve(n, residents):\n    party_to_residents = defaultdict(list)\n    club_to_", "from collections import defaultdict\n\ndef solve():\n    t = int(input().strip())\n    for _ in range(t):\n        n = int", "def find_council(n, residents):\n    parties = {}\n    clubs = {}\n    for resident in residents:\n        name, party, num", "import sys\nfrom collections import defaultdict\nfrom heapq import *\n\ndef solve(n, parties, clubs, residents):\n    party_to_res", "from collections import defaultdict\nfrom heapq import *\n\ndef solve(n, residents):\n    party_to_residents = defaultdict(list)"], "prompt": "\nQUESTION:\nEach resident of a particular town is a member of zero or more clubs and also a member of exactly one political party. Each club is to appoint one of its members to represent it on the town council so that the number of council members belonging to any given party does not equal or exceed half the membership of the council. The same person may not represent two clubs; that is there must be a 1-1 relationship between clubs and council members. Your job is to select the council members subject to these constraints.\n\n-----Input-----\nIn the first line of input there will be an integer $T \\le 12$, giving the number of test cases.\n\nEach of the $T$ testcases begins with a line with the number of residents $n$, $1 \\leq n \\leq 1000$. The next $n$ lines each contain a resident, a party, the number of clubs the resident belongs to (at most $110$) and the names of such clubs. Each resident appears in exactly one input line.\n\n-----Output-----\nFor each test case, follow the following format: Each line should name a council member followed by the club represented by the member. If several answers are possible, any will do. If no council can be formed, print \u201cImpossible.\u201d in a line. There will be a blank line in between two test cases.\n\n-----Examples-----\nSample Input:\n2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nSample Output:\nfred jetsons\njohn jets\nruth rockets\n\nfred jetsons\njohn jets\nruth rockets\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}