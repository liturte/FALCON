{"1583": {"code": ["import math\n\na, b, x = map(int, input().split())\n\ndef solve(a, b, x):\n    x /= a*a*b/2\n    t = math.pi * a * b / 2\n    return math.degrees(math.asin(x / t))\n\nprint(solve(a, b, x))\n\n\nThis code works by first calculating the fraction of the bottle that is still half-full by dividing the volume of the water poured by the volume of the half-full bottle. This fraction is then used to calculate the angle at which the bottle can be tilted without spilling any water. The angle is calculated using the sine of the angle, which is equal to the fraction of", "import math\n\na, b, x = map(int, input().split())\n\ndef f(h, r):\n    return h * r * r\n\ndef binary_search():\n    left = 0\n    right = 90\n    for _ in range(100):\n        mid = (left + right) / 2\n        if f(mid, a) + f(mid, b) <= x:\n            left = mid\n        else:\n            right = mid\n    return left\n\nif a * a * b <= x:\n    print(90.0)\nelse:\n    print(binary_search())\n\n\nThis program uses binary search to find the maximum angle at which the water does not spill.", "import math\n\na, b, x = map(int, input().split())\n\ndef solve(a, b, x):\n    if x >= a*a*b/2:\n        return 0\n    else:\n        l = 0\n        r = math.pi/2\n        for _ in range(100):\n            m = (l + r) / 2\n            h = a * b * m / 2\n            if a*a*h > x:\n                r = m\n            else:\n                l = m\n        return m * 180 / math.pi\n\nprint(solve(a, b, x))\n\n\nExplanation:\nWe can solve this problem by using", "import math\n\na, b, x = map(int, input().split())\n\n# The volume of the bottle is a*a*b.\n# If we pour x units of volume into the bottle,\n# we can calculate the height of the liquid using the ratio x / (a*a).\n# We can then calculate the angle using the trigonometric function arccos.\n\nh = x / (a * a)\n\n# The volume of the liquid in the bottle is then a*a*h.\n# We can use this volume to calculate the angle.\n\nangle = math.degrees(math.acos((h * a) / math.sqrt(a * a * b * b)))\n\nprint(angle)", "import math\na, b, x = map(int, input().split())\n\ndef check(angle):\n    h1 = b * math.sin(math.radians(angle))\n    h2 = a * math.sin(math.radians(90 - angle))\n    volume = h1 * a * a / 2 + h2 * b * b / 2 - x\n    return volume <= 0\n\nlow, high = 0, 90\nwhile high - low > 1e-12:\n    mid = (low + high) / 2\n    if check(mid):\n        high = mid\n    else:\n        low = mid\n\nprint(high)\n\n\nThis code uses binary search to find"], "prompt": "\nQUESTION:\nTakahashi has a water bottle with the shape of a rectangular prism whose base is a square of side a~\\mathrm{cm} and whose height is b~\\mathrm{cm}. (The thickness of the bottle can be ignored.)\nWe will pour x~\\mathrm{cm}^3 of water into the bottle, and gradually tilt the bottle around one of the sides of the base.\nWhen will the water be spilled? More formally, find the maximum angle in which we can tilt the bottle without spilling any water.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq a \\leq 100\n - 1 \\leq b \\leq 100\n - 1 \\leq x \\leq a^2b\n\n-----Input-----\nInput is given from Standard Input in the following format:\na b x\n\n-----Output-----\nPrint the maximum angle in which we can tilt the bottle without spilling any water, in degrees.\nYour output will be judged as correct when the absolute or relative error from the judge's output is at most 10^{-6}.\n\n-----Sample Input-----\n2 2 4\n\n-----Sample Output-----\n45.0000000000\n\nThis bottle has a cubic shape, and it is half-full. The water gets spilled when we tilt the bottle more than 45 degrees.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}