{"794": {"code": ["n = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, a):\n    s = sum(a)\n    if s % 2 != 0:\n        return [-1]\n    a.sort()\n    b = [0]*n + [1]*n\n    for i in range(n-1, -1, -1):\n        if a[i] != a[i+n]:\n            b[i], b[i+n] = b[i+n], b[i]", "from sys import stdin, stdout\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\n\nsum1 = sum(a[:n])\nsum2 = sum(a[n:])\n\nif sum1 != sum2:\n    stdout.write(' '.join(map(str, a)))\nelse:\n    stdout.write('-1')\nstdout.write('\\n')\n\n\nThis code works by first reading in the input and splitting it into two lists: one for the first", "n = int(input())\na = list(map(int, input().split()))\n\nif sum(a[:n]) == sum(a[n:]):\n    print(\"-1\")\nelse:\n    print(\" \".join(map(str, a)))\n\n\nThis solution uses Python's built-in `input` function to read the input, `map` and `list` to convert the input into a list of integers, and `sum` to calculate the sum of the first and last half of the list. If the sums are equal, it prints \"-1\". Otherwise, it prints", "def solve(n, a):\n    if sum(a[:n]) != sum(a[n:]):\n        return a\n    else:\n        for i in range(n):\n            if a[i] != a[n+i]:\n                a[i], a[n+i] = a[n+i], a[i]\n                if sum(a[:n]) != sum(a[n:]):\n                    return a\n                else:\n                    a[i], a[n+i] = a[n+i], a[i]", "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\nif a[n] == a[2*n-n]:\n    print(-1)\nelse:\n    print(' '.join(map(str, a)))\n\n\nThis code sorts the array, then checks if the nth element of the sorted array is equal to the 2n-nth element. If they are equal, it prints -1. Otherwise, it prints the sorted array.\n\nThe reason why this works is that if the nth element is equal to the"], "prompt": "\nQUESTION:\nYou're given an array $a$ of length $2n$. Is it possible to reorder it in such way so that the sum of the first $n$ elements isn't equal to the sum of the last $n$ elements?\n\n\n-----Input-----\n\nThe first line contains an integer $n$ ($1 \\le n \\le 1000$), where $2n$ is the number of elements in the array $a$.\n\nThe second line contains $2n$ space-separated integers $a_1$, $a_2$, $\\ldots$, $a_{2n}$ ($1 \\le a_i \\le 10^6$)\u00a0\u2014 the elements of the array $a$.\n\n\n-----Output-----\n\nIf there's no solution, print \"-1\" (without quotes). Otherwise, print a single line containing $2n$ space-separated integers. They must form a reordering of $a$. You are allowed to not change the order.\n\n\n-----Examples-----\nInput\n3\n1 2 2 1 3 1\n\nOutput\n2 1 3 1 1 2\nInput\n1\n1 1\n\nOutput\n-1\n\n\n-----Note-----\n\nIn the first example, the first $n$ elements have sum $2+1+3=6$ while the last $n$ elements have sum $1+1+2=4$. The sums aren't equal.\n\nIn the second example, there's no solution.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}