{"1307": {"code": ["n = int(input())\nif n % 2 == 0:\n    print(\"Mahmoud\")\nelse:\n    print(\"Ehab\")\n\n\nExplanation:\nThe game is played in such a way that if n is even, Mahmoud will always win. If n is odd, Ehab will always win. This is because in Mahmoud's turn, he can always choose an even number to subtract, and in Ehab's turn, he can always choose an odd number to subtract. This leads to a cycle of n being even if it's Mahmoud's turn and n", "n = int(input())\nif n % 2 == 0:\n    print(\"Mahmoud\")\nelse:\n    print(\"Ehab\")\n\n\nEXPLANATION:\nThe code reads an integer n from the input. If n is even, the player Mahmoud wins because he can always choose an even number a to subtract from n. If n is odd, the player Ehab wins because he can always choose an odd number a to subtract from n.\n\nThis is a mathematical problem. The player who chooses the wrong number on their turn (an even number if it's Mahmoud's", "n = int(input())\nif n % 2 == 0:\n    print(\"Mahmoud\")\nelse:\n    print(\"Ehab\")\n\nThis code works by taking the input n and checking if it is even. If it is, Mahmoud can win by choosing an even number in his turn. If it isn't, Ehab can win by choosing an odd number in his turn.\n\nIt's important to note that this code assumes that the game is played according to the rules of the game. It doesn't account for the possibility of a tie in the game.\n\nAlso, the code assumes that", "def even_odd_game(n):\n    if n % 2 == 0:\n        return \"Mahmoud\"\n    else:\n        return \"Ehab\"\n\n\nExplanation:\nIn this game, the player who cannot make a move loses. If n is even, Mahmoud can always choose an even number to subtract from n, and the game will always go to Ehab's turn. If n is odd, Ehab can always choose an odd number to subtract from n, and the game will always go to Mahmoud's turn. Therefore, the player who goes first will always", "def even_odd_game(n):\n    if n % 2 == 0:\n        return \"Mahmoud\"\n    else:\n        return \"Ehab\"\n\nn = int(input())\nprint(even_odd_game(n))\n\n\nExplanation:\nThe function even_odd_game takes an integer n as an argument and checks if it is even. If it is, it returns \"Mahmoud\". If it is not, it returns \"Ehab\". The input is read from the user and the function is called with the input as the argument. The result is printed to the console"], "prompt": "\nQUESTION:\nMahmoud and Ehab play a game called the even-odd game. Ehab chooses his favorite integer n and then they take turns, starting from Mahmoud. In each player's turn, he has to choose an integer a and subtract it from n such that:  1 \u2264 a \u2264 n.  If it's Mahmoud's turn, a has to be even, but if it's Ehab's turn, a has to be odd. \n\nIf the current player can't choose any number satisfying the conditions, he loses. Can you determine the winner if they both play optimally?\n\n\n-----Input-----\n\nThe only line contains an integer n (1 \u2264 n \u2264 10^9), the number at the beginning of the game.\n\n\n-----Output-----\n\nOutput \"Mahmoud\" (without quotes) if Mahmoud wins and \"Ehab\" (without quotes) otherwise.\n\n\n-----Examples-----\nInput\n1\n\nOutput\nEhab\nInput\n2\n\nOutput\nMahmoud\n\n\n-----Note-----\n\nIn the first sample, Mahmoud can't choose any integer a initially because there is no positive even integer less than or equal to 1 so Ehab wins.\n\nIn the second sample, Mahmoud has to choose a = 2 and subtract it from n. It's Ehab's turn and n = 0. There is no positive odd integer less than or equal to 0 so Mahmoud wins.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}