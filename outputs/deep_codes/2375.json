{"2375": {"code": ["def find_winner(x, y):\n    while x > 0 and y > 0:\n        if x >= y:\n            x -= y\n            y //= 2\n        else:\n            y -= x\n            x //= 2\n    return \"Alice\" if x > 0 else \"Brown\"\n\nx, y = map(int, input().split())\nprint(find_winner(x, y))\n\n\nThe game is played as per the rules described in the problem statement. The function `find_winner(x, y)` is used to determine the winner. The game continues as long as both piles have stones. In each turn, the player chooses the larger pile, takes away half of the stones, and gives away the other half", "def solve():\n    X, Y = map(int, input().split())\n    if X % 2 == 0 or Y % 2 == 0:\n        print(\"Alice\")\n    else:\n        print(\"Brown\")\n\nsolve()\n\n\nThe solution works by checking the remainder of the division of the number of stones in the piles by 2. If both X and Y are even, Alice can do nothing and lose the game. If either X or Y is odd, Alice can take any number of stones from one pile and throw them away, and then put the remaining stones back in the other pile. Since Alice has an advantage in this game, she will always win if she can do this.\n\nThis solution works under the assumption that both players play optimally. In other words", "import sys\n\nX, Y = map(int, sys.stdin.readline().split())\n\ndef solve(x, y):\n    if x == 0:\n        return \"Brown\" if y % 2 == 0 else \"Alice\"\n    else:\n        return \"Brown\" if y == 0 or x >= y else \"Alice\"\n\nprint(solve(X, Y))\n\nThis code first checks if there are any stones in the pile X. If there are not, it means that the game is over and the winner is the one who took the last stone from the pile Y. If there are stones in the pile X, it then checks if there are any stones in the pile Y. If there are not, it means that Alice can't do anything", "def main():\n    X, Y = map(int, input().split())\n    if X % 2 == 0 or Y % 2 == 0:\n        print(\"Alice\")\n    else:\n        print(\"Brown\")\n\nif __name__ == \"__main__\":\n    main()\n\n\nIn this solution, we first take the input X and Y from the user. We then check if X is even or Y is even. If either of them is, Alice can win the game by taking two stones from the pile with two stones and then throwing away one of them, resulting in the other pile having only one stone. If both X and Y are odd, Bob can win the game by taking two stones from the pile with two stones and then throwing away one of them, resulting in the", "def game_winner(x, y):\n    while x and y:\n        if x >= y:\n            x -= y\n            y = 0\n        else:\n            y -= x\n            x = 0\n    return \"Alice\" if x else \"Brown\"\n\nx, y = map(int, input().split())\nprint(game_winner(x, y))\n\n\nThis solution uses a while loop to keep taking stones from the larger pile and giving away some of them until one of the piles is empty. The function then returns the winner's name, \"Alice\" if Alice's pile is empty and \"Brown\" if Bob's pile is empty. The inputs are read from standard input using the `map` function to convert them"], "prompt": "\nQUESTION:\nAlice and Brown loves games. Today, they will play the following game.\nIn this game, there are two piles initially consisting of X and Y stones, respectively.\nAlice and Bob alternately perform the following operation, starting from Alice:\n - Take 2i stones from one of the piles. Then, throw away i of them, and put the remaining i in the other pile. Here, the integer i (1\u2264i) can be freely chosen as long as there is a sufficient number of stones in the pile.\nThe player who becomes unable to perform the operation, loses the game.\nGiven X and Y, determine the winner of the game, assuming that both players play optimally.\n\n-----Constraints-----\n - 0 \u2264 X, Y \u2264 10^{18}\n\n-----Input-----\nInput is given from Standard Input in the following format:\nX Y\n\n-----Output-----\nPrint the winner: either Alice or Brown.\n\n-----Sample Input-----\n2 1\n\n-----Sample Output-----\nBrown\n\nAlice can do nothing but taking two stones from the pile containing two stones. As a result, the piles consist of zero and two stones, respectively. Then, Brown will take the two stones, and the piles will consist of one and zero stones, respectively. Alice will be unable to perform the operation anymore, which means Brown's victory.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}