{"1451": {"code": ["def count_lucky_numbers(n, k, numbers):\n    count = 0\n    for number in numbers:\n        if len(str(number)) <= k:\n            count += 1\n    return count\n\nn, k = map(int, input().split())\nnumbers = list(map(int, input().split()))\nprint(count_lucky_numbers(n, k, numbers))\n\n\nThis program reads the number of integers n and the maximum number of lucky digits k. It then reads the n integers and checks each one to see if it", "n, k = map(int, input().split())\nnums = input().split()\n\ncount = 0\nfor num in nums:\n    count += sum(map(num.count, \"47\")) <= k\n\nprint(count)\n\n\nExplanation:\nThe program first reads the number of integers and the maximum number of lucky digits from the input. Then it reads the integers themselves. It counts the number of integers whose decimal representation contains at most k lucky digits by iterating over the numbers and checking the count of lucky digits (4 and 7) in", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\nfor i in a:\n    if len(str(i)) <= k:\n        count += 1\n\nprint(count)\n\n\nThis python program solves the problem by first reading the number of integers and the maximum number of lucky digits from the input. Then it reads the integers themselves. It counts the number of integers that have at most k lucky digits by converting each integer to a string and checking its length. If the length is less than or", "n, k = map(int, input().split())\nnums = list(map(int, input().split()))\n\nlucky_digits = set('47')\nprint(sum(all(c in lucky_digits for c in str(num)) for num in nums))\n\n\nThis Python script reads the number of integers n and the maximum number of lucky digits k. It then reads the n integers into a list. It counts the number of integers in the list that have at most k lucky digits by converting each integer to a string, checking each character in the string", "n, k = map(int, input().split())\nnums = input().split()\ncount = 0\nfor i in nums:\n    if len([j for j in i if j in '47']) <= k:\n        count += 1\nprint(count)\n\n\n\nn, k = map(int, input().split())\nnums = input().split()\ncount = sum(1 for i in nums if len([j for j in i if j in '47']) <= k)\nprint(count)"], "prompt": "\nQUESTION:\nRoma (a popular Russian name that means 'Roman') loves the Little Lvov Elephant's lucky numbers.\n\nLet us remind you that lucky numbers are positive integers whose decimal representation only contains lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.\n\nRoma's got n positive integers. He wonders, how many of those integers have not more than k lucky digits? Help him, write the program that solves the problem.\n\n\n-----Input-----\n\nThe first line contains two integers n, k (1 \u2264 n, k \u2264 100). The second line contains n integers a_{i} (1 \u2264 a_{i} \u2264 10^9) \u2014 the numbers that Roma has. \n\nThe numbers in the lines are separated by single spaces.\n\n\n-----Output-----\n\nIn a single line print a single integer \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n3 4\n1 2 4\n\nOutput\n3\n\nInput\n3 2\n447 44 77\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first sample all numbers contain at most four lucky digits, so the answer is 3.\n\nIn the second sample number 447 doesn't fit in, as it contains more than two lucky digits. All other numbers are fine, so the answer is 2.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}