{"876": {"code": ["from sys import stdin, stdout\n\ndef binary_search(arr, k):\n    left, right = 0, len(arr) - 1\n    while left <= right:\n        mid = (left + right) // 2\n        if arr[mid] < k:\n            left = mid + 1\n        else:\n            right = mid - 1\n    return left\n\ndef solve():\n    n, k = map(int, stdin.readline().split())", "from bisect import bisect_left, bisect_right\n\ndef p(x):\n    return [sum(x[:i+1]) for i in range(len(x))]\n\ndef solve(n, k, A):\n    prefix_sum = [0]\n    for i in range(n):\n        prefix_sum.append(prefix_sum[-1] + A[i])\n        if prefix_sum[-1] >= k:\n            return i+1", "def p(x):\n    y = [0]*(len(x)+1)\n    for i in range(len(x)):\n        y[i+1] = y[i] + x[i]\n    return y\n\ndef binary_search(arr, low, high, x):\n    if high >= low:\n        mid = (high + low) // 2\n        if arr[mid] == x:\n            return mid\n        elif arr[mid]", "def solve(n, k, A):\n    B = [0] * (n + 1)\n    S = [0] * (n + 1)\n    for i in range(n):\n        B[i + 1] = A[i] + B[i]\n        S[i + 1] = S[i] + B[i + 1]\n    if k <= 0:\n        return 0\n    if S[-1] < k:\n        return -1", "import sys\n\ndef binary_search(arr, low, high, k):\n    if high >= low:\n        mid = (high + low) // 2\n        if arr[mid] >= k and (mid == 0 or arr[mid-1] < k):\n            return mid\n        elif arr[mid] < k:\n            return binary_search(arr, mid + 1, high, k)\n        else:\n            return binary_search(arr, low, mid -"], "prompt": "\nQUESTION:\nConsider the function p(x), where x is an array of m integers, which returns an array y consisting of m + 1 integers such that y_{i} is equal to the sum of first i elements of array x (0 \u2264 i \u2264 m).\n\nYou have an infinite sequence of arrays A^0, A^1, A^2..., where A^0 is given in the input, and for each i \u2265 1 A^{i} = p(A^{i} - 1). Also you have a positive integer k. You have to find minimum possible i such that A^{i} contains a number which is larger or equal than k.\n\n\n-----Input-----\n\nThe first line contains two integers n and k (2 \u2264 n \u2264 200000, 1 \u2264 k \u2264 10^18). n is the size of array A^0.\n\nThe second line contains n integers A^0_0, A^0_1... A^0_{n} - 1 \u2014 the elements of A^0 (0 \u2264 A^0_{i} \u2264 10^9). At least two elements of A^0 are positive.\n\n\n-----Output-----\n\nPrint the minimum i such that A^{i} contains a number which is larger or equal than k.\n\n\n-----Examples-----\nInput\n2 2\n1 1\n\nOutput\n1\n\nInput\n3 6\n1 1 1\n\nOutput\n2\n\nInput\n3 1\n1 0 1\n\nOutput\n0\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}