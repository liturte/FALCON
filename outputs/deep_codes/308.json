{"308": {"code": ["n, x, y, c = map(int, input().split())\nx -= 1\ny -= 1\nprint((c + n*n - 1) // n*n * 2)\n\n\nEXPLANATION:\nThe solution is based on the fact that the field size is n*n. We need to turn on at least c cells, so we can calculate how many full rounds we need", "n, x, y, c = map(int, input().split())\nprint((c - 1) // n + (x - 1) + (y - 1) * (c % n != 0))\n\n\nEXPLANATION:\nThe condition for Mr. Bender to be happy is that at least c squares should be switched on. Since each second we switch on the cells that are off but", "def happy_seconds(n, x, y, c):\n    if c <= n * n - n:\n        return (c - 1) // 2\n    else:\n        return (n * n - n) // 2 + (c - n * n + n) * 2\n\nn, x, y, c = map(int, input().split())\nprint(happy_seconds(n", "def bender_happy_time(n, x, y, c):\n    if c <= n:\n        return 0\n    else:\n        return (c - n) * 2 - 1\n\nn, x, y, c = map(int, input().split())\nprint(bender_happy_time(n, x, y, c))\n\nThis python program will solve the problem", "import sys\ninput = sys.stdin.readline\n\nn, x, y, c = map(int, input().split())\n\nif c >= n*n:\n    print(0)\nelse:\n    print(1)\n\nThis code checks if the number of cells that need to be switched on (c) is greater or equal to the total number of cells (n*n). If it is"], "prompt": "\nQUESTION:\nMr. Bender has a digital table of size n \u00d7 n, each cell can be switched on or off. He wants the field to have at least c switched on squares. When this condition is fulfilled, Mr Bender will be happy.\n\nWe'll consider the table rows numbered from top to bottom from 1 to n, and the columns \u2014 numbered from left to right from 1 to n. Initially there is exactly one switched on cell with coordinates (x, y) (x is the row number, y is the column number), and all other cells are switched off. Then each second we switch on the cells that are off but have the side-adjacent cells that are on.\n\nFor a cell with coordinates (x, y) the side-adjacent cells are cells with coordinates (x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1).\n\nIn how many seconds will Mr. Bender get happy?\n\n\n-----Input-----\n\nThe first line contains four space-separated integers n, x, y, c (1 \u2264 n, c \u2264 10^9;\u00a01 \u2264 x, y \u2264 n;\u00a0c \u2264 n^2).\n\n\n-----Output-----\n\nIn a single line print a single integer \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n6 4 3 1\n\nOutput\n0\n\nInput\n9 3 8 10\n\nOutput\n2\n\n\n\n-----Note-----\n\nInitially the first test has one painted cell, so the answer is 0. In the second test all events will go as is shown on the figure. [Image].\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}