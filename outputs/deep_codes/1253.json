{"1253": {"code": ["def max_income(n, k, seq):\n    for i in range(n):\n        if k > 0 and seq[i] < 0:\n            seq[i] = -seq[i]\n            k -= 1", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\n\ni = 0\nwhile i < n and k > 0:\n    if arr[i] < 0:\n        arr[i] = -", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\n\ni = 0\nwhile i < n and k > 0:\n    if arr[i] < 0:\n        arr[i] = -", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    if k >= a[i] and a[i] < 0:\n        a[i] *", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if k > 0 and a[i] < 0:\n        ans += -"], "prompt": "\nQUESTION:\nRoma works in a company that sells TVs. Now he has to prepare a report for the last year.\n\nRoma has got a list of the company's incomes. The list is a sequence that consists of n integers. The total income of the company is the sum of all integers in sequence. Roma decided to perform exactly k changes of signs of several numbers in the sequence. He can also change the sign of a number one, two or more times.\n\nThe operation of changing a number's sign is the operation of multiplying this number by -1.\n\nHelp Roma perform the changes so as to make the total income of the company (the sum of numbers in the resulting sequence) maximum. Note that Roma should perform exactly k changes.\n\n\n-----Input-----\n\nThe first line contains two integers n and k (1 \u2264 n, k \u2264 10^5), showing, how many numbers are in the sequence and how many swaps are to be made.\n\nThe second line contains a non-decreasing sequence, consisting of n integers a_{i} (|a_{i}| \u2264 10^4).\n\nThe numbers in the lines are separated by single spaces. Please note that the given sequence is sorted in non-decreasing order.\n\n\n-----Output-----\n\nIn the single line print the answer to the problem \u2014 the maximum total income that we can obtain after exactly k changes.\n\n\n-----Examples-----\nInput\n3 2\n-1 -1 1\n\nOutput\n3\n\nInput\n3 1\n-1 -1 1\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first sample we can get sequence [1, 1, 1], thus the total income equals 3.\n\nIn the second test, the optimal strategy is to get sequence [-1, 1, 1], thus the total income equals 1.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}