{"4755": {"code": ["def round_candy_price(C, K):\n    base = 10 ** K\n    return round(C, -2) * base\n\nC, K = map(int, input().split())\nprint(round_candy_price(C, K))\n\n\nExplanation:", "def round_candy_price(C, K):\n    for i in range(K):\n        C += (5 * 10**i)\n    return (C // 10**K) * 10**K\n\nC, K = map(int, input().split())\nprint(", "C, K = map(int, input().split())\nprint((C + 5 * 10**K) // 10**K * 10**K)\n\n\nThis Python code reads the values of C and K from the input, calculates the nearest amount Mirko can pay by rounding C", "def round_to_nearest(c, k):\n    power = 10 ** k\n    return round(c / power) * power\n\nc, k = map(int, input().split())\nprint(round_to_nearest(c, k))\n\n\nExplanation:\nThe", "def nearest_bill(c, k):\n    return round(c, -k)\n\nc, k = map(int, input().split())\nprint(nearest_bill(c, k))\n\n\nExplanation:\nThis Python code uses the built-in `round()` function"], "prompt": "\nQUESTION:\nMirko buys a lot of candy in the candy shop. He cannot always pay the exact amount so the shopkeeper and he have an agreement. He tells the shopkeeper the smallest bill he has, and she rounds his amount to the nearest number he can pay. For example, if the smallest bill Mirko has is a hundred bill, and he wants to buy $150$ Kunas of candy, the shopkeeper rounds his amount to $200$ Kunas. If he wants to buy $149$ Kunas of candy, the shopkeeper rounds his amount to $100$ Kunas.\n\nLately, Mirko suspects the shoopkeeper is trying to cheat him. He asked you to help him. Write a program that will help him. His mother only gives Mirko $1, 10, 100, 1000, \\ldots , 1000000000$ Kuna bills. He never has bills that are not powers of $10$. The bills he does have, he has in large amounts.\n\n-----Input-----\nThe first and only line of input contains two integers, $C$ ($0 \\le C \\le 1000000000$), the price of candy Mirko is going to buy, and $K$ ($0 \\le K \\le 9$), number of zeros on the smallest bill Mirko has.\n\n-----Output-----\nThe first and only line of output should contain one integer, $C$ rounded to the nearest amount Mirko can pay.\n\n-----Examples-----\nSample Input 1:\n184 1\nSample Output 1:\n180\n\nSample Input 2:\n123450995 1\nSample Output 2:\n123451000\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}