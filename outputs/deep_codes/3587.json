{"3587": {"code": ["def", "def", "def", "def", "def"], "prompt": "\nQUESTION:\nTaboo is a popular party game. In this game one player, the Clue Giver, prompts his/her teammates to guess a keyword by giving clues. The Clue Giver is also given a list of taboo strings that must not appear in the clues. For example, if the keyword is \u201cBruce Lee\u201d, the famous kung-fu star, then the taboo strings may be \u201cactor\u201d, \u201ckung-fu\u201d, \u201cfighting\u201d, \u201cmartial arts\u201d and \u201cThe Game of Death\u201d (Bruce Lee\u2019s final film). The Clue Giver may try such clues as \u201cFist of Fury star\u201d and \u201cJeet Kune Do master\u201d to avoid the taboo. Taboo strings bring challenges and fun to the guessing game.\n\nShort clues are preferred, but now you are interested in the opposite: what is the longest clue? Given $N$ taboo strings $s_1, \\dots , s_ N$, what is the longest clue string $s$ such that none of $s_1, \\dots , s_ N$ appears as a substring of $s$? For simplicity, all taboo strings and your clue are represented as binary strings consisting only of 0\u2019s and 1\u2019s.\n\n-----Input-----\nThe first line contains an integer, $N$, the number of taboo strings ($1 \\leq N \\leq 15000$). The following $N$ lines each contains a non-empty binary string $s_ i$, for $1 \\leq i \\leq N$. The sum of lengths of $s_1, \\dots , s_ N$ will be at most $200000$.\n\n-----Output-----\nIf your clue can be arbitrarily long, output -1. Otherwise, output a line containing the longest binary string that does not contain $s_1, \\dots , s_ N$ as a substring. If there is more than one such longest string, output the one that is also smallest in lexicographic order.\n\n-----Examples-----\nSample Input:\n5\n00\n01\n10\n110\n111\nSample Output:\n11\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}