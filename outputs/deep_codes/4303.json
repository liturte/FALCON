{"4303": {"code": ["import sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n    x.sort()\n\n    ans = float('inf')\n    for i in range(k-1, n):\n        l = x[i]\n        r = x[i-k+1]\n        t = l - r + 1\n        ans = min(ans, t)\n\n    print", "import sys\n\ndef main():\n    _, K = map(int, sys.stdin.readline().split())\n    X = list(map(int, sys.stdin.readline().split()))\n    left = [0] * len(X)\n    right = [0] * len(X)\n    left[0] = X[0]\n    right[-1] = -X[-1]\n    for i in range(1, len(X)):\n        left[i] = left[i-1]", "import sys\n\nN, K = map(int, sys.stdin.readline().split())\nX = list(map(int, sys.stdin.readline().split()))\n\nleft = [0] * N\nright = [0] * N\n\nfor i in range(N):\n    left[i] = -X[i] if i < K else -X[i] + left[i - 1]\n    right[-i - 1] = X[-i - 1] if i < K else X", "import sys\n\nN, K = map(int, sys.stdin.readline().split())\ncandles = list(map(int, sys.stdin.readline().split()))\n\ndef can_light(mid):\n    cnt = 0\n    last = 0\n    for i in range(1, N):\n        if candles[i] - candles[last] <= mid:\n            cnt += 1\n            last = i\n    return cnt >= K - 1\n\ndef solve():\n    left", "import sys\n\ndef main():\n    N, K = map(int, sys.stdin.readline().split())\n    x = list(map(int, sys.stdin.readline().split()))\n\n    x = sorted([abs(i) for i in x])\n    print(sum(x[:N-K]))\n\nif __name__ == \"__main__\":\n    main()\n\n\nThe solution is based on the greedy algorithm. We first sort the absolute values of the coordinates of the candles. Then"], "prompt": "\nQUESTION:\nThere are N candles placed on a number line.\nThe i-th candle from the left is placed on coordinate x_i.\nHere, x_1 < x_2 < ... < x_N holds.\nInitially, no candles are burning.\nSnuke decides to light K of the N candles.\nNow, he is at coordinate 0.\nHe can move left and right along the line with speed 1.\nHe can also light a candle when he is at the same position as the candle, in negligible time.\nFind the minimum time required to light K candles.\n\n-----Constraints-----\n - 1 \\leq N \\leq 10^5\n - 1 \\leq K \\leq N\n - x_i is an integer.\n - |x_i| \\leq 10^8\n - x_1 < x_2 < ... < x_N\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\nx_1 x_2 ... x_N\n\n-----Output-----\nPrint the minimum time required to light K candles.\n\n-----Sample Input-----\n5 3\n-30 -10 10 20 50\n\n-----Sample Output-----\n40\n\nHe should move and light candles as follows:\n - Move from coordinate 0 to -10.\n - Light the second candle from the left.\n - Move from coordinate -10 to 10.\n - Light the third candle from the left.\n - Move from coordinate 10 to 20.\n - Light the fourth candle from the left.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}