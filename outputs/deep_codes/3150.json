{"3150": {"code": ["from itertools import permutations\n\ndef check(t1, t2, t3):\n    return (t1[0] - t2[0]) * (t1[1] - t3[1]) != (t1[0] - t3[0]) * (t1[1] - t2[1])\n\ndef solve(n, trenches):\n    guards = list", "from itertools import permutations\n\ndef solve():\n    n = int(input())\n    trenches = []\n    for _ in range(n):\n        x1, y1, x2, y2 = map(int, input().split())\n        if x1 == x2:\n            trenches.append((min(y1, y2), max(y1, y2)))", "from collections import defaultdict\nfrom itertools import permutations\n\ndef solve():\n    N = int(input())\n    trenches = []\n    for _ in range(N):\n        x1, y1, x2, y2 = map(int, input().split())\n        if x1 > x2 or (x1 == x2 and y1 > y2):\n            x1, y", "from itertools import permutations\n\ndef is_visible(g1, g2, g3, trenches):\n    for t in trenches:\n        if (t[0] - g1[0]) * (t[1] - g2[1]) == (t[0] - g2[0]) * (t[1] - g1[1]):\n            if min(g", "from itertools import permutations\n\ndef ccw(p1, p2, p3):\n    return (p2[0]-p1[0])*(p3[1]-p1[1]) - (p2[1]-p1[1])*(p3[0]-p1[0])\n\ndef intersect(p1, p2, p3, p4):\n    return cc"], "prompt": "\nQUESTION:\nNear a military base there is a system of trenches, modeled as line segments on a plane. During nighttime, when most soldiers are fast asleep, three guards stand watch of the trenches. Two guards can see each other if there is a trench (or a row of trenches) along the entire straight line segment between them and there is no third guard on that line segment.\n\nFor security reasons, the guards must be placed so that each guard sees the other two. How many ways can they be placed?\n\n-----Input-----\nThe first line contains the integer $N$ $(1 \\leq N \\leq 20)$, the number of trenches. Each of the next $N$ lines contains the description of one trench: four non-negative integers $X_1, Y_1, X_2, Y_2$ (all less than or equal to $1000$), where $X_1$ and $Y_1$ are coordinates of one end, while $X_2$ and $Y_2$ are coordinates of the other end of the trench.\n\nTrenches in the input may overlap and share endpoints.\n\n-----Output-----\nOutput the number of ways the guards can be placed on a single line.\n\n-----Examples-----\nSample Input 1:\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\nSample Output 1:\n8\n\nSample Input 2:\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\nSample Output 2:\n1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}