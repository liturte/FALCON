{"4604": {"code": ["MOD = 10**9+7\nN = int(input())\nA = list(map(int, input().split()))\n\nfact = [1]*(N+1)\nfor i in range(1, N+1):\n    fact[i] = fact[i-1]*i%MOD\n\ninv_fact = [1]*(N+1)\ninv_fact[N] = pow(fact[N], MOD-2, MOD)\nfor i in range(N, 0, -1):\n    inv_fact[i-1] = inv_", "MOD = 10**9 + 7\nN = int(input())\nA = list(map(int, input().split()))\n\nfact = [1] * (N + 1)\nfor i in range(1, N + 1):\n    fact[i] = (fact[i - 1] * i) % MOD\n\ninv = [1] * (N + 1)\ninv[N] = pow(fact[N], MOD - 2, MOD)\nfor i in range(N - 1, -1, -1):\n    inv[i] =", "MOD = 10**9+7\nN = int(input())\nA = list(map(int,input().split()))\n\nfact = [1]*(N+1)\nfor i in range(1,N+1):\n    fact[i] = (fact[i-1]*i)%MOD\n\ninv = [1]*(N+1)\ninv[N] = pow(fact[N], MOD-2, MOD)\nfor i in range(N,0,-1):\n    inv[i-1] = (inv[i]*i)", "MOD = 10**9 + 7\nN = int(input())\nA = list(map(int, input().split()))\n\nfact = [1] * (N + 1)\ninvfact = [1] * (N + 1)\n\nfor i in range(1, N + 1):\n    fact[i] = (fact[i - 1] * i) % MOD\n    invfact[i] = pow(fact[i], MOD - 2, MOD)\n\ndef comb(n, k):\n    if k < 0 or k > n:", "MOD = 10**9 + 7\nN = int(input())\nA = list(map(int, input().split()))\n\nfact = [1] * (N + 1)\ninv = [1] * (N + 1)\nfor i in range(1, N + 1):\n    fact[i] = fact[i - 1] * i % MOD\n    inv[i] = inv[i - 1] * pow(i, MOD - 2, MOD)\n\ndef comb(n, k):\n    if k < 0 or k > n:"], "prompt": "\nQUESTION:\nThere are N people, conveniently numbered 1 through N.\nThey were standing in a row yesterday, but now they are unsure of the order in which they were standing.\nHowever, each person remembered the following fact: the absolute difference of the number of the people who were standing to the left of that person, and the number of the people who were standing to the right of that person.\nAccording to their reports, the difference above for person i is A_i.\nBased on these reports, find the number of the possible orders in which they were standing.\nSince it can be extremely large, print the answer modulo 10^9+7.\nNote that the reports may be incorrect and thus there may be no consistent order.\nIn such a case, print 0.\n\n-----Constraints-----\n - 1\u2266N\u226610^5\n - 0\u2266A_i\u2266N-1\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 ... A_N\n\n-----Output-----\nPrint the number of the possible orders in which they were standing, modulo 10^9+7.\n\n-----Sample Input-----\n5\n2 4 4 0 2\n\n-----Sample Output-----\n4\n\nThere are four possible orders, as follows:\n - 2,1,4,5,3\n - 2,5,4,1,3\n - 3,1,4,5,2\n - 3,5,4,1,2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}