{"4520": {"code": ["import", "from", "from", "from", "def"], "prompt": "\nQUESTION:\nThe only difference between easy and hard versions is constraints.\n\nYou are given $n$ segments on the coordinate axis $OX$. Segments can intersect, lie inside each other and even coincide. The $i$-th segment is $[l_i; r_i]$ ($l_i \\le r_i$) and it covers all integer points $j$ such that $l_i \\le j \\le r_i$.\n\nThe integer point is called bad if it is covered by strictly more than $k$ segments.\n\nYour task is to remove the minimum number of segments so that there are no bad points at all.\n\n\n-----Input-----\n\nThe first line of the input contains two integers $n$ and $k$ ($1 \\le k \\le n \\le 200$) \u2014 the number of segments and the maximum number of segments by which each integer point can be covered.\n\nThe next $n$ lines contain segments. The $i$-th line contains two integers $l_i$ and $r_i$ ($1 \\le l_i \\le r_i \\le 200$) \u2014 the endpoints of the $i$-th segment.\n\n\n-----Output-----\n\nIn the first line print one integer $m$ ($0 \\le m \\le n$) \u2014 the minimum number of segments you need to remove so that there are no bad points.\n\nIn the second line print $m$ distinct integers $p_1, p_2, \\dots, p_m$ ($1 \\le p_i \\le n$) \u2014 indices of segments you remove in any order. If there are multiple answers, you can print any of them.\n\n\n-----Examples-----\nInput\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\nOutput\n3\n1 4 7 \n\nInput\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\nOutput\n3\n1 2 4 \n\nInput\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n\nOutput\n4\n1 3 5 6\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}