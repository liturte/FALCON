{"1322": {"code": ["QUESTION:\nSasha and Ira are two best friends. But they aren\u2019t just friends, they are software engineers and experts in artificial intelligence. They are developing an algorithm for two bots playing a two-player game. The game is cooperative and turn based. In each turn, one of the players makes a move (it doesn\u2019t matter which player, it's possible that players turns do not alternate). \n\nAlgorithm for bots that Sasha and Ira are developing works by keeping track of the state the game is in. Each time either bot makes a move, the state changes. And, since the game is very dynamic, it will never go back to the state it was already in at any point in the past.\n\nSasha and Ira are perfectionists and want their algorithm to have an optimal winning strategy. They have noticed that in the optimal winning strategy, both bots make exactly N moves each. But, in order to find the optimal strategy, their algorithm needs to analyze all possible states of the game (they haven\u2019t learned about alpha-beta pruning yet) and pick the best sequence of moves.\n\nThey are worried about the efficiency of their algorithm and are wondering what is the total number of states of the game that need to be analyzed? \n\n\n-----Input-----\n\nThe first and only line contains integer N.  1 \u2264 N \u2264 10^6 \n\n\n-----Output-----\n\nOutput should contain a single integer \u2013 number of possible states modulo 10^9 + 7.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n19\n\n\n\n-----Note-----\n\nStart: Game is in state A.   Turn 1: Either bot can make a move (first bot is red and second bot is blue), so there are two possible states after the first turn \u2013 B and C.  Turn 2: In both states B and C, either bot can again make a turn, so the list of possible states is expanded to include D, E, F and G.  Turn 3: Red bot already did N=2 moves when in state D, so it cannot make any more moves there. It can make moves when in state E, F and G, so states I, K and M are added to the list. Similarly, blue bot cannot make a move when in state G, but can when in D, E and F, so states H, J and L are added.  Turn 4: Red bot already did N=2 moves when in states H, I and K, so it can only make moves when in J, L and M, so states P, R and S are added. Blue bot cannot make a move when in states J, L and M, but only when in H, I and", "QUESTION:\nSasha and Ira are two best friends. But they aren\u2019t just friends, they are software engineers and experts in artificial intelligence. They are developing an algorithm for two bots playing a two-player game. The game is cooperative and turn based. In each turn, one of the players makes a move (it doesn\u2019t matter which player, it's possible that players turns do not alternate). \n\nAlgorithm for bots that Sasha and Ira are developing works by keeping track of the state the game is in. Each time either bot makes a move, the state changes. And, since the game is very dynamic, it will never go back to the state it was already in at any point in the past.\n\nSasha and Ira are perfectionists and want their algorithm to have an optimal winning strategy. They have noticed that in the optimal winning strategy, both bots make exactly N moves each. But, in order to find the optimal strategy, their algorithm needs to analyze all possible states of the game (they haven\u2019t learned about alpha-beta pruning yet) and pick the best sequence of moves.\n\nThey are worried about the efficiency of their algorithm and are wondering what is the total number of states of the game that need to be analyzed? \n\n\n-----Input-----\n\nThe first and only line contains integer N.  1 \u2264 N \u2264 10^6 \n\n\n-----Output-----\n\nOutput should contain a single integer \u2013 number of possible states modulo 10^9 + 7.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n19\n\n\n\n-----Note-----\n\nStart: Game is in state A.   Turn 1: Either bot can make a move (first bot is red and second bot is blue), so there are two possible states after the first turn \u2013 B and C.  Turn 2: In both states B and C, either bot can again make a turn, so the list of possible states is expanded to include D, E, F and G.  Turn 3: Red bot already did N=2 moves when in state D, so it cannot make any more moves there. It can make moves when in state E, F and G, so states I, K and M are added to the list. Similarly, blue bot cannot make a move when in state G, but can when in D, E and F, so states H, J and L are added.  Turn 4: Red bot already did N=2 moves when in states H, I and K, so it can only make moves when in J, L and M, so states P, R and S are added. Blue bot cannot make a move when in states J, L and M, but only when in H, I and", "QUESTION:\nSasha and Ira are two best friends. But they aren\u2019t just friends, they are software engineers and experts in artificial intelligence. They are developing an algorithm for two bots playing a two-player game. The game is cooperative and turn based. In each turn, one of the players makes a move (it doesn\u2019t matter which player, it's possible that players turns do not alternate). \n\nAlgorithm for bots that Sasha and Ira are developing works by keeping track of the state the game is in. Each time either bot makes a move, the state changes. And, since the game is very dynamic, it will never go back to the state it was already in at any point in the past.\n\nSasha and Ira are perfectionists and want their algorithm to have an optimal winning strategy. They have noticed that in the optimal winning strategy, both bots make exactly N moves each. But, in order to find the optimal strategy, their algorithm needs to analyze all possible states of the game (they haven\u2019t learned about alpha-beta pruning yet) and pick the best sequence of moves.\n\nThey are worried about the efficiency of their algorithm and are wondering what is the total number of states of the game that need to be analyzed? \n\n\n-----Input-----\n\nThe first and only line contains integer N.  1 \u2264 N \u2264 10^6 \n\n\n-----Output-----\n\nOutput should contain a single integer \u2013 number of possible states modulo 10^9 + 7.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n19\n\n\n\n-----Note-----\n\nStart: Game is in state A.   Turn 1: Either bot can make a move (first bot is red and second bot is blue), so there are two possible states after the first turn \u2013 B and C.  Turn 2: In both states B and C, either bot can again make a turn, so the list of possible states is expanded to include D, E, F and G.  Turn 3: Red bot already did N=2 moves when in state D, so it cannot make any more moves there. It can make moves when in state E, F and G, so states I, K and M are added to the list. Similarly, blue bot cannot make a move when in state G, but can when in D, E and F, so states H, J and L are added.  Turn 4: Red bot already did N=2 moves when in states H, I and K, so it can only make moves when in J, L and M, so states P, R and S are added. Blue bot cannot make a move when in states J, L and M, but only when in H, I and", "QUESTION:\nSasha and Ira are two best friends. But they aren\u2019t just friends, they are software engineers and experts in artificial intelligence. They are developing an algorithm for two bots playing a two-player game. The game is cooperative and turn based. In each turn, one of the players makes a move (it doesn\u2019t matter which player, it's possible that players turns do not alternate). \n\nAlgorithm for bots that Sasha and Ira are developing works by keeping track of the state the game is in. Each time either bot makes a move, the state changes. And, since the game is very dynamic, it will never go back to the state it was already in at any point in the past.\n\nSasha and Ira are perfectionists and want their algorithm to have an optimal winning strategy. They have noticed that in the optimal winning strategy, both bots make exactly N moves each. But, in order to find the optimal strategy, their algorithm needs to analyze all possible states of the game (they haven\u2019t learned about alpha-beta pruning yet) and pick the best sequence of moves.\n\nThey are worried about the efficiency of their algorithm and are wondering what is the total number of states of the game that need to be analyzed? \n\n\n-----Input-----\n\nThe first and only line contains integer N.  1 \u2264 N \u2264 10^6 \n\n\n-----Output-----\n\nOutput should contain a single integer \u2013 number of possible states modulo 10^9 + 7.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n19\n\n\n\n-----Note-----\n\nStart: Game is in state A.   Turn 1: Either bot can make a move (first bot is red and second bot is blue), so there are two possible states after the first turn \u2013 B and C.  Turn 2: In both states B and C, either bot can again make a turn, so the list of possible states is expanded to include D, E, F and G.  Turn 3: Red bot already did N=2 moves when in state D, so it cannot make any more moves there. It can make moves when in state E, F and G, so states I, K and M are added to the list. Similarly, blue bot cannot make a move when in state G, but can when in D, E and F, so states H, J and L are added.  Turn 4: Red bot already did N=2 moves when in states H, I and K, so it can only make moves when in J, L and M, so states P, R and S are added. Blue bot cannot make a move when in states J, L and M, but only when in H, I and", "QUESTION:\nSasha and Ira are two best friends. But they aren\u2019t just friends, they are software engineers and experts in artificial intelligence. They are developing an algorithm for two bots playing a two-player game. The game is cooperative and turn based. In each turn, one of the players makes a move (it doesn\u2019t matter which player, it's possible that players turns do not alternate). \n\nAlgorithm for bots that Sasha and Ira are developing works by keeping track of the state the game is in. Each time either bot makes a move, the state changes. And, since the game is very dynamic, it will never go back to the state it was already in at any point in the past.\n\nSasha and Ira are perfectionists and want their algorithm to have an optimal winning strategy. They have noticed that in the optimal winning strategy, both bots make exactly N moves each. But, in order to find the optimal strategy, their algorithm needs to analyze all possible states of the game (they haven\u2019t learned about alpha-beta pruning yet) and pick the best sequence of moves.\n\nThey are worried about the efficiency of their algorithm and are wondering what is the total number of states of the game that need to be analyzed? \n\n\n-----Input-----\n\nThe first and only line contains integer N.  1 \u2264 N \u2264 10^6 \n\n\n-----Output-----\n\nOutput should contain a single integer \u2013 number of possible states modulo 10^9 + 7.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n19\n\n\n\n-----Note-----\n\nStart: Game is in state A.   Turn 1: Either bot can make a move (first bot is red and second bot is blue), so there are two possible states after the first turn \u2013 B and C.  Turn 2: In both states B and C, either bot can again make a turn, so the list of possible states is expanded to include D, E, F and G.  Turn 3: Red bot already did N=2 moves when in state D, so it cannot make any more moves there. It can make moves when in state E, F and G, so states I, K and M are added to the list. Similarly, blue bot cannot make a move when in state G, but can when in D, E and F, so states H, J and L are added.  Turn 4: Red bot already did N=2 moves when in states H, I and K, so it can only make moves when in J, L and M, so states P, R and S are added. Blue bot cannot make a move when in states J, L and M, but only when in H, I and"], "prompt": "\nQUESTION:\nSasha and Ira are two best friends. But they aren\u2019t just friends, they are software engineers and experts in artificial intelligence. They are developing an algorithm for two bots playing a two-player game. The game is cooperative and turn based. In each turn, one of the players makes a move (it doesn\u2019t matter which player, it's possible that players turns do not alternate). \n\nAlgorithm for bots that Sasha and Ira are developing works by keeping track of the state the game is in. Each time either bot makes a move, the state changes. And, since the game is very dynamic, it will never go back to the state it was already in at any point in the past.\n\nSasha and Ira are perfectionists and want their algorithm to have an optimal winning strategy. They have noticed that in the optimal winning strategy, both bots make exactly N moves each. But, in order to find the optimal strategy, their algorithm needs to analyze all possible states of the game (they haven\u2019t learned about alpha-beta pruning yet) and pick the best sequence of moves.\n\nThey are worried about the efficiency of their algorithm and are wondering what is the total number of states of the game that need to be analyzed? \n\n\n-----Input-----\n\nThe first and only line contains integer N.  1 \u2264 N \u2264 10^6 \n\n\n-----Output-----\n\nOutput should contain a single integer \u2013 number of possible states modulo 10^9 + 7.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n19\n\n\n\n-----Note-----\n\nStart: Game is in state A.   Turn 1: Either bot can make a move (first bot is red and second bot is blue), so there are two possible states after the first turn \u2013 B and C.  Turn 2: In both states B and C, either bot can again make a turn, so the list of possible states is expanded to include D, E, F and G.  Turn 3: Red bot already did N=2 moves when in state D, so it cannot make any more moves there. It can make moves when in state E, F and G, so states I, K and M are added to the list. Similarly, blue bot cannot make a move when in state G, but can when in D, E and F, so states H, J and L are added.  Turn 4: Red bot already did N=2 moves when in states H, I and K, so it can only make moves when in J, L and M, so states P, R and S are added. Blue bot cannot make a move when in states J, L and M, but only when in H, I and K, so states N, O and Q are added. \n\nOverall, there are 19 possible states of the game their algorithm needs to analyze.\n\n[Image]\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}