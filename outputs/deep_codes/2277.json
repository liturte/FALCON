{"2277": {"code": ["QUESTION:\nA permutation of size n is an array of size n such that each integer from 1 to n occurs exactly once in this array. An inversion in a permutation p is a pair of indices (i, j) such that i > j and a_{i} < a_{j}. For example, a permutation [4, 1, 3, 2] contains 4 inversions: (2, 1), (3, 1), (4, 1), (4, 3).\n\nYou are given a permutation a of size n and m queries to it. Each query is represented by two indices l and r denoting that you have to reverse the segment [l, r] of the permutation. For example, if a = [1, 2, 3, 4] and a query l = 2, r = 4 is applied, then the resulting permutation is [1, 4, 3, 2].\n\nAfter each query you have to determine whether the number of inversions is odd or even.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 1500) \u2014 the size of the permutation. \n\nThe second line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 n) \u2014 the elements of the permutation. These integers are pairwise distinct.\n\nThe third line contains one integer m (1 \u2264 m \u2264 2\u00b710^5) \u2014 the number of queries to process.\n\nThen m lines follow, i-th line containing two integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) denoting that i-th query is to reverse a segment [l_{i}, r_{i}] of the permutation. All queries are performed one after another.\n\n\n-----Output-----\n\nPrint m lines. i-th of them must be equal to odd if the number of inversions in the permutation after i-th query is odd, and even otherwise.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2\n1 2\n2 3\n\nOutput\nodd\neven\n\nInput\n4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n\nOutput\nodd\nodd\nodd\neven\n\n\n\n-----Note-----\n\nThe first example:\n\n  after the first query a = [2, 1, 3], inversion: (2,", "QUESTION:\nA permutation of size n is an array of size n such that each integer from 1 to n occurs exactly once in this array. An inversion in a permutation p is a pair of indices (i, j) such that i > j and a_{i} < a_{j}. For example, a permutation [4, 1, 3, 2] contains 4 inversions: (2, 1), (3, 1), (4, 1), (4, 3).\n\nYou are given a permutation a of size n and m queries to it. Each query is represented by two indices l and r denoting that you have to reverse the segment [l, r] of the permutation. For example, if a = [1, 2, 3, 4] and a query l = 2, r = 4 is applied, then the resulting permutation is [1, 4, 3, 2].\n\nAfter each query you have to determine whether the number of inversions is odd or even.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 1500) \u2014 the size of the permutation. \n\nThe second line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 n) \u2014 the elements of the permutation. These integers are pairwise distinct.\n\nThe third line contains one integer m (1 \u2264 m \u2264 2\u00b710^5) \u2014 the number of queries to process.\n\nThen m lines follow, i-th line containing two integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) denoting that i-th query is to reverse a segment [l_{i}, r_{i}] of the permutation. All queries are performed one after another.\n\n\n-----Output-----\n\nPrint m lines. i-th of them must be equal to odd if the number of inversions in the permutation after i-th query is odd, and even otherwise.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2\n1 2\n2 3\n\nOutput\nodd\neven\n\nInput\n4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n\nOutput\nodd\nodd\nodd\neven\n\n\n\n-----Note-----\n\nThe first example:\n\n  after the first query a = [2, 1, 3], inversion: (2,", "QUESTION:\nA permutation of size n is an array of size n such that each integer from 1 to n occurs exactly once in this array. An inversion in a permutation p is a pair of indices (i, j) such that i > j and a_{i} < a_{j}. For example, a permutation [4, 1, 3, 2] contains 4 inversions: (2, 1), (3, 1), (4, 1), (4, 3).\n\nYou are given a permutation a of size n and m queries to it. Each query is represented by two indices l and r denoting that you have to reverse the segment [l, r] of the permutation. For example, if a = [1, 2, 3, 4] and a query l = 2, r = 4 is applied, then the resulting permutation is [1, 4, 3, 2].\n\nAfter each query you have to determine whether the number of inversions is odd or even.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 1500) \u2014 the size of the permutation. \n\nThe second line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 n) \u2014 the elements of the permutation. These integers are pairwise distinct.\n\nThe third line contains one integer m (1 \u2264 m \u2264 2\u00b710^5) \u2014 the number of queries to process.\n\nThen m lines follow, i-th line containing two integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) denoting that i-th query is to reverse a segment [l_{i}, r_{i}] of the permutation. All queries are performed one after another.\n\n\n-----Output-----\n\nPrint m lines. i-th of them must be equal to odd if the number of inversions in the permutation after i-th query is odd, and even otherwise.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2\n1 2\n2 3\n\nOutput\nodd\neven\n\nInput\n4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n\nOutput\nodd\nodd\nodd\neven\n\n\n\n-----Note-----\n\nThe first example:\n\n  after the first query a = [2, 1, 3], inversion: (2,", "QUESTION:\nA permutation of size n is an array of size n such that each integer from 1 to n occurs exactly once in this array. An inversion in a permutation p is a pair of indices (i, j) such that i > j and a_{i} < a_{j}. For example, a permutation [4, 1, 3, 2] contains 4 inversions: (2, 1), (3, 1), (4, 1), (4, 3).\n\nYou are given a permutation a of size n and m queries to it. Each query is represented by two indices l and r denoting that you have to reverse the segment [l, r] of the permutation. For example, if a = [1, 2, 3, 4] and a query l = 2, r = 4 is applied, then the resulting permutation is [1, 4, 3, 2].\n\nAfter each query you have to determine whether the number of inversions is odd or even.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 1500) \u2014 the size of the permutation. \n\nThe second line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 n) \u2014 the elements of the permutation. These integers are pairwise distinct.\n\nThe third line contains one integer m (1 \u2264 m \u2264 2\u00b710^5) \u2014 the number of queries to process.\n\nThen m lines follow, i-th line containing two integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) denoting that i-th query is to reverse a segment [l_{i}, r_{i}] of the permutation. All queries are performed one after another.\n\n\n-----Output-----\n\nPrint m lines. i-th of them must be equal to odd if the number of inversions in the permutation after i-th query is odd, and even otherwise.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2\n1 2\n2 3\n\nOutput\nodd\neven\n\nInput\n4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n\nOutput\nodd\nodd\nodd\neven\n\n\n\n-----Note-----\n\nThe first example:\n\n  after the first query a = [2, 1, 3], inversion: (2,", "QUESTION:\nA permutation of size n is an array of size n such that each integer from 1 to n occurs exactly once in this array. An inversion in a permutation p is a pair of indices (i, j) such that i > j and a_{i} < a_{j}. For example, a permutation [4, 1, 3, 2] contains 4 inversions: (2, 1), (3, 1), (4, 1), (4, 3).\n\nYou are given a permutation a of size n and m queries to it. Each query is represented by two indices l and r denoting that you have to reverse the segment [l, r] of the permutation. For example, if a = [1, 2, 3, 4] and a query l = 2, r = 4 is applied, then the resulting permutation is [1, 4, 3, 2].\n\nAfter each query you have to determine whether the number of inversions is odd or even.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 1500) \u2014 the size of the permutation. \n\nThe second line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 n) \u2014 the elements of the permutation. These integers are pairwise distinct.\n\nThe third line contains one integer m (1 \u2264 m \u2264 2\u00b710^5) \u2014 the number of queries to process.\n\nThen m lines follow, i-th line containing two integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) denoting that i-th query is to reverse a segment [l_{i}, r_{i}] of the permutation. All queries are performed one after another.\n\n\n-----Output-----\n\nPrint m lines. i-th of them must be equal to odd if the number of inversions in the permutation after i-th query is odd, and even otherwise.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2\n1 2\n2 3\n\nOutput\nodd\neven\n\nInput\n4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n\nOutput\nodd\nodd\nodd\neven\n\n\n\n-----Note-----\n\nThe first example:\n\n  after the first query a = [2, 1, 3], inversion: (2,"], "prompt": "\nQUESTION:\nA permutation of size n is an array of size n such that each integer from 1 to n occurs exactly once in this array. An inversion in a permutation p is a pair of indices (i, j) such that i > j and a_{i} < a_{j}. For example, a permutation [4, 1, 3, 2] contains 4 inversions: (2, 1), (3, 1), (4, 1), (4, 3).\n\nYou are given a permutation a of size n and m queries to it. Each query is represented by two indices l and r denoting that you have to reverse the segment [l, r] of the permutation. For example, if a = [1, 2, 3, 4] and a query l = 2, r = 4 is applied, then the resulting permutation is [1, 4, 3, 2].\n\nAfter each query you have to determine whether the number of inversions is odd or even.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 1500) \u2014 the size of the permutation. \n\nThe second line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 n) \u2014 the elements of the permutation. These integers are pairwise distinct.\n\nThe third line contains one integer m (1 \u2264 m \u2264 2\u00b710^5) \u2014 the number of queries to process.\n\nThen m lines follow, i-th line containing two integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) denoting that i-th query is to reverse a segment [l_{i}, r_{i}] of the permutation. All queries are performed one after another.\n\n\n-----Output-----\n\nPrint m lines. i-th of them must be equal to odd if the number of inversions in the permutation after i-th query is odd, and even otherwise.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2\n1 2\n2 3\n\nOutput\nodd\neven\n\nInput\n4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n\nOutput\nodd\nodd\nodd\neven\n\n\n\n-----Note-----\n\nThe first example:\n\n  after the first query a = [2, 1, 3], inversion: (2, 1);  after the second query a = [2, 3, 1], inversions: (3, 1), (3, 2). \n\nThe second example:\n\n  a = [1, 2, 4, 3], inversion: (4, 3);  a = [3, 4, 2, 1], inversions: (3, 1), (4, 1), (3, 2), (4, 2), (4, 3);  a = [1, 2, 4, 3], inversion: (4, 3);  a = [1, 4, 2, 3], inversions: (3, 2), (4, 2).\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}