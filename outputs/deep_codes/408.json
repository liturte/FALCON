{"408": {"code": ["n, m = map(int, input().split())\nprint(min(n, m//2))\n\n\nEXPLANATION:\nThis solution is based on the reasoning that each experienced person can form a team with at most one newbie. Therefore, we should choose", "n, m = map(int, input().split())\n\n# The total number of teams is the minimum of the number of experienced members and newbies\n# because each experienced member can help solve problems for a large number of newbies\n# and each newbie can gain more", "n, m = map(int, input().split())\nprint(min(n, m//2))\n\n\nEXPLANATION:\nThe problem is about calculating the minimum of experienced participants and half of newbies. The reason for this is that for each experienced participant", "n, m = map(int, input().split())\nprint(min(n, m // 2))\n\n\nEXPLANATION:\nThe logic behind this solution is as follows:\n\nA team of three people can either be made up of one experienced member and", "n, m = map(int, input().split())\nprint(min(n, m//2))\n\n\nExplanation:\nThe maximum number of teams that can be formed by experienced participants and newbies is the smaller of the number of experienced participants and the half"], "prompt": "\nQUESTION:\nA and B are preparing themselves for programming contests.\n\nAn important part of preparing for a competition is sharing programming knowledge from the experienced members to those who are just beginning to deal with the contests. Therefore, during the next team training A decided to make teams so that newbies are solving problems together with experienced participants.\n\nA believes that the optimal team of three people should consist of one experienced participant and two newbies. Thus, each experienced participant can share the experience with a large number of people.\n\nHowever, B believes that the optimal team should have two experienced members plus one newbie. Thus, each newbie can gain more knowledge and experience.\n\nAs a result, A and B have decided that all the teams during the training session should belong to one of the two types described above. Furthermore, they agree that the total number of teams should be as much as possible.\n\nThere are n experienced members and m newbies on the training session. Can you calculate what maximum number of teams can be formed?\n\n\n-----Input-----\n\nThe first line contains two integers n and m (0 \u2264 n, m \u2264 5\u00b710^5) \u2014 the number of experienced participants and newbies that are present at the training session. \n\n\n-----Output-----\n\nPrint the maximum number of teams that can be formed.\n\n\n-----Examples-----\nInput\n2 6\n\nOutput\n2\n\nInput\n4 5\n\nOutput\n3\n\n\n\n-----Note-----\n\nLet's represent the experienced players as XP and newbies as NB.\n\nIn the first test the teams look as follows: (XP, NB, NB), (XP, NB, NB).\n\nIn the second test sample the teams look as follows: (XP, NB, NB), (XP, NB, NB), (XP, XP, NB).\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}