{"2175": {"code": ["QUESTION:\nThere is a system of n vessels arranged one above the other as shown in the figure below. Assume that the vessels are numbered from 1 to n, in the order from the highest to the lowest, the volume of the i-th vessel is a_{i} liters. [Image] \n\nInitially, all the vessels are empty. In some vessels water is poured. All the water that overflows from the i-th vessel goes to the (i + 1)-th one. The liquid that overflows from the n-th vessel spills on the floor.\n\nYour task is to simulate pouring water into the vessels. To do this, you will need to handle two types of queries:  Add x_{i} liters of water to the p_{i}-th vessel;  Print the number of liters of water in the k_{i}-th vessel. \n\nWhen you reply to the second request you can assume that all the water poured up to this point, has already overflown between the vessels.\n\n\n-----Input-----\n\nThe first line contains integer n \u2014 the number of vessels (1 \u2264 n \u2264 2\u00b710^5). The second line contains n integers a_1, a_2, ..., a_{n} \u2014 the vessels' capacities (1 \u2264 a_{i} \u2264 10^9). The vessels' capacities do not necessarily increase from the top vessels to the bottom ones (see the second sample). The third line contains integer m \u2014 the number of queries (1 \u2264 m \u2264 2\u00b710^5). Each of the next m lines contains the description of one query. The query of the first type is represented as \"1\u00a0p_{i}\u00a0x_{i}\", the query of the second type is represented as \"2\u00a0k_{i}\" (1 \u2264 p_{i} \u2264 n, 1 \u2264 x_{i} \u2264 10^9, 1 \u2264 k_{i} \u2264 n).\n\n\n-----Output-----\n\nFor each query, print on a single line the number of liters of water in the corresponding vessel.\n\n\n-----Examples-----\nInput\n2\n5 10\n6\n1 1 4\n2 1\n1 2 5\n1 1 4\n2 1\n2 2\n\nOutput\n4\n5\n8\n\nInput\n3\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n\nOutput", "QUESTION:\nThere is a system of n vessels arranged one above the other as shown in the figure below. Assume that the vessels are numbered from 1 to n, in the order from the highest to the lowest, the volume of the i-th vessel is a_{i} liters. [Image] \n\nInitially, all the vessels are empty. In some vessels water is poured. All the water that overflows from the i-th vessel goes to the (i + 1)-th one. The liquid that overflows from the n-th vessel spills on the floor.\n\nYour task is to simulate pouring water into the vessels. To do this, you will need to handle two types of queries:  Add x_{i} liters of water to the p_{i}-th vessel;  Print the number of liters of water in the k_{i}-th vessel. \n\nWhen you reply to the second request you can assume that all the water poured up to this point, has already overflown between the vessels.\n\n\n-----Input-----\n\nThe first line contains integer n \u2014 the number of vessels (1 \u2264 n \u2264 2\u00b710^5). The second line contains n integers a_1, a_2, ..., a_{n} \u2014 the vessels' capacities (1 \u2264 a_{i} \u2264 10^9). The vessels' capacities do not necessarily increase from the top vessels to the bottom ones (see the second sample). The third line contains integer m \u2014 the number of queries (1 \u2264 m \u2264 2\u00b710^5). Each of the next m lines contains the description of one query. The query of the first type is represented as \"1\u00a0p_{i}\u00a0x_{i}\", the query of the second type is represented as \"2\u00a0k_{i}\" (1 \u2264 p_{i} \u2264 n, 1 \u2264 x_{i} \u2264 10^9, 1 \u2264 k_{i} \u2264 n).\n\n\n-----Output-----\n\nFor each query, print on a single line the number of liters of water in the corresponding vessel.\n\n\n-----Examples-----\nInput\n2\n5 10\n6\n1 1 4\n2 1\n1 2 5\n1 1 4\n2 1\n2 2\n\nOutput\n4\n5\n8\n\nInput\n3\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n\nOutput", "QUESTION:\nThere is a system of n vessels arranged one above the other as shown in the figure below. Assume that the vessels are numbered from 1 to n, in the order from the highest to the lowest, the volume of the i-th vessel is a_{i} liters. [Image] \n\nInitially, all the vessels are empty. In some vessels water is poured. All the water that overflows from the i-th vessel goes to the (i + 1)-th one. The liquid that overflows from the n-th vessel spills on the floor.\n\nYour task is to simulate pouring water into the vessels. To do this, you will need to handle two types of queries:  Add x_{i} liters of water to the p_{i}-th vessel;  Print the number of liters of water in the k_{i}-th vessel. \n\nWhen you reply to the second request you can assume that all the water poured up to this point, has already overflown between the vessels.\n\n\n-----Input-----\n\nThe first line contains integer n \u2014 the number of vessels (1 \u2264 n \u2264 2\u00b710^5). The second line contains n integers a_1, a_2, ..., a_{n} \u2014 the vessels' capacities (1 \u2264 a_{i} \u2264 10^9). The vessels' capacities do not necessarily increase from the top vessels to the bottom ones (see the second sample). The third line contains integer m \u2014 the number of queries (1 \u2264 m \u2264 2\u00b710^5). Each of the next m lines contains the description of one query. The query of the first type is represented as \"1\u00a0p_{i}\u00a0x_{i}\", the query of the second type is represented as \"2\u00a0k_{i}\" (1 \u2264 p_{i} \u2264 n, 1 \u2264 x_{i} \u2264 10^9, 1 \u2264 k_{i} \u2264 n).\n\n\n-----Output-----\n\nFor each query, print on a single line the number of liters of water in the corresponding vessel.\n\n\n-----Examples-----\nInput\n2\n5 10\n6\n1 1 4\n2 1\n1 2 5\n1 1 4\n2 1\n2 2\n\nOutput\n4\n5\n8\n\nInput\n3\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n\nOutput", "QUESTION:\nThere is a system of n vessels arranged one above the other as shown in the figure below. Assume that the vessels are numbered from 1 to n, in the order from the highest to the lowest, the volume of the i-th vessel is a_{i} liters. [Image] \n\nInitially, all the vessels are empty. In some vessels water is poured. All the water that overflows from the i-th vessel goes to the (i + 1)-th one. The liquid that overflows from the n-th vessel spills on the floor.\n\nYour task is to simulate pouring water into the vessels. To do this, you will need to handle two types of queries:  Add x_{i} liters of water to the p_{i}-th vessel;  Print the number of liters of water in the k_{i}-th vessel. \n\nWhen you reply to the second request you can assume that all the water poured up to this point, has already overflown between the vessels.\n\n\n-----Input-----\n\nThe first line contains integer n \u2014 the number of vessels (1 \u2264 n \u2264 2\u00b710^5). The second line contains n integers a_1, a_2, ..., a_{n} \u2014 the vessels' capacities (1 \u2264 a_{i} \u2264 10^9). The vessels' capacities do not necessarily increase from the top vessels to the bottom ones (see the second sample). The third line contains integer m \u2014 the number of queries (1 \u2264 m \u2264 2\u00b710^5). Each of the next m lines contains the description of one query. The query of the first type is represented as \"1\u00a0p_{i}\u00a0x_{i}\", the query of the second type is represented as \"2\u00a0k_{i}\" (1 \u2264 p_{i} \u2264 n, 1 \u2264 x_{i} \u2264 10^9, 1 \u2264 k_{i} \u2264 n).\n\n\n-----Output-----\n\nFor each query, print on a single line the number of liters of water in the corresponding vessel.\n\n\n-----Examples-----\nInput\n2\n5 10\n6\n1 1 4\n2 1\n1 2 5\n1 1 4\n2 1\n2 2\n\nOutput\n4\n5\n8\n\nInput\n3\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n\nOutput", "QUESTION:\nThere is a system of n vessels arranged one above the other as shown in the figure below. Assume that the vessels are numbered from 1 to n, in the order from the highest to the lowest, the volume of the i-th vessel is a_{i} liters. [Image] \n\nInitially, all the vessels are empty. In some vessels water is poured. All the water that overflows from the i-th vessel goes to the (i + 1)-th one. The liquid that overflows from the n-th vessel spills on the floor.\n\nYour task is to simulate pouring water into the vessels. To do this, you will need to handle two types of queries:  Add x_{i} liters of water to the p_{i}-th vessel;  Print the number of liters of water in the k_{i}-th vessel. \n\nWhen you reply to the second request you can assume that all the water poured up to this point, has already overflown between the vessels.\n\n\n-----Input-----\n\nThe first line contains integer n \u2014 the number of vessels (1 \u2264 n \u2264 2\u00b710^5). The second line contains n integers a_1, a_2, ..., a_{n} \u2014 the vessels' capacities (1 \u2264 a_{i} \u2264 10^9). The vessels' capacities do not necessarily increase from the top vessels to the bottom ones (see the second sample). The third line contains integer m \u2014 the number of queries (1 \u2264 m \u2264 2\u00b710^5). Each of the next m lines contains the description of one query. The query of the first type is represented as \"1\u00a0p_{i}\u00a0x_{i}\", the query of the second type is represented as \"2\u00a0k_{i}\" (1 \u2264 p_{i} \u2264 n, 1 \u2264 x_{i} \u2264 10^9, 1 \u2264 k_{i} \u2264 n).\n\n\n-----Output-----\n\nFor each query, print on a single line the number of liters of water in the corresponding vessel.\n\n\n-----Examples-----\nInput\n2\n5 10\n6\n1 1 4\n2 1\n1 2 5\n1 1 4\n2 1\n2 2\n\nOutput\n4\n5\n8\n\nInput\n3\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n\nOutput"], "prompt": "\nQUESTION:\nThere is a system of n vessels arranged one above the other as shown in the figure below. Assume that the vessels are numbered from 1 to n, in the order from the highest to the lowest, the volume of the i-th vessel is a_{i} liters. [Image] \n\nInitially, all the vessels are empty. In some vessels water is poured. All the water that overflows from the i-th vessel goes to the (i + 1)-th one. The liquid that overflows from the n-th vessel spills on the floor.\n\nYour task is to simulate pouring water into the vessels. To do this, you will need to handle two types of queries:  Add x_{i} liters of water to the p_{i}-th vessel;  Print the number of liters of water in the k_{i}-th vessel. \n\nWhen you reply to the second request you can assume that all the water poured up to this point, has already overflown between the vessels.\n\n\n-----Input-----\n\nThe first line contains integer n \u2014 the number of vessels (1 \u2264 n \u2264 2\u00b710^5). The second line contains n integers a_1, a_2, ..., a_{n} \u2014 the vessels' capacities (1 \u2264 a_{i} \u2264 10^9). The vessels' capacities do not necessarily increase from the top vessels to the bottom ones (see the second sample). The third line contains integer m \u2014 the number of queries (1 \u2264 m \u2264 2\u00b710^5). Each of the next m lines contains the description of one query. The query of the first type is represented as \"1\u00a0p_{i}\u00a0x_{i}\", the query of the second type is represented as \"2\u00a0k_{i}\" (1 \u2264 p_{i} \u2264 n, 1 \u2264 x_{i} \u2264 10^9, 1 \u2264 k_{i} \u2264 n).\n\n\n-----Output-----\n\nFor each query, print on a single line the number of liters of water in the corresponding vessel.\n\n\n-----Examples-----\nInput\n2\n5 10\n6\n1 1 4\n2 1\n1 2 5\n1 1 4\n2 1\n2 2\n\nOutput\n4\n5\n8\n\nInput\n3\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n\nOutput\n7\n10\n5\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}