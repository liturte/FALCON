{"4445": {"code": ["n", "def", "def", "from", "from"], "prompt": "\nQUESTION:\nPolycarp has an array $a$ consisting of $n$ integers.\n\nHe wants to play a game with this array. The game consists of several moves. On the first move he chooses any element and deletes it (after the first move the array contains $n-1$ elements). For each of the next moves he chooses any element with the only restriction: its parity should differ from the parity of the element deleted on the previous move. In other words, he alternates parities (even-odd-even-odd-... or odd-even-odd-even-...) of the removed elements. Polycarp stops if he can't make a move.\n\nFormally:   If it is the first move, he chooses any element and deletes it;  If it is the second or any next move:   if the last deleted element was odd, Polycarp chooses any even element and deletes it;  if the last deleted element was even, Polycarp chooses any odd element and deletes it.   If after some move Polycarp cannot make a move, the game ends. \n\nPolycarp's goal is to minimize the sum of non-deleted elements of the array after end of the game. If Polycarp can delete the whole array, then the sum of non-deleted elements is zero.\n\nHelp Polycarp find this value.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2000$) \u2014 the number of elements of $a$.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($0 \\le a_i \\le 10^6$), where $a_i$ is the $i$-th element of $a$.\n\n\n-----Output-----\n\nPrint one integer \u2014 the minimum possible sum of non-deleted elements of the array after end of the game.\n\n\n-----Examples-----\nInput\n5\n1 5 7 8 2\n\nOutput\n0\n\nInput\n6\n5 1 2 4 6 3\n\nOutput\n0\n\nInput\n2\n1000000 1000000\n\nOutput\n1000000\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}