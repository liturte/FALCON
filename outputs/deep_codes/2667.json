{"2667": {"code": ["def solve():\n    n = int(input())\n    c = list(map(int, input().split()))\n    c.sort()\n    for i in range(n):\n        if c[i] < i or (i < n - 1 and c[i] == c[i + 1]):\n            return \"NO\"\n    return \"YES\"\n\nprint(solve())\n\nThis solution sorts the list of stamps. Then it checks if the number of stamps of the i-th member is less than i or if", "def solve():\n    input()\n    stamps = list(map(int, input().split()))\n    stamps.sort(reverse=True)\n    total_stamps = sum(stamps)\n    for i in range(len(stamps)):\n        if stamps[i] < i or total_stamps < i * (i + 1) // 2:\n            return 'NO'\n    return 'YES'\n\nprint(solve())\n\n\nThis Python code reads the input, sorts the stamps in desc", "def solve(n, c):\n    return \"YES\" if sum(c) >= n else \"NO\"\n\nn = int(input())\nc = list(map(int, input().split()))\nprint(solve(n, c))\n\n\nThis solution works by summing up the total number of stamps (C1 + C2 + ... + Cn) and comparing it with the number of members in the SCC. If the total number of stamps is greater than or equal to the number of members, then it's possible to red", "def solve():\n    n = int(input())\n    stamps = list(map(int, input().split()))\n    stamps.sort()\n    if stamps[-1] < n:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nsolve()\n\n\nThis code sorts the list of stamps in ascending order. If the largest stamp (stamps[-1]) is less than the number of members, it is impossible to redistribute the stamps so it prints \"NO\". Otherwise, it is possible so", "def solve():\n    n = int(input())\n    c = list(map(int, input().split()))\n    c.sort()\n    for i in range(n):\n        if c[i] < i:\n            return \"NO\"\n    return \"YES\"\nprint(solve())\n\nThis code reads the input, sorts the list of stamps in ascending order, and then checks if there are enough stamps for each member. If there are not, it returns \"NO\". Otherwise, it returns \"YES\"."], "prompt": "\nQUESTION:\nAre you fond of collecting some kind of stuff? Mike is crazy about collecting stamps. He is an active member of Stamp Collecting \u0421ommunity(SCC). \n\nSCC consists of N members which are fond of philately. A few days ago Mike argued with the others from SCC. Mike told them that all stamps of the members could be divided in such a way that i'th member would get i postage stamps. Now Mike wants to know if he was right. The next SCC meeting is tomorrow. Mike still has no answer.\n\nSo, help Mike! There are N members in the SCC, i'th member has Ci stamps in his collection. Your task is to determine if it is possible to redistribute C1 + C2 + ... + Cn stamps among the members of SCC thus that i'th member would get i stamps.\n\n-----Input-----\nThe first line contains one integer N, denoting the number of members of SCC.\nThe second line contains N integers Ci, denoting the numbers of the stamps in the collection of i'th member.\n\n-----Output-----\nThe first line should contain YES, if we can obtain the required division, otherwise NO.\n\n-----Constraints-----\n1 \u2264 N \u2264 100 000;\n1 \u2264  Ci \u2264 109.\n\n-----Examples-----\nInput:\n5\n7 4 1 1 2\n\nOutput:\nYES\n\nInput:\n5\n1 1 1 1 1\n\nOutput:\nNO\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}