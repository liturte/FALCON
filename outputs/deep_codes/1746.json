{"1746": {"code": ["import sys\nfrom collections import defaultdict\n\ndef is_spruce(n, parent):\n    children = defaultdict(list)\n    for i in range(2, n + 1):\n        children[parent[i - 1]].append(i", "from collections import defaultdict, deque\n\ndef is_spruce(n, edges):\n    graph = defaultdict(list)\n    indegree = [0]*(n+1)\n    for u, v in edges:\n        graph[u", "def is_spruce(n, parents):\n    children = [[] for _ in range(n+1)]\n    leaf_count = [0] * (n+1)\n    for i in range(2, n+1):\n        children[", "import sys\nfrom collections import defaultdict\n\ndef read_data():\n    n = int(sys.stdin.readline())\n    parent = [0] * (n + 1)\n    children = defaultdict(list)\n    for i in range(", "from collections import defaultdict\n\ndef is_spruce(n, parents):\n    children = defaultdict(list)\n    for i in range(1, n):\n        children[parents[i]].append(i+1)\n    leaves = ["], "prompt": "\nQUESTION:\nConsider a rooted tree. A rooted tree has one special vertex called the root. All edges are directed from the root. Vertex u is called a child of vertex v and vertex v is called a parent of vertex u if there exists a directed edge from v to u. A vertex is called a leaf if it doesn't have children and has a parent.\n\nLet's call a rooted tree a spruce if its every non-leaf vertex has at least 3 leaf children. You are given a rooted tree, check whether it's a spruce.\n\nThe definition of a rooted tree can be found here.\n\n\n-----Input-----\n\nThe first line contains one integer n\u00a0\u2014 the number of vertices in the tree (3 \u2264 n \u2264 1 000). Each of the next n - 1 lines contains one integer p_{i} (1 \u2264 i \u2264 n - 1)\u00a0\u2014 the index of the parent of the i + 1-th vertex (1 \u2264 p_{i} \u2264 i).\n\nVertex 1 is the root. It's guaranteed that the root has at least 2 children.\n\n\n-----Output-----\n\nPrint \"Yes\" if the tree is a spruce and \"No\" otherwise.\n\n\n-----Examples-----\nInput\n4\n1\n1\n1\n\nOutput\nYes\n\nInput\n7\n1\n1\n1\n2\n2\n2\n\nOutput\nNo\n\nInput\n8\n1\n1\n1\n1\n3\n3\n3\n\nOutput\nYes\n\n\n\n-----Note-----\n\nThe first example:\n\n[Image]\n\nThe second example:\n\n$8$\n\nIt is not a spruce, because the non-leaf vertex 1 has only 2 leaf children.\n\nThe third example:\n\n[Image]\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}