{"81": {"code": ["def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\na, b = map(int, input().split())\nprint((a * b) // gcd(a, b))\n\n\nEXPLANATION:\nThe solution is based on the formula for the least common multiple (LCM) of two numbers:\n\nLCM(a, b) = |a * b| / GCD(a, b)\n\nwhere GCD(a, b) is the greatest common divisor of a and b.\n\nWe use the Euclidean algorithm to calculate", "def solve(a, b):\n    if a > b:\n        a, b = b, a\n    if a == 0:\n        return b\n    return solve(b % a, a)\n\na, b = map(int, input().split())\nprint((a * b) // solve(a, b) - b)\n\n\nExplanation:\nThis solution uses the Euclidean algorithm to find the greatest common divisor (gcd) of a and b. The least common multiple (lcm) of a and b is given by the formula lcm(a, b) = |a * b| / gcd(a,", "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\na, b = map(int, input().split())\nk = 0\nwhile lcm(a + k, b + k) != lcm(a, b):\n    k += 1\nprint(k)\n\n\nExplanation:\nThis program uses the Euclidean algorithm to calculate the greatest common divisor (gcd) of two numbers, and then uses the formula for the least", "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\na, b = map(int, input().split())\nk = 0\nwhile lcm(a + k, b + k) != lcm(a, b):\n    k += 1\nprint(k)\n\nThis code works by first defining a function to compute the greatest common divisor (gcd) of two numbers, which is used in the calculation of the least common multiple (lcm). Then", "import math\na, b = map(int, input().split())\nlcm = abs(a-b)\nif lcm==0: print(0)\nelse: print((lcm+1)//2)\n\nThis Python code works by first calculating the difference between the two input integers, then dividing that difference by 2 and rounding up to the nearest integer (since $k$ must be non-negative). The result is printed out as the output.\n\nThe logic behind this solution is that for the least common multiple of two numbers to be the smallest possible, the numbers should be as close together as possible. Therefore, the difference between the two numbers"], "prompt": "\nQUESTION:\nNeko loves divisors. During the latest number theory lesson, he got an interesting exercise from his math teacher.\n\nNeko has two integers $a$ and $b$. His goal is to find a non-negative integer $k$ such that the least common multiple of $a+k$ and $b+k$ is the smallest possible. If there are multiple optimal integers $k$, he needs to choose the smallest one.\n\nGiven his mathematical talent, Neko had no trouble getting Wrong Answer on this problem. Can you help him solve it?\n\n\n-----Input-----\n\nThe only line contains two integers $a$ and $b$ ($1 \\le a, b \\le 10^9$).\n\n\n-----Output-----\n\nPrint the smallest non-negative integer $k$ ($k \\ge 0$) such that the lowest common multiple of $a+k$ and $b+k$ is the smallest possible.\n\nIf there are many possible integers $k$ giving the same value of the least common multiple, print the smallest one.\n\n\n-----Examples-----\nInput\n6 10\n\nOutput\n2\nInput\n21 31\n\nOutput\n9\nInput\n5 10\n\nOutput\n0\n\n\n-----Note-----\n\nIn the first test, one should choose $k = 2$, as the least common multiple of $6 + 2$ and $10 + 2$ is $24$, which is the smallest least common multiple possible.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}