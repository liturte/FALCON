{"1080": {"code": ["n = int(input())\na = list(map(int, input().split()))\n\nprint(\"YES\" if sum(a) % 2 == 0 else \"NO\")\n\n\nThis code works by first reading the number of elements and the elements themselves. It then checks if the sum of the elements is even. If it is, it prints \"YES\", because it is possible to make all elements equal to zero by performing an even number of operations. If the sum of the elements is not even, it prints \"NO\", because it is not possible to make all elements equal to zero by performing an even number of operations.\n\nThe reasoning", "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if sum(a) % 2 == 0 else \"NO\")\n\n\nThis solution works by summing all the elements in the array. If the sum is even, it's possible to make all the elements zero by performing an even number of operations, so it prints \"YES\". If the sum is odd, it's impossible to make all the elements zero, so it prints \"NO\".\n\nThe reason this works is that in each operation, two elements are decreased by one, so if the sum of the elements is even,", "n = int(input())\na = list(map(int, input().split()))\n\nprint(\"YES\" if sum(a) % 2 == 0 else \"NO\")\n\n\nExplanation:\nThe code first reads the input and stores it in the variables `n` and `a`.\nThen it checks if the sum of all elements in `a` is even. If it is, it prints \"YES\". If it isn't, it prints \"NO\".\nThis is because, to make all elements equal to zero, each element needs to be decreased by an even number of times.\nSo, if the sum", "n = int(input())\narr = list(map(int, input().split()))\nprint(\"YES\" if sum(arr) % 2 == 0 else \"NO\")\n\n\nExplanation:\nThe code works by summing all the elements in the array. If the sum is even, it's possible to make all elements equal to zero. If the sum is odd, it's impossible to make all elements equal to zero. This is because each operation decreases two elements by one, so if the sum is odd, there will always be one element that can't be decreased to zero.\n\nThis solution works because of the properties", "n = int(input())\na = list(map(int, input().split()))\n\nif sum(a) % n != 0:\n    print('NO')\nelse:\n    print('YES')\n\n\nThis code works by first reading in the size of the array and the elements of the array. It then checks if the sum of the elements is divisible by the size of the array. If it is, it prints 'YES', otherwise it prints 'NO'. This is because to make all elements equal to zero, each element must be decreased by the same amount, which is the sum of the elements divided by the size of"], "prompt": "\nQUESTION:\nYou are given an array $a_1, a_2, \\ldots, a_n$.\n\nIn one operation you can choose two elements $a_i$ and $a_j$ ($i \\ne j$) and decrease each of them by one.\n\nYou need to check whether it is possible to make all the elements equal to zero or not.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($2 \\le n \\le 10^5$)\u00a0\u2014 the size of the array.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\le a_i \\le 10^9$)\u00a0\u2014 the elements of the array.\n\n\n-----Output-----\n\nPrint \"YES\" if it is possible to make all elements zero, otherwise print \"NO\".\n\n\n-----Examples-----\nInput\n4\n1 1 2 2\n\nOutput\nYES\nInput\n6\n1 2 3 4 5 6\n\nOutput\nNO\n\n\n-----Note-----\n\nIn the first example, you can make all elements equal to zero in $3$ operations:   Decrease $a_1$ and $a_2$,  Decrease $a_3$ and $a_4$,  Decrease $a_3$ and $a_4$ \n\nIn the second example, one can show that it is impossible to make all elements equal to zero.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}