{"2465": {"code": ["def solve():\n    T = int(input())\n    for _ in range(T):\n        ang = int", "import math\n\nT = int(input())\nfor _ in range(T):\n    angle = int(input", "import math\n\nT = int(input())\nfor _ in range(T):\n    angle = int(input", "from math import gcd\n\nT = int(input())\nfor _ in range(T):\n    ang =", "def solve(n):\n    if n % 3 == 0 and n % 2 == 0: return n //"], "prompt": "\nQUESTION:\nYou are given an angle $\\text{ang}$. \n\nThe Jury asks You to find such regular $n$-gon (regular polygon with $n$ vertices) that it has three vertices $a$, $b$ and $c$ (they can be non-consecutive) with $\\angle{abc} = \\text{ang}$ or report that there is no such $n$-gon. [Image] \n\nIf there are several answers, print the minimal one. It is guarantied that if answer exists then it doesn't exceed $998244353$.\n\n\n-----Input-----\n\nThe first line contains single integer $T$ ($1 \\le T \\le 180$) \u2014 the number of queries. \n\nEach of the next $T$ lines contains one integer $\\text{ang}$ ($1 \\le \\text{ang} < 180$) \u2014 the angle measured in degrees. \n\n\n-----Output-----\n\nFor each query print single integer $n$ ($3 \\le n \\le 998244353$) \u2014 minimal possible number of vertices in the regular $n$-gon or $-1$ if there is no such $n$.\n\n\n-----Example-----\nInput\n4\n54\n50\n2\n178\n\nOutput\n10\n18\n90\n180\n\n\n\n-----Note-----\n\nThe answer for the first query is on the picture above.\n\nThe answer for the second query is reached on a regular $18$-gon. For example, $\\angle{v_2 v_1 v_6} = 50^{\\circ}$.\n\nThe example angle for the third query is $\\angle{v_{11} v_{10} v_{12}} = 2^{\\circ}$.\n\nIn the fourth query, minimal possible $n$ is $180$ (not $90$).\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}