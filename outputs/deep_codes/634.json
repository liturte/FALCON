{"634": {"code": ["QUESTION:\nIn a far away land, there are two cities near a river. One day, the cities decide that they have too little space and would like to reclaim some of the river area into land.\n\nThe river area can be represented by a grid with r rows and exactly two columns \u2014 each cell represents a rectangular area. The rows are numbered 1 through r from top to bottom, while the columns are numbered 1 and 2.\n\nInitially, all of the cells are occupied by the river. The plan is to turn some of those cells into land one by one, with the cities alternately choosing a cell to reclaim, and continuing until no more cells can be reclaimed.\n\nHowever, the river is also used as a major trade route. The cities need to make sure that ships will still be able to sail from one end of the river to the other. More formally, if a cell (r, c) has been reclaimed, it is not allowed to reclaim any of the cells (r - 1, 3 - c), (r, 3 - c), or (r + 1, 3 - c).\n\nThe cities are not on friendly terms, and each city wants to be the last city to reclaim a cell (they don't care about how many cells they reclaim, just who reclaims a cell last). The cities have already reclaimed n cells. Your job is to determine which city will be the last to reclaim a cell, assuming both choose cells optimally from current moment.\n\n\n-----Input-----\n\nThe first line consists of two integers r and n (1 \u2264 r \u2264 100, 0 \u2264 n \u2264 r). Then n lines follow, describing the cells that were already reclaimed. Each line consists of two integers: r_{i} and c_{i} (1 \u2264 r_{i} \u2264 r, 1 \u2264 c_{i} \u2264 2), which represent the cell located at row r_{i} and column c_{i}. All of the lines describing the cells will be distinct, and the reclaimed cells will not violate the constraints above.\n\n\n-----Output-----\n\nOutput \"WIN\" if the city whose turn it is to choose a cell can guarantee that they will be the last to choose a cell. Otherwise print \"LOSE\".\n\n\n-----Examples-----\nInput\n3 1\n1 1\n\nOutput\nWIN\n\nInput\n12 2\n4 1\n8 1\n\nOutput\nWIN\n\nInput\n1 1\n1 2\n\nOutput\nLOSE\n\n\n\n-----Note-----\n\nIn the first example, there are", "QUESTION:\nIn a far away land, there are two cities near a river. One day, the cities decide that they have too little space and would like to reclaim some of the river area into land.\n\nThe river area can be represented by a grid with r rows and exactly two columns \u2014 each cell represents a rectangular area. The rows are numbered 1 through r from top to bottom, while the columns are numbered 1 and 2.\n\nInitially, all of the cells are occupied by the river. The plan is to turn some of those cells into land one by one, with the cities alternately choosing a cell to reclaim, and continuing until no more cells can be reclaimed.\n\nHowever, the river is also used as a major trade route. The cities need to make sure that ships will still be able to sail from one end of the river to the other. More formally, if a cell (r, c) has been reclaimed, it is not allowed to reclaim any of the cells (r - 1, 3 - c), (r, 3 - c), or (r + 1, 3 - c).\n\nThe cities are not on friendly terms, and each city wants to be the last city to reclaim a cell (they don't care about how many cells they reclaim, just who reclaims a cell last). The cities have already reclaimed n cells. Your job is to determine which city will be the last to reclaim a cell, assuming both choose cells optimally from current moment.\n\n\n-----Input-----\n\nThe first line consists of two integers r and n (1 \u2264 r \u2264 100, 0 \u2264 n \u2264 r). Then n lines follow, describing the cells that were already reclaimed. Each line consists of two integers: r_{i} and c_{i} (1 \u2264 r_{i} \u2264 r, 1 \u2264 c_{i} \u2264 2), which represent the cell located at row r_{i} and column c_{i}. All of the lines describing the cells will be distinct, and the reclaimed cells will not violate the constraints above.\n\n\n-----Output-----\n\nOutput \"WIN\" if the city whose turn it is to choose a cell can guarantee that they will be the last to choose a cell. Otherwise print \"LOSE\".\n\n\n-----Examples-----\nInput\n3 1\n1 1\n\nOutput\nWIN\n\nInput\n12 2\n4 1\n8 1\n\nOutput\nWIN\n\nInput\n1 1\n1 2\n\nOutput\nLOSE\n\n\n\n-----Note-----\n\nIn the first example, there are", "QUESTION:\nIn a far away land, there are two cities near a river. One day, the cities decide that they have too little space and would like to reclaim some of the river area into land.\n\nThe river area can be represented by a grid with r rows and exactly two columns \u2014 each cell represents a rectangular area. The rows are numbered 1 through r from top to bottom, while the columns are numbered 1 and 2.\n\nInitially, all of the cells are occupied by the river. The plan is to turn some of those cells into land one by one, with the cities alternately choosing a cell to reclaim, and continuing until no more cells can be reclaimed.\n\nHowever, the river is also used as a major trade route. The cities need to make sure that ships will still be able to sail from one end of the river to the other. More formally, if a cell (r, c) has been reclaimed, it is not allowed to reclaim any of the cells (r - 1, 3 - c), (r, 3 - c), or (r + 1, 3 - c).\n\nThe cities are not on friendly terms, and each city wants to be the last city to reclaim a cell (they don't care about how many cells they reclaim, just who reclaims a cell last). The cities have already reclaimed n cells. Your job is to determine which city will be the last to reclaim a cell, assuming both choose cells optimally from current moment.\n\n\n-----Input-----\n\nThe first line consists of two integers r and n (1 \u2264 r \u2264 100, 0 \u2264 n \u2264 r). Then n lines follow, describing the cells that were already reclaimed. Each line consists of two integers: r_{i} and c_{i} (1 \u2264 r_{i} \u2264 r, 1 \u2264 c_{i} \u2264 2), which represent the cell located at row r_{i} and column c_{i}. All of the lines describing the cells will be distinct, and the reclaimed cells will not violate the constraints above.\n\n\n-----Output-----\n\nOutput \"WIN\" if the city whose turn it is to choose a cell can guarantee that they will be the last to choose a cell. Otherwise print \"LOSE\".\n\n\n-----Examples-----\nInput\n3 1\n1 1\n\nOutput\nWIN\n\nInput\n12 2\n4 1\n8 1\n\nOutput\nWIN\n\nInput\n1 1\n1 2\n\nOutput\nLOSE\n\n\n\n-----Note-----\n\nIn the first example, there are", "QUESTION:\nIn a far away land, there are two cities near a river. One day, the cities decide that they have too little space and would like to reclaim some of the river area into land.\n\nThe river area can be represented by a grid with r rows and exactly two columns \u2014 each cell represents a rectangular area. The rows are numbered 1 through r from top to bottom, while the columns are numbered 1 and 2.\n\nInitially, all of the cells are occupied by the river. The plan is to turn some of those cells into land one by one, with the cities alternately choosing a cell to reclaim, and continuing until no more cells can be reclaimed.\n\nHowever, the river is also used as a major trade route. The cities need to make sure that ships will still be able to sail from one end of the river to the other. More formally, if a cell (r, c) has been reclaimed, it is not allowed to reclaim any of the cells (r - 1, 3 - c), (r, 3 - c), or (r + 1, 3 - c).\n\nThe cities are not on friendly terms, and each city wants to be the last city to reclaim a cell (they don't care about how many cells they reclaim, just who reclaims a cell last). The cities have already reclaimed n cells. Your job is to determine which city will be the last to reclaim a cell, assuming both choose cells optimally from current moment.\n\n\n-----Input-----\n\nThe first line consists of two integers r and n (1 \u2264 r \u2264 100, 0 \u2264 n \u2264 r). Then n lines follow, describing the cells that were already reclaimed. Each line consists of two integers: r_{i} and c_{i} (1 \u2264 r_{i} \u2264 r, 1 \u2264 c_{i} \u2264 2), which represent the cell located at row r_{i} and column c_{i}. All of the lines describing the cells will be distinct, and the reclaimed cells will not violate the constraints above.\n\n\n-----Output-----\n\nOutput \"WIN\" if the city whose turn it is to choose a cell can guarantee that they will be the last to choose a cell. Otherwise print \"LOSE\".\n\n\n-----Examples-----\nInput\n3 1\n1 1\n\nOutput\nWIN\n\nInput\n12 2\n4 1\n8 1\n\nOutput\nWIN\n\nInput\n1 1\n1 2\n\nOutput\nLOSE\n\n\n\n-----Note-----\n\nIn the first example, there are", "QUESTION:\nIn a far away land, there are two cities near a river. One day, the cities decide that they have too little space and would like to reclaim some of the river area into land.\n\nThe river area can be represented by a grid with r rows and exactly two columns \u2014 each cell represents a rectangular area. The rows are numbered 1 through r from top to bottom, while the columns are numbered 1 and 2.\n\nInitially, all of the cells are occupied by the river. The plan is to turn some of those cells into land one by one, with the cities alternately choosing a cell to reclaim, and continuing until no more cells can be reclaimed.\n\nHowever, the river is also used as a major trade route. The cities need to make sure that ships will still be able to sail from one end of the river to the other. More formally, if a cell (r, c) has been reclaimed, it is not allowed to reclaim any of the cells (r - 1, 3 - c), (r, 3 - c), or (r + 1, 3 - c).\n\nThe cities are not on friendly terms, and each city wants to be the last city to reclaim a cell (they don't care about how many cells they reclaim, just who reclaims a cell last). The cities have already reclaimed n cells. Your job is to determine which city will be the last to reclaim a cell, assuming both choose cells optimally from current moment.\n\n\n-----Input-----\n\nThe first line consists of two integers r and n (1 \u2264 r \u2264 100, 0 \u2264 n \u2264 r). Then n lines follow, describing the cells that were already reclaimed. Each line consists of two integers: r_{i} and c_{i} (1 \u2264 r_{i} \u2264 r, 1 \u2264 c_{i} \u2264 2), which represent the cell located at row r_{i} and column c_{i}. All of the lines describing the cells will be distinct, and the reclaimed cells will not violate the constraints above.\n\n\n-----Output-----\n\nOutput \"WIN\" if the city whose turn it is to choose a cell can guarantee that they will be the last to choose a cell. Otherwise print \"LOSE\".\n\n\n-----Examples-----\nInput\n3 1\n1 1\n\nOutput\nWIN\n\nInput\n12 2\n4 1\n8 1\n\nOutput\nWIN\n\nInput\n1 1\n1 2\n\nOutput\nLOSE\n\n\n\n-----Note-----\n\nIn the first example, there are"], "prompt": "\nQUESTION:\nIn a far away land, there are two cities near a river. One day, the cities decide that they have too little space and would like to reclaim some of the river area into land.\n\nThe river area can be represented by a grid with r rows and exactly two columns \u2014 each cell represents a rectangular area. The rows are numbered 1 through r from top to bottom, while the columns are numbered 1 and 2.\n\nInitially, all of the cells are occupied by the river. The plan is to turn some of those cells into land one by one, with the cities alternately choosing a cell to reclaim, and continuing until no more cells can be reclaimed.\n\nHowever, the river is also used as a major trade route. The cities need to make sure that ships will still be able to sail from one end of the river to the other. More formally, if a cell (r, c) has been reclaimed, it is not allowed to reclaim any of the cells (r - 1, 3 - c), (r, 3 - c), or (r + 1, 3 - c).\n\nThe cities are not on friendly terms, and each city wants to be the last city to reclaim a cell (they don't care about how many cells they reclaim, just who reclaims a cell last). The cities have already reclaimed n cells. Your job is to determine which city will be the last to reclaim a cell, assuming both choose cells optimally from current moment.\n\n\n-----Input-----\n\nThe first line consists of two integers r and n (1 \u2264 r \u2264 100, 0 \u2264 n \u2264 r). Then n lines follow, describing the cells that were already reclaimed. Each line consists of two integers: r_{i} and c_{i} (1 \u2264 r_{i} \u2264 r, 1 \u2264 c_{i} \u2264 2), which represent the cell located at row r_{i} and column c_{i}. All of the lines describing the cells will be distinct, and the reclaimed cells will not violate the constraints above.\n\n\n-----Output-----\n\nOutput \"WIN\" if the city whose turn it is to choose a cell can guarantee that they will be the last to choose a cell. Otherwise print \"LOSE\".\n\n\n-----Examples-----\nInput\n3 1\n1 1\n\nOutput\nWIN\n\nInput\n12 2\n4 1\n8 1\n\nOutput\nWIN\n\nInput\n1 1\n1 2\n\nOutput\nLOSE\n\n\n\n-----Note-----\n\nIn the first example, there are 3 possible cells for the first city to reclaim: (2, 1), (3, 1), or (3, 2). The first two possibilities both lose, as they leave exactly one cell for the other city. [Image] \n\nHowever, reclaiming the cell at (3, 2) leaves no more cells that can be reclaimed, and therefore the first city wins. $\\text{-}$ \n\nIn the third example, there are no cells that can be reclaimed.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}