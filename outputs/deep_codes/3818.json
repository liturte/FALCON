{"3818": {"code": ["import sys\nfrom collections import defaultdict\nfrom heapq import heappop, heappush\n\nMOD = 10**9 + 7\n\ndef dijkstra(graph, start):\n    distances = [float('inf')] * (len(graph) + 1)\n    distances[start] = 0\n    heap = [(0, start)]\n    while heap:\n        dist, node = heappop(heap)\n        if dist > distances[node]:", "MOD = 10**9+7\nN = int(input())\ngraph = [[] for _ in range(N+1)]\nfor _ in range(N-1):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\nfact = [1]*(N+1)\nfor i in range(1, N+1):\n    fact[i] = (fact", "MOD = 10**9 + 7\nN = int(input())\ngraph = [[] for _ in range(N+1)]\nfor _ in range(N-1):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\ndef dfs(v, p):\n    d1, d2 = [0, 0], [0, 0]\n    for", "MOD = 10**9+7\nN = int(input())\nE = [[] for _ in range(N+1)]\nfor _ in range(N-1):\n    a, b = map(int, input().split())\n    E[a].append(b)\n    E[b].append(a)\n\ndef dfs(v, p):\n    d1, d2 = 0, 0\n    c1, c2 = 0,", "MOD = 10**9 + 7\nN = int(input())\ngraph = [[] for _ in range(N+1)]\nfor _ in range(N-1):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\nfact = [1] * (N+1)\nfor i in range(1, N+1):\n    fact[i] = fact"], "prompt": "\nQUESTION:\nGiven is a tree with N vertices numbered 1 to N, and N-1 edges numbered 1 to N-1.\nEdge i connects Vertex a_i and b_i bidirectionally and has a length of 1.\nSnuke will paint each vertex white or black.\nThe niceness of a way of painting the graph is \\max(X, Y), where X is the maximum among the distances between white vertices, and Y is the maximum among the distances between black vertices.\nHere, if there is no vertex of one color, we consider the maximum among the distances between vertices of that color to be 0.\nThere are 2^N ways of painting the graph. Compute the sum of the nicenesses of all those ways, modulo (10^{9}+7).\n\n-----Constraints-----\n - 2 \\leq N \\leq 2 \\times 10^{5}\n - 1 \\leq a_i, b_i \\leq N\n - The given graph is a tree.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\na_1 b_1\n\\vdots\na_{N-1} b_{N-1}\n\n-----Output-----\nPrint the sum of the nicenesses of the ways of painting the graph, modulo (10^{9}+7).\n\n-----Sample Input-----\n2\n1 2\n\n-----Sample Output-----\n2\n\n - If we paint Vertex 1 and 2 the same color, the niceness will be 1; if we paint them different colors, the niceness will be 0.\n - The sum of those nicenesses is 2.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}