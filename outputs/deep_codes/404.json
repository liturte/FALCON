{"404": {"code": ["import math\n\ndef lcm(a, b):\n    return abs(a*b) // math.gcd(a, b)\n\ndef solve(b):\n    res = set()\n    for a in range(1, b+1):\n        res.add(lcm(a, b) // a)\n    return len(res)\n\nb = int(input())\nprint(solve(b))\n\n\nThis program uses the gcd function from the math module to calculate the least common multiple (lcm) of two numbers. It then divides the lcm by the number 'a' to get the value of $\\frac{[a, \\,\\, b]}{", "def gcd(a, b): \n    if b == 0: \n        return a \n    return gcd(b, a % b) \n\ndef lcm(a, b): \n    return (a * b) // gcd(a, b)\n\nb = int(input())\nans = set()\nfor a in range(1, b + 1):\n    ans.add(lcm(a, b) // a)\nprint(len(ans))\n\nThis Python code uses the Euclidean algorithm to calculate the greatest common divisor (gcd) of two numbers, and then uses this gcd to calculate the least common multiple (lcm). The", "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef solve(b):\n    res = set()\n    for a in range(1, b + 1):\n        res.add(lcm(a, b) // a)\n    return len(res)\n\nb = int(input())\nprint(solve(b))\n\n\nThis Python program uses the Euclidean algorithm to calculate the greatest common divisor (gcd) of two numbers, then the least common multiple (l", "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nb = int(input())\n\nlcm_b = lcm(b, 1)\n\nprint(lcm_b // b)\n\nThis program calculates the least common multiple of `b` and `1`, then divides the result by `b` to get the number of different numbers Ivan would write on the blackboard. The `gcd` function calculates the greatest common divisor of two numbers, and the `lcm` function", "def gcd(a, b):\n    if b==0:\n        return a\n    else:\n        return gcd(b, a%b)\n\nb = int(input())\nresult = 0\n\nfor i in range(1, b+1):\n    if gcd(i, b) == b:\n        result += 1\n\nprint(result)\n\n\nThis code uses the Euclidean algorithm to find the greatest common divisor (gcd) of two numbers. For each number from 1 to b, it checks if the gcd is b. If it is, it increments the result, which is the number of different numbers Ivan would write on the board."], "prompt": "\nQUESTION:\nIvan has number $b$. He is sorting through the numbers $a$ from $1$ to $10^{18}$, and for every $a$ writes $\\frac{[a, \\,\\, b]}{a}$ on blackboard. Here $[a, \\,\\, b]$ stands for least common multiple of $a$ and $b$. Ivan is very lazy, that's why this task bored him soon. But he is interested in how many different numbers he would write on the board if he would finish the task. Help him to find the quantity of different numbers he would write on the board.\n\n\n-----Input-----\n\nThe only line contains one integer\u00a0\u2014 $b$ $(1 \\le b \\le 10^{10})$.\n\n\n-----Output-----\n\nPrint one number\u00a0\u2014 answer for the problem.\n\n\n-----Examples-----\nInput\n1\n\nOutput\n1\nInput\n2\n\nOutput\n2\n\n\n-----Note-----\n\nIn the first example $[a, \\,\\, 1] = a$, therefore $\\frac{[a, \\,\\, b]}{a}$ is always equal to $1$.\n\nIn the second example $[a, \\,\\, 2]$ can be equal to $a$ or $2 \\cdot a$ depending on parity of $a$. $\\frac{[a, \\,\\, b]}{a}$ can be equal to $1$ and $2$.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}