{"3396": {"code": ["import sys\nimport math\n\ndef solve():\n    n = int(sys.stdin.readline())\n    posts = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n    max_distance = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            distance = math.sqrt((posts[i][0]-posts[j][0])**2 + (posts[i][1]-posts[j][1])**2)\n            max_distance = max(max_distance, distance)", "import sys\nfrom math import sqrt\n\ndef solve():\n    n = int(sys.stdin.readline())\n    posts = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n    result = 0.0\n    for i in range(n):\n        for j in range(i+1, n):\n            d = sqrt((posts[i][0]-posts[j][0])**2 + (posts[i][1]-posts[j][1])**2)\n            if d > result:\n                result = d", "import sys\nfrom math import sqrt\n\ndef max_rope(n, posts):\n    max_rope = 0.0\n    for i in range(n):\n        for j in range(i+1, n):\n            dist = sqrt((posts[i][0] - posts[j][0])**2 + (posts[i][1] - posts[j][1])**2)\n            if dist > max_rope:\n                max_rope = dist\n    return round(max_rope, 2)\n\nn = int(sys.stdin.read", "import sys\nfrom math import sqrt\n\ndef solve():\n    n = int(sys.stdin.readline().strip())\n    posts = [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]\n    posts.sort()\n    left, right = 0, 500000\n\n    def check(mid):\n        for i in range(n-1):\n            if sqrt((posts[i+1][0]-posts[i][0])**2 + (posts[i+1][1]-posts[i][", "import sys\nimport math\n\ndef solve():\n    n = int(sys.stdin.readline())\n    posts = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n    max_distance = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            distance = math.sqrt((posts[i][0] - posts[j][0])**2 + (posts[i][1] - posts[j][1])**2)\n            max_distance = max(max_distance, distance"], "prompt": "\nQUESTION:\nA farmer has $n$ goats. Coincidentally, he also has $n$ fixed posts in a field where he wants the goats to graze. He wants to tie each goat to a post with a length of rope. He wants to give each goat as much leeway as possible \u2013 but, goat ropes are notorious for getting tangled, so he cannot allow any goat to be able to wander into another goat\u2019s territory. What is the maximum amount of rope he could possibly use?\n\n-----Input-----\nThere will be a single test case in the input. This test case will begin with an integer $n$ ($2 \\le n \\le 50$), indicating the number of posts in the field. On each of the next $n$ lines will be a pair of integers, $x$ and $y$ ($0 \\le x \\le 1000$, $0 \\le y \\le 1000$) which indicate the cartesian coordinates (in meters) of that post in the field. No two posts will be in the same position. You may assume that the field is large enough that the goats will never encounter its border.\n\n-----Output-----\nOutput a single floating point number, which indicates the maximum amount of rope that the farmer could possibly use, in meters. Output this value with exactly two decimal places, rounded to the nearest value.\n\n-----Examples-----\nSample Input:\n2\n250 250\n250 750\nSample Output:\n500.00\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}