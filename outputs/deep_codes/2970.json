{"2970": {"code": ["from collections import Counter\n\nN, M, K = map(int, input().split())\nB = [int(input()) for _ in range(N)]\n\ncounter = Counter(B)\nsorted_count = sorted(counter.values())\n\nres = N\nfor i in range(len(sorted_count) -", "from collections import deque\nfrom sys import stdin\n\nN, M, K = map(int, stdin.readline().split())\nbldgs = list(map(int, stdin.read().split()))\n\ncounts = [0] * (M + 1)\nq = deque(maxlen=K)\ntotal", "from collections import Counter\nfrom heapq import nlargest\n\nN, M, K = map(int, input().split())\nbuildings = list(map(int, (input() for _ in range(N))))\n\ncounter = Counter(buildings)\n\ntotal = sum(counter.values())\ntop_k = n", "from collections import deque\nfrom heapq import *\n\nN, M, K = map(int, input().split())\nA = list(map(int, [input() for _ in range(N)]))\n\ncnt = [0] * (M + 1)\nq = deque()\nheap = []\n\nres =", "from collections import Counter\nimport sys\n\ndef solve():\n    N, M, K = map(int, sys.stdin.readline().split())\n    A = [int(sys.stdin.readline()) for _ in range(N)]\n\n    counter = Counter(A)\n    buildings = sorted(counter.items"], "prompt": "\nQUESTION:\nA new student dorm has been opened! It consists of $M$ buildings, labeled with integers from $1$ to $M$. The dorm is initially empty, but soon $N$ students will be moving in at a rate of exactly one student per day.\n\nEach time a new student moves in a building, a big party is being held inside that building. The noise of the party is equal to the number of students located inside the building. The dorm management is not particularly fond of noise, so they will occasionally empty a certain building to keep the parties at a reasonable noise level. They do this by moving all its residents to a completely different student dorm. The management can decide to do this after any day, but they realized that it doesn\u2019t pay off to do it more than $K$ times.\n\nHelp the management! Knowing which buildings are being moved in by students, determine the minimal possible total noise level (the sum of noise levels of all $N$ parties) that can be achieved with emptying some of the buildings at most $K$ times.\n\n-----Input-----\nThe first line of input contains the integers $N$ ($1 \\leq N \\leq 1000000$), $M$ ($1 \\leq M \\leq 100$) and $K$ ($1 \\leq K \\leq 500$) from the task description.\n\nThe $i$-th line, out of $N$ in total, contains an integer from the interval $[1,M]$: the label of the building where a student is moving in on the $i$-th day.\n\n-----Output-----\nThe first and only line of output must contain the required minimal possible total noise level.\n\n-----Examples-----\nSample Input:\n5 1 2\n1\n1\n1\n1\n1\nSample Output:\n7\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}