{"1625": {"code": ["def", "def", "n", "def", "from"], "prompt": "\nQUESTION:\nIlya is a very good-natured lion. He likes maths. Of all mathematical objects, his favourite one is matrices. Now he's faced a complicated matrix problem he needs to solve.\n\nHe's got a square 2^{n} \u00d7 2^{n}-sized matrix and 4^{n} integers. You need to arrange all these numbers in the matrix (put each number in a single individual cell) so that the beauty of the resulting matrix with numbers is maximum.\n\nThe beauty of a 2^{n} \u00d7 2^{n}-sized matrix is an integer, obtained by the following algorithm:  Find the maximum element in the matrix. Let's denote it as m.  If n = 0, then the beauty of the matrix equals m. Otherwise, a matrix can be split into 4 non-intersecting 2^{n} - 1 \u00d7 2^{n} - 1-sized submatrices, then the beauty of the matrix equals the sum of number m and other four beauties of the described submatrices. \n\nAs you can see, the algorithm is recursive.\n\nHelp Ilya, solve the problem and print the resulting maximum beauty of the matrix.\n\n\n-----Input-----\n\nThe first line contains integer 4^{n} (1 \u2264 4^{n} \u2264 2\u00b710^6). The next line contains 4^{n} integers a_{i} (1 \u2264 a_{i} \u2264 10^9) \u2014 the numbers you need to arrange in the 2^{n} \u00d7 2^{n}-sized matrix.\n\n\n-----Output-----\n\nOn a single line print the maximum value of the beauty of the described matrix.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n1\n13\n\nOutput\n13\n\nInput\n4\n1 2 3 4\n\nOutput\n14\n\n\n\n-----Note-----\n\nConsider the second sample. You need to arrange the numbers in the matrix as follows:\n\n1 2\n\n3 4\n\n\n\nThen the beauty of the matrix will equal: 4 + 1 + 2 + 3 + 4 = 14.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}