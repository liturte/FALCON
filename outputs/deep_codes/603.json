{"603": {"code": ["r, g, b = map(int, input().split())\nprint(min(r//3, g//3, b//3))\n\n\nExplanation:\n\nWe are asked to find the maximum number of bouquets Fox Ciel can make from the given red, green and blue flowers. The number of bouquets can be found by dividing the number of each type of flower by the number of flowers needed to make one bouquet of that type. \n\nSince we can't make a fraction of a bouquet, we use the floor division operator (//) to get the maximum whole number of bouquets we can make. The result is the minimum number of bouquets from the three", "r, g, b = map(int, input().split())\nprint(min(r//3, g//3, b//3))\n\n\nExplanation:\n\nThis Python program first reads three integers from the input. These represent the number of red, green, and blue flowers respectively.\n\nThe bouquets can be made by taking 3 flowers of each type. Therefore, the number of bouquets that can be made from each type of flower is the integer division of the total number of flowers by 3.\n\nThe `min` function is used to find the minimum of these three values, which gives the maximum number of bouquets that can be made with the given number of flowers. This", "r, g, b = map(int, input().split())\nprint(min(r//3, g//3, b//3))\n\n\nEXPLANATION:\nThe problem asks to find the maximum number of bouquets that can be made by using the given number of red, green and blue flowers. The number of bouquets can be calculated by dividing the number of each color flowers by 3 (as each bouquet needs 3 flowers). The result will be the maximum number of bouquets that can be made. The `min()` function is used to ensure that the number of bouquets is not more than the number of flowers of that color.\n\nThe `map()` function", "r, g, b = map(int, input().split())\nprint(min(r//3, g//3, b//3))\n\n\n\nr, g, b = map(int, input().split())\nprint(min(r//3, g//3, b//3))\n\n\n\nr, g, b = map(int, input().split())\nprint(min(r//3, g//3, b//3))\n\n\n\nr, g, b = map(int, input().split())\nprint(min(r//3, g//3, b//3))\n\n\n\nr,", "r, g, b = map(int, input().split())\nprint(min(r//3, g//3, b//3))\n\n\n\n-----Explanation-----\n\nThe code works by taking the input of the number of red, green, and blue flowers. Then it calculates the maximum number of each type of bouquet that can be made by dividing the number of that color flowers by 3. The min function then returns the smallest of these three values, which is the maximum number of bouquets that can be made with the given number of each color flower.\n\nThis is because for each type of bouquet (red, green, blue, and mixing), it takes 3 of the color"], "prompt": "\nQUESTION:\nFox Ciel has some flowers: r red flowers, g green flowers and b blue flowers. She wants to use these flowers to make several bouquets. There are 4 types of bouquets:\n\n  To make a \"red bouquet\", it needs 3 red flowers.  To make a \"green bouquet\", it needs 3 green flowers.  To make a \"blue bouquet\", it needs 3 blue flowers.  To make a \"mixing bouquet\", it needs 1 red, 1 green and 1 blue flower. \n\nHelp Fox Ciel to find the maximal number of bouquets she can make.\n\n\n-----Input-----\n\nThe first line contains three integers r, g and b (0 \u2264 r, g, b \u2264 10^9) \u2014 the number of red, green and blue flowers.\n\n\n-----Output-----\n\nPrint the maximal number of bouquets Fox Ciel can make.\n\n\n-----Examples-----\nInput\n3 6 9\n\nOutput\n6\n\nInput\n4 4 4\n\nOutput\n4\n\nInput\n0 0 0\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn test case 1, we can make 1 red bouquet, 2 green bouquets and 3 blue bouquets.\n\nIn test case 2, we can make 1 red, 1 green, 1 blue and 1 mixing bouquet.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}