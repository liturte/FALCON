{"3079": {"code": ["def solve(n, s):\n    s = list(s)\n    s.sort(reverse=True)\n    ans = ''\n    while len(s) > 0:\n        if s[-1] >= ans[0]:\n            ans += s.pop()\n        else:\n            ans = s.pop(0) + ans\n    print", "from sys import stdin\nfrom collections import deque\n\ndef get_word(s):\n    n = len(s)\n    dp = [['']*26 for _ in range(n+1)]\n    for i in range(n-1, -1, -1):\n        for j in range(26):\n            dp[i][j] =", "def solve():\n    N = int(input())\n    S = input()\n    letters = [0]*26\n    for c in S:\n        letters[ord(c)-97] += 1\n    left = N\n    word = ''\n    while left > 0:\n        max_letter = -1\n        for i in range(25, -1,", "from collections import deque\n\nN = int(input())\nletters = deque(input())\n\nMirko = deque()\nSlavko = deque()\n\nwhile letters:\n    if len(letters) == 1:\n        Slavko.appendleft(letters.pop())\n        break\n    left = letters.popleft()\n    right", "import heapq\n\nN = int(input())\nletters = list(input())\nletters.sort()\n\nMirko_word = []\nSlavko_word = []\n\nfor i in range(N):\n    if i % 2 == 0:\n        Mirko_word.append(letters.pop())\n    else:\n        Slavko_"], "prompt": "\nQUESTION:\nHaving solved a tedious assignment, Mirko decided to play a game with his good friend Slavko.\n\nThey have written a sequence of $N$ letters on a piece of paper. Each one of them is trying to put together a word using letters from the sequence. They alternate taking turns consisting of removing a single letter from the sequence and appending it to the end of their word. Mirko has the first turn. The game ends when no letters are remaining in the sequence.\n\nWe define a word to be more beautiful than another word if it comes first alphabetically. The player who has the more beautiful word at the end of the game wins. If both players have equal words, they both lose.\n\nMirko is a much better player than Slavko, so he has decided to make it easier for Slavko by always selecting the rightmost remaining letter in the sequence. Knowing this, Slavko wants to find out if it is possible for him to win and which is the most beautiful word he can end the game with.\n\n-----Input-----\nThe first line of input contains an even positive integer $N$ ($2 \\le N \\le 100 000$).\n\nThe second line of input contains $N$ characters, the starting letter sequence. All characters are lower case letters from the English alphabet.\n\n-----Output-----\nThe first line of output must contain \u201cDA\u201d if it is possible for Slavko to win, and \u201cNE\u201d otherwise.\n\nThe second line of output must contain the most beautiful word that Slavko can have at the end of the game.\n\n-----Examples-----\nSample Input 1:\n2\nne\nSample Output 1:\nNE\nn\n\nSample Input 2:\n4\nkava\nSample Output 2:\nDA\nak\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}