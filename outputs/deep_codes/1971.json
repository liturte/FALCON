{"1971": {"code": ["def solve(n, p):\n    q = [0] * (n + 1)\n    used = [False] * (n + 1)\n    for i in range(n - 1, -1, -1):\n        if p[i] > n - i", "def solve(n, p):\n    q = [0] * (n+1)\n    for i in range(1, n+1):\n        q[p[i-1]] = i\n    q.pop(0)\n    return q\n\nn = int", "def solve(n, p):\n    q = [-1] * (n + 1)\n    for i in range(1, n + 1):\n        q[p[p[i]]] = i\n    if q[1:] == p:\n        return q[1", "def solve(n, p):\n    q = [0] * (n + 1)\n    used = [False] * (n + 1)\n    for i in range(1, n + 1):\n        if not used[p[i]]:\n            q[i", "def solve(n, p):\n    q = [0] * (n+1)\n    used = [False] * (n+1)\n    for i in range(1, n+1):\n        if not used[p[i-1]]:\n            used"], "prompt": "\nQUESTION:\nA permutation of length n is an array containing each integer from 1 to n exactly once. For example, q = [4, 5, 1, 2, 3] is a permutation. For the permutation q the square of permutation is the permutation p that p[i] = q[q[i]] for each i = 1... n. For example, the square of q = [4, 5, 1, 2, 3] is p = q^2 = [2, 3, 4, 5, 1].\n\nThis problem is about the inverse operation: given the permutation p you task is to find such permutation q that q^2 = p. If there are several such q find any of them.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^6) \u2014 the number of elements in permutation p.\n\nThe second line contains n distinct integers p_1, p_2, ..., p_{n} (1 \u2264 p_{i} \u2264 n) \u2014 the elements of permutation p.\n\n\n-----Output-----\n\nIf there is no permutation q such that q^2 = p print the number \"-1\".\n\nIf the answer exists print it. The only line should contain n different integers q_{i} (1 \u2264 q_{i} \u2264 n) \u2014 the elements of the permutation q. If there are several solutions print any of them.\n\n\n-----Examples-----\nInput\n4\n2 1 4 3\n\nOutput\n3 4 2 1\n\nInput\n4\n2 1 3 4\n\nOutput\n-1\n\nInput\n5\n2 3 4 5 1\n\nOutput\n4 5 1 2 3\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}