{"3152": {"code": ["from sortedcontainers import SortedList\n\nn = int(input())\na = list(map(int, (input() for _ in range(n))))\ns = SortedList()\n\nres = 0\nfor i in range(n - 1, -1, -1):\n    res += (n - i) * a[i] * (s[0] if s else 1)\n    res %= 10**9\n    s.add(a[i])\n\nprint(res", "from sys import stdin\nread = stdin.readline\n\ndef solve():\n    n = int(read())\n    a = sorted(int(read()) for _ in range(n))\n    res, mod = 0, 10**9\n    for i in range(n):\n        res = (res + (a[i]*a[n-1]*((n-i)%mod)%mod)%mod)%mod\n    print(res)\n\nsolve()", "from sys import stdin, stdout\n\ndef read_int():\n    return int(stdin.readline().strip())\n\ndef read_nums():\n    return list(map(int, stdin.readline().strip().split()))\n\nn = read_int()\nnums = read_nums()\n\nnums.sort()\nres = 0\nmod = 10**9\n\nfor i in range(n):\n    res = (res + ((nums[i] * nums", "def solve():\n    n = int(input())\n    a = [int(input()) for _ in range(n)]\n    a.sort()\n    res = 0\n    for i in range(n):\n        res = (res + ((a[i] * (i + 1) * (n - i)) % 10**9)) % 10**9\n    print(res)\n\nsolve()\n\n\nThe problem is a combination of prefix sum and sorting. The main idea is", "from sortedcontainers import SortedList\n\nn = int(input())\na = [int(input()) for _ in range(n)]\nsl = SortedList()\nres, p = 0, 10**9\nfor i in range(n-1, -1, -1):\n    res = (res + a[i] * p * (len(sl) - sl.bisect_left(a[i]))) % p\n    sl.add(a[i])\nprint(res)"], "prompt": "\nQUESTION:\nMirko got an array of integers for his birthday from his grandmother Norma. As any other kid, he was hoping for some money, but got an array. Luckily, in his town there is a pawn shop that buys up arrays. The cost of an array of integers is $\\min \\cdot \\max \\cdot L$ kunas, where $\\min $ is the minimal integer in the array, $\\max $ is the maximal and $L$ is the array length. Mirko is going to sell a subsequence of consecutive numbers from his array. He calculated the average price of all such subsequences.\n\nIn order to check his result, he wants you to do the same. He will be pleased with only the last $9$ digits of the sum of all prices, so you don\u2019t need to bother with large and real numbers.\n\n-----Input-----\nThe first line of input contains an integer $N$ ($1 \\leq N \\leq 500000$).\n\nEach of the following $N$ lines contains a member of Mirko\u2019s array. The members of the array will be integers from the interval $[1, 10^8 ]$.\n\n-----Output-----\nThe first and only line of output must contain an integer, the last $9$ digits of the required sum from the task. You don\u2019t need to output the leading zeroes of that 9-digit integer.\n\n-----Examples-----\nSample Input 1:\n2\n1\n3\nSample Output 1:\n16\n\nSample Input 2:\n4\n2\n4\n1\n4\nSample Output 2:\n109\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}