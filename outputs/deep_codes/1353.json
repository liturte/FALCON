{"1353": {"code": ["n, m, a, b = map(int, input().split())\n\nif n <= m:\n    print(min(n * a, b))\nelse:\n    print(min((n // m) * b + (n % m) * a, (n // m + 1) * b))\n\n\nExplanation:\nThe solution is to use the special m ride ticket if possible. If not, use one ride tickets. Therefore, we need to calculate how many m ride tickets we can buy and how many one ride tickets we need. We then compare the cost of buying all the m ride tickets and the cost of buying enough one ride tickets to cover the remaining rides. The minimum cost is the result.\n\nThe condition \"if n <= m\" checks if it's cheaper to buy a single m ride ticket or n one ride tickets. The condition \"else\" calculates the cost of buying enough", "n, m, a, b = map(int, input().split())\nif a * n < b:\n    print(a * n)\nelse:\n    print((n // m) * b + (n % m) * a)\n\n\n\n-----Hint-----\n\nThe solution is based on the problem statement.\n\nThe minimum sum in rubles that Ann will need to spend is the minimum of the cost of buying a single ticket n times and the cost of buying m tickets n // m times plus the cost of buying the remaining single tickets n % m times.\n\nThis is done by checking if the cost of buying a single ticket n times is less than the cost of buying m tickets n // m times plus the cost of buying the remaining single tickets n % m times. If it is, then the cost of buying a single ticket n times is the minimum sum, otherwise, the cost of buying m tickets", "def min_money(n, m, a, b):\n    if m*a <= b:\n        return (n//m)*b + (n%m)*a\n    else:\n        return n*a\n\nn, m, a, b = map(int, input().split())\nprint(min_money(n, m, a, b))\n\n\nThis code first checks if it's cheaper to buy an m ride ticket. If it is, it calculates the minimum cost by buying m ride tickets and the remaining one ride tickets. If it's not cheaper to buy an m ride ticket, it calculates the minimum cost by buying one ride tickets.\n\nThe // and % operators are used to calculate the number of m ride tickets and the remaining one ride tickets. The result is then returned.\n\nThe input is read as a single line of space-separated integers, and the", "n, m, a, b = map(int, input().split())\n\nif n <= m:\n    print(min(n*a, b))\nelse:\n    q, r = divmod(n, m)\n    print(q*b + min(r*a, b))\n\n\nEXPLANATION:\nThe solution is written in python. \nFirst, we read the input data. Then we check if the total number of rides is less than or equal to the number of rides covered by the m ride ticket. \nIf true, we print the minimum between the total cost of one ride tickets and the cost of the m ride ticket. \nIf false, we calculate the number of full m ride tickets and the remaining number of one ride tickets. We print the total cost of m ride tickets and the minimum between the total cost of one ride tickets and the cost of the m ride ticket", "n, m, a, b = map(int, input().split())\n\nif n <= m:\n    print(min(n*a, b))\nelse:\n    print(min(n*a, b + ((n-m)//(m))*a + ((n-m)%(m))*a))\n\n\nEXPLANATION:\nThe program first checks if the number of rides (n) is less than or equal to the number of rides covered by the m ride ticket (m). If it is, it means that buying a single m ride ticket would be cheaper than buying individual one ride tickets. Therefore, the minimum cost is either the total cost of individual one ride tickets (n*a) or the cost of the m ride ticket (b).\n\nIf n is greater than m, it means buying a single m ride ticket would be cheaper than buying individual one ride tickets. Therefore"], "prompt": "\nQUESTION:\nAnn has recently started commuting by subway. We know that a one ride subway ticket costs a rubles. Besides, Ann found out that she can buy a special ticket for m rides (she can buy it several times). It costs b rubles. Ann did the math; she will need to use subway n times. Help Ann, tell her what is the minimum sum of money she will have to spend to make n rides?\n\n\n-----Input-----\n\nThe single line contains four space-separated integers n, m, a, b (1 \u2264 n, m, a, b \u2264 1000) \u2014 the number of rides Ann has planned, the number of rides covered by the m ride ticket, the price of a one ride ticket and the price of an m ride ticket. \n\n\n-----Output-----\n\nPrint a single integer \u2014 the minimum sum in rubles that Ann will need to spend.\n\n\n-----Examples-----\nInput\n6 2 1 2\n\nOutput\n6\n\nInput\n5 2 2 3\n\nOutput\n8\n\n\n\n-----Note-----\n\nIn the first sample one of the optimal solutions is: each time buy a one ride ticket. There are other optimal solutions. For example, buy three m ride tickets.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}