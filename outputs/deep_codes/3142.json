{"3142": {"code": ["from collections import deque\n\ndef solve(A, B, S):\n    dp = [0]*20\n    dp[1] = 1\n    for i in range(2, 20):\n        dp[i] = dp[i-1]*10 + pow(10, i-1)\n\n    def calc(x):\n        res, y = 0, 0\n        while x:\n            res += dp[len(str(x))]*x + (x%10)*pow(10, len(str(x))-1)\n            x //= 10\n        return res\n\n    def bfs(A, B, S):\n        q = deque([(1, 19)])\n        res, ans = 0, float('inf')\n        while q:\n            a, b = q.popleft()\n            if a > B or b > B:\n                continue\n            if a >= A and b >= S and b", "import sys\n\ndef main():\n    a, b, s = map(int, sys.stdin.readline().split())\n    min_num = ['9'] * 135\n    min_num[1] = '1'\n    min_num[2] = '2'\n    min_num[3] = '3'\n    min_num[4] = '4'\n    min_num[5] = '5'\n    min_num[6] = '6'\n    min_num[7] = '7'\n    min_num[8] = '8'\n    min_num[134] = '1'\n\n    for i in range(135):\n        for j in range(i, 135):\n            min_num[j] = min(min_num[j], min_num[j-i] + min_num[i])\n\n    min_num[0] = '0'\n    min_num = [int", "def solve(A, B, S):\n    dp = [[0] * (S + 1) for _ in range(19)]\n    dp[0][0] = 1\n    for i in range(1, 19):\n        for j in range(S + 1):\n            dp[i][j] = dp[i - 1][j] * 10\n            if j - i >= 0:\n                dp[i][j] += dp[i - 1][j - i] * 10\n    ans, res = 0, 18\n    while res >= 0 and S - res >= 0:\n        if A <= dp[res][S - res] <= B:\n            ans += 1\n            if ans == 1:\n                smallest = dp[res][S - res]\n        S -= res\n        res -= 1\n    print(ans)\n    if ans > 0:\n        print(smallest)\n\nA, B", "def count_and_min(A, B, S):\n    dp = [[0]*136 for _ in range(12)]\n    dp[0][0] = 1\n    for i in range(1, 12):\n        for j in range(i*9+1):\n            for k in range(10):\n                if j >= k:\n                    dp[i][j] += dp[i-1][j-k]\n    cnt = 0\n    mn = 1e18\n    for i in range(A, B+1):\n        s = sum(map(int, str(i)))\n        if s == S:\n            cnt += 1\n            mn = min(mn, i)\n    return cnt, mn\n\nA, B, S = map(int, input().split())\ncnt, mn = count_and_min(A, B, S)\nprint(cnt)\nprint(mn if mn !=", "def solve(A, B, S):\n    def f(x):\n        res, m = 0, 1\n        while x:\n            res += m * (x % 10)\n            x //= 10\n            m *= 10\n        return res\n    dp = [[0] * 2 for _ in range(11)]\n    dp[0][0] = 1\n    for i in range(1, 11):\n        dp[i][0] = dp[i - 1][0] * 10 + dp[i - 1][1] * 9\n        dp[i][1] = dp[i - 1][1] * 10\n    res1, res2, res3 = 0, 0, 0\n    for i in range(11):\n        if S >= i * 45:\n            res1 += dp[i][0] + dp[i][1]\n        if S >= ("], "prompt": "\nQUESTION:\nBo\u017eo is a strange little boy. Every day he tires his friends with strange questions. Today\u2019s question is: how many integers in the interval $[A, B]$ are there such that the sum of their digits is $S$, and which is the smallest such number?\n\nWrite a program that answers Bo\u017eo\u2019s question so that he can get some sleep.\n\n-----Input-----\nThe input contains three integers $A$, $B$ and $S$ ($1 \\le A \\le B < 10^{15}$, $1 \\le S \\le 135$).\n\n-----Output-----\nThe first line should contain the number of integers in the interval with the digit sum equal to $S$.\n\nThe second line should contain the smallest such integer.\n\nThe input data will guarantee that the first number is at least $1$.\n\n-----Examples-----\nSample Input 1:\n1 9 5\nSample Output 1:\n1\n5\n\nSample Input 2:\n1 100 10\nSample Output 2:\n9\n19\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}