{"2992": {"code": ["from scipy.sparse.csgraph import minimum_spanning_tree\nfrom scipy.sparse import csr_matrix\n\ndef solve():\n    n, m = map(int, input().split())\n    edges = []\n    for _ in range(m):\n        u, v, w", "import heapq\n\ndef solve(n, m, roads):\n    graph = [[] for _ in range(n)]\n    for u, v, w in roads:\n        graph[u].append((v, w))\n        graph[v].append((u, w))\n\n    def dijkstra(", "import heapq\n\ndef min_range(n, m, roads):\n    graph = [[] for _ in range(n)]\n    for u, v, w in roads:\n        graph[u].append((v, w))\n        graph[v].append((u, w))\n\n    min_dist", "import heapq\n\ndef min_range(n, m, edges):\n    graph = [[] for _ in range(n)]\n    for u, v, w in edges:\n        graph[u].append((v, w))\n        graph[v].append((u, w))\n\n    min_dist", "import heapq\n\ndef read_input():\n    n, m = map(int, input().split())\n    graph = [[] for _ in range(n)]\n    for _ in range(m):\n        a, b, c = map(int, input().split())\n        graph[a].append(("], "prompt": "\nQUESTION:\nThese days, many carmakers are developing cars that run on electricity instead of gasoline. The batteries used in these cars are generally very heavy and expensive, so designers must make an important tradeoffs when determining the battery capacity, and therefore the range, of these vehicles. Your task is to help determine the minimum range necessary so that it is possible for the car to travel between any two cities on the continent.\n\nThe road network on the continent consists of cities connected by bidirectional roads of different lengths. Each city contains a charging station. Along a route between two cities, the car may pass through any number of cities, but the distance between each pair of consecutive cities along the route must be no longer than the range of the car. What is the minimum range of the car so that there is a route satisfying this constraint between every pair of cities on the continent?\n\n-----Input-----\nThe first line of the input contains two nonnegative integers $n$ and $m$, the number of cities and roads. Each of these integers is no larger than one million. The cities are numbered from 0 to $n-1$. The first line is followed by $m$ more lines, each describing a road. Each such line contains three non-negative integers. The first two integers are the numbers of the two cities connected by the road. The third integer is the length of the road, a positive integer no larger than $10^9$.\n\n-----Output-----\nFor each road network, output a line containing one integer, the minimum range of the car that enables it to drive from every city to every other city. If it is not possible to drive from some city to some other city regardless of the range of the car, instead output a line containing the word IMPOSSIBLE.\n\n-----Examples-----\nSample Input:\n3 3\n0 1 3\n1 2 4\n2 1 5\nSample Output:\n4\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}