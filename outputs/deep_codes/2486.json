{"2486": {"code": ["def solve(n, k, a):\n    dp = [0]", "from itertools import chain, combinations\n\ndef powerset(iterable):", "from sys import stdin\n\ndef solve():\n    n, k = map", "def solve(n, k, a):\n    dp = [0]", "def solve(n, k, a):\n    dp = [0]"], "prompt": "\nQUESTION:\nAtCoDeer the deer has N cards with positive integers written on them. The number on the i-th card (1\u2264i\u2264N) is a_i.\nBecause he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is K or greater.\nThen, for each card i, he judges whether it is unnecessary or not, as follows:\n - If, for any good subset of the cards containing card i, the set that can be obtained by eliminating card i from the subset is also good, card i is unnecessary.\n - Otherwise, card i is NOT unnecessary.\nFind the number of the unnecessary cards. Here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary.\n\n-----Constraints-----\n - All input values are integers.\n - 1\u2264N\u22645000\n - 1\u2264K\u22645000\n - 1\u2264a_i\u226410^9 (1\u2264i\u2264N)\n\n-----Partial Score-----\n - 300 points will be awarded for passing the test set satisfying N,K\u2264400.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN K\na_1 a_2 ... a_N\n\n-----Output-----\nPrint the number of the unnecessary cards.\n\n-----Sample Input-----\n3 6\n1 4 3\n\n-----Sample Output-----\n1\n\nThere are two good sets: {2,3} and {1,2,3}.\nCard 1 is only contained in {1,2,3}, and this set without card 1, {2,3}, is also good. Thus, card 1 is unnecessary.\nFor card 2, a good set {2,3} without card 2, {3}, is not good. Thus, card 2 is NOT unnecessary.\nNeither is card 3 for a similar reason, hence the answer is 1.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}