{"751": {"code": ["n, m = map(int, input().split())\ngroups = list(map(int, input().split()))\n\ntotal = sum(groups)\nbus_capacity = m * 2\nbuses_needed = total // bus_capacity\n\nif total % bus_capacity != 0:\n    buses_needed += 1\n\nprint(buses_needed)\n\n\nThis solution works by first calculating the total number of people that need to be transported. It then calculates the capacity of the buses", "import math\n\nn, m = map(int, input().split())\ngroups = list(map(int, input().split()))\n\ntotal_people = sum(groups)\ntotal_buses = math.ceil(total_people / m)\n\nprint(total_buses)\n\nThis solution works by first summing up the total number of people in the groups, then dividing that total by the maximum capacity of the buses to get the total number of buses needed. The math.ceil function is used to round up to the nearest", "n, m = map(int, input().split())\ngroups = list(map(int, input().split()))\n\ntotal = sum(groups)\n\nbuses = total // m\nif total % m != 0:\n    buses += 1\n\nprint(buses)\n\n\nThis code works by first reading in the number of groups and the maximum capacity of each bus, as well as the sizes of the groups. It then calculates the total number of people needing to be transported by summing up the sizes of all groups. Finally", "n, m = map(int, input().split())\na = list(map(int, input().split()))\n\ntotal = sum(a)\nbus_count = total // m\nif total % m != 0:\n    bus_count += 1\n\nprint(bus_count)\n\n\nThis code reads the number of groups and the maximum capacity of the bus from the first line. It then reads the number of people in each group from the second line. The total number of people is calculated by summing up the numbers in the list.", "n, m = map(int, input().split())\na = list(map(int, input().split()))\n\ntotal = sum(a)\nbus_count = total // m\nif total % m != 0:\n    bus_count += 1\n\nprint(bus_count)\n\nThis code reads the number of groups and the capacity of the bus, then reads the number of people in each group. It calculates the total number of people by summing the group sizes, then divides this by the bus capacity to get the number of"], "prompt": "\nQUESTION:\nIt's that time of the year when the Russians flood their countryside summer cottages (dachas) and the bus stop has a lot of people. People rarely go to the dacha on their own, it's usually a group, so the people stand in queue by groups.\n\nThe bus stop queue has n groups of people. The i-th group from the beginning has a_{i} people. Every 30 minutes an empty bus arrives at the bus stop, it can carry at most m people. Naturally, the people from the first group enter the bus first. Then go the people from the second group and so on. Note that the order of groups in the queue never changes. Moreover, if some group cannot fit all of its members into the current bus, it waits for the next bus together with other groups standing after it in the queue.\n\nYour task is to determine how many buses is needed to transport all n groups to the dacha countryside.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 100). The next line contains n integers: a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 m).\n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of buses that is needed to transport all n groups to the dacha countryside.\n\n\n-----Examples-----\nInput\n4 3\n2 3 2 1\n\nOutput\n3\n\nInput\n3 4\n1 2 1\n\nOutput\n1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}