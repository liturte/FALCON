{"4973": {"code": ["from", "from", "from", "from", "from"], "prompt": "\nQUESTION:\nYou are given a two dimensional chess board of size $N \\times N$ ($1$-based indexing). Some of the cells on this board are \u2018.\u2019 denoting an empty cell. Some of the cells on this board are \u2018#\u2019 denoting a blocked cell, which you are not allowed to visit. Exactly one of the cells on this board is \u2018K\u2019 denoting the initial position of the knight.\n\nA knight at position $(r, c)$ can move to any of the valid positions in set $S$ = $\\{ (r + 2, c + 1)$, $(r + 2, c - 1)$, $(r - 2, c + 1)$, $(r - 2, c - 1)$, $(r + 1, c + 2)$, $(r + 1, c - 2)$, $(r - 1, c + 2)$, $(r - 1, c - 2)\\} $. Here valid position means that the resulting $(r\u2019, c\u2019)$ should be within the bounds of the chess grid, i.e. $1 \\leq r\u2019 \\leq N$ and $1 \\leq c\u2019 \\leq N$.\n\nThe question is you have to determine the minimum number of steps required for the Knight to reach cell $(1, 1)$ avoiding cells with \u2018#\u2019 in the path.\n\nNote - There will be exactly one \u2018K\u2019 in the grid and cell $(1, 1)$ will NOT be a \u2018#\u2019.\n\n-----Input-----\nThe first line contains an integer $N$ ($1 \\le N \\le 10^2$) denoting the dimension of the chess board. Each of the next $N$ lines contains a string denoting the $i^{th}$ row. The length of these strings will be $N$.\n\n-----Output-----\nPrint the value of minimum number of steps. However, if $(1, 1)$ is not reachable, print \u2018-$1$\u2019 (without the quotes).\n\n-----Examples-----\nSample Input:\n4\n....\n....\n....\n...K\nSample Output:\n2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}