{"454": {"code": ["MOD = 10**9 + 7\nN = 51\nK = 2501\n\nfact = [0]*N\nfact_inv = [0]*N\ninv = [0]*N\ndp = [[0]*K for _ in range(N)]\n\nfact[0] = fact_inv[0] = inv[1] = dp[0][0] = 1\nfor i in range(1, N):\n    fact[i] = fact[i-1] * i % MOD\n    inv[i] = MOD - MOD // i * inv[MOD % i] % MOD\n    fact_inv[i] = fact_inv[i-1] * inv[i] % MOD\n\nfor i in range(1, N):\n    dp[i][0] = 1\n    for j in range(1, K):\n        dp[i][j] = (dp[i-1][j] + dp[i][j-1])", "MOD = 10**9+7\nMAX_N = 50\nMAX_K = MAX_N*MAX_N\n\nfact = [0]*(MAX_N+1)\ninv = [0]*(MAX_N+1)\ndp = [[0]*(MAX_K+1) for _ in range(MAX_N+1)]\n\nfact[0] = fact[1] = inv[0] = inv[1] = 1\nfor i in range(2, MAX_N+1):\n    fact[i] = (fact[i-1]*i)%MOD\n    inv[i] = (MOD - MOD//i)*inv[MOD%i]%MOD\n    fact[i] = (fact[i-1]*i)%MOD\nfor i in range(2, MAX_N+1):\n    inv[i] = (MOD - MOD//i)*inv[MOD%i]%MOD\nfor i in range(2, MAX_N+1):", "MOD = 10**9+7\nMAXN = 55\n\nnCr = [[0]*MAXN for _ in range(MAXN)]\nf = [0]*MAXN\ninv = [0]*MAXN\n\ndef init():\n    nCr[0][0] = 1\n    for i in range(1, MAXN):\n        nCr[i][0] = 1\n        for j in range(1, i+1):\n            nCr[i][j] = (nCr[i-1][j-1] + nCr[i-1][j]) % MOD\n\n    f[0] = inv[0] = 1\n    for i in range(1, MAXN):\n        f[i] = f[i-1]*i % MOD\n        inv[i] = inv[i-1]*pow(i, MOD-2, MOD)\n\ndef solve(n, k):\n    if k > n*n or k%2", "MOD = 10**9+7\nn, k = map(int, input().split())\ndp = [[0]*(n+1) for _ in range(n+1)]\ndp[0][0] = 1\nfor i in range(1, n+1):\n    for j in range(i+1):\n        dp[i][j] = (dp[i-1][j] + dp[i-1][j-1] if j else dp[i-1][j]) % MOD\nfact = [1]*(n+1)\nfor i in range(1, n+1):\n    fact[i] = fact[i-1]*i % MOD\ninv = [1]*(n+1)\ninv[n] = pow(fact[n], MOD-2, MOD)\nfor i in range(n-1, -1, -1):\n    inv[i] = inv[i+1]*(i+1) % MOD", "MOD = 10**9+7\n\ndef solve(n, k):\n    fact = [0]*(2*n+1)\n    factinv = [0]*(2*n+1)\n    fact[0] = factinv[0] = 1\n    for i in range(1, 2*n+1):\n        fact[i] = (fact[i-1]*i)%MOD\n        factinv[i] = factinv[i-1]*pow(i, MOD-2, MOD)\n    comb = lambda n, k: 0 if n < k else fact[n]*factinv[k]*factinv[n-k]%MOD\n    dp = [[0]*(n+1) for _ in range(n+1)]\n    dp[0][0] = 1\n    for i in range(1, n+1):\n        dp[i][0] = dp[i-1][0]\n        for j"], "prompt": "\nQUESTION:\nLet us define the oddness of a permutation p = {p_1,\\ p_2,\\ ...,\\ p_n} of {1,\\ 2,\\ ...,\\ n} as \\sum_{i = 1}^n |i - p_i|.\nFind the number of permutations of {1,\\ 2,\\ ...,\\ n} of oddness k, modulo 10^9+7.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq n \\leq 50\n - 0 \\leq k \\leq n^2\n\n-----Input-----\nInput is given from Standard Input in the following format:\nn k\n\n-----Output-----\nPrint the number of permutations of {1,\\ 2,\\ ...,\\ n} of oddness k, modulo 10^9+7.\n\n-----Sample Input-----\n3 2\n\n-----Sample Output-----\n2\n\nThere are six permutations of {1,\\ 2,\\ 3}. Among them, two have oddness of 2:  {2,\\ 1,\\ 3} and {1,\\ 3,\\ 2}.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}