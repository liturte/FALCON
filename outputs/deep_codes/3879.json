{"3879": {"code": ["n = int(input())\na = list(map(int, input().split()))\nprint('Yes' if max(a) >= sum(a) - max(a) else 'No')\n\n\nEXPLANATION:\nThe solution works by comparing the maximum bid (the largest bid) with the sum of all bids minus the maximum bid. If the maximum bid is greater than or equal to the sum of all bids minus the maximum bid, then it is possible to make all bids equal by doubling and/or tripling the maximum bid. If the maximum bid is less than the sum", "n = int(input())\nbids = list(map(int, input().split()))\nprint(\"Yes\" if max(bids) >= sum(bids) - max(bids) else \"No\")\n\n\nExplanation:\nThe maximum bid is the largest bid, and the sum of all bids minus the maximum bid is the sum of all bids after all other players have doubled their bid at least once. If the maximum bid is greater than or equal to this sum, it means that Limak and his friends can make all bids equal by doubling their bid at least once", "n = int(input())\nbids = list(map(int, input().split()))\n\n# Calculate the gcd of all bids\ngcd = bids[0]\nfor i in range(1, n):\n    while bids[i] % gcd != 0:\n        gcd = bids[i] % gcd\n\n# If gcd is not 1, then it is possible to make all bids equal\nif gcd != 1:\n    print('Yes')\nelse:\n    print('No')\n\nThis code works by", "n = int(input())\nbids = list(map(int, input().split()))\nprint(\"Yes\" if max(bids) >= sum(bids) - max(bids) else \"No\")\n\n\nThis Python program first reads the number of players and their bids. Then it checks if the maximum bid is greater than or equal to the sum of all bids minus the maximum bid. If this is true, it means that Limak and his friends can make all bids equal by doubling and tripling their bids. If this is false, it means that they cannot make all", "def solve():\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    a.sort()\n    for i in range(n-1):\n        if a[i] == a[i+1]:\n            return \"Yes\"\n        elif a[i] < a[i+1] and a[i+1] % a[i] != 0:\n            return \"No\"\n    return \"No\"\n\nprint(solve())\n\nThe problem is about sorting and checking the condition of double"], "prompt": "\nQUESTION:\nLimak is an old brown bear. He often plays poker with his friends. Today they went to a casino. There are n players (including Limak himself) and right now all of them have bids on the table. i-th of them has bid with size a_{i} dollars.\n\nEach player can double his bid any number of times and triple his bid any number of times. The casino has a great jackpot for making all bids equal. Is it possible that Limak and his friends will win a jackpot?\n\n\n-----Input-----\n\nFirst line of input contains an integer n (2 \u2264 n \u2264 10^5), the number of players.\n\nThe second line contains n integer numbers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^9) \u2014 the bids of players.\n\n\n-----Output-----\n\nPrint \"Yes\" (without the quotes) if players can make their bids become equal, or \"No\" otherwise.\n\n\n-----Examples-----\nInput\n4\n75 150 75 50\n\nOutput\nYes\n\nInput\n3\n100 150 250\n\nOutput\nNo\n\n\n\n-----Note-----\n\nIn the first sample test first and third players should double their bids twice, second player should double his bid once and fourth player should both double and triple his bid.\n\nIt can be shown that in the second sample test there is no way to make all bids equal.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}