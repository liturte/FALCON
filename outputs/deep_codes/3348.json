{"3348": {"code": ["import sys\n\ndef solve():\n    R, C = map(int, input().split())\n    A, B, C = map(", "from collections import Counter\n\ndef solve():\n    R, C = map(int, input().split())\n    a, b, c", "import sys\nread = sys.stdin.readline\n\nR, C = map(int, read().split())\na, b,", "def bonbons(R, C, a, b, c):\n    if a > R * C or b > R * C or c", "def bonbons(R, C, a, b, c):\n    if R * C != a + b + c:"], "prompt": "\nQUESTION:\nYlva loves bonbons, probably more than anything else on this planet. She loves them so much that she made a large plate of $R \\cdot C$ bonbons for her fikaraster1.\n\nYlva has a large wooden tray which can fit $R$ rows of $C$ bonbons per row, that she will put the bonbons on. Her bonbons have three different fillings: Nutella Buttercream, Red Wine Chocolate Ganache, and Strawberry Whipped Cream. Since Ylva is a master chocolatier, she knows that presentation is $90\\% $ of the execution. In particular, it looks very bad if two bonbons of the same color are adjacent to each other within a row or a column on the tray. We call an arrangement of bonbons where this is never the case a good arrangement.\n\nGiven the number of bonbons of each flavour, and the size of Ylva\u2019s tray, can you help her find a good arrangement of the bonbons, or determine that no such arrangement exists?\n\n-----Input-----\nThe first line of input contains the two space-separated integers $2 \\le R, C \\le 1000$. The next line contains three non-negative space-separated integers $a, b, c$ \u2013 the number of bonbons of the three flavours which Ylva has baked. It is guaranteed that $a + b + c = R \\cdot C$. Both $R$ and $C$ will be even.\n\n-----Output-----\nIf no good arrangement can be found, output impossible. Otherwise, output $R$ lines, each containing $C$ characters, representing a good arrangement. Each row should contain only characters A, B, C, depending on which flavour should be placed on a certain position. The number of A bonbons placed must be equal to $A$, and so on.\n\n-----Examples-----\nSample Input:\n4 4\n10 3 3\nSample Output:\nimpossible\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}