{"4452": {"code": ["def solve(n):\n    if n == 1:\n        return [", "def solve(n):\n    if n <= 9:\n        return [", "def solve():\n    t = int(input())\n    for _ in", "def round_numbers(n):\n    if n < 10:", "def solve():\n    t = int(input())\n    for _ in"], "prompt": "\nQUESTION:\nA positive (strictly greater than zero) integer is called round if it is of the form d00...0. In other words, a positive integer is round if all its digits except the leftmost (most significant) are equal to zero. In particular, all numbers from $1$ to $9$ (inclusive) are round.\n\nFor example, the following numbers are round: $4000$, $1$, $9$, $800$, $90$. The following numbers are not round: $110$, $707$, $222$, $1001$.\n\nYou are given a positive integer $n$ ($1 \\le n \\le 10^4$). Represent the number $n$ as a sum of round numbers using the minimum number of summands (addends). In other words, you need to represent the given number $n$ as a sum of the least number of terms, each of which is a round number.\n\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases in the input. Then $t$ test cases follow.\n\nEach test case is a line containing an integer $n$ ($1 \\le n \\le 10^4$).\n\n\n-----Output-----\n\nPrint $t$ answers to the test cases. Each answer must begin with an integer $k$ \u2014 the minimum number of summands. Next, $k$ terms must follow, each of which is a round number, and their sum is $n$. The terms can be printed in any order. If there are several answers, print any of them.\n\n\n-----Example-----\nInput\n5\n5009\n7\n9876\n10000\n10\n\nOutput\n2\n5000 9\n1\n7 \n4\n800 70 6 9000 \n1\n10000 \n1\n10\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}