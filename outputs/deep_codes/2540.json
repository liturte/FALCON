{"2540": {"code": ["from collections import Counter\nfrom sys", "from collections import Counter\n\ndef", "from collections import Counter\nfrom sys", "from collections import Counter, defaultdict", "from collections import Counter\nfrom collections"], "prompt": "\nQUESTION:\nYou are given a rooted tree with root in vertex 1. Each vertex is coloured in some colour.\n\nLet's call colour c dominating in the subtree of vertex v if there are no other colours that appear in the subtree of vertex v more times than colour c. So it's possible that two or more colours will be dominating in the subtree of some vertex.\n\nThe subtree of vertex v is the vertex v and all other vertices that contains vertex v in each path to the root.\n\nFor each vertex v find the sum of all dominating colours in the subtree of vertex v.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^5) \u2014 the number of vertices in the tree.\n\nThe second line contains n integers c_{i} (1 \u2264 c_{i} \u2264 n), c_{i} \u2014 the colour of the i-th vertex.\n\nEach of the next n - 1 lines contains two integers x_{j}, y_{j} (1 \u2264 x_{j}, y_{j} \u2264 n) \u2014 the edge of the tree. The first vertex is the root of the tree.\n\n\n-----Output-----\n\nPrint n integers \u2014 the sums of dominating colours for each vertex.\n\n\n-----Examples-----\nInput\n4\n1 2 3 4\n1 2\n2 3\n2 4\n\nOutput\n10 9 3 4\n\nInput\n15\n1 2 3 1 2 3 3 1 1 3 2 2 1 2 3\n1 2\n1 3\n1 4\n1 14\n1 15\n2 5\n2 6\n2 7\n3 8\n3 9\n3 10\n4 11\n4 12\n4 13\n\nOutput\n6 5 4 3 2 3 3 1 1 3 2 2 1 2 3\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}