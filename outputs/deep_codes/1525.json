{"1525": {"code": ["MOD = 1000000007\nH, W, K = map(int, input().split())\ndp = [[[0]*W for _ in range(H+1)] for _ in range(H+1)]\ndp[0][0][0] = 1\nfor h in range(H+1):\n    for k", "MOD = 10**9 + 7\nfact = [1]\nfor i in range(1, 101):\n    fact.append(fact[-1] * i % MOD)\ninvfact = [1]\nfor i in range(1, 101):\n    invfact.append(invfact[-1] * pow(i", "MOD = 10**9 + 7\nH, W, K = map(int, input().split())\ndp = [[0]*(W+2) for _ in range(H+1)]\ndp[0][1] = 1\nfor i in range(H):\n    for j in range(1, W+1):\n        dp[i", "MOD = 10**9+7\nH,W,K = map(int,input().split())\ndp = [[0]*(W+2) for _ in range(H+1)]\ndp[0][1] = 1\nfor i in range(H):\n    for j in range(1,W+1):\n        dp[i", "MOD = 10**9 + 7\nH, W, K = map(int, input().split())\ndp = [[0]*(W+2) for _ in range(H+1)]\ndp[0][1] = 1\nfor h in range(H):\n    for w in range(1, W+1):\n        dp[h"], "prompt": "\nQUESTION:\nAmidakuji is a traditional method of lottery in Japan.\nTo make an amidakuji, we first draw W parallel vertical lines, and then draw horizontal lines that connect them. The length of each vertical line is H+1 [cm], and the endpoints of the horizontal lines must be at 1, 2, 3, ..., or H [cm] from the top of a vertical line.\nA valid amidakuji is an amidakuji that satisfies the following conditions:\n - No two horizontal lines share an endpoint.\n - The two endpoints of each horizontal lines must be at the same height.\n - A horizontal line must connect adjacent vertical lines.\n\nFind the number of the valid amidakuji that satisfy the following condition, modulo 1\\ 000\\ 000\\ 007: if we trace the path from the top of the leftmost vertical line to the bottom, always following horizontal lines when we encounter them, we reach the bottom of the K-th vertical line from the left.\nFor example, in the following amidakuji, we will reach the bottom of the fourth vertical line from the left.\n\n-----Constraints-----\n - H is an integer between 1 and 100 (inclusive).\n - W is an integer between 1 and 8 (inclusive).\n - K is an integer between 1 and W (inclusive).\n\n-----Input-----\nInput is given from Standard Input in the following format:\nH W K\n\n-----Output-----\nPrint the number of the amidakuji that satisfy the condition, modulo 1\\ 000\\ 000\\ 007.\n\n-----Sample Input-----\n1 3 2\n\n-----Sample Output-----\n1\n\nOnly the following one amidakuji satisfies the condition:\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}