{"1471": {"code": ["from collections import deque, defaultdict\nimport sys\n\nN = int(sys.stdin.readline().strip())\ngraph = defaultdict(list)\ndist = [0] * (N + 1)\ncolor = [0] * (N + 1)\n\nfor _ in range(N - 1):\n    u, v, w = map(int, sys.stdin.readline().split())\n    graph[u].append((v, w))\n    graph[v].append((u, w))\n\nq = de", "from collections import defaultdict, deque\n\ndef solve():\n    N = int(input())\n    graph = defaultdict(list)\n    colors = [0] * (N + 1)\n    parent = [0] * (N + 1)\n    depth = [0] * (N + 1)\n    queue = deque([1])\n    parent[1] = -1\n\n    for _ in range(N - 1):\n        u, v, w = map(int, input().split())\n        graph[u].", "from collections import defaultdict\n\ndef solve(n, edges):\n    graph = defaultdict(list)\n    for u, v, w in edges:\n        graph[u].append((v, w))\n        graph[v].append((u, w))\n    color = [-1] * (n + 1)\n    color[1] = 0\n    stack = [1]\n    while stack:\n        node = stack.pop()\n        for neighbor, w in graph[node]:\n            if color[neighbor] == -1:", "import sys\nfrom collections import defaultdict\nsys.setrecursionlimit(100000)\n\ndef dfs(v, c=0):\n    color[v] = c\n    for u in g[v]:\n        if color[u[0]] == -1:\n            dfs(u[0], 1-c)\n\nN = int(input())\ng = defaultdict(list)\ncolor = [-1]*(N+1)\n\nfor _ in range(N-1):\n    u,", "import sys\nfrom collections import defaultdict\nsys.setrecursionlimit(10**6)\n\ndef dfs(v, c=0):\n    color[v] = c\n    for u in g[v]:\n        if color[u[0]] == -1:\n            dfs(u[0], 1-c)\n\nN = int(input())\ng = defaultdict(list)\ncolor = [-1]*(N+1)\n\nfor _ in range(N-1):\n    u, v,"], "prompt": "\nQUESTION:\nWe have a tree with N vertices numbered 1 to N.\nThe i-th edge in the tree connects Vertex u_i and Vertex v_i, and its length is w_i.\nYour objective is to paint each vertex in the tree white or black (it is fine to paint all vertices the same color) so that the following condition is satisfied:\n - For any two vertices painted in the same color, the distance between them is an even number.\nFind a coloring of the vertices that satisfies the condition and print it. It can be proved that at least one such coloring exists under the constraints of this problem.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq N \\leq 10^5\n - 1 \\leq u_i < v_i \\leq N\n - 1 \\leq w_i \\leq 10^9\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nu_1 v_1 w_1\nu_2 v_2 w_2\n.\n.\n.\nu_{N - 1} v_{N - 1} w_{N - 1}\n\n-----Output-----\nPrint a coloring of the vertices that satisfies the condition, in N lines.\nThe i-th line should contain 0 if Vertex i is painted white and 1 if it is painted black.\nIf there are multiple colorings that satisfy the condition, any of them will be accepted.\n\n-----Sample Input-----\n3\n1 2 2\n2 3 1\n\n-----Sample Output-----\n0\n0\n1\n\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}