{"1983": {"code": ["from bisect import bisect_left, bisect_right\n\ndef LongestIncreasingSubsequence(arr):", "from bisect import bisect_left\n\ndef LIS(arr):\n    tail = [0] * len(", "from bisect import bisect_left\n\ndef LIS(a):\n    d = []\n    for i in", "def longest_increasing_subsequence(arr):\n    n = len(arr)\n    lis = [1", "from bisect import bisect_left\n\ndef LIS(seq):\n    seq = [0] + se"], "prompt": "\nQUESTION:\nEhab has an array $a$ of length $n$. He has just enough free time to make a new array consisting of $n$ copies of the old array, written back-to-back. What will be the length of the new array's longest increasing subsequence?\n\nA sequence $a$ is a subsequence of an array $b$ if $a$ can be obtained from $b$ by deletion of several (possibly, zero or all) elements. The longest increasing subsequence of an array is the longest subsequence such that its elements are ordered in strictly increasing order.\n\n\n-----Input-----\n\nThe first line contains an integer $t$\u00a0\u2014 the number of test cases you need to solve. The description of the test cases follows.\n\nThe first line of each test case contains an integer $n$ ($1 \\le n \\le 10^5$)\u00a0\u2014 the number of elements in the array $a$.\n\nThe second line contains $n$ space-separated integers $a_1$, $a_2$, $\\ldots$, $a_{n}$ ($1 \\le a_i \\le 10^9$)\u00a0\u2014 the elements of the array $a$.\n\nThe sum of $n$ across the test cases doesn't exceed $10^5$.\n\n\n-----Output-----\n\nFor each testcase, output the length of the longest increasing subsequence of $a$ if you concatenate it to itself $n$ times.\n\n\n-----Example-----\nInput\n2\n3\n3 2 1\n6\n3 1 4 1 5 9\n\nOutput\n3\n5\n\n\n\n-----Note-----\n\nIn the first sample, the new array is $[3,2,\\textbf{1},3,\\textbf{2},1,\\textbf{3},2,1]$. The longest increasing subsequence is marked in bold.\n\nIn the second sample, the longest increasing subsequence will be $[1,3,4,5,9]$.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}