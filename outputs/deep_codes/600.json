{"600": {"code": ["def", "def", "def", "a", "a"], "prompt": "\nQUESTION:\nTwo friends are on the coordinate axis Ox in points with integer coordinates. One of them is in the point x_1 = a, another one is in the point x_2 = b. \n\nEach of the friends can move by one along the line in any direction unlimited number of times. When a friend moves, the tiredness of a friend changes according to the following rules: the first move increases the tiredness by 1, the second move increases the tiredness by 2, the third\u00a0\u2014 by 3 and so on. For example, if a friend moves first to the left, then to the right (returning to the same point), and then again to the left his tiredness becomes equal to 1 + 2 + 3 = 6.\n\nThe friends want to meet in a integer point. Determine the minimum total tiredness they should gain, if they meet in the same point.\n\n\n-----Input-----\n\nThe first line contains a single integer a (1 \u2264 a \u2264 1000) \u2014 the initial position of the first friend. \n\nThe second line contains a single integer b (1 \u2264 b \u2264 1000) \u2014 the initial position of the second friend.\n\nIt is guaranteed that a \u2260 b.\n\n\n-----Output-----\n\nPrint the minimum possible total tiredness if the friends meet in the same point.\n\n\n-----Examples-----\nInput\n3\n4\n\nOutput\n1\n\nInput\n101\n99\n\nOutput\n2\n\nInput\n5\n10\n\nOutput\n9\n\n\n\n-----Note-----\n\nIn the first example the first friend should move by one to the right (then the meeting happens at point 4), or the second friend should move by one to the left (then the meeting happens at point 3). In both cases, the total tiredness becomes 1.\n\nIn the second example the first friend should move by one to the left, and the second friend should move by one to the right. Then they meet in the point 100, and the total tiredness becomes 1 + 1 = 2.\n\nIn the third example one of the optimal ways is the following. The first friend should move three times to the right, and the second friend \u2014 two times to the left. Thus the friends meet in the point 8, and the total tiredness becomes 1 + 2 + 3 + 1 + 2 = 9.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}