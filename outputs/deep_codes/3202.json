{"3202": {"code": ["def min_marbles_to_insert(n, k, colors):\n    # Initialize the result\n    result = n\n    # Loop through all colors from 1 to 100\n    for color in range(1, 101):\n        # Initialize the count of consecutive marbles of the same color\n        count = 0\n        # Loop through all marbles\n        for i in range(n):\n            # If the marble is of the same color, increment", "def min_marbles(N, K, colors):\n    count = 0\n    i = 0\n    while i < N:\n        j = i\n        while j < N and colors[j] == colors[i]:\n            j += 1\n        count += max(0, j - i - K + 1)\n        i = j\n    return count\n\nN, K = map(int, input().split())\ncolors = list(map(int, input().split()))", "n, k = map(int, input().split())\ncolors = list(map(int, input().split()))\n\ndp = [[0] * 101 for _ in range(101)]\nprefix = [0] * (n + 1)\n\nfor i in range(1, n + 1):\n    prefix[i] = prefix[i - 1]\n    for j in range(1, 101):\n        if i >= j:", "N, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nres = 0\nfor i in range(1, N):\n    if A[i] == A[i-1]:\n        K -= 1\n        if K == 0:\n            K = 5\n        else:\n            continue\n    else:\n        K = 5\nprint(res)\n\n\nEXPLANATION:\nThis solution works by iterating", "def solve():\n    N, K = map(int, input().split())\n    colors = list(map(int, input().split()))\n    dp = [[0]*101 for _ in range(101)]\n    for i in range(1, N+1):\n        for j in range(1, K+1):\n            dp[i][j] = min(dp[i-1][j-1:]) + (colors[i-1"], "prompt": "\nQUESTION:\nOne day Mirko, while he was walking through the high grass, stumbled upon a sequence of $N$ colored marbles. Soon he noticed that if he touches $K$ or more consecutive marbles of the same color, they start to twinkle and then he could wish them to magically vanish, although he doesn\u2019t have to do that immediately (see $3$rd sample). Fortunately, Mirko brought an inexhaustible supply of marbles from home, so he can insert a marble of any color anywhere in the array (at the beginning, between any two existing marbles, or at the end). Help Mirko find the smallest number of marbles he must insert into the sequence before he could make all of the marbles vanish.\n\n-----Input-----\nThe first line of input contains two integers $N$ ($1 \\leq N \\leq 100$) and $K$ ($2 \\leq K \\leq 5$) \u2013 the number of marbles in the initial sequence and the minimal number of consecutive marbles of the same color he could wish to vanish. The next line contains exactly $N$ integers between $1$ and $100$ (inclusive), separated by one space. Those numbers represent colors of marbles in the sequence Mirko found.\n\n-----Output-----\nThe output should contain only one line with a single integer number \u2013 the minimal number of marbles Mirko has to insert to achive the desired effect.\n\n-----Examples-----\nSample Input 1:\n2 5\n1 1\nSample Output 1:\n3\n\nSample Input 2:\n5 3\n2 2 3 2 2\nSample Output 2:\n2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}