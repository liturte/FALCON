{"2363": {"code": ["def min_operations(a, b):\n    return min(a, b) * (max(a, b) // min(a, b))\n\nn = int(input().strip())\nfor _ in range(n):\n    a, b = map(int, input().strip().split())\n    print(min_operations(a, b))\n\n\nThis solution works by using the concept of number theory. The minimum number of operations to reduce a pair (a, b) to (0, 0) is equal to the minimum of a and b, times the number of times b can be divided by a (integer division).\n\nThis is because, for each operation, we are reducing the larger number by the lesser one. The number of times we can do this is equal to the integer division of the larger number by the smaller one.\n\nWe repeat this for each pair and print the result.\n\nThis solution assumes that the inputs are valid and do not need to be checked for validity.\n\nThe time", "n = int(input())\nfor _ in range(n):\n    a, b = map(int, input().split())\n    print(max(a, b) // min(a, b) - 1)\n\n\nThis Python code reads the number of pairs and the pairs themselves from the input. For each pair, it calculates the number of operations by dividing the larger number by the smaller one and subtracting 1. The result is printed on a separate line.\n\nThe main idea is that in each operation we are reducing the larger number by the smaller one, so we do this as many times as possible until the numbers become equal. This gives us the number of operations.\n\nThe use of the `//` operator in Python performs integer division, which means that the result is always an integer.\n\nThe `max` and `min` functions are used to get the larger and smaller numbers from the pair, respectively.\n\nThe `map` function is used to convert the input strings to integers.\n\nThe `_", "def min_operations(a, b):\n    return (a // 2) * b + (b // 2) * a - (a * b) // 4\n\nn = int(input())\nfor _ in range(n):\n    a, b = map(int, input().split())\n    print(min_operations(a, b))\n\nThis code works by firstly defining a function `min_operations` that calculates the minimum number of operations for a pair of numbers. This function is based on the mathematical formula `(a // 2) * b + (b // 2) * a - (a * b) // 4` which represents the minimum number of operations for a pair of numbers. The code then reads the number of pairs and for each pair, it calculates and prints the minimum number of operations.\n\nThis code assumes that the inputs are integers and that the pairs are positive. It does not handle cases where the inputs are not integers or where the pairs are not positive.", "n = int(input())\npairs = [list(map(int, input().split())) for _ in range(n)]\n\nfor pair in pairs:\n    a, b = sorted(pair)\n    count = 0\n    while a > 0 and b > 0:\n        if a == b:\n            count += 1\n            break\n        else:\n            b -= a\n            count += 1\n            a, b = sorted([a, b])\n    print(count)\n\n\nThis code first reads the number of pairs and the pairs themselves. For each pair, it sorts the numbers and then enters a loop where it subtracts the smaller number from the larger one and increments a counter. The loop continues until one of the numbers becomes zero. The counter is then printed for each pair.\n\nThis solution assumes that the input is well-formed and does not handle any exceptions that may occur during the execution.\n\nNote: This code may not work correctly for large inputs as it has a time complexity of O", "def operations_count(a, b):\n    return max(a, b) - min(a, b)\n\nn = int(input())\n\nfor _ in range(n):\n    a, b = map(int, input().split())\n    print(operations_count(a, b))\n\n\nThis solution works by defining a function `operations_count` that takes two numbers as input, finds the maximum and minimum of the two numbers, and subtracts the minimum from the maximum. This is the number of operations required to transform one number into another. It then reads the number of pairs from the input, and for each pair, it prints the number of operations required.\n\nPlease note that the `max` and `min` functions are used to find the maximum and minimum of the two numbers respectively. The `map` function is used to convert the string input into integers.\n\nThis solution assumes that the input is in the correct format and within the specified range. If this is not the case, additional error checking"], "prompt": "\nQUESTION:\nYou've got two numbers. As long as they are both larger than zero, they go through the same operation: subtract the lesser number from the larger one. If they equal substract one number from the another. For example, one operation transforms pair (4,17) to pair (4,13), it transforms (5,5) to (0,5).\n\nYou've got some number of pairs (a_{i}, b_{i}). How many operations will be performed for each of them?\n\n\n-----Input-----\n\nThe first line contains the number of pairs n (1  \u2264  n  \u2264  1000). Then follow n lines, each line contains a pair of positive integers a_{i}, b_{i} (1  \u2264  a_{i},  b_{i}  \u2264  10^9).\n\n\n-----Output-----\n\nPrint the sought number of operations for each pair on a single line.\n\n\n-----Examples-----\nInput\n2\n4 17\n7 987654321\n\nOutput\n8\n141093479\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}