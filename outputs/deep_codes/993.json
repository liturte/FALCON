{"993": {"code": ["from collections import defaultdict\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nprefix_sum = [0] * (N+1)\nfor i in range(N):\n    prefix_sum[i+1] = (prefix_sum[i] + A[i]) % M\n\ncounter = defaultdict(int)\nfor i in", "from collections import defaultdict\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ncumsum = [0] * (N+1)\nfor i in range(N):\n    cumsum[i+1] = (cumsum[i] + A[i]) % M\n\ncnt = defaultdict(int)\nfor i in", "from collections import defaultdict\n\ndef solve(n, m, a):\n    prefix_sum = [0] * (n+1)\n    for i in range(n):\n        prefix_sum[i+1] = (prefix_sum[i] + a[i]) % m\n\n    counter = defaultdict(int)\n    for i in range(n+1):\n        counter[prefix_sum", "from collections import defaultdict\n\ndef solve():\n    N, M = map(int, input().split())\n    A = list(map(int, input().split()))\n    cumsum = [0] * (N+1)\n    for i in range(N):\n        cumsum[i+1] = (cumsum[i] + A[i]) % M\n    cnt = defaultdict(", "from collections import defaultdict\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ncumsum = [0] * (N+1)\nfor i in range(N):\n    cumsum[i+1] = (cumsum[i] + A[i]) % M\n\ncount = defaultdict(int)\nfor i in range"], "prompt": "\nQUESTION:\nThere are N boxes arranged in a row from left to right. The i-th box from the left contains A_i candies.\nYou will take out the candies from some consecutive boxes and distribute them evenly to M children.\nSuch being the case, find the number of the pairs (l, r) that satisfy the following:\n - l and r are both integers and satisfy 1 \\leq l \\leq r \\leq N.\n - A_l + A_{l+1} + ... + A_r is a multiple of M.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq N \\leq 10^5\n - 2 \\leq M \\leq 10^9\n - 1 \\leq A_i \\leq 10^9\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\nA_1 A_2 ... A_N\n\n-----Output-----\nPrint the number of the pairs (l, r) that satisfy the conditions.\nNote that the number may not fit into a 32-bit integer type.\n\n-----Sample Input-----\n3 2\n4 1 5\n\n-----Sample Output-----\n3\n\nThe sum A_l + A_{l+1} + ... + A_r for each pair (l, r) is as follows:\n - Sum for (1, 1): 4\n - Sum for (1, 2): 5\n - Sum for (1, 3): 10\n - Sum for (2, 2): 1\n - Sum for (2, 3): 6\n - Sum for (3, 3): 5\nAmong these, three are multiples of 2.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}