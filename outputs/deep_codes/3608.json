{"3608": {"code": ["MOD = 10**9+7\nN = int(input())\n\navail = [int(x) for x in input().split()]\nconsec = [int(x) for x in input().split()]\n\ndp = [0]*(N+2)\ndp[1] = avail[0]", "MOD = 1000000007\n\ndef solve(n, a, b):\n    dp = [[0]*3 for _ in range(n+1)]\n    dp[0][0] = 1\n    for i in range(1, n+1):\n        dp[i][0", "MOD = 1000000007\nN = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\ndp = [[0]*3 for _ in range(N+1)]\ndp[1][0] = a[0]", "MOD = 10**9 + 7\nN = int(input())\n\n# read available difficulties\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\n# dp[i][j] = number of ways to choose tasks for next round\n# where the i-th", "MOD = 10**9+7\nn = int(input())\n\ncnt = list(map(int, input().split()))\nadj = list(map(int, input().split()))\n\ndp = [[0, 0] for _ in range(n+2)]\ndp[1][0] = cnt[0"], "prompt": "\nQUESTION:\nFrom a pile of suggested tasks, authors of COCI must choose ones that will appear in the next round.\n\nDifficulty of a task is described with an integer in range $1$ to $N$. For some tasks, however, it is not easy to exactly determine their difficulty. The COCI authors decided that these tasks can be considered as having either one of two consecutive difficulties. For example, some task can be considered as having difficulty of either $3$ or $4$.\n\nThe next round of COCI will contain exactly $N$ tasks. For each difficulty, there will be exactly one task with that difficulty. Of course, no task will appear twice.\n\nFind the number of different ways authors can choose tasks for the next round. We say that two ways are different if for some difficulty, a different task is assigned to that difficulty.\n\nSince the expected result can be very large, output the number of ways modulo $1000000007$.\n\n-----Input-----\nThe first line of input contains the integer $N$ ($2 \\le N \\le 100000$).\n\nThe second line of input contains $N$ integers not greater than $10^9$. The $i$th number in this line is equal to the number of available tasks having difficulty exactly $i$.\n\nThe third line of input contains $N-1$ integers not greater than $10^9$. The $i$th number in this line is equal to the number of available tasks having difficulty either $i$ or $i+1$.\n\n-----Output-----\nThe first and only line of output must contain the required number of ways modulo $1000000007$.\n\n-----Examples-----\nSample Input:\n3\n3 0 1\n0 1\nSample Output:\n3\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}