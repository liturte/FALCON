{"4487": {"code": ["A, B, C = input().split()\nprint('YES' if A[-1] == B[0] == C[0] else 'NO')\n\n\nExplanation:\nThe code takes three strings A, B and C from input. It then compares the last character of A with the first character of B and the first character of C. If they are all the same, it prints 'YES'. Otherwise, it prints 'NO'. The comparison is done using the '==' operator which checks for equality.\n\nThe 'else' part of the ternary operator is executed if the condition in the 'if' part is False. In this case, it prints 'NO'.\n\nThe ternary operator is a concise way to write an if-else statement. It works by evaluating a condition and executing a statement if the condition is True, and another statement if the condition is False.\n\nThe 'split()' function is used to split the input into separate words. The input is assumed to be a single line with spaces between the words.\n\nThe '[-1]' index is used to access the last character of a string in Python. The '[0]' index is used to access", "A, B, C = input().split()\nif A[-1] == B[0] and B[-1] == C[0]:\n    print('YES')\nelse:\n    print('NO')\n\n\nExplanation:\nThis solution uses Python's built-in `input().split()` function to get the input and split it into three separate strings. The `[-1]` index in Python refers to the last element of a string. So `A[-1]` is the last character of string A, `B[0]` is the first character of string B and `C[0]` is the first character of string C. The `if` statement checks whether these conditions are met, and prints 'YES' if they are, and 'NO' if they are not.\n\nThis solution is efficient and meets the constraints given in the problem statement.\n\nNote: This code assumes that the input will be in the correct format as specified in the problem statement. If this is not the case, additional error checking may be needed.", "A, B, C = input().split()\nprint('YES' if A[-1] == B[0] and B[-1] == C[0] else 'NO')\n\n\nThis solution uses Python's ternary conditional operator. It takes three inputs from the user, splits them into A, B and C. Then, it checks if the last character of A is the same as the first character of B and the last character of B is the same as the first character of C. If both conditions are true, it prints 'YES', otherwise 'NO'.\n\nNote: The ternary operator is a shorthand way of writing an if-else statement in Python. It's equivalent to:\n\nif condition:\n    result = value_if_true\nelse:\n    result = value_if_false\n\nBut in one line.\n\"\"\"\n\n\n\nA, B, C = input().split()\nif A[-1] == B[0] and B[-1] == C[0]:\n    print('YES')\nelse:\n    print('NO')\n\n\n\"\"\"", "A, B, C = input().split()\nprint(\"YES\" if A[-1] == B[0] and B[-1] == C[0] else \"NO\")\n\n\nThis program reads three strings A, B, and C from the input, splits them into individual strings based on spaces, and checks if the last character of the first string (A) is the same as the first character of the second string (B), and if the last character of the second string (B) is the same as the first character of the third string (C). If both conditions are met, it prints \"YES\". Otherwise, it prints \"NO\".", "A, B, C = input().split()\nprint('YES' if A[-1] == B[0] and B[-1] == C[0] else 'NO')\n\n\nThis code reads three strings A, B, and C from the standard input. It then checks if the last character of A is the same as the first character of B and the last character of B is the same as the first character of C. If both conditions are met, it prints \"YES\". Otherwise, it prints \"NO\".\n\nThe `input().split()` function reads a line from the standard input and splits it into a list of words. The `[-1]` index is used to access the last element of a string in Python, and `[0]` is used to access the first element. The `if-else` statement is a shorthand way of writing an if-else construct.\n\nThis solution is efficient and runs in O(1) time, as it only performs a fixed number of operations regardless of the input size.\n\"\"\"# Problem: https://atcoder.jp/contests/abc122/tasks/abc122_b\n\n\"\"\""], "prompt": "\nQUESTION:\nYou are given three strings A, B and C. Check whether they form a word chain.\nMore formally, determine whether both of the following are true:\n - The last character in A and the initial character in B are the same.\n - The last character in B and the initial character in C are the same.\nIf both are true, print YES. Otherwise, print NO.\n\n-----Constraints-----\n - A, B and C are all composed of lowercase English letters (a - z).\n - 1 \u2264 |A|, |B|, |C| \u2264 10, where |A|, |B| and |C| are the lengths of A, B and C, respectively.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B C\n\n-----Output-----\nPrint YES or NO.\n\n-----Sample Input-----\nrng gorilla apple\n\n-----Sample Output-----\nYES\n\nThey form a word chain.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}