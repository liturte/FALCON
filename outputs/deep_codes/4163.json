{"4163": {"code": ["N = int(input())\ndice = [list(map(int, input().split())) for _ in range(N)]\n\nfor i in range(N - 2):\n    if dice[i][0] == dice[i][1] == dice[i+1][0] == dice[i+1][1] == dice[i+2][0] == dice[i+2][1]:\n        print('Yes')\n        exit()\n\nprint('No')\n\n\nThis code reads the input and stores it in a list of lists. Then it iterates over the list and checks if the current dice roll and the two next ones are the same. If it finds a match, it prints 'Yes' and exits. If it doesn't find a match after checking all the rolls, it prints 'No'.", "N = int(input())\nrolls = [list(map(int, input().split())) for _ in range(N)]\n\nfor i in range(N - 2):\n    if rolls[i][0] == rolls[i][1] == rolls[i+1][0] == rolls[i+1][1] == rolls[i+2][0] == rolls[i+2][1]:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")\n\n\nThis Python code reads the number of rolls (N) and the results of the rolls from the standard input. It then checks each triplet of consecutive rolls to see if they are all doublets. If it finds such a triplet, it prints \"Yes\" and exits. If it doesn't find any, it prints \"No\".", "N = int(input())\ndice = [list(map(int, input().split())) for _ in range(N)]\n\nfor i in range(N - 2):\n    if dice[i][0] == dice[i][1] == dice[i+1][0] == dice[i+1][1] == dice[i+2][0] == dice[i+2][1]:\n        print('Yes')\n        exit()\n\nprint('No')\n\n\nExplanation:\nThis code reads the number of rolls (N) and the results of each roll from the standard input. It then checks each triplet of consecutive rolls for equality. If it finds a triplet where all four dice are the same, it prints 'Yes' and exits. If it doesn't find such a triplet after checking all possible triplets, it prints 'No'.", "N = int(input())\ndice = [list(map(int, input().split())) for _ in range(N)]\n\nfor i in range(N-2):\n    if dice[i][0] == dice[i][1] == dice[i+1][0] == dice[i+1][1] == dice[i+2][0] == dice[i+2][1]:\n        print('Yes')\n        exit()\n\nprint('No')\n\n\n\n\nN = int(input())\ndice = [list(map(int, input().split())) for _ in range(N)]\n\nfor i in range(N-2):\n    if all(dice[i][j] == dice[i+1][j] == dice[i+2][j] for j in range(2)):\n        print", "N = int(input())\nDice = [list(map(int, input().split())) for _ in range(N)]\n\nfor i in range(N-2):\n    if Dice[i][0] == Dice[i][1] == Dice[i+1][0] == Dice[i+1][1] == Dice[i+2][0] == Dice[i+2][1]:\n        print('Yes')\n        exit()\n\nprint('No')\n\n\nEXPLANATION:\nThis solution is a simple python program that reads the number of rolls `N` and the results of each roll from the standard input. It then checks each triplet of consecutive rolls to see if they were both doublets. If it finds a triplet of doublets, it prints 'Yes' and exits. If it doesn't find any triplets"], "prompt": "\nQUESTION:\nTak performed the following action N times: rolling two dice.\nThe result of the i-th roll is D_{i,1} and D_{i,2}.\nCheck if doublets occurred at least three times in a row.\nSpecifically, check if there exists at lease one i such that D_{i,1}=D_{i,2}, D_{i+1,1}=D_{i+1,2} and D_{i+2,1}=D_{i+2,2} hold.\n\n-----Constraints-----\n - 3 \\leq N \\leq 100\n - 1\\leq D_{i,j} \\leq 6\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nD_{1,1} D_{1,2}\n\\vdots\nD_{N,1} D_{N,2}\n\n-----Output-----\nPrint Yes if doublets occurred at least three times in a row. Print No otherwise.\n\n-----Sample Input-----\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n\n-----Sample Output-----\nYes\n\nFrom the second roll to the fourth roll, three doublets occurred in a row.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}