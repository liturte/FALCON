{"2464": {"code": ["from collections import defaultdict\n\nMOD = 10**9+7\nn = int(input())\ntree = defaultdict(list)\nfor _ in range(n-1):\n    x, y, c = map(int, input().split())\n    tree[x-1].append((y-1, c))", "from collections import defaultdict\nfrom sys import stdin\n\ndef main():\n    n = int(stdin.readline())\n    graph = defaultdict(list)\n    for _ in range(n - 1):\n        x, y, c = map(int, stdin.readline().split())\n        graph[", "from collections import defaultdict\n\ndef dfs(v, p):\n    global cnt, res\n    cnt[v] = 1\n    for u in tree[v]:\n        if u == p: continue\n        dfs(u, v)\n        res[v] += res[u] * cnt[v", "import sys\nsys.setrecursionlimit(100000)\n\nn = int(input())\ngraph = [[] for _ in range(n+1)]\n\nfor _ in range(n-1):\n    x, y, c = map(int, input().split())\n    graph[x].", "from collections import defaultdict, deque\nfrom sys import stdin, stdout\n\ndef main():\n    read = stdin.readline\n    write = stdout.write\n\n    n = int(read())\n    graph = defaultdict(list)\n    for _ in range(n - 1):\n        a,"], "prompt": "\nQUESTION:\nYou are given a tree (an undirected connected acyclic graph) consisting of $n$ vertices and $n - 1$ edges. A number is written on each edge, each number is either $0$ (let's call such edges $0$-edges) or $1$ (those are $1$-edges).\n\nLet's call an ordered pair of vertices $(x, y)$ ($x \\ne y$) valid if, while traversing the simple path from $x$ to $y$, we never go through a $0$-edge after going through a $1$-edge. Your task is to calculate the number of valid pairs in the tree.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($2 \\le n \\le 200000$) \u2014 the number of vertices in the tree.\n\nThen $n - 1$ lines follow, each denoting an edge of the tree. Each edge is represented by three integers $x_i$, $y_i$ and $c_i$ ($1 \\le x_i, y_i \\le n$, $0 \\le c_i \\le 1$, $x_i \\ne y_i$) \u2014 the vertices connected by this edge and the number written on it, respectively.\n\nIt is guaranteed that the given edges form a tree.\n\n\n-----Output-----\n\nPrint one integer \u2014 the number of valid pairs of vertices.\n\n\n-----Example-----\nInput\n7\n2 1 1\n3 2 0\n4 2 1\n5 2 0\n6 7 1\n7 2 1\n\nOutput\n34\n\n\n\n-----Note-----\n\nThe picture corresponding to the first example:\n\n[Image]\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}