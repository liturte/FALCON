{"779": {"code": ["def solve(n):\n    if n == 1: return 0\n    if n == 2: return 1\n    return n-1\n\nn = int(input())\nprint(solve(n))\n\n\nExplanation:\nThe problem can be solved by combinatorics. For each team leader, the number of employees he is responsible for", "def num_ways(n):\n    return n - 1\n\nn = int(input())\nprint(num_ways(n))\n\n\nThis solution works by realizing that for any team leader, the rest of the employees can be divided into groups of size 1, 2, 3, ..., until the number of remaining employees is less than", "def ways_to_choose_team_leaders(n):\n    dp = [0]*(n+1)\n    dp[0] = dp[1] = 1\n    for i in range(2, n+1):\n        for j in range(1, i):\n            dp[i] += dp[j]", "def solve(n):\n    return n - 1\n\nn = int(input())\nprint(solve(n))\n\n\nExplanation:\nThis problem is a mathematical problem related to number theory. The number of ways to divide n employees between l team leaders is equal to l. Because each team leader can be responsible for any number of employees, and", "def ways_to_choose_team_leaders(n):\n    if n == 2:\n        return 1\n    else:\n        return (n - 1) * (n - 2) // 2\n\nn = int(input())\nprint(ways_to_choose_team_leaders(n))\n\n\nThis solution"], "prompt": "\nQUESTION:\nFafa owns a company that works on huge projects. There are n employees in Fafa's company. Whenever the company has a new project to start working on, Fafa has to divide the tasks of this project among all the employees.\n\nFafa finds doing this every time is very tiring for him. So, he decided to choose the best l employees in his company as team leaders. Whenever there is a new project, Fafa will divide the tasks among only the team leaders and each team leader will be responsible of some positive number of employees to give them the tasks. To make this process fair for the team leaders, each one of them should be responsible for the same number of employees. Moreover, every employee, who is not a team leader, has to be under the responsibility of exactly one team leader, and no team leader is responsible for another team leader.\n\nGiven the number of employees n, find in how many ways Fafa could choose the number of team leaders l in such a way that it is possible to divide employees between them evenly.\n\n\n-----Input-----\n\nThe input consists of a single line containing a positive integer n (2 \u2264 n \u2264 10^5) \u2014 the number of employees in Fafa's company.\n\n\n-----Output-----\n\nPrint a single integer representing the answer to the problem.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n1\n\nInput\n10\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the second sample Fafa has 3 ways:  choose only 1 employee as a team leader with 9 employees under his responsibility.  choose 2 employees as team leaders with 4 employees under the responsibility of each of them.  choose 5 employees as team leaders with 1 employee under the responsibility of each of them.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}