{"4358": {"code": ["N = int(input())\nprices = [int(input()) for _ in range(N)]\nprices.sort()\nprint(sum(prices[:-1]) + prices[-1] // 2)\n\n\nExplanation:\nThis solution reads the number of items and their prices. It then sorts the prices in ascending order. The item with the highest price gets the discount, so we take the last element of the sorted list and divide it by 2 to get the discounted price. We sum up the prices of all items except the one with the highest price, which is now discounted, to get the total amount Mr. Takaha will pay.\n\nNote: In Python, the `//` operator is used for integer division. This means that it gives the quotient of the division, discarding", "N = int(input())\nprices = [int(input()) for _ in range(N)]\n\nhighest_price = max(prices)\ntotal = sum(prices) - highest_price + highest_price // 2\n\nprint(total)\n\nThis code first reads in the number of items and their prices. It then calculates the total price by subtracting the highest price from the sum of all prices and adding half the highest price. The result is then printed.\n\nThis solution assumes that the input will be in the correct format as described in the problem statement.", "N = int(input())\nprices = [int(input()) for _ in range(N)]\n\ndiscounted_price = max(prices) // 2\nprices.remove(max(prices))\n\ntotal_price = sum(prices) + discounted_price\nprint(total_price)\n\nThe code first reads the number of items and their prices. It then calculates the discounted price of the item with the highest price and removes it from the list of prices. Finally, it sums up the remaining prices and adds the discounted price to get the total price.\n\nThis solution assumes that the input will be correct and does not include any error checking or handling.\n\nThe time complexity of this solution is O(n), where n is the number of items. This is because the max", "N = int(input())\nprices = [int(input()) for _ in range(N)]\n\nprices.sort(reverse=True)\nprices[0] = prices[0] // 2\nprint(sum(prices))\n\n\nThis python program first reads the number of items and their prices. It then sorts the prices in descending order and applies the discount to the most expensive item. Finally, it prints the sum of the prices.", "N = int(input())\np = [int(input()) for _ in range(N)]\np.sort()\nprint(sum(p[:-1]) + p[-1] // 2)\n\n\nThis Python script reads the number of items and the prices of the items from the standard input. It then sorts the prices in ascending order, and calculates the total price by summing up all but the highest price (which gets the discount) and half of the highest price. The result is printed to the standard output.\n\nThe sorting operation has a time complexity of O(N log N), and the sum operation has a time complexity of O(N). Therefore, the overall time complexity of the script is O(N log N).\n\nThe space complexity of the script is O(N) because it needs to"], "prompt": "\nQUESTION:\nIn some other world, today is the day before Christmas Eve.\nMr. Takaha is buying N items at a department store. The regular price of the i-th item (1 \\leq i \\leq N) is p_i yen (the currency of Japan).\nHe has a discount coupon, and can buy one item with the highest price for half the regular price. The remaining N-1 items cost their regular prices. What is the total amount he will pay?\n\n-----Constraints-----\n - 2 \\leq N \\leq 10\n - 100 \\leq p_i \\leq 10000\n - p_i is an even number.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\np_1\np_2\n:\np_N\n\n-----Output-----\nPrint the total amount Mr. Takaha will pay.\n\n-----Sample Input-----\n3\n4980\n7980\n6980\n\n-----Sample Output-----\n15950\n\nThe 7980-yen item gets the discount and the total is 4980 + 7980 / 2 + 6980 = 15950 yen.\nNote that outputs such as 15950.0 will be judged as Wrong Answer.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}