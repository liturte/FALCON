{"4566": {"code": ["N, M = map(int, input().split())\nroads = [0]*N\nfor _ in range(M):\n    a, b = map(int, input().split())\n    roads[a-1] += 1\n    roads[b-1] += 1\nfor i in roads:\n    print(i)\n\n\nExplanation:\nFirst, we read the input N and M. Then we create a list with N zeros. For each road, we increment the corresponding cities in the list by 1. Finally, we print the list.\n\"\"\"\n\n# Solution\nN, M = map(int, input().split())\nro", "N, M = map(int, input().split())\nroads = [0] * N\nfor _ in range(M):\n    a, b = map(int, input().split())\n    roads[a-1] += 1\n    roads[b-1] += 1\nfor r in roads:\n    print(r)\n\n\nThe solution is based on the principle that each road is counted twice in the two cities it connects. Therefore, we simply count the number of roads for each city and print the result for each city.\n\nNote that we subtract 1 from the city numbers in the input, because city numbers are 1-indexed in the problem statement", "n, m = map(int, input().split())\nroads = [0]*n\nfor _ in range(m):\n    a, b = map(int, input().split())\n    roads[a-1] += 1\n    roads[b-1] += 1\nfor i in roads:\n    print(i)\n\n\nExplanation:\n\nThe program first reads the number of cities (n) and the number of roads (m). It then initializes a list of zeros of size n. For each road, it increments the count of cities connected to the first city and the second city in the road. Finally, it prints the number of roads", "N, M = map(int, input().split())\nroads = [0] * (N + 1)\n\nfor _ in range(M):\n    a, b = map(int, input().split())\n    roads[a] += 1\n    roads[b] += 1\n\nfor road in roads[1:]:\n    print(road)\n\nThis Python code reads the input, counts the number of roads for each city, and then prints the count for each city.\n\"\"\"\n\n# Answer:\nN, M = map(int, input().split())\nroads = [0] * (N + 1)\n\nfor _ in range(", "N, M = map(int, input().split())\nroads = [0] * N\nfor _ in range(M):\n    a, b = map(int, input().split())\n    roads[a-1] += 1\n    roads[b-1] += 1\nfor r in roads:\n    print(r)\n\n\nEXPLANATION:\nThe problem is about counting the number of roads that are connected to each city. We can solve this by creating a list of zeros with size N (the number of cities), and for each road, we increment the corresponding indices in the list by 1. Finally, we print out the elements of the list."], "prompt": "\nQUESTION:\nThere are N cities and M roads.\nThe i-th road (1\u2264i\u2264M) connects two cities a_i and b_i (1\u2264a_i,b_i\u2264N) bidirectionally.\nThere may be more than one road that connects the same pair of two cities.\nFor each city, how many roads are connected to the city?\n\n-----Constraints-----\n - 2\u2264N,M\u226450\n - 1\u2264a_i,b_i\u2264N\n - a_i \u2260 b_i\n - All input values are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:  \nN M\na_1 b_1\n:  \na_M b_M\n\n-----Output-----\nPrint the answer in N lines.\nIn the i-th line (1\u2264i\u2264N), print the number of roads connected to city i.\n\n-----Sample Input-----\n4 3\n1 2\n2 3\n1 4\n\n-----Sample Output-----\n2\n2\n1\n1\n\n - City 1 is connected to the 1-st and 3-rd roads.\n - City 2 is connected to the 1-st and 2-nd roads.\n - City 3 is connected to the 2-nd road.\n - City 4 is connected to the 3-rd road.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}