{"307": {"code": ["k_2, k_3, k_5, k_6 = map(int, input().split())\n\nprint(max(256 * (", "k_2, k_3, k_5, k_6 = map(int, input().split())\nprint(min(k_2, k_", "k2, k3, k5, k6 = map(int, input().split())\nprint(256 * min(k2, k5,", "k_2, k_3, k_5, k_6 = map(int, input().split())\n\nprint(min(k_2, k", "k2, k3, k5, k6 = map(int, input().split())\n\n# Calculate the number of 2s, 3s"], "prompt": "\nQUESTION:\nRecently Anton found a box with digits in his room. There are k_2 digits 2, k_3 digits 3, k_5 digits 5 and k_6 digits 6.\n\nAnton's favorite integers are 32 and 256. He decided to compose this integers from digits he has. He wants to make the sum of these integers as large as possible. Help him solve this task!\n\nEach digit can be used no more than once, i.e. the composed integers should contain no more than k_2 digits 2, k_3 digits 3 and so on. Of course, unused digits are not counted in the sum.\n\n\n-----Input-----\n\nThe only line of the input contains four integers k_2, k_3, k_5 and k_6\u00a0\u2014 the number of digits 2, 3, 5 and 6 respectively (0 \u2264 k_2, k_3, k_5, k_6 \u2264 5\u00b710^6).\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 maximum possible sum of Anton's favorite integers that can be composed using digits from the box.\n\n\n-----Examples-----\nInput\n5 1 3 4\n\nOutput\n800\n\nInput\n1 1 1 1\n\nOutput\n256\n\n\n\n-----Note-----\n\nIn the first sample, there are five digits 2, one digit 3, three digits 5 and four digits 6. Anton can compose three integers 256 and one integer 32 to achieve the value 256 + 256 + 256 + 32 = 800. Note, that there is one unused integer 2 and one unused integer 6. They are not counted in the answer.\n\nIn the second sample, the optimal answer is to create on integer 256, thus the answer is 256.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}