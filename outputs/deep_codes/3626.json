{"3626": {"code": ["import sys\n\ndef check_intersection(rect1, rect2):\n    # Check if one rectangle is on left side of the other\n    if rect1[0] > rect2[2] or rect2[0] > rect1[2]:\n        return False\n\n    # Check if one rectangle is above the other\n    if rect1[1] > rect2[3] or rect2[1] > rect1[3]:\n        return False\n\n    return True\n\ndef main():\n    n = int(sys.stdin.", "def solve(rectangles):\n    x_to_rectangles = {}\n    for i, (x1, y1, x2, y2) in enumerate(rectangles):\n        x_to_rectangles.setdefault(x1, []).append((y1, y2, i))\n        x_to_rectangles.setdefault(x2, []).append((y1, y2, i))\n    x_values = sorted(x_to_rectangles.keys())\n    active_rectangles = {}\n    for", "class Rectangle:\n    def __init__(self, x1, y1, x2, y2):\n        self.x1 = x1\n        self.y1 = y1\n        self.x2 = x2\n        self.y2 = y2\n\ndef overlap(r1, r2):\n    return not (r1.x1 >= r2.x2 or r1.x2 <= r2.x1 or r1.y1 >= r2.y2 or r1.y2 <= r2.y", "class Interval:\n    def __init__(self, start, end):\n        self.start = start\n        self.end = end\n\n    def __lt__(self, other):\n        if self.start == other.start:\n            return self.end < other.end\n        return self.start < other.start\n\ndef solve():\n    n = int(input())\n    intervals = []\n    for _ in range(n):\n        x1, y1, x2, y2 = map(int, input().split())", "def solve():\n    n = int(input().strip())\n    rectangles = []\n    for _ in range(n):\n        x1, y1, x2, y2 = map(int, input().strip().split())\n        rectangles.append((x1, y1, x2, y2))\n    rectangles.sort()\n    for i in range(1, n):\n        if rectangles[i-1][1] < rectangles[i][3] and rectangles[i-1][3] > rectangles["], "prompt": "\nQUESTION:\nYou are given a set of $n$ axis-aligned rectangles in a 2D plane. For this problem, two rectangles are considered to intersect if their boundaries contain any common points (in particular, two nesting rectangles don\u2019t count as intersecting). Determine if some pair of rectangles intersect.\n\nIn this example, only rectangles A and B intersect.\n\n-----Input-----\nEach test case will begin with a line with a single integer $n$ ($1\\! \\le \\! n\\! \\le \\! 10^5$), which is the number of rectangles.\n\nEach of the next $n$ lines will contain four space-separated integers:$x_1$ $y_1$ $x_2$ $y_2$\n\n($-10^9\\! \\le \\! x_1,y_1,x_2,y_2\\! \\le \\! 10^9, x_1\\! <\\! x_2, y_1\\! <\\! y_2$), which describe a rectangle, where $(x_1,y_1)$ is the lower left corner and $(x_2,y_2)$ is the upper right corner. All $x$ values will be distinct. All $y$ values will be distinct.\n\n-----Output-----\nOutput a single integer, which is $1$ if some pair of rectangles intersect, $0$ if no pair of rectangles intersect.\n\n-----Examples-----\nSample Input:\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\nSample Output:\n1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}