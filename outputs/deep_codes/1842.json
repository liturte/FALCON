{"1842": {"code": ["import math\n\na, b, c = map(int, input().split())\n\nd = b * b - 4 * a * c\n\nroot1 = (-b + math.sqrt(d)) / (2 * a)\nroot2 = (-b - math.sqrt(d)) / (2 * a)\n\nprint(max(root1, root2))\nprint(min(root1, root2))\n\nThis code will get the coefficients a, b, c from the input, calculate the discriminant d, then calculate the roots of the quadratic equation. The roots are printed in the required order.\n\n\nThe quadratic formula is (-b \u00b1 sqrt(b^2 - 4ac)) / (2a), and the roots are the values of x that make", "import math\n\na, b, c = map(int, input().split())\n\nd = b**2 - 4*a*c\n\nx1 = (-b + math.sqrt(d)) / (2*a)\nx2 = (-b - math.sqrt(d)) / (2*a)\n\nprint(max(x1, x2))\nprint(min(x1, x2))\n\n\nExplanation:\nThis code reads three integers a, b, c from the input. Then it calculates the discriminant of the quadratic equation. After that it calculates the roots of the equation. Finally, it prints the maximum and minimum roots. The maximum and minimum roots correspond to the optimistic and pessimistic scenarios respectively.\n\nPlease note that", "import math\n\na, b, c = map(int, input().split())\n\nd = b * b - 4 * a * c\nsqrt_val = math.sqrt(abs(d))\n\nif d > 0:\n    print((-b + sqrt_val) / (2 * a))\n    print((-b - sqrt_val) / (2 * a))\nelif d == 0:\n    print(-b / (2 * a))\n    print(-b / (2 * a))\nelse:\n    realPart = -b / (2 * a)\n    imaginaryPart = sqrt_val / (2 * a)\n    print(realPart, '+', imaginaryPart, 'i')\n    print(realPart, '-', imaginary", "import math\n\na, b, c = map(int, input().split())\n\nD = b**2 - 4*a*c\nx1 = (-b - math.sqrt(D)) / (2*a)\nx2 = (-b + math.sqrt(D)) / (2*a)\n\nprint(max(x1, x2))\nprint(min(x1, x2))\n\n\nThis Python code takes the coefficients of the quadratic equation as input, calculates the discriminant to find the roots of the equation, and then prints the optimistic and pessimistic estimates.\n\nThe `math.sqrt` function is used to calculate the square root of the discriminant, and the `max` and `min` functions are used to find the", "import math\n\na, b, c = map(int, input().split())\n\ndiscriminant = b**2 - 4*a*c\n\nroot1 = (-b + math.sqrt(discriminant)) / (2 * a)\nroot2 = (-b - math.sqrt(discriminant)) / (2 * a)\n\nprint(max(root1, root2))\nprint(min(root1, root2))\n\n\nThis Python program reads the coefficients of the quadratic equation from the input, calculates the discriminant (b^2 - 4ac), and then uses it to find the roots of the equation. It prints the greater of the roots first, and the smaller one second.\n\nPlease note that this program assumes that the input"], "prompt": "\nQUESTION:\nThe Department of economic development of IT City created a model of city development till year 2100.\n\nTo prepare report about growth perspectives it is required to get growth estimates from the model.\n\nTo get the growth estimates it is required to solve a quadratic equation. Since the Department of economic development of IT City creates realistic models only, that quadratic equation has a solution, moreover there are exactly two different real roots.\n\nThe greater of these roots corresponds to the optimistic scenario, the smaller one corresponds to the pessimistic one. Help to get these estimates, first the optimistic, then the pessimistic one.\n\n\n-----Input-----\n\nThe only line of the input contains three integers a, b, c ( - 1000 \u2264 a, b, c \u2264 1000) \u2014 the coefficients of ax^2 + bx + c = 0 equation.\n\n\n-----Output-----\n\nIn the first line output the greater of the equation roots, in the second line output the smaller one. Absolute or relative error should not be greater than 10^{ - 6}.\n\n\n-----Examples-----\nInput\n1 30 200\n\nOutput\n-10.000000000000000\n-20.000000000000000\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}