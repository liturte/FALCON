{"156": {"code": ["def solve(X):\n    if X == 1:\n        return 1, 1\n    for i in range(2, int(X**0.5)+1):\n        if X % i == 0:\n            return i, X//i\n    return X, 1\n\nX = int(input())\na, b = solve(X)\nprint(a, b)\n\nThis solution works by iterating from 2 to the square root of X and checking if X is divisible by the current number. If it is, we have found a pair of numbers that have the desired properties. The function solve takes an integer X as input and returns a pair of integers (a, b) such that the least common multiple of a and", "def find_ab(x):\n    if x == 1:\n        return 1, 1\n    for i in range(2, int(x**0.5)+1):\n        if x % i == 0:\n            return i, x//i\n    return x, 1\n\nx = int(input())\na, b = find_ab(x)\nprint(a, b)\n\n\nEXPLANATION:\nThis program works by iterating over all numbers from 2 to the square root of the input number. For each number, it checks if it divides the input number evenly (i.e., if the remainder is 0). If it does, it returns this number and the result of integer division", "def solve(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return i, n // i\n    return n, 1\n\nX = int(input())\na, b = solve(X)\nprint(a, b)\n\n\nThis code works by iterating over all numbers up to the square root of `n` (since the LCM of two numbers cannot be larger than the square root of their product), and checking if `n` is divisible by the current number. If it is, the function returns the pair of numbers `(i, n // i)`. If no such pair is found, the function returns `(n,", "def solve(x):\n    if x == 1:\n        return (1, 1)\n    for i in range(1, int(x**0.5)+1):\n        if x % i == 0:\n            return (i, x//i)\n\nx = int(input())\nprint(*solve(x))\n\n\nThis code works by iterating over the numbers from 1 to the square root of the input number. For each number, it checks if it divides the input number evenly. If it does, it returns the pair of numbers as the solution. The `*` operator is used to unpack the tuple returned by `solve()` into the arguments of the `print()` function.", "def solve(x):\n    if x == 1:\n        return (1, 1)\n    for i in range(2, int(x**0.5)+1):\n        if x % i == 0:\n            return (i, x//i)\n    return (x, 1)\n\nx = int(input())\nprint(*solve(x))\n\n\nThis solution works by iterating over all possible values of `i` from 2 to sqrt(X) (inclusive) and checking if `i` is a divisor of `X`. If `i` is a divisor of `X`, then `X//i` is also a divisor of `X` and `i` and"], "prompt": "\nQUESTION:\nToday, Osama gave Fadi an integer $X$, and Fadi was wondering about the minimum possible value of $max(a, b)$ such that $LCM(a, b)$ equals $X$. Both $a$ and $b$ should be positive integers.\n\n$LCM(a, b)$ is the smallest positive integer that is divisible by both $a$ and $b$. For example, $LCM(6, 8) = 24$, $LCM(4, 12) = 12$, $LCM(2, 3) = 6$.\n\nOf course, Fadi immediately knew the answer. Can you be just like Fadi and find any such pair?\n\n\n-----Input-----\n\nThe first and only line contains an integer $X$ ($1 \\le X \\le 10^{12}$).\n\n\n-----Output-----\n\nPrint two positive integers, $a$ and $b$, such that the value of $max(a, b)$ is minimum possible and $LCM(a, b)$ equals $X$. If there are several possible such pairs, you can print any.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n1 2\n\nInput\n6\n\nOutput\n2 3\n\nInput\n4\n\nOutput\n1 4\n\nInput\n1\n\nOutput\n1 1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}