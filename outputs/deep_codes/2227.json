{"2227": {"code": ["def count_powerful_substrings(s):\n    return sum(1 for _ in s.split('", "def count_powerful_substrings(s):\n    return sum(s[i:].startswith", "def count_powerful_substrings(s):\n    return sum(s[i:].startswith", "def count_powerful_substrings(s):\n    return sum(1 for i in range(len(", "def count_powerful_substrings(s):\n    return sum(s[i:].startswith"], "prompt": "\nQUESTION:\nVolodya likes listening to heavy metal and (occasionally) reading. No wonder Volodya is especially interested in texts concerning his favourite music style.\n\nVolodya calls a string powerful if it starts with \"heavy\" and ends with \"metal\". Finding all powerful substrings (by substring Volodya means a subsequence of consecutive characters in a string) in a given text makes our hero especially joyful. Recently he felt an enormous fit of energy while reading a certain text. So Volodya decided to count all powerful substrings in this text and brag about it all day long. Help him in this difficult task. Two substrings are considered different if they appear at the different positions in the text.\n\nFor simplicity, let us assume that Volodya's text can be represented as a single string.\n\n\n-----Input-----\n\nInput contains a single non-empty string consisting of the lowercase Latin alphabet letters. Length of this string will not be greater than 10^6 characters.\n\n\n-----Output-----\n\nPrint exactly one number \u2014 the number of powerful substrings of the given string.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\nheavymetalisheavymetal\n\nOutput\n3\nInput\nheavymetalismetal\n\nOutput\n2\nInput\ntrueheavymetalissotruewellitisalsosoheavythatyoucanalmostfeeltheweightofmetalonyou\n\nOutput\n3\n\n\n-----Note-----\n\nIn the first sample the string \"heavymetalisheavymetal\" contains powerful substring \"heavymetal\" twice, also the whole string \"heavymetalisheavymetal\" is certainly powerful.\n\nIn the second sample the string \"heavymetalismetal\" contains two powerful substrings: \"heavymetal\" and \"heavymetalismetal\".\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}