{"1041": {"code": ["def solve():\n    n = int(input())\n    s = input()\n    nums = [int(x) for x in s]\n    prefix_sum = [0] * (", "from collections import deque\n\ndef solve(n, s):\n    s = list(map(int, s))\n    q = deque()\n    vis = [0] * n", "from collections import deque\n\ndef solve(n, s):\n    s = list(map(int, list(s)))\n    s = deque(s)\n    while len(s", "def solve(n, s):\n    s = list(map(int, list(s)))\n    diff = [0] * n\n    for i in range(n):\n        diff[(", "from collections import deque\n\nn = int(input())\ns = input()\n\npoints = [(i, int(s[i])) for i in range(n)]\n\ndef b"], "prompt": "\nQUESTION:\nn evenly spaced points have been marked around the edge of a circle. There is a number written at each point. You choose a positive real number k. Then you may repeatedly select a set of 2 or more points which are evenly spaced, and either increase all numbers at points in the set by k or decrease all numbers at points in the set by k. You would like to eventually end up with all numbers equal to 0. Is it possible?\n\nA set of 2 points is considered evenly spaced if they are diametrically opposed, and a set of 3 or more points is considered evenly spaced if they form a regular polygon.\n\n\n-----Input-----\n\nThe first line of input contains an integer n (3 \u2264 n \u2264 100000), the number of points along the circle.\n\nThe following line contains a string s with exactly n digits, indicating the numbers initially present at each of the points, in clockwise order.\n\n\n-----Output-----\n\nPrint \"YES\" (without quotes) if there is some sequence of operations that results in all numbers being 0, otherwise \"NO\" (without quotes).\n\nYou can print each letter in any case (upper or lower).\n\n\n-----Examples-----\nInput\n30\n000100000100000110000000001100\n\nOutput\nYES\n\nInput\n6\n314159\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIf we label the points from 1 to n, then for the first test case we can set k = 1. Then we increase the numbers at points 7 and 22 by 1, then decrease the numbers at points 7, 17, and 27 by 1, then decrease the numbers at points 4, 10, 16, 22, and 28 by 1.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}