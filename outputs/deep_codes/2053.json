{"2053": {"code": ["QUESTION:\nProfessor GukiZ has two arrays of integers, a and b. Professor wants to make the sum of the elements in the array a s_{a} as close as possible to the sum of the elements in the array b s_{b}. So he wants to minimize the value v = |s_{a} - s_{b}|.\n\nIn one operation professor can swap some element from the array a and some element from the array b. For example if the array a is [5, 1, 3, 2, 4] and the array b is [3, 3, 2] professor can swap the element 5 from the array a and the element 2 from the array b and get the new array a [2, 1, 3, 2, 4] and the new array b [3, 3, 5].\n\nProfessor doesn't want to make more than two swaps. Find the minimal value v and some sequence of no more than two swaps that will lead to the such value v. Professor makes swaps one by one, each new swap he makes with the new arrays a and b.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 2000) \u2014 the number of elements in the array a.\n\nThe second line contains n integers a_{i} ( - 10^9 \u2264 a_{i} \u2264 10^9) \u2014 the elements of the array a.\n\nThe third line contains integer m (1 \u2264 m \u2264 2000) \u2014 the number of elements in the array b.\n\nThe fourth line contains m integers b_{j} ( - 10^9 \u2264 b_{j} \u2264 10^9) \u2014 the elements of the array b.\n\n\n-----Output-----\n\nIn the first line print the minimal value v = |s_{a} - s_{b}| that can be got with no more than two swaps.\n\nThe second line should contain the number of swaps k (0 \u2264 k \u2264 2).\n\nEach of the next k lines should contain two integers x_{p}, y_{p} (1 \u2264 x_{p} \u2264 n, 1 \u2264 y_{p} \u2264 m) \u2014 the index of the element in the array a and the index of the element in the array b in the p-th swap.\n\nIf there are several optimal solutions print any of them. Print the swaps in order the professor did them.\n\n\n-----Examples-----", "QUESTION:\nProfessor GukiZ has two arrays of integers, a and b. Professor wants to make the sum of the elements in the array a s_{a} as close as possible to the sum of the elements in the array b s_{b}. So he wants to minimize the value v = |s_{a} - s_{b}|.\n\nIn one operation professor can swap some element from the array a and some element from the array b. For example if the array a is [5, 1, 3, 2, 4] and the array b is [3, 3, 2] professor can swap the element 5 from the array a and the element 2 from the array b and get the new array a [2, 1, 3, 2, 4] and the new array b [3, 3, 5].\n\nProfessor doesn't want to make more than two swaps. Find the minimal value v and some sequence of no more than two swaps that will lead to the such value v. Professor makes swaps one by one, each new swap he makes with the new arrays a and b.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 2000) \u2014 the number of elements in the array a.\n\nThe second line contains n integers a_{i} ( - 10^9 \u2264 a_{i} \u2264 10^9) \u2014 the elements of the array a.\n\nThe third line contains integer m (1 \u2264 m \u2264 2000) \u2014 the number of elements in the array b.\n\nThe fourth line contains m integers b_{j} ( - 10^9 \u2264 b_{j} \u2264 10^9) \u2014 the elements of the array b.\n\n\n-----Output-----\n\nIn the first line print the minimal value v = |s_{a} - s_{b}| that can be got with no more than two swaps.\n\nThe second line should contain the number of swaps k (0 \u2264 k \u2264 2).\n\nEach of the next k lines should contain two integers x_{p}, y_{p} (1 \u2264 x_{p} \u2264 n, 1 \u2264 y_{p} \u2264 m) \u2014 the index of the element in the array a and the index of the element in the array b in the p-th swap.\n\nIf there are several optimal solutions print any of them. Print the swaps in order the professor did them.\n\n\n-----Examples-----", "QUESTION:\nProfessor GukiZ has two arrays of integers, a and b. Professor wants to make the sum of the elements in the array a s_{a} as close as possible to the sum of the elements in the array b s_{b}. So he wants to minimize the value v = |s_{a} - s_{b}|.\n\nIn one operation professor can swap some element from the array a and some element from the array b. For example if the array a is [5, 1, 3, 2, 4] and the array b is [3, 3, 2] professor can swap the element 5 from the array a and the element 2 from the array b and get the new array a [2, 1, 3, 2, 4] and the new array b [3, 3, 5].\n\nProfessor doesn't want to make more than two swaps. Find the minimal value v and some sequence of no more than two swaps that will lead to the such value v. Professor makes swaps one by one, each new swap he makes with the new arrays a and b.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 2000) \u2014 the number of elements in the array a.\n\nThe second line contains n integers a_{i} ( - 10^9 \u2264 a_{i} \u2264 10^9) \u2014 the elements of the array a.\n\nThe third line contains integer m (1 \u2264 m \u2264 2000) \u2014 the number of elements in the array b.\n\nThe fourth line contains m integers b_{j} ( - 10^9 \u2264 b_{j} \u2264 10^9) \u2014 the elements of the array b.\n\n\n-----Output-----\n\nIn the first line print the minimal value v = |s_{a} - s_{b}| that can be got with no more than two swaps.\n\nThe second line should contain the number of swaps k (0 \u2264 k \u2264 2).\n\nEach of the next k lines should contain two integers x_{p}, y_{p} (1 \u2264 x_{p} \u2264 n, 1 \u2264 y_{p} \u2264 m) \u2014 the index of the element in the array a and the index of the element in the array b in the p-th swap.\n\nIf there are several optimal solutions print any of them. Print the swaps in order the professor did them.\n\n\n-----Examples-----", "QUESTION:\nProfessor GukiZ has two arrays of integers, a and b. Professor wants to make the sum of the elements in the array a s_{a} as close as possible to the sum of the elements in the array b s_{b}. So he wants to minimize the value v = |s_{a} - s_{b}|.\n\nIn one operation professor can swap some element from the array a and some element from the array b. For example if the array a is [5, 1, 3, 2, 4] and the array b is [3, 3, 2] professor can swap the element 5 from the array a and the element 2 from the array b and get the new array a [2, 1, 3, 2, 4] and the new array b [3, 3, 5].\n\nProfessor doesn't want to make more than two swaps. Find the minimal value v and some sequence of no more than two swaps that will lead to the such value v. Professor makes swaps one by one, each new swap he makes with the new arrays a and b.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 2000) \u2014 the number of elements in the array a.\n\nThe second line contains n integers a_{i} ( - 10^9 \u2264 a_{i} \u2264 10^9) \u2014 the elements of the array a.\n\nThe third line contains integer m (1 \u2264 m \u2264 2000) \u2014 the number of elements in the array b.\n\nThe fourth line contains m integers b_{j} ( - 10^9 \u2264 b_{j} \u2264 10^9) \u2014 the elements of the array b.\n\n\n-----Output-----\n\nIn the first line print the minimal value v = |s_{a} - s_{b}| that can be got with no more than two swaps.\n\nThe second line should contain the number of swaps k (0 \u2264 k \u2264 2).\n\nEach of the next k lines should contain two integers x_{p}, y_{p} (1 \u2264 x_{p} \u2264 n, 1 \u2264 y_{p} \u2264 m) \u2014 the index of the element in the array a and the index of the element in the array b in the p-th swap.\n\nIf there are several optimal solutions print any of them. Print the swaps in order the professor did them.\n\n\n-----Examples-----", "QUESTION:\nProfessor GukiZ has two arrays of integers, a and b. Professor wants to make the sum of the elements in the array a s_{a} as close as possible to the sum of the elements in the array b s_{b}. So he wants to minimize the value v = |s_{a} - s_{b}|.\n\nIn one operation professor can swap some element from the array a and some element from the array b. For example if the array a is [5, 1, 3, 2, 4] and the array b is [3, 3, 2] professor can swap the element 5 from the array a and the element 2 from the array b and get the new array a [2, 1, 3, 2, 4] and the new array b [3, 3, 5].\n\nProfessor doesn't want to make more than two swaps. Find the minimal value v and some sequence of no more than two swaps that will lead to the such value v. Professor makes swaps one by one, each new swap he makes with the new arrays a and b.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 2000) \u2014 the number of elements in the array a.\n\nThe second line contains n integers a_{i} ( - 10^9 \u2264 a_{i} \u2264 10^9) \u2014 the elements of the array a.\n\nThe third line contains integer m (1 \u2264 m \u2264 2000) \u2014 the number of elements in the array b.\n\nThe fourth line contains m integers b_{j} ( - 10^9 \u2264 b_{j} \u2264 10^9) \u2014 the elements of the array b.\n\n\n-----Output-----\n\nIn the first line print the minimal value v = |s_{a} - s_{b}| that can be got with no more than two swaps.\n\nThe second line should contain the number of swaps k (0 \u2264 k \u2264 2).\n\nEach of the next k lines should contain two integers x_{p}, y_{p} (1 \u2264 x_{p} \u2264 n, 1 \u2264 y_{p} \u2264 m) \u2014 the index of the element in the array a and the index of the element in the array b in the p-th swap.\n\nIf there are several optimal solutions print any of them. Print the swaps in order the professor did them.\n\n\n-----Examples-----"], "prompt": "\nQUESTION:\nProfessor GukiZ has two arrays of integers, a and b. Professor wants to make the sum of the elements in the array a s_{a} as close as possible to the sum of the elements in the array b s_{b}. So he wants to minimize the value v = |s_{a} - s_{b}|.\n\nIn one operation professor can swap some element from the array a and some element from the array b. For example if the array a is [5, 1, 3, 2, 4] and the array b is [3, 3, 2] professor can swap the element 5 from the array a and the element 2 from the array b and get the new array a [2, 1, 3, 2, 4] and the new array b [3, 3, 5].\n\nProfessor doesn't want to make more than two swaps. Find the minimal value v and some sequence of no more than two swaps that will lead to the such value v. Professor makes swaps one by one, each new swap he makes with the new arrays a and b.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 2000) \u2014 the number of elements in the array a.\n\nThe second line contains n integers a_{i} ( - 10^9 \u2264 a_{i} \u2264 10^9) \u2014 the elements of the array a.\n\nThe third line contains integer m (1 \u2264 m \u2264 2000) \u2014 the number of elements in the array b.\n\nThe fourth line contains m integers b_{j} ( - 10^9 \u2264 b_{j} \u2264 10^9) \u2014 the elements of the array b.\n\n\n-----Output-----\n\nIn the first line print the minimal value v = |s_{a} - s_{b}| that can be got with no more than two swaps.\n\nThe second line should contain the number of swaps k (0 \u2264 k \u2264 2).\n\nEach of the next k lines should contain two integers x_{p}, y_{p} (1 \u2264 x_{p} \u2264 n, 1 \u2264 y_{p} \u2264 m) \u2014 the index of the element in the array a and the index of the element in the array b in the p-th swap.\n\nIf there are several optimal solutions print any of them. Print the swaps in order the professor did them.\n\n\n-----Examples-----\nInput\n5\n5 4 3 2 1\n4\n1 1 1 1\n\nOutput\n1\n2\n1 1\n4 2\n\nInput\n5\n1 2 3 4 5\n1\n15\n\nOutput\n0\n0\n\nInput\n5\n1 2 3 4 5\n4\n1 2 3 4\n\nOutput\n1\n1\n3 1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}