{"183": {"code": ["n, k, m = map(int, input().split())\ndp = [[0]*10 for _ in range(1001)]\nfor i in range(10):\n    dp[1][i] = 1\nfor i in range(2, 1001):\n    for j in range(10):\n        for k in range(10):\n            dp[i][j] = (dp[i][j] + dp[i-1][k]) % m\nans = 0", "def calc(n, k, m):\n    dp = [[0]*k for _ in range(n+1)]\n    dp[0][0] = 1\n    for i in range(1, n+1):\n        dp[i] = dp[i-1][:]\n        for _ in range(1, k):\n            dp[i][_] = (dp[i][_-1]+dp[i-1][_])%m\n        dp[i][0] = (dp", "n, k, m = map(int, input().split())\ndp = [[0]*10 for _ in range(1001)]\ndp[1][1] = 1\nfor i in range(2, 1001):\n    for j in range(1, 10):\n        dp[i][j] = (dp[i-1][j-1]+dp[i-1][j])%m\nfor _ in range(1, 10):\n    dp[1][", "def solve(n, k, m):\n    dp = [[0] * 10 for _ in range(n + 1)]\n    dp[1][1:] = [1] * 9\n    for i in range(2, n + 1):\n        for j in range(1, 10):\n            dp[i][j] = dp[i - 1][j] * j + sum(dp[i - 1])\n    res = sum(dp[n])\n    res *= res", "def count_numbers(n, k, m):\n    dp = [[0] * 10 for _ in range(n+1)]\n    dp[0][0] = 1\n    for i in range(1, n+1):\n        for j in range(10):\n            for l in range(j+1):\n                dp[i][j] = (dp[i][j] + dp[i-1][l]) % m\n    return sum(dp[n][i] for i"], "prompt": "\nQUESTION:\nAmr doesn't like Maths as he finds it really boring, so he usually sleeps in Maths lectures. But one day the teacher suspected that Amr is sleeping and asked him a question to make sure he wasn't.\n\nFirst he gave Amr two positive integers n and k. Then he asked Amr, how many integer numbers x > 0 exist such that:  Decimal representation of x (without leading zeroes) consists of exactly n digits;  There exists some integer y > 0 such that:   $y \\operatorname{mod} k = 0$;  decimal representation of y is a suffix of decimal representation of x.  \n\nAs the answer to this question may be pretty huge the teacher asked Amr to output only its remainder modulo a number m.\n\nCan you help Amr escape this embarrassing situation?\n\n\n-----Input-----\n\nInput consists of three integers n, k, m (1 \u2264 n \u2264 1000, 1 \u2264 k \u2264 100, 1 \u2264 m \u2264 10^9).\n\n\n-----Output-----\n\nPrint the required number modulo m.\n\n\n-----Examples-----\nInput\n1 2 1000\n\nOutput\n4\nInput\n2 2 1000\n\nOutput\n45\nInput\n5 3 1103\n\nOutput\n590\n\n\n-----Note-----\n\nA suffix of a string S is a non-empty string that can be obtained by removing some number (possibly, zero) of first characters from S.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}