{"389": {"code": ["def fox_and_cheese():\n    a, b = map(int, input().split())\n    if a == b:\n        return 0\n    if (a % 2 == 0 or a % 3 == 0 or a % 5 == 0) and (b % 2 == 0 or b %", "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a % 2 == 0 or a % 3 == 0 or a % 5 == 0 or b % 2 == 0 or b % 3 == 0 or b % 5 == 0:\n        return 1", "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a % 2 == 0 or a % 3 == 0 or a % 5 == 0 or b % 2 == 0 or b % 3 == 0 or b % 5 == 0:\n        return 1", "from math import gcd\n\ndef min_operations(a, b):\n    if a == b:\n        return 0\n    if gcd(a, b) == 1:\n        return -1\n    return min_operations(b, a % b) + 1\n\na, b = map(int", "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a % 2 == 0 and b % 2 == 0 or a % 3 == 0 and b % 3 == 0 or a % 5 == 0 and b % 5 == 0:\n        return -1"], "prompt": "\nQUESTION:\nTwo little greedy bears have found two pieces of cheese in the forest of weight a and b grams, correspondingly. The bears are so greedy that they are ready to fight for the larger piece. That's where the fox comes in and starts the dialog: \"Little bears, wait a little, I want to make your pieces equal\" \"Come off it fox, how are you going to do that?\", the curious bears asked. \"It's easy\", said the fox. \"If the mass of a certain piece is divisible by two, then I can eat exactly a half of the piece. If the mass of a certain piece is divisible by three, then I can eat exactly two-thirds, and if the mass is divisible by five, then I can eat four-fifths. I'll eat a little here and there and make the pieces equal\". \n\nThe little bears realize that the fox's proposal contains a catch. But at the same time they realize that they can not make the two pieces equal themselves. So they agreed to her proposal, but on one condition: the fox should make the pieces equal as quickly as possible. Find the minimum number of operations the fox needs to make pieces equal.\n\n\n-----Input-----\n\nThe first line contains two space-separated integers a and b (1 \u2264 a, b \u2264 10^9). \n\n\n-----Output-----\n\nIf the fox is lying to the little bears and it is impossible to make the pieces equal, print -1. Otherwise, print the required minimum number of operations. If the pieces of the cheese are initially equal, the required number is 0.\n\n\n-----Examples-----\nInput\n15 20\n\nOutput\n3\n\nInput\n14 8\n\nOutput\n-1\n\nInput\n6 6\n\nOutput\n0\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}