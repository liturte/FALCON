{"2135": {"code": ["QUESTION:\nThey say \"years are like dominoes, tumbling one after the other\". But would a year fit into a grid? I don't think so.\n\nLimak is a little polar bear who loves to play. He has recently got a rectangular grid with h rows and w columns. Each cell is a square, either empty (denoted by '.') or forbidden (denoted by '#'). Rows are numbered 1 through h from top to bottom. Columns are numbered 1 through w from left to right.\n\nAlso, Limak has a single domino. He wants to put it somewhere in a grid. A domino will occupy exactly two adjacent cells, located either in one row or in one column. Both adjacent cells must be empty and must be inside a grid.\n\nLimak needs more fun and thus he is going to consider some queries. In each query he chooses some rectangle and wonders, how many way are there to put a single domino inside of the chosen rectangle?\n\n\n-----Input-----\n\nThe first line of the input contains two integers h and w (1 \u2264 h, w \u2264 500)\u00a0\u2013 the number of rows and the number of columns, respectively.\n\nThe next h lines describe a grid. Each line contains a string of the length w. Each character is either '.' or '#'\u00a0\u2014 denoting an empty or forbidden cell, respectively.\n\nThe next line contains a single integer q (1 \u2264 q \u2264 100 000)\u00a0\u2014 the number of queries.\n\nEach of the next q lines contains four integers r1_{i}, c1_{i}, r2_{i}, c2_{i} (1 \u2264 r1_{i} \u2264 r2_{i} \u2264 h, 1 \u2264 c1_{i} \u2264 c2_{i} \u2264 w)\u00a0\u2014 the i-th query. Numbers r1_{i} and c1_{i} denote the row and the column (respectively) of the upper left cell of the rectangle. Numbers r2_{i} and c2_{i} denote the row and the column (respectively) of the bottom right cell of the rectangle.\n\n\n-----Output-----\n\nPrint q integers, i-th should be equal to the number of ways to put a single domino inside the i-th rectangle.\n\n\n-----Examples-----\nInput\n5 8\n....#..#\n.#......\n##.#....\n##..#.##\n........\n4\n1 1 2 3\n4 1 4 1\n1", "QUESTION:\nThey say \"years are like dominoes, tumbling one after the other\". But would a year fit into a grid? I don't think so.\n\nLimak is a little polar bear who loves to play. He has recently got a rectangular grid with h rows and w columns. Each cell is a square, either empty (denoted by '.') or forbidden (denoted by '#'). Rows are numbered 1 through h from top to bottom. Columns are numbered 1 through w from left to right.\n\nAlso, Limak has a single domino. He wants to put it somewhere in a grid. A domino will occupy exactly two adjacent cells, located either in one row or in one column. Both adjacent cells must be empty and must be inside a grid.\n\nLimak needs more fun and thus he is going to consider some queries. In each query he chooses some rectangle and wonders, how many way are there to put a single domino inside of the chosen rectangle?\n\n\n-----Input-----\n\nThe first line of the input contains two integers h and w (1 \u2264 h, w \u2264 500)\u00a0\u2013 the number of rows and the number of columns, respectively.\n\nThe next h lines describe a grid. Each line contains a string of the length w. Each character is either '.' or '#'\u00a0\u2014 denoting an empty or forbidden cell, respectively.\n\nThe next line contains a single integer q (1 \u2264 q \u2264 100 000)\u00a0\u2014 the number of queries.\n\nEach of the next q lines contains four integers r1_{i}, c1_{i}, r2_{i}, c2_{i} (1 \u2264 r1_{i} \u2264 r2_{i} \u2264 h, 1 \u2264 c1_{i} \u2264 c2_{i} \u2264 w)\u00a0\u2014 the i-th query. Numbers r1_{i} and c1_{i} denote the row and the column (respectively) of the upper left cell of the rectangle. Numbers r2_{i} and c2_{i} denote the row and the column (respectively) of the bottom right cell of the rectangle.\n\n\n-----Output-----\n\nPrint q integers, i-th should be equal to the number of ways to put a single domino inside the i-th rectangle.\n\n\n-----Examples-----\nInput\n5 8\n....#..#\n.#......\n##.#....\n##..#.##\n........\n4\n1 1 2 3\n4 1 4 1\n1", "QUESTION:\nThey say \"years are like dominoes, tumbling one after the other\". But would a year fit into a grid? I don't think so.\n\nLimak is a little polar bear who loves to play. He has recently got a rectangular grid with h rows and w columns. Each cell is a square, either empty (denoted by '.') or forbidden (denoted by '#'). Rows are numbered 1 through h from top to bottom. Columns are numbered 1 through w from left to right.\n\nAlso, Limak has a single domino. He wants to put it somewhere in a grid. A domino will occupy exactly two adjacent cells, located either in one row or in one column. Both adjacent cells must be empty and must be inside a grid.\n\nLimak needs more fun and thus he is going to consider some queries. In each query he chooses some rectangle and wonders, how many way are there to put a single domino inside of the chosen rectangle?\n\n\n-----Input-----\n\nThe first line of the input contains two integers h and w (1 \u2264 h, w \u2264 500)\u00a0\u2013 the number of rows and the number of columns, respectively.\n\nThe next h lines describe a grid. Each line contains a string of the length w. Each character is either '.' or '#'\u00a0\u2014 denoting an empty or forbidden cell, respectively.\n\nThe next line contains a single integer q (1 \u2264 q \u2264 100 000)\u00a0\u2014 the number of queries.\n\nEach of the next q lines contains four integers r1_{i}, c1_{i}, r2_{i}, c2_{i} (1 \u2264 r1_{i} \u2264 r2_{i} \u2264 h, 1 \u2264 c1_{i} \u2264 c2_{i} \u2264 w)\u00a0\u2014 the i-th query. Numbers r1_{i} and c1_{i} denote the row and the column (respectively) of the upper left cell of the rectangle. Numbers r2_{i} and c2_{i} denote the row and the column (respectively) of the bottom right cell of the rectangle.\n\n\n-----Output-----\n\nPrint q integers, i-th should be equal to the number of ways to put a single domino inside the i-th rectangle.\n\n\n-----Examples-----\nInput\n5 8\n....#..#\n.#......\n##.#....\n##..#.##\n........\n4\n1 1 2 3\n4 1 4 1\n1", "QUESTION:\nThey say \"years are like dominoes, tumbling one after the other\". But would a year fit into a grid? I don't think so.\n\nLimak is a little polar bear who loves to play. He has recently got a rectangular grid with h rows and w columns. Each cell is a square, either empty (denoted by '.') or forbidden (denoted by '#'). Rows are numbered 1 through h from top to bottom. Columns are numbered 1 through w from left to right.\n\nAlso, Limak has a single domino. He wants to put it somewhere in a grid. A domino will occupy exactly two adjacent cells, located either in one row or in one column. Both adjacent cells must be empty and must be inside a grid.\n\nLimak needs more fun and thus he is going to consider some queries. In each query he chooses some rectangle and wonders, how many way are there to put a single domino inside of the chosen rectangle?\n\n\n-----Input-----\n\nThe first line of the input contains two integers h and w (1 \u2264 h, w \u2264 500)\u00a0\u2013 the number of rows and the number of columns, respectively.\n\nThe next h lines describe a grid. Each line contains a string of the length w. Each character is either '.' or '#'\u00a0\u2014 denoting an empty or forbidden cell, respectively.\n\nThe next line contains a single integer q (1 \u2264 q \u2264 100 000)\u00a0\u2014 the number of queries.\n\nEach of the next q lines contains four integers r1_{i}, c1_{i}, r2_{i}, c2_{i} (1 \u2264 r1_{i} \u2264 r2_{i} \u2264 h, 1 \u2264 c1_{i} \u2264 c2_{i} \u2264 w)\u00a0\u2014 the i-th query. Numbers r1_{i} and c1_{i} denote the row and the column (respectively) of the upper left cell of the rectangle. Numbers r2_{i} and c2_{i} denote the row and the column (respectively) of the bottom right cell of the rectangle.\n\n\n-----Output-----\n\nPrint q integers, i-th should be equal to the number of ways to put a single domino inside the i-th rectangle.\n\n\n-----Examples-----\nInput\n5 8\n....#..#\n.#......\n##.#....\n##..#.##\n........\n4\n1 1 2 3\n4 1 4 1\n1", "QUESTION:\nThey say \"years are like dominoes, tumbling one after the other\". But would a year fit into a grid? I don't think so.\n\nLimak is a little polar bear who loves to play. He has recently got a rectangular grid with h rows and w columns. Each cell is a square, either empty (denoted by '.') or forbidden (denoted by '#'). Rows are numbered 1 through h from top to bottom. Columns are numbered 1 through w from left to right.\n\nAlso, Limak has a single domino. He wants to put it somewhere in a grid. A domino will occupy exactly two adjacent cells, located either in one row or in one column. Both adjacent cells must be empty and must be inside a grid.\n\nLimak needs more fun and thus he is going to consider some queries. In each query he chooses some rectangle and wonders, how many way are there to put a single domino inside of the chosen rectangle?\n\n\n-----Input-----\n\nThe first line of the input contains two integers h and w (1 \u2264 h, w \u2264 500)\u00a0\u2013 the number of rows and the number of columns, respectively.\n\nThe next h lines describe a grid. Each line contains a string of the length w. Each character is either '.' or '#'\u00a0\u2014 denoting an empty or forbidden cell, respectively.\n\nThe next line contains a single integer q (1 \u2264 q \u2264 100 000)\u00a0\u2014 the number of queries.\n\nEach of the next q lines contains four integers r1_{i}, c1_{i}, r2_{i}, c2_{i} (1 \u2264 r1_{i} \u2264 r2_{i} \u2264 h, 1 \u2264 c1_{i} \u2264 c2_{i} \u2264 w)\u00a0\u2014 the i-th query. Numbers r1_{i} and c1_{i} denote the row and the column (respectively) of the upper left cell of the rectangle. Numbers r2_{i} and c2_{i} denote the row and the column (respectively) of the bottom right cell of the rectangle.\n\n\n-----Output-----\n\nPrint q integers, i-th should be equal to the number of ways to put a single domino inside the i-th rectangle.\n\n\n-----Examples-----\nInput\n5 8\n....#..#\n.#......\n##.#....\n##..#.##\n........\n4\n1 1 2 3\n4 1 4 1\n1"], "prompt": "\nQUESTION:\nThey say \"years are like dominoes, tumbling one after the other\". But would a year fit into a grid? I don't think so.\n\nLimak is a little polar bear who loves to play. He has recently got a rectangular grid with h rows and w columns. Each cell is a square, either empty (denoted by '.') or forbidden (denoted by '#'). Rows are numbered 1 through h from top to bottom. Columns are numbered 1 through w from left to right.\n\nAlso, Limak has a single domino. He wants to put it somewhere in a grid. A domino will occupy exactly two adjacent cells, located either in one row or in one column. Both adjacent cells must be empty and must be inside a grid.\n\nLimak needs more fun and thus he is going to consider some queries. In each query he chooses some rectangle and wonders, how many way are there to put a single domino inside of the chosen rectangle?\n\n\n-----Input-----\n\nThe first line of the input contains two integers h and w (1 \u2264 h, w \u2264 500)\u00a0\u2013 the number of rows and the number of columns, respectively.\n\nThe next h lines describe a grid. Each line contains a string of the length w. Each character is either '.' or '#'\u00a0\u2014 denoting an empty or forbidden cell, respectively.\n\nThe next line contains a single integer q (1 \u2264 q \u2264 100 000)\u00a0\u2014 the number of queries.\n\nEach of the next q lines contains four integers r1_{i}, c1_{i}, r2_{i}, c2_{i} (1 \u2264 r1_{i} \u2264 r2_{i} \u2264 h, 1 \u2264 c1_{i} \u2264 c2_{i} \u2264 w)\u00a0\u2014 the i-th query. Numbers r1_{i} and c1_{i} denote the row and the column (respectively) of the upper left cell of the rectangle. Numbers r2_{i} and c2_{i} denote the row and the column (respectively) of the bottom right cell of the rectangle.\n\n\n-----Output-----\n\nPrint q integers, i-th should be equal to the number of ways to put a single domino inside the i-th rectangle.\n\n\n-----Examples-----\nInput\n5 8\n....#..#\n.#......\n##.#....\n##..#.##\n........\n4\n1 1 2 3\n4 1 4 1\n1 2 4 5\n2 5 5 8\n\nOutput\n4\n0\n10\n15\n\nInput\n7 39\n.......................................\n.###..###..#..###.....###..###..#..###.\n...#..#.#..#..#.........#..#.#..#..#...\n.###..#.#..#..###.....###..#.#..#..###.\n.#....#.#..#....#.....#....#.#..#..#.#.\n.###..###..#..###.....###..###..#..###.\n.......................................\n6\n1 1 3 20\n2 10 6 30\n2 10 7 30\n2 2 7 7\n1 7 7 7\n1 8 7 8\n\nOutput\n53\n89\n120\n23\n0\n2\n\n\n\n-----Note-----\n\nA red frame below corresponds to the first query of the first sample. A domino can be placed in 4 possible ways. [Image]\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}