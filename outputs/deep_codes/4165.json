{"4165": {"code": ["import sys\n\ndef can_draw(sides):\n    sides.sort(reverse=True)\n    return sides[0] < sum(sides[1:])\n\nN = int(sys.stdin.readline().strip())\nsides = list(map(int, sys.stdin.readline().strip().split()))\n\nif can_draw(sides):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n\nThis Python program reads the number of sides N and the lengths of the sides from the standard input. It sorts the sides in descending order and checks if the longest side is strictly shorter than the sum of the other sides. If it is, it prints \"Yes\"; otherwise, it prints \"No\".\n\nPlease note that this code assumes that the input is valid and does not handle any potential errors.", "import sys\n\ndef solve():\n    n = int(sys.stdin.readline().strip())\n    lengths = list(map(int, sys.stdin.readline().strip().split()))\n    lengths.sort(reverse=True)\n    if lengths[0] < sum(lengths[1:]):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    solve()\n\n\nThis program reads the number of sides and the lengths of the sides from standard input. It sorts the lengths in descending order and checks if the longest side is shorter than the sum of the other sides. If so, it prints 'Yes'; otherwise, it prints 'No'.\n\nPlease note that this program uses the `sys.stdin.readline()` function to read the input from standard input, and the `map()` function to convert the input lengths from strings to integers. The `sort()` function is used to sort the lengths in descending order.\n\nThe `if __name__ == '__main", "import sys\n\ndef can_be_drawn(sides):\n    sides.sort()\n    return sides[-1] < sum(sides[:-1])\n\nN = int(sys.stdin.readline())\nL = list(map(int, sys.stdin.readline().split()))\n\nprint('Yes' if can_be_drawn(L) else 'No')\n\n\nThis program reads the number of sides N and the lengths of the sides from the standard input. It then checks if the polygon can be drawn by sorting the lengths of the sides and checking if the longest side is strictly shorter than the sum of the other sides. The result is then printed to the standard output.\n\nThis solution assumes that the input is correctly formatted and that the lengths of the sides are integers. It also assumes that the input is read from the standard input. If these assumptions are not valid, the solution may need to be adapted.\n\nThe time complexity of this solution is O(n log n) due to the sorting of the sides. The space complexity is O(n) because the", "import sys\n\ndef check_polygon(n, lengths):\n    max_length = max(lengths)\n    other_lengths = sum(lengths) - max_length\n    if max_length < other_lengths:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nn = int(sys.stdin.readline().strip())\nlengths = list(map(int, sys.stdin.readline().strip().split()))\nprint(check_polygon(n, lengths))\n\n\nThis code reads the number of sides `n` and the lengths of the sides from the standard input. It then uses the `check_polygon` function to determine if a polygon can be drawn, based on the theorem. The result is printed to the standard output.", "import sys\n\nN = int(sys.stdin.readline())\nsides = list(map(int, sys.stdin.readline().split()))\n\nsides.sort(reverse=True)\n\nif sides[0] < sum(sides[1:]):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n\nThis solution reads the number of sides N and the lengths of the sides from the standard input. It then sorts the sides in descending order and checks if the longest side is shorter than the sum of the lengths of the other sides. If this condition is met, it prints \"Yes\", otherwise it prints \"No\"."], "prompt": "\nQUESTION:\nDetermine if an N-sided polygon (not necessarily convex) with sides of length L_1, L_2, ..., L_N can be drawn in a two-dimensional plane.\nYou can use the following theorem:\nTheorem: an N-sided polygon satisfying the condition can be drawn if and only if the longest side is strictly shorter than the sum of the lengths of the other N-1 sides.\n\n-----Constraints-----\n - All values in input are integers.\n - 3 \\leq N \\leq 10\n - 1 \\leq L_i \\leq 100\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nL_1 L_2 ... L_N\n\n-----Output-----\nIf an N-sided polygon satisfying the condition can be drawn, print Yes; otherwise, print No.\n\n-----Sample Input-----\n4\n3 8 5 1\n\n-----Sample Output-----\nYes\n\nSince 8 < 9 = 3 + 5 + 1, it follows from the theorem that such a polygon can be drawn on a plane.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}