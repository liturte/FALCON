{"3674": {"code": ["def find_number(m, n, p, q):\n    for i in range(1, 10):\n        for j in range(10**(m-n-1), 10**(m-n)):\n            num = int(str(i) + '0'*(n-1) + str(j) + '0'*(m-n-1))\n            if num % q == p * int('8'*n):\n                return num\n    return 'IMPOSSIBLE'\n\nm, n, p", "def find_number(m, n, p, q):\n    if m * p < q:\n        return 'IMPOSSIBLE'\n    else:\n        number = '1' + '0' * (m - n - 1) + str(p) + '0' * (n - 1)\n        return str(int(number) * q)\n\nm, n, p, q = map(int, input().split())\nprint(find_number(m, n, p, q))\n\nThis program works by creating", "def find_number(m, n, p, q):\n    if m * 9 < p * q:\n        return \"IMPOSSIBLE\"\n\n    digits = [0] * m\n    digits[0:n] = [1] * n\n    remaining = m - n\n\n    while remaining > 0:\n        if remaining == 1:\n            digits[-1] = p * q\n        else:\n            digits[-remaining:-1] = [0] * (remaining - 1)\n            digits[-", "from itertools import product\n\ndef solve(m, n, p, q):\n    for i in range(1, 10):\n        for j in range(10):\n            if m == 2:\n                if i * 10 + j == p * q:\n                    return str(i) + str(j)\n            else:\n                for k in range(10):\n                    if i * 100 + j * 10 + k == p * q:\n                        return str(i) + str(j) + str", "def find_number(m, n, p, q):\n    for i in range(10**(m-1), 10**m):\n        s = str(i)\n        t = int(s[n:])\n        if int(s[:n] + str(p) + s[n:]) * q == i:\n            return s[n:] + str(p) + s[n:]\n    return \"IMPOSSIBLE\"\n\nm, n, p, q = map(int, input().split())\nprint"], "prompt": "\nQUESTION:\nFilip came across an interesting math problem: He was supposed to find a five-digit number with the following property. If you cross out its first two digits, then place the digit $8$ after the remaining three digits to form a four-digit number and multiply the resulting four-digit number by $4$, you will get the original five-digit number.\n\nAfter thinking for a while, he found his answer. But now he is wondering, what if he had to find an $m$-digit number, where you have to cross out the first $n$ digits, place a (possibly multi-digit) number $p$ after the remaining $(m-n)$-digit number, then multiply this new number by a number $q$ to get the original number? Please help him!\n\n(Note: Every $m$, $p$ and $q$ needs to start with a non-zero digit.)\n\n-----Input-----\nThe input consists of a single line containing four numbers: $m$, $n$, $p$, and $q$. You may assume that each number is positive and not larger than $1000000$. You may also assume that $m\\geq n$.\n\n-----Output-----\nThe output consists of a single line. If such an $m$-digit number exists, the line contains the smallest such number. If no such number exists, the line contains the string IMPOSSIBLE.\n\n-----Examples-----\nSample Input:\n5 2 8 4\nSample Output:\n20512\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}