{"4910": {"code": ["from collections import Counter\n\ndef costume_contest(N, responses):\n    counts = Counter(responses)\n    max_count = max(counts.values())\n    winners = sorted([category for category, count in counts.items() if count == max_count])\n    return winners\n\nN = int(input())\nresponses = [input() for _ in range(N)]\nprint(costume_contest(N, responses)[0])\n\n\nExplanation:", "from collections import Counter\n\ndef best_costume(n):\n    costumes = [input() for _ in range(n)]\n    counts = Counter(costumes)\n    max_count = max(counts.values())\n    most_common_costumes = [k for k, v in counts.items() if v == max_count]\n    most_common_costumes.sort()\n    return most_common_costumes\n\nn = int(input())\nprint(best_", "from collections import Counter\n\ndef most_likely_costume(N):\n    costumes = [input() for _ in range(N)]\n    counts = Counter(costumes)\n    max_count = max(counts.values())\n    most_likely_costumes = [costume for costume, count in counts.items() if count == max_count]\n    return sorted(most_likely_costumes)\n\nprint(most_likely_costume(int(input()))[0])", "from collections import Counter\n\ndef costume_contest(n):\n    costumes = [input() for _ in range(n)]\n    costume_counts = Counter(costumes)\n    max_count = max(costume_counts.values())\n    most_likely_costumes = [costume for costume, count in costume_counts.items() if count == max_count]\n    return sorted(most_likely_costumes)\n\nprint('\\n'.join(costume", "from collections import Counter\n\ndef costume_contest(N, responses):\n    counts = Counter(responses)\n    max_count = max(counts.values())\n    winners = [category for category, count in counts.items() if count == max_count]\n    return sorted(winners)\n\nN = int(input())\nresponses = [input() for _ in range(N)]\nprint(costume_contest(N, responses)[0])\n\nThis Python program"], "prompt": "\nQUESTION:\nEveryone knows that the highlight of Halloween at HiQ is their annual costume contest. In their costume contest, they have $D$ categories of costumes that they give a \u201cbest of\u201d award to, such as most malignant mummy, most ghoulish ghost and most wicked witch. Judges are very lazy, however. When picking a winner in each of the costume categories, they simply pick one of the costumes at random to give the award to.\n\nThis year, you want to win. After 5 consecutive years as runner-up in the category darkest demon you have decided to throw away your costume and only optimize for winning. You have polled your colleagues about what category of costume they are entering with in the contest. Given their responses, can you figure our what costume you should bring to maximize your chance of winning?\n\n-----Input-----\nThe first line of input contains an integer $N$ ($1 \\le N \\le 1000$), the number of colleagues you have polled on their costumes. The next $N$ lines contains their responses. Each response is a string of between $1$ and $20$ letters a-z. You know that for each category in the contest, you have at least one colleague participating with such a costume.\n\n-----Output-----\nOutput the costume category you have the highest chance of winning with. If multiple categories are tied for highest, you should output them all in lexicographic order.\n\n-----Examples-----\nSample Input:\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\nSample Output:\nghost\nmummy\nwitch\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}