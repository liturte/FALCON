{"1125": {"code": ["def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    dp = [[0] * (n + 1) for _ in range(n +", "def min_stones_to_move():\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    A.sort()\n\n    if A[0] == A[1]:", "from sys import stdin\n\ndef solve():\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    s = sum(a)\n    dp", "import sys\n\ndef solve():\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n\n    for i in range", "import sys\n\ndef min_moves():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # calculate the bitwise"], "prompt": "\nQUESTION:\nThere are N piles of stones. The i-th pile has A_i stones.\nAoki and Takahashi are about to use them to play the following game:\n - Starting with Aoki, the two players alternately do the following operation:\n - Operation: Choose one pile of stones, and remove one or more stones from it.\n - When a player is unable to do the operation, he loses, and the other player wins.\nWhen the two players play optimally, there are two possibilities in this game: the player who moves first always wins, or the player who moves second always wins, only depending on the initial number of stones in each pile.\nIn such a situation, Takahashi, the second player to act, is trying to guarantee his win by moving at least zero and at most (A_1 - 1) stones from the 1-st pile to the 2-nd pile before the game begins.\nIf this is possible, print the minimum number of stones to move to guarantee his victory; otherwise, print -1 instead.\n\n-----Constraints-----\n - 2 \\leq N \\leq 300\n - 1 \\leq A_i \\leq 10^{12}\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA_1 \\ldots A_N\n\n-----Output-----\nPrint the minimum number of stones to move to guarantee Takahashi's win; otherwise, print -1 instead.\n\n-----Sample Input-----\n2\n5 3\n\n-----Sample Output-----\n1\n\nWithout moving stones, if Aoki first removes 2 stones from the 1-st pile, Takahashi cannot win in any way.\nIf Takahashi moves 1 stone from the 1-st pile to the 2-nd before the game begins so that both piles have 4 stones, Takahashi can always win by properly choosing his actions.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}