{"3465": {"code": ["n = int(input())\nroads = [list(map(int, input().split())) for _ in range(n)]\n\ncity_roads = {}\nfor i, road in enumerate(roads, 1):\n    city_roads[road[0]] = (road[1], i)\n\nfor city, (_, road_id) in sorted(city_roads.items(), key=lambda x: x[0]):", "from collections import defaultdict\n\ndef solve(n, roads):\n    graph = defaultdict(list)\n    for a, b in roads:\n        graph[a].append(b)\n        graph[b].append(a)\n    \n    visited = [False] * (n + 1)\n    res = []\n    for i in range(1, n + 1):\n        if not visited[i]:\n            dfs(i, -1,", "n = int(input())\nroads = [tuple(map(int, input().split())) for _ in range(n)]\n\nbuilt_roads = [(i, i+1) for i in range(1, n)]\nbuilt_roads.append((n, 1))\n\nfor road in built_roads:\n    print(*road)\n\n\nEXPLANATION:\nThe problem is about assigning roads to cities in a", "n = int(input())\nroads = [tuple(map(int, input().split())) for _ in range(n)]\n\nbuilt = [0] * (n + 1)\nbuilt_roads = []\n\nfor a, b in roads:\n    if built[a] == 0 and built[b] == 0:\n        built[a] = b\n        built[b] = a\n        built_roads.append((a, b", "def solve():\n    n = int(input())\n    graph = [[] for _ in range(n+1)]\n    for _ in range(n):\n        a, b = map(int, input().split())\n        graph[a].append(b)\n        graph[b].append(a)\n    visited = [False] * (n+1)\n    parent = [0] * (n+1)\n    def dfs(node):"], "prompt": "\nQUESTION:\nThe people of Absurdistan discovered how to build roads only last year. After the discovery, each city decided to build its own road, connecting the city to some other city. Each newly built road can be used in both directions.\n\nYou bought a tourist guide which has a map of the country with the newly built roads. However, since you are very interested in history, you would like to know which city built which road.\n\nGiven the description of $n$ roads, can you find an assignment of roads to $n$ cities, such that each city built one road? If there are multiple assignments, you are happy with any one. At least one solution is guaranteed to exist.\n\n-----Input-----\nThe first line contains an integer $n$ $(2\\le n\\le 100000)$ \u2013 the number of cities and roads. Then follow $n$ lines with $2$ numbers each. A line containing \u201c$a$ $b$\u201d indicates that there is a road between cities $a$ and $b$, $1 \\le a, b\\le n, a \\not= b$. There can be multiple roads between the same pair of cities.\n\n-----Output-----\nPrint $n$ lines with two integers \u201c$a$$b$\u201d denoting that a road between $a$ and $b$ was built by city $a$. Each road from the input must appear exactly once in the output. If there are multiple solutions, you can print any one and you can print the roads in any order.\n\n-----Examples-----\nSample Input:\n4\n1 2\n2 3\n3 1\n4 1\nSample Output:\n4 1\n2 1\n3 2\n1 3\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}