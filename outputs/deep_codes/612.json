{"612": {"code": ["n", "def", "n", "def", "n"], "prompt": "\nQUESTION:\nDevu being a small kid, likes to play a lot, but he only likes to play with arrays. While playing he came up with an interesting question which he could not solve, can you please solve it for him?\n\nGiven an array consisting of distinct integers. Is it possible to partition the whole array into k disjoint non-empty parts such that p of the parts have even sum (each of them must have even sum) and remaining k - p have odd sum? (note that parts need not to be continuous).\n\nIf it is possible to partition the array, also give any possible way of valid partitioning.\n\n\n-----Input-----\n\nThe first line will contain three space separated integers n, k, p (1 \u2264 k \u2264 n \u2264 10^5;\u00a00 \u2264 p \u2264 k). The next line will contain n space-separated distinct integers representing the content of array a: a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^9).\n\n\n-----Output-----\n\nIn the first line print \"YES\" (without the quotes) if it is possible to partition the array in the required way. Otherwise print \"NO\" (without the quotes).\n\nIf the required partition exists, print k lines after the first line. The i^{th} of them should contain the content of the i^{th} part. Print the content of the part in the line in the following way: firstly print the number of elements of the part, then print all the elements of the part in arbitrary order. There must be exactly p parts with even sum, each of the remaining k - p parts must have odd sum.\n\nAs there can be multiple partitions, you are allowed to print any valid partition.\n\n\n-----Examples-----\nInput\n5 5 3\n2 6 10 5 9\n\nOutput\nYES\n1 9\n1 5\n1 10\n1 6\n1 2\n\nInput\n5 5 3\n7 14 2 9 5\n\nOutput\nNO\n\nInput\n5 3 1\n1 2 3 7 5\n\nOutput\nYES\n3 5 1 3\n1 7\n1 2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}