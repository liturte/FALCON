{"3288": {"code": ["def", "import", "import", "import", "import"], "prompt": "\nQUESTION:\nA string is called double free if no two adjacent letters are the same.\n\nA string is called $k$-incremental if for all values of $j$ in the range $[1,k]$, there exists exactly one character with $j$ occurrences, and the string\u2019s length is $1+2+3+\\ldots +(k-1)+k$. For example, if $k=3$, then a $3$-incremental string should have one character appear once, another twice, another three times, in any order, for a total string length of $6$.\n\nA string is both $k$-incremental and double free if it meets both these criteria. Now consider examining all such strings of lowercase letters for a given $k$ in alphabetical order. Consider the following examples.\n\n$k=2$: aba, aca, ada, \u2026, aya, aza, bab, bcb, bdb, \u2026, zxz, zyz\n\n$k=3$: ababac, ababad, \u2026, ababay, ababaz, ababca, \u2026, zyzyzx\n\nWhat is the $n^\\mathrm {th}$ string in an alphabetized list of all $k$-incremental, double free strings?\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. There will be exactly one line of input. It will contain two integers, $k$ and $n$ ($1 \\le k \\le 26, 1 \\le n \\le 10^{18}$), which is asking for the $n^\\mathrm {th}$ string in the alphabetically sorted list of all $k$-incremental, double free strings.\n\n-----Output-----\nOutput the $n^\\mathrm {th}$ $k$-incremental, double free string in the alphabetized list. If no such string exists, output $-1$.\n\n-----Examples-----\nSample Input 1:\n2 650\nSample Output 1:\nzyz\n\nSample Input 2:\n2 651\nSample Output 2:\n-1\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}