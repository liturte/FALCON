{"2644": {"code": ["N", "def", "def", "def", "import"], "prompt": "\nQUESTION:\nWe have a permutation P = P_1, P_2, \\ldots, P_N of 1, 2, \\ldots, N.\nYou have to do the following N - 1 operations on P, each exactly once, in some order:\n - Swap P_1 and P_2.\n - Swap P_2 and P_3.\n\\vdots\n - Swap P_{N-1} and P_N.\nYour task is to sort P in ascending order by configuring the order of operations.\nIf it is impossible, print -1 instead.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq N \\leq 2 \\times 10^5\n - P is a permutation of 1, 2, \\ldots, N.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nP_1 P_2 \\ldots P_N\n\n-----Output-----\nIf it is impossible to sort P in ascending order by configuring the order of operations, print -1.\nOtherwise, print N-1 lines to represent a sequence of operations that sorts P in ascending order.\nThe i-th line (1 \\leq i \\leq N - 1) should contain j, where the i-th operation swaps P_j and P_{j + 1}.\nIf there are multiple such sequences of operations, any of them will be accepted.\n\n-----Sample Input-----\n5\n2 4 1 5 3\n\n-----Sample Output-----\n4\n2\n3\n1\n\nThe following sequence of operations sort P in ascending order:\n - First, swap P_4 and P_5, turning P into 2, 4, 1, 3, 5.\n - Then, swap P_2 and P_3, turning P into 2, 1, 4, 3, 5.\n - Then, swap P_3 and P_4, turning P into 2, 1, 3, 4, 5.\n - Finally, swap P_1 and P_2, turning P into 1, 2, 3, 4, 5.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}