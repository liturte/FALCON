{"2039": {"code": ["n = int(input())\na = list(map(int, input().split()))\nprint(sum(a[i] < a[i-1] and a[i] < a[i+1] or a[i] > a[i-1] and a[i] > a[i+1] for i in range(1, n-1)))\n\n\nEXPLANATION:\nThis python program works by taking an integer input 'n' and a list 'a' from the user. Then it checks for local extrema by comparing each element 'a[i]' with its neighbours 'a[i-1]' and 'a[i+1]'. If 'a", "def local_extrema(n, arr):\n    count = 0\n    for i in range(1, n-1):\n        if arr[i] < arr[i-1] and arr[i] < arr[i+1]:\n            count += 1\n        elif arr[i] > arr[i-1] and arr[i] > arr[i+1]:\n            count += 1\n    return count\n\nn = int(input())\narr = list(map(int, input().split()))\nprint(local_extrema(n, arr))\n\n\nThis code takes in an integer n and an array of n integers, and it counts the number of local extre", "n = int(input())\na = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n-1):\n    if a[i-1] > a[i] and a[i+1] > a[i]:\n        count += 1\n    elif a[i-1] < a[i] and a[i+1] < a[i]:\n        count += 1\n\nprint(count)\n\n\nExplanation:\nThe code takes the number of elements and the elements of the array as input. It then iterates over the array, skipping the first and last elements because they only have one neighbour. For each element, it", "n = int(input())\na = list(map(int, input().split()))\n\nextrema = 0\nfor i in range(1, n-1):\n    if a[i-1] > a[i] and a[i+1] > a[i]:\n        extrema += 1\n    elif a[i-1] < a[i] and a[i+1] < a[i]:\n        extrema += 1\n\nprint(extrema)\n\n\nThis code works by iterating through the array from the second element to the second-to-last element (because we're considering the neighbours). For each element, it checks if it is", "n = int(input())\na = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n - 1):\n    if a[i] < a[i - 1] and a[i] < a[i + 1]:\n        count += 1\n    elif a[i] > a[i - 1] and a[i] > a[i + 1]:\n        count += 1\nprint(count)\n\nThis solution works by iterating over the array from the second element to the second to last element. For each element, it checks if it is less than its two neighbours (for a local minimum) or greater than its two neighb"], "prompt": "\nQUESTION:\nYou are given an array a. Some element of this array a_{i} is a local minimum iff it is strictly less than both of its neighbours (that is, a_{i} < a_{i} - 1 and a_{i} < a_{i} + 1). Also the element can be called local maximum iff it is strictly greater than its neighbours (that is, a_{i} > a_{i} - 1 and a_{i} > a_{i} + 1). Since a_1 and a_{n} have only one neighbour each, they are neither local minima nor local maxima.\n\nAn element is called a local extremum iff it is either local maximum or local minimum. Your task is to calculate the number of local extrema in the given array.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 1000) \u2014 the number of elements in array a.\n\nThe second line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 1000) \u2014 the elements of array a.\n\n\n-----Output-----\n\nPrint the number of local extrema in the given array.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n\nOutput\n0\n\nInput\n4\n1 5 2 5\n\nOutput\n2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}