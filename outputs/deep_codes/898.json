{"898": {"code": ["from math import gcd\n\nN, M = map(int, input().split())\n\ndef solve(N, M):\n    if N > M:\n        N, M = M, N\n    while N > 1:\n        M -= N\n        g = gcd(N, M)\n        if g == 1:\n            break\n        N = g\n    return M\n\nprint(solve(N, M))\n\n\nEXPLANATION:\nThis Python program uses the built-in gcd function from the math module to find the greatest common divisor of two numbers. The main idea of the program is to subtract the smallest possible number from M and find the gcd of the resulting number and the remaining M. We keep doing this until N becomes 1 or the gcd becomes 1. In the end, we return M as the maximum possible value.\n\nThis program is efficient because it uses the gcd function, which has a time complexity of O(log min(N, M)).\n\nThe program also ensures that N is always less than or equal to M, which is important because the gcd function always returns the gcd of", "import math\n\ndef gcd_max(n, m):\n    return math.gcd(n, m)\n\nn, m = map(int, input().split())\nprint(gcd_max(n, m))\n\n\nThis program uses Python's built-in `math.gcd()` function to find the greatest common divisor of two numbers. In this case, the two numbers are `n` and `m`. The `map()` function is used to convert the input string into integers, and the `input().split()` function is used to split the input string into two parts. The maximum possible value of the greatest common divisor of a sequence a_1, a_2, ..., a_N that satisfies the condition is simply the greatest common divisor of `n` and `m`.\n\nPlease note that the `math.gcd()` function is available only in Python 3.5 and later. If you are using an earlier version of Python, you will need to implement the Euclidean algorithm yourself to find the greatest common divisor.", "from math import gcd\n\nN, M = map(int, input().split())\n\nprint(M // gcd(N, M))\n\nThis Python program uses the built-in `gcd` function from the `math` module to calculate the greatest common divisor of N and M. The result is then printed.\n\nThe reason this works is because the sum of the sequence a is M, which means the sequence a is distributed evenly among the numbers from 1 to M. The maximum possible value of the greatest common divisor of a sequence a_1, a_2, ..., a_N that satisfies the condition is the greatest common divisor of the numbers in the sequence. In this case, this is simply the greatest common divisor of N and M.\n\nTherefore, the maximum possible value of the greatest common divisor of a_1, a_2, ..., a_N that satisfies the condition is M // gcd(N, M), where // is the integer division operator. This is because M // gcd(N, M) is the largest number that can be obtained by dividing M by the greatest common divisor of N and M.", "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef solve(n, m):\n    if n > m:\n        n, m = m, n\n    g = 1\n    while n > 0:\n        g = gcd(g, m // n)\n        m -= n\n        n -= 1\n    return g\n\nn, m = map(int, input().split())\nprint(solve(n, m))\n\n\nThis code uses the Euclidean algorithm to find the greatest common divisor (gcd) of two numbers. The solve function calculates the greatest common divisor of the sequence a_1, a_2, ..., a_N by repeatedly subtracting the smallest possible value from M until N becomes 0. The smallest possible value is determined by the current values of N and M. The gcd function is used to find the gcd of the current sequence and the new value. The resulting gcd is returned as the answer.\n\nPlease note that the time complexity of this code is O(N), which is the maximum possible value of", "from math import gcd\n\nN, M = map(int, input().split())\nprint(M // gcd(N, M))\n\n\nExplanation:\nIn this code, we first import the gcd function from the math module, which calculates the greatest common divisor of two numbers. Then we read the input values for N and M. We then print the result of dividing M by the gcd of N and M. This is the maximum possible value of the greatest common divisor of a sequence a_1, a_2, ..., a_N that satisfies the condition.\n\nThis solution works because the gcd of N and M divides M. Therefore, the maximum possible value of the gcd is M divided by the gcd of N and M.\n\nThis solution works because the gcd of N and M divides M. Therefore, the maximum possible value of the gcd is M divided by the gcd of N and M.\n\"\"\"\n\nN, M = map(int, input().split())\nprint(M // gcd(N, M))\n\n\nExplanation:\nIn this code, we first import the g"], "prompt": "\nQUESTION:\nYou are given integers N and M.\nConsider a sequence a of length N consisting of positive integers such that a_1 + a_2 + ... + a_N = M. Find the maximum possible value of the greatest common divisor of a_1, a_2, ..., a_N.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq N \\leq 10^5\n - N \\leq M \\leq 10^9\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\n\n-----Output-----\nPrint the maximum possible value of the greatest common divisor of a sequence a_1, a_2, ..., a_N that satisfies the condition.\n\n-----Sample Input-----\n3 14\n\n-----Sample Output-----\n2\n\nConsider the sequence (a_1, a_2, a_3) = (2, 4, 8). Their greatest common divisor is 2, and this is the maximum value.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}