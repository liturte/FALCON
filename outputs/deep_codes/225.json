{"225": {"code": ["a = list(map(int, input().split()))\na.sort()\nprint(\"YES\" if a[0] + a[1] == a[2] + a[3] else \"NO\")\n\n\n\nNOTE:\nThis solution sorts the list of candies in ascending order and then checks if the sum of the first two elements (the smallest candies) is equal to the sum of the last two elements (the largest candies). If they are equal, it prints \"YES\", otherwise it prints \"NO\".\n\nThis solution works because the problem states that each bag should be given to one of the friends, so the distribution of", "a1, a2, a3, a4 = map(int, input().split())\nprint('YES' if a1 + a2 + a3 + a4 == 2 * max(a1, a2, a3, a4) else 'NO')\n\n\n\n-----Hint-----\n\nYou can use the Python `map` function to read the input, which will convert each input string into an integer. Then you can check if the sum of all candies is equal to twice the maximum amount of candies. If it is, print 'YES'; otherwise, print 'NO'.\n\n\n-----Explanation-----\n\nThis", "a1, a2, a3, a4 = map(int, input().split())\nprint('YES' if a1+a2+a3+a4 in [a1+a3, a1+a4, a2+a3, a2+a4] else 'NO')\n\n\nThis solution works by first reading in the four integers. Then it checks if the sum of any two of them equals the sum of the other two. If so, it prints 'YES', otherwise it prints 'NO'. This is because if the sum of two bags is the same, then it's possible to distribute the bags so that both", "a = list(map(int, input().split()))\na.sort()\nif a[0] + a[1] == a[2] + a[3] or a[0] + a[2] == a[1] + a[3] or a[0] + a[3] == a[1] + a[2]:\n    print('YES')\nelse:\n    print('NO')\n\n\nThis Python program sorts the list of candies in ascending order and then checks if the sum of the smallest two bags equals the sum of the largest two bags. If it does, it prints 'YES'. Otherwise", "a = list(map(int, input().split()))\na.sort()\nprint(\"YES\" if a[0]+a[1] == a[2]+a[3] else \"NO\")\n\n\nExplanation:\nThe problem is asking whether it's possible to distribute the bags so that each friend gets the same amount of candies. This is only possible if the sum of the candies in the two smallest bags is equal to the sum of the candies in the two largest bags. This can be checked by sorting the candies in each bag and comparing the sums of the smallest and largest bags.\n\nThe solution is a"], "prompt": "\nQUESTION:\nDawid has four bags of candies. The $i$-th of them contains $a_i$ candies. Also, Dawid has two friends. He wants to give each bag to one of his two friends. Is it possible to distribute the bags in such a way that each friend receives the same amount of candies in total?\n\nNote, that you can't keep bags for yourself or throw them away, each bag should be given to one of the friends.\n\n\n-----Input-----\n\nThe only line contains four integers $a_1$, $a_2$, $a_3$ and $a_4$ ($1 \\leq a_i \\leq 100$) \u2014 the numbers of candies in each bag.\n\n\n-----Output-----\n\nOutput YES if it's possible to give the bags to Dawid's friends so that both friends receive the same amount of candies, or NO otherwise. Each character can be printed in any case (either uppercase or lowercase).\n\n\n-----Examples-----\nInput\n1 7 11 5\n\nOutput\nYES\n\nInput\n7 3 2 5\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first sample test, Dawid can give the first and the third bag to the first friend, and the second and the fourth bag to the second friend. This way, each friend will receive $12$ candies.\n\nIn the second sample test, it's impossible to distribute the bags.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}