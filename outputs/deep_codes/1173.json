{"1173": {"code": ["from collections import deque\n\ndef solve():\n    n = int(input())\n    graph = [[] for", "from collections import deque\n\ndef solve():\n    n = int(input())\n    adj = [None]", "from collections import deque\n\ndef min_days(n, adj_list):\n    match_day = [", "from collections import deque\n\ndef min_days(n, adj_list):\n    # Initialize the graph", "from collections import defaultdict\n\ndef min_days(N, A):\n    days = 0\n    matches ="], "prompt": "\nQUESTION:\nN players will participate in a tennis tournament. We will call them Player 1, Player 2, \\ldots, Player N.\nThe tournament is round-robin format, and there will be N(N-1)/2 matches in total.\nIs it possible to schedule these matches so that all of the following conditions are satisfied? If the answer is yes, also find the minimum number of days required.\n - Each player plays at most one matches in a day.\n - Each player i (1 \\leq i \\leq N) plays one match against Player A_{i, 1}, A_{i, 2}, \\ldots, A_{i, N-1} in this order.\n\n-----Constraints-----\n - 3 \\leq N \\leq 1000\n - 1 \\leq A_{i, j} \\leq N\n - A_{i, j} \\neq i\n - A_{i, 1}, A_{i, 2}, \\ldots, A_{i, N-1} are all different.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA_{1, 1} A_{1, 2} \\ldots A_{1, N-1}\nA_{2, 1} A_{2, 2} \\ldots A_{2, N-1}\n:\nA_{N, 1} A_{N, 2} \\ldots A_{N, N-1}\n\n-----Output-----\nIf it is possible to schedule all the matches so that all of the conditions are satisfied, print the minimum number of days required; if it is impossible, print -1.\n\n-----Sample Input-----\n3\n2 3\n1 3\n1 2\n\n-----Sample Output-----\n3\n\nAll the conditions can be satisfied if the matches are scheduled for three days as follows:\n - Day 1: Player 1 vs Player 2\n - Day 2: Player 1 vs Player 3\n - Day 3: Player 2 vs Player 3\nThis is the minimum number of days required.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}