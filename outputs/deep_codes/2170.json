{"2170": {"code": ["MOD = 10**9+7\nN, M = map(int, input().split())\ndp = [[0]*3 for _ in range(N+1)]\ndp[0][0] = 1\nfor n in range(1, N+1):\n    dp[n][0] = dp[n-1][0]*(M-1)%MOD\n    dp[n][1] = (dp[n-1][0]+dp[n-1][1]*(M-2))%MOD\n    dp[n][2] = (dp[n-1][1]+dp[n-1][2]*(M-2))%MOD\nprint((dp[N][0]+dp[N][1]+dp[N][2])%MOD)\n\n\nThis solution uses dynamic programming to count", "MOD = 10**9 + 7\n\ndef solve(n, m):\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(1, n + 1):\n        dp[i][0] = dp[i - 1][1]\n        dp[i][i] = dp[i - 1][i - 1]\n        for j in range(1, i - 1):\n            dp[i][j] = (dp[i - 1][j - 1] + dp[i - 1][j]) % MOD\n    return (sum(dp[n]) * pow(m, n, MOD)) % MOD\n\nn, m = map(int, input", "MOD = 10**9+7\nN, M = map(int, input().split())\n\nfact = [0]*(N+1)\nfact[0] = 1\nfor i in range(1, N+1):\n    fact[i] = (fact[i-1]*i)%MOD\n\ninv = [0]*(N+1)\ninv[N] = pow(fact[N], MOD-2, MOD)\nfor i in range(N-1, -1, -1):\n    inv[i] = (inv[i+1]*(i+1))%MOD\n\nc = [0]*(N+1)\nc[0] = 1\nfor i in range(1, N+1):\n    c[i] = (c[i-1]*(M-i+1)", "MOD = 10**9 + 7\nN, M = map(int, input().split())\ndp = [[0]*(N+1) for _ in range(N+1)]\ndp[0][0] = 1\nfor i in range(1, N+1):\n    dp[i][0] = dp[i-1][1]\n    dp[i][i] = dp[i-1][i-1]\n    for j in range(1, i-1):\n        dp[i][j] = (dp[i-1][j-1] + dp[i-1][j]) % MOD\n    dp[i][i] = dp[i-1][i-1]\n    dp[i][i-1] = (dp[i-1][i-2", "MOD = 10**9 + 7\nN, M = map(int, input().split())\n\nfact = [1] * (N+1)\nfor i in range(1, N+1):\n    fact[i] = (fact[i-1] * i) % MOD\n\ninv_fact = [1] * (N+1)\ninv_fact[N] = pow(fact[N], MOD-2, MOD)\nfor i in range(N, 0, -1):\n    inv_fact[i-1] = (inv_fact[i] * i) % MOD\n\ndef comb(n, k):\n    return (fact[n] * inv_fact[k] % MOD) * inv_fact[n-k] % MOD\n\nprint((pow(M, N, M"], "prompt": "\nQUESTION:\nCount the pairs of length-N sequences consisting of integers between 1 and M (inclusive), A_1, A_2, \\cdots, A_{N} and B_1, B_2, \\cdots, B_{N}, that satisfy all of the following conditions:\n - A_i \\neq B_i, for every i such that 1\\leq i\\leq N.\n - A_i \\neq A_j and B_i \\neq B_j, for every (i, j) such that 1\\leq i < j\\leq N.\nSince the count can be enormous, print it modulo (10^9+7).\n\n-----Constraints-----\n - 1\\leq N \\leq M \\leq 5\\times10^5\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\n\n-----Output-----\nPrint the count modulo (10^9+7).\n\n-----Sample Input-----\n2 2\n\n-----Sample Output-----\n2\n\nA_1=1,A_2=2,B_1=2,B_2=1 and A_1=2,A_2=1,B_1=1,B_2=2 satisfy the conditions.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}