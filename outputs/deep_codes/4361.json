{"4361": {"code": ["import sys\n\ndef min_difference():\n    n, k = map(int, sys.stdin.readline().split())\n    heights = sorted([int(sys.stdin.readline()) for _ in range(n)])\n    return min(heights[i+k-1] - heights[i] for i in range(n-k+1))\n\nprint(min_difference())\n\nThis solution reads the input from the standard input, sorts the heights, and then calculates the minimum difference between the maximum and minimum heights of the k-sized subsets. The result is printed to the standard", "import sys\n\ndef main():\n    _, k = map(int, sys.stdin.readline().split())\n    trees = sorted(map(int, sys.stdin.readlines()))\n    return min(trees[i+k-1] - trees[i] for i in range(len(trees)-k+1))\n\nprint(main())\n\n\nEXPLANATION:\nThis code reads the input from the standard input and sorts the tree heights. It then finds the minimum difference between the height of the kth and (k+1)th tallest trees, for all possible starting points. This", "import sys\n\nN, K = map(int, sys.stdin.readline().split())\nh = sorted([int(sys.stdin.readline()) for _ in range(N)])\n\nprint(min(h[i+K-1]-h[i] for i in range(N-K+1)))\n\n\nThis solution works by first reading in the number of trees N and the number of trees to decorate K, as well as the heights of all the trees. It then sorts the heights in ascending order. After that, it calculates the difference between the maximum and minimum height of the K", "import sys\n\ndef main():\n    _, k = map(int, sys.stdin.readline().split())\n    trees = sorted([int(sys.stdin.readline()) for _ in range(int(sys.stdin.readline()))])\n    print(min(trees[i + k - 1] - trees[i] for i in range(len(trees) - k + 1)))\n\nif __name__ == \"__main__\":\n    main()\n\n\nThis code reads the input, sorts the trees by height, and then iterates over the sorted list of trees to find the", "import sys\n\ndef solve():\n    N, K = map(int, sys.stdin.readline().split())\n    h = sorted([int(sys.stdin.readline()) for _ in range(N)])\n    ans = min(h[i+K-1] - h[i] for i in range(N-K+1))\n    print(ans)\n\nsolve()\n\n\nEXPLANATION:\nThe problem can be solved by sorting the heights of the trees and then iterating over the sorted list of heights to find the minimum difference between the height of the K"], "prompt": "\nQUESTION:\nIn some other world, today is Christmas Eve.\nThere are N trees planted in Mr. Takaha's garden. The height of the i-th tree (1 \\leq i \\leq N) is h_i meters.\nHe decides to choose K trees from these trees and decorate them with electric lights. To make the scenery more beautiful, the heights of the decorated trees should be as close to each other as possible.\nMore specifically, let the height of the tallest decorated tree be h_{max} meters, and the height of the shortest decorated tree be h_{min} meters. The smaller the value h_{max} - h_{min} is, the better. What is the minimum possible value of h_{max} - h_{min}?\n\n-----Constraints-----\n - 2 \\leq K < N \\leq 10^5\n - 1 \\leq h_i \\leq 10^9\n - h_i is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\nh_1\nh_2\n:\nh_N\n\n-----Output-----\nPrint the minimum possible value of h_{max} - h_{min}.\n\n-----Sample Input-----\n5 3\n10\n15\n11\n14\n12\n\n-----Sample Output-----\n2\n\nIf we decorate the first, third and fifth trees, h_{max} = 12, h_{min} = 10 so h_{max} - h_{min} = 2. This is optimal.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}