{"2256": {"code": ["def max_distance(n, x, a, b):\n    if a > b:", "def max_distance(n, x, a, b):\n    # If the initial positions", "def solve(n, x, a, b):\n    a, b = min(a", "def solve():\n    t = int(input().strip())\n    for _ in range(", "def solve(n, x, a, b):\n    a, b = min(a"], "prompt": "\nQUESTION:\nYou are the gym teacher in the school.\n\nThere are $n$ students in the row. And there are two rivalling students among them. The first one is in position $a$, the second in position $b$. Positions are numbered from $1$ to $n$ from left to right.\n\nSince they are rivals, you want to maximize the distance between them. If students are in positions $p$ and $s$ respectively, then distance between them is $|p - s|$. \n\nYou can do the following operation at most $x$ times: choose two adjacent (neighbouring) students and swap them.\n\nCalculate the maximum distance between two rivalling students after at most $x$ swaps.\n\n\n-----Input-----\n\nThe first line contains one integer $t$ ($1 \\le t \\le 100$) \u2014 the number of test cases.\n\nThe only line of each test case contains four integers $n$, $x$, $a$ and $b$ ($2 \\le n \\le 100$, $0 \\le x \\le 100$, $1 \\le a, b \\le n$, $a \\neq b$) \u2014 the number of students in the row, the number of swaps which you can do, and positions of first and second rivaling students respectively.\n\n\n-----Output-----\n\nFor each test case print one integer \u2014 the maximum distance between two rivaling students which you can obtain.\n\n\n-----Example-----\nInput\n3\n5 1 3 2\n100 33 100 1\n6 0 2 3\n\nOutput\n2\n99\n1\n\n\n\n-----Note-----\n\nIn the first test case you can swap students in positions $3$ and $4$. And then the distance between the rivals is equal to $|4 - 2| = 2$.\n\nIn the second test case you don't have to swap students. \n\nIn the third test case you can't swap students.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}