{"2585": {"code": ["def max_gcd(n):\n    if n % 2 == 0:\n        return n // 2\n    else:\n        return n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(max_gcd(n))\n\nThis code defines a function `max_gcd` that calculates the maximum possible value of `gcd(a, b)` for a given `n`. If `n` is even, the maximum `g", "def max_gcd(n):\n    if n % 2 == 0:\n        return n // 2\n    else:\n        return (n - 1) // 2\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(max_gcd(n))\n\nThis solution works by realizing that the maximum possible gcd is achieved when a and b are as close as possible. This is because, if a and b are both even, gcd", "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        print(n // 2)\n    else:\n        print(n // 2)\n\n\nThis code reads the number of test cases `t`, and for each test case, it reads the integer `n`.", "def solve():\n    t = int(input().strip())\n    for _ in range(t):\n        n = int(input().strip())\n        if n % 2 == 0:\n            print(n // 2)\n        else:\n            print(n)\n\nsolve()\n\nThis code works by first reading the number of test cases. For each test case, it reads the value of `n` and then calculates the maximum possible gcd. If `n` is even, the maximum gcd is `", "import math\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n % 2 == 0:\n        print(n // 2)\n    else:\n        print(n // 2)\n\n\nThis solution is based on the fact that the maximum possible value of gcd(a, b) for a pair of distinct integers a and b in the range 1 to n is n // 2 if n is even and n // 2 if n is odd."], "prompt": "\nQUESTION:\nLet's consider all integers in the range from $1$ to $n$ (inclusive).\n\nAmong all pairs of distinct integers in this range, find the maximum possible greatest common divisor of integers in pair. Formally, find the maximum value of $\\mathrm{gcd}(a, b)$, where $1 \\leq a < b \\leq n$.\n\nThe greatest common divisor, $\\mathrm{gcd}(a, b)$, of two positive integers $a$ and $b$ is the biggest integer that is a divisor of both $a$ and $b$.\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\leq t \\leq 100$) \u00a0\u2014 the number of test cases. The description of the test cases follows.\n\nThe only line of each test case contains a single integer $n$ ($2 \\leq n \\leq 10^6$).\n\n\n-----Output-----\n\nFor each test case, output the maximum value of $\\mathrm{gcd}(a, b)$ among all $1 \\leq a < b \\leq n$.\n\n\n-----Example-----\nInput\n2\n3\n5\n\nOutput\n1\n2\n\n\n\n-----Note-----\n\nIn the first test case, $\\mathrm{gcd}(1, 2) = \\mathrm{gcd}(2, 3) = \\mathrm{gcd}(1, 3) = 1$.\n\nIn the second test case, $2$ is the maximum possible value, corresponding to $\\mathrm{gcd}(2, 4)$.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}