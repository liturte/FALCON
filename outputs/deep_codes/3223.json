{"3223": {"code": ["import sys\n\ndef solve(n, degrees):\n    if sum(degrees) % 2 == 1:\n        print(\"IMPOSSIBLE\")\n        return", "from collections import deque\n\ndef solve(n, d):\n    if sum(d) % 2 != 0:\n        print(\"IMPOSSIBLE\")", "def construct_forest(vertices, degrees):\n    if sum(degrees) % 2 == 1:\n        return \"IMPOSSIBLE\"\n\n    edges =", "def construct_forest(vertices, degrees):\n    if sum(degrees) % 2 == 1:\n        print(\"IMPOSSIBLE\")\n        return", "def construct_forest(vertices, degrees):\n    if sum(degrees) % 2 == 1:\n        return 'IMPOSSIBLE'\n\n    edges ="], "prompt": "\nQUESTION:\nAnton, a young mathematician, comes from the cold region that is northern Sweden. He likes it there, since there are a lot of trees. Lately, however, this has made him a bit sad, since he can\u2019t see the forest because of all the trees. Therefore, he has asked you to construct a forest.\n\nSince Anton is a mathematician, he doesn\u2019t want just any forest \u2013 he wants a graph theoretical forest. A forest is a (possibly disconnected) graph without cycles \u2013 i.e., a union of disjoint trees.\n\nAnton has already decided how many vertices he wants in his forest, as well as the degree of each vertex. Now, it is your task to construct a forest according to his wishes, or determine that no such forest exists.\n\n-----Input-----\nThe first line of the input is a single integer $0 \\le V \\le 100$, the number of vertices in his forest.\n\nThe next line contains $V$ integers $d_1, d_2, \\ldots , d_ V$ ($0 \\le d_ i \\le 100$ for all $i$). These are the degrees which Anton wants the vertices to have.\n\n-----Output-----\nThe first line of output should be IMPOSSIBLE if it is impossible to construct such a forest.\n\nOtherwise, the first line should be POSSIBLE. The next lines should then contain two integers $1 \\le a, b \\le V$ each, denoting an edge between vertices $a$ and $b$. Note that the vertex with number $a$ must have exactly degree $d_ a$, i.e. the ordering of the vertices is important.\n\n-----Examples-----\nSample Input 1:\n3\n1 1 2\nSample Output 1:\nPOSSIBLE\n1 3\n2 3\n\nSample Input 2:\n2\n1 2\nSample Output 2:\nIMPOSSIBLE\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}