{"57": {"code": ["n = int(input())\npoints = [list(map(int, input().split())) for _ in range(n)]\n\nif n == 1:\n    print(-1)\nelif n == 2:\n    x1, y1 = points[0]\n    x2, y2 = points[", "n = int(input())\npoints = [list(map(int, input().split())) for _ in range(n)]\n\ndef area(points):\n    if len(points) < 3:\n        return -1\n    x = sorted([point[0] for point in points])\n    y = sorted", "n = int(input())\npoints = [list(map(int, input().split())) for _ in range(n)]\n\nx_coords = sorted([point[0] for point in points])\ny_coords = sorted([point[1] for point in points])\n\nif n == 1:", "import sys\n\ndef solve():\n    n = int(sys.stdin.readline())\n    x = []\n    y = []\n    for _ in range(n):\n        a, b = map(int, sys.stdin.readline().split())\n        x.append(a)", "def solve():\n    n = int(input())\n    x = [int(input().split()[0]) for _ in range(n)]\n    y = [int(input().split()[1]) for _ in range(n)]\n    if n == 1: return -1\n    return (max("], "prompt": "\nQUESTION:\nAfter making bad dives into swimming pools, Wilbur wants to build a swimming pool in the shape of a rectangle in his backyard. He has set up coordinate axes, and he wants the sides of the rectangle to be parallel to them. Of course, the area of the rectangle must be positive. Wilbur had all four vertices of the planned pool written on a paper, until his friend came along and erased some of the vertices.\n\nNow Wilbur is wondering, if the remaining n vertices of the initial rectangle give enough information to restore the area of the planned swimming pool.\n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 4)\u00a0\u2014 the number of vertices that were not erased by Wilbur's friend.\n\nEach of the following n lines contains two integers x_{i} and y_{i} ( - 1000 \u2264 x_{i}, y_{i} \u2264 1000)\u00a0\u2014the coordinates of the i-th vertex that remains. Vertices are given in an arbitrary order.\n\nIt's guaranteed that these points are distinct vertices of some rectangle, that has positive area and which sides are parallel to the coordinate axes.\n\n\n-----Output-----\n\nPrint the area of the initial rectangle if it could be uniquely determined by the points remaining. Otherwise, print  - 1. \n\n\n-----Examples-----\nInput\n2\n0 0\n1 1\n\nOutput\n1\n\nInput\n1\n1 1\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first sample, two opposite corners of the initial rectangle are given, and that gives enough information to say that the rectangle is actually a unit square.\n\nIn the second sample there is only one vertex left and this is definitely not enough to uniquely define the area.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}