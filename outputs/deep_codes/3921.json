{"3921": {"code": ["import math\n\ndef gcd(a, b):\n    while b != 0", "from math import gcd\n\ndef longest_good_sequence(n, a):", "from math import gcd\n\ndef longest_good_sequence(n, a):", "from math import gcd\n\nn = int(input())\na = list(map", "from math import gcd\n\ndef longest_good_sequence(n, a):"], "prompt": "\nQUESTION:\nSquirrel Liss is interested in sequences. She also has preferences of integers. She thinks n integers a_1, a_2, ..., a_{n} are good.\n\nNow she is interested in good sequences. A sequence x_1, x_2, ..., x_{k} is called good if it satisfies the following three conditions:  The sequence is strictly increasing, i.e. x_{i} < x_{i} + 1 for each i (1 \u2264 i \u2264 k - 1).  No two adjacent elements are coprime, i.e. gcd(x_{i}, x_{i} + 1) > 1 for each i (1 \u2264 i \u2264 k - 1) (where gcd(p, q) denotes the greatest common divisor of the integers p and q).  All elements of the sequence are good integers. \n\nFind the length of the longest good sequence.\n\n\n-----Input-----\n\nThe input consists of two lines. The first line contains a single integer n (1 \u2264 n \u2264 10^5) \u2014 the number of good integers. The second line contains a single-space separated list of good integers a_1, a_2, ..., a_{n} in strictly increasing order (1 \u2264 a_{i} \u2264 10^5;\u00a0a_{i} < a_{i} + 1).\n\n\n-----Output-----\n\nPrint a single integer \u2014 the length of the longest good sequence.\n\n\n-----Examples-----\nInput\n5\n2 3 4 6 9\n\nOutput\n4\n\nInput\n9\n1 2 3 5 6 7 8 9 10\n\nOutput\n4\n\n\n\n-----Note-----\n\nIn the first example, the following sequences are examples of good sequences: [2; 4; 6; 9], [2; 4; 6], [3; 9], [6]. The length of the longest good sequence is 4.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}