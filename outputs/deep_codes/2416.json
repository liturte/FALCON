{"2416": {"code": ["from", "def", "def", "from", "def"], "prompt": "\nQUESTION:\nKsenia has an array $a$ consisting of $n$ positive integers $a_1, a_2, \\ldots, a_n$. \n\nIn one operation she can do the following:   choose three distinct indices $i$, $j$, $k$, and then  change all of $a_i, a_j, a_k$ to $a_i \\oplus a_j \\oplus a_k$ simultaneously, where $\\oplus$ denotes the bitwise XOR operation. \n\nShe wants to make all $a_i$ equal in at most $n$ operations, or to determine that it is impossible to do so. She wouldn't ask for your help, but please, help her!\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($3 \\leq n \\leq 10^5$)\u00a0\u2014 the length of $a$.\n\nThe second line contains $n$ integers, $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^9$)\u00a0\u2014 elements of $a$.\n\n\n-----Output-----\n\nPrint YES or NO in the first line depending on whether it is possible to make all elements equal in at most $n$ operations.\n\nIf it is possible, print an integer $m$ ($0 \\leq m \\leq n$), which denotes the number of operations you do.\n\nIn each of the next $m$ lines, print three distinct integers $i, j, k$, representing one operation. \n\nIf there are many such operation sequences possible, print any. Note that you do not have to minimize the number of operations.\n\n\n-----Examples-----\nInput\n5\n4 2 1 7 2\n\nOutput\nYES\n1\n1 3 4\nInput\n4\n10 4 49 22\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first example, the array becomes $[4 \\oplus 1 \\oplus 7, 2, 4 \\oplus 1 \\oplus 7, 4 \\oplus 1 \\oplus 7, 2] = [2, 2, 2, 2, 2]$.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}