{"1409": {"code": ["from collections import Counter\nfrom math import comb\n\ndef solve(n, k, cnt):\n    cnt = Counter(cnt)\n    cnt = list(cnt.values()) + [0]*5\n    return sum(comb(cnt[i]+", "from collections import Counter\nfrom itertools import combinations\n\nn, k = map(int, input().split())\nparticipations = list(map(int, input().split()))\n\nc = Counter(participations)\nteams = 0\n\nfor x in combinations(c", "from itertools import combinations\n\ndef solve(n, k, y):\n    return sum(all(sum(x[j]>=k for j in range(n)) for x in combinations(y, 3)) for _ in range(n))\n\nn, k = map(int", "n, k = map(int, input().split())\ntimes = list(map(int, input().split()))\n\ndp = [[[0]*6 for _ in range(6)] for _ in range(6)]\ndp[0][0][0] = 1\n\nfor time", "n, k = map(int, input().split())\ntimes = list(map(int, input().split()))\n\ndp = [[[0]*6 for _ in range(6)] for _ in range(6)]\ndp[0][0][0] = 1\n\nfor i"], "prompt": "\nQUESTION:\nThe Saratov State University Olympiad Programmers Training Center (SSU OPTC) has n students. For each student you know the number of times he/she has participated in the ACM ICPC world programming championship. According to the ACM ICPC rules, each person can participate in the world championship at most 5 times.\n\nThe head of the SSU OPTC is recently gathering teams to participate in the world championship. Each team must consist of exactly three people, at that, any person cannot be a member of two or more teams. What maximum number of teams can the head make if he wants each team to participate in the world championship with the same members at least k times?\n\n\n-----Input-----\n\nThe first line contains two integers, n and k (1 \u2264 n \u2264 2000;\u00a01 \u2264 k \u2264 5). The next line contains n integers: y_1, y_2, ..., y_{n} (0 \u2264 y_{i} \u2264 5), where y_{i} shows the number of times the i-th person participated in the ACM ICPC world championship.\n\n\n-----Output-----\n\nPrint a single number \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n5 2\n0 4 5 1 0\n\nOutput\n1\n\nInput\n6 4\n0 1 2 3 4 5\n\nOutput\n0\n\nInput\n6 5\n0 0 0 0 0 0\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first sample only one team could be made: the first, the fourth and the fifth participants.\n\nIn the second sample no teams could be created.\n\nIn the third sample two teams could be created. Any partition into two teams fits.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}