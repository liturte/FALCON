{"1941": {"code": ["def max_eat(A, B, n, queries):\n    from collections import defaultdict\n    from sortedcontainers", "from bisect import bisect_right\n\ndef solve(A, B, Q):\n    karafs = []", "from sys import stdin, stdout\nfrom bisect import bisect_right\n\ndef read_int():\n    return", "def max_karafs_to_eat(A, B, queries):\n    def karafs_", "from bisect import bisect_right\n\ndef solve():\n    A, B, n = map(int, input()."], "prompt": "\nQUESTION:\nKarafs is some kind of vegetable in shape of an 1 \u00d7 h rectangle. Tavaspolis people love Karafs and they use Karafs in almost any kind of food. Tavas, himself, is crazy about Karafs. [Image] \n\nEach Karafs has a positive integer height. Tavas has an infinite 1-based sequence of Karafses. The height of the i-th Karafs is s_{i} = A + (i - 1) \u00d7 B.\n\nFor a given m, let's define an m-bite operation as decreasing the height of at most m distinct not eaten Karafses by 1. Karafs is considered as eaten when its height becomes zero.\n\nNow SaDDas asks you n queries. In each query he gives you numbers l, t and m and you should find the largest number r such that l \u2264 r and sequence s_{l}, s_{l} + 1, ..., s_{r} can be eaten by performing m-bite no more than t times or print -1 if there is no such number r.\n\n\n-----Input-----\n\nThe first line of input contains three integers A, B and n (1 \u2264 A, B \u2264 10^6, 1 \u2264 n \u2264 10^5).\n\nNext n lines contain information about queries. i-th line contains integers l, t, m (1 \u2264 l, t, m \u2264 10^6) for i-th query.\n\n\n-----Output-----\n\nFor each query, print its answer in a single line.\n\n\n-----Examples-----\nInput\n2 1 4\n1 5 3\n3 3 10\n7 10 2\n6 4 8\n\nOutput\n4\n-1\n8\n-1\n\nInput\n1 5 2\n1 5 10\n2 7 4\n\nOutput\n1\n2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}