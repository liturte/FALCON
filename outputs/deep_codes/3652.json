{"3652": {"code": ["def solve():\n    n = int(input())\n    rows = [sorted(list(map(int, input().split()))) for _ in range(3)]\n    columns = list(range(1, n+1))\n    columns.sort()\n\n    def check(mid):\n        cnt = [0] * n\n        for i in range(3):\n            for j in range(n):\n                if rows[i][j] ==", "def min_columns_to_delete():\n    N = int(input())\n    row1 = list(map(int, input().split()))\n    row2 = list(map(int, input().split()))\n    row3 = list(map(int, input().split()))\n\n    row1.sort()\n    row2.sort()\n    row3.sort()\n\n    count = 0\n    for i in range(N):\n        if row", "def solve():\n    n = int(input())\n    rows = [sorted(list(map(int, input().split()))) for _ in range(3)]\n    original = rows[0]\n    rows = rows[1:]\n    deletions = [0]*n\n    for i in range(n):\n        if rows[0][i] != original[i]:\n            deletions[i] = 1\n        if rows[1][", "def solve():\n    n = int(input())\n    rows = [sorted(list(map(int, input().split()))) for _ in range(3)]\n    columns = list(range(1, n+1))\n    columns.sort()\n\n    dp = [[0] * (n+1) for _ in range(4)]\n    for i in range(1, n+1):\n        for j in range(1, 4", "def min_columns_to_delete():\n    n = int(input())\n    rows = [list(map(int, input().split())) for _ in range(3)]\n    columns_to_delete = []\n\n    for i in range(n):\n        column = [row[i] for row in rows]\n        if sorted(column) != column:\n            columns_to_delete.append(i)\n\n    return len(columns_"], "prompt": "\nQUESTION:\nLuka is slacking again during chemistry class, while the teacher is explaining Avogadro\u2019s law.\n\nLuka first drew a table consisting of $3$ rows and $N$ columns. Then he wrote the numbers $1$ to $N$ into the first row in arbitrary order, each number appearing exactly once. In the other two rows he also wrote integers between $1$ and $N$, but didn\u2019t care how many times a number appeared.\n\nLuka can now delete any set of columns from the table. After doing so, he sorts the numbers in each row in ascending order.\n\nHe wants to obtain a table in which all three rows are identical after sorting. Write a program that determines the smallest number of columns he must delete.\n\nFor instance, in the first sample input below, Luka can delete the second, fourth, sixth and seventh columns. After deleting these and sorting each row, all three rows contain the numbers 1, 3 and 5.\n\n-----Input-----\nThe first line of input contains the integer $N$ ($1 \\le N \\le 100000$), the number of columns in the table. The following three lines contain $N$ integers each, separated by single spaces. The numbers will be between $1$ and $N$, and there will be no duplicates in the first row.\n\n-----Output-----\nOutput the smallest number of columns Luka must delete.\n\n-----Examples-----\nSample Input:\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\nSample Output:\n4\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}