{"1646": {"code": ["def minimize_string(s):\n    s = list(s)\n    i = 0\n    while i < len(s) - 1:\n        if s[i] == '1' and s[i+1] == '1':\n            s[i] = s", "n = int(input())\ns = input()\n\ns = list(s)\ni = 0\nwhile i < n - 1:\n    if s[i] == '1' and s[i + 1] == '1':\n        s[i] = '0", "n = int(input())\ns = input()\n\ni = 0\nwhile i < n - 1:\n    if s[i:i+2] == '11':\n        s = s[:i] + '1' + s[i+2:]\n        n", "n = int(input())\ns = input()\n\ns = list(s)\ni = 0\nwhile i < n-1:\n    if s[i] == '1' and s[i+1] == '1':\n        s[i] = s[i", "n = int(input())\ns = input()\n\n# Replace all '11' to '1'\nwhile '11' in s:\n    s = s.replace('11', '1')\n\n# If the last character is '0', remove it\nwhile"], "prompt": "\nQUESTION:\nString can be called correct if it consists of characters \"0\" and \"1\" and there are no redundant leading zeroes. Here are some examples: \"0\", \"10\", \"1001\".\n\nYou are given a correct string s.\n\nYou can perform two different operations on this string:   swap any pair of adjacent characters (for example, \"101\" $\\rightarrow$ \"110\");  replace \"11\" with \"1\" (for example, \"110\" $\\rightarrow$ \"10\"). \n\nLet val(s) be such a number that s is its binary representation.\n\nCorrect string a is less than some other correct string b iff val(a) < val(b).\n\nYour task is to find the minimum correct string that you can obtain from the given one using the operations described above. You can use these operations any number of times in any order (or even use no operations at all).\n\n\n-----Input-----\n\nThe first line contains integer number n (1 \u2264 n \u2264 100) \u2014 the length of string s.\n\nThe second line contains the string s consisting of characters \"0\" and \"1\". It is guaranteed that the string s is correct.\n\n\n-----Output-----\n\nPrint one string \u2014 the minimum correct string that you can obtain from the given one.\n\n\n-----Examples-----\nInput\n4\n1001\n\nOutput\n100\n\nInput\n1\n1\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first example you can obtain the answer by the following sequence of operations: \"1001\" $\\rightarrow$ \"1010\" $\\rightarrow$ \"1100\" $\\rightarrow$ \"100\".\n\nIn the second example you can't obtain smaller answer no matter what operations you use.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}