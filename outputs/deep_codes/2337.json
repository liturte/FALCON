{"2337": {"code": ["QUESTION:\nGeorge decided to prepare a Codesecrof round, so he has prepared m problems for the round. Let's number the problems with integers 1 through m. George estimates the i-th problem's complexity by integer b_{i}.\n\nTo make the round good, he needs to put at least n problems there. Besides, he needs to have at least one problem with complexity exactly a_1, at least one with complexity exactly a_2, ..., and at least one with complexity exactly a_{n}. Of course, the round can also have problems with other complexities.\n\nGeorge has a poor imagination. It's easier for him to make some already prepared problem simpler than to come up with a new one and prepare it. George is magnificent at simplifying problems. He can simplify any already prepared problem with complexity c to any positive integer complexity d (c \u2265 d), by changing limits on the input data.\n\nHowever, nothing is so simple. George understood that even if he simplifies some problems, he can run out of problems for a good round. That's why he decided to find out the minimum number of problems he needs to come up with in addition to the m he's prepared in order to make a good round. Note that George can come up with a new problem of any complexity.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 3000) \u2014 the minimal number of problems in a good round and the number of problems George's prepared. The second line contains space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_1 < a_2 < ... < a_{n} \u2264 10^6) \u2014 the requirements for the complexity of the problems in a good round. The third line contains space-separated integers b_1, b_2, ..., b_{m} (1 \u2264 b_1 \u2264 b_2... \u2264 b_{m} \u2264 10^6) \u2014 the complexities of the problems prepared by George. \n\n\n-----Output-----\n\nPrint a single integer \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n3 5\n1 2 3\n1 2 2 3 3\n\nOutput\n0\n\nInput\n3 5\n1 2 3\n1 1 1 1 1\n\nOutput\n2\n\nInput\n3 1\n2 3 4\n1\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first sample the set of the prepared problems", "QUESTION:\nGeorge decided to prepare a Codesecrof round, so he has prepared m problems for the round. Let's number the problems with integers 1 through m. George estimates the i-th problem's complexity by integer b_{i}.\n\nTo make the round good, he needs to put at least n problems there. Besides, he needs to have at least one problem with complexity exactly a_1, at least one with complexity exactly a_2, ..., and at least one with complexity exactly a_{n}. Of course, the round can also have problems with other complexities.\n\nGeorge has a poor imagination. It's easier for him to make some already prepared problem simpler than to come up with a new one and prepare it. George is magnificent at simplifying problems. He can simplify any already prepared problem with complexity c to any positive integer complexity d (c \u2265 d), by changing limits on the input data.\n\nHowever, nothing is so simple. George understood that even if he simplifies some problems, he can run out of problems for a good round. That's why he decided to find out the minimum number of problems he needs to come up with in addition to the m he's prepared in order to make a good round. Note that George can come up with a new problem of any complexity.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 3000) \u2014 the minimal number of problems in a good round and the number of problems George's prepared. The second line contains space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_1 < a_2 < ... < a_{n} \u2264 10^6) \u2014 the requirements for the complexity of the problems in a good round. The third line contains space-separated integers b_1, b_2, ..., b_{m} (1 \u2264 b_1 \u2264 b_2... \u2264 b_{m} \u2264 10^6) \u2014 the complexities of the problems prepared by George. \n\n\n-----Output-----\n\nPrint a single integer \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n3 5\n1 2 3\n1 2 2 3 3\n\nOutput\n0\n\nInput\n3 5\n1 2 3\n1 1 1 1 1\n\nOutput\n2\n\nInput\n3 1\n2 3 4\n1\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first sample the set of the prepared problems", "QUESTION:\nGeorge decided to prepare a Codesecrof round, so he has prepared m problems for the round. Let's number the problems with integers 1 through m. George estimates the i-th problem's complexity by integer b_{i}.\n\nTo make the round good, he needs to put at least n problems there. Besides, he needs to have at least one problem with complexity exactly a_1, at least one with complexity exactly a_2, ..., and at least one with complexity exactly a_{n}. Of course, the round can also have problems with other complexities.\n\nGeorge has a poor imagination. It's easier for him to make some already prepared problem simpler than to come up with a new one and prepare it. George is magnificent at simplifying problems. He can simplify any already prepared problem with complexity c to any positive integer complexity d (c \u2265 d), by changing limits on the input data.\n\nHowever, nothing is so simple. George understood that even if he simplifies some problems, he can run out of problems for a good round. That's why he decided to find out the minimum number of problems he needs to come up with in addition to the m he's prepared in order to make a good round. Note that George can come up with a new problem of any complexity.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 3000) \u2014 the minimal number of problems in a good round and the number of problems George's prepared. The second line contains space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_1 < a_2 < ... < a_{n} \u2264 10^6) \u2014 the requirements for the complexity of the problems in a good round. The third line contains space-separated integers b_1, b_2, ..., b_{m} (1 \u2264 b_1 \u2264 b_2... \u2264 b_{m} \u2264 10^6) \u2014 the complexities of the problems prepared by George. \n\n\n-----Output-----\n\nPrint a single integer \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n3 5\n1 2 3\n1 2 2 3 3\n\nOutput\n0\n\nInput\n3 5\n1 2 3\n1 1 1 1 1\n\nOutput\n2\n\nInput\n3 1\n2 3 4\n1\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first sample the set of the prepared problems", "QUESTION:\nGeorge decided to prepare a Codesecrof round, so he has prepared m problems for the round. Let's number the problems with integers 1 through m. George estimates the i-th problem's complexity by integer b_{i}.\n\nTo make the round good, he needs to put at least n problems there. Besides, he needs to have at least one problem with complexity exactly a_1, at least one with complexity exactly a_2, ..., and at least one with complexity exactly a_{n}. Of course, the round can also have problems with other complexities.\n\nGeorge has a poor imagination. It's easier for him to make some already prepared problem simpler than to come up with a new one and prepare it. George is magnificent at simplifying problems. He can simplify any already prepared problem with complexity c to any positive integer complexity d (c \u2265 d), by changing limits on the input data.\n\nHowever, nothing is so simple. George understood that even if he simplifies some problems, he can run out of problems for a good round. That's why he decided to find out the minimum number of problems he needs to come up with in addition to the m he's prepared in order to make a good round. Note that George can come up with a new problem of any complexity.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 3000) \u2014 the minimal number of problems in a good round and the number of problems George's prepared. The second line contains space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_1 < a_2 < ... < a_{n} \u2264 10^6) \u2014 the requirements for the complexity of the problems in a good round. The third line contains space-separated integers b_1, b_2, ..., b_{m} (1 \u2264 b_1 \u2264 b_2... \u2264 b_{m} \u2264 10^6) \u2014 the complexities of the problems prepared by George. \n\n\n-----Output-----\n\nPrint a single integer \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n3 5\n1 2 3\n1 2 2 3 3\n\nOutput\n0\n\nInput\n3 5\n1 2 3\n1 1 1 1 1\n\nOutput\n2\n\nInput\n3 1\n2 3 4\n1\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first sample the set of the prepared problems", "QUESTION:\nGeorge decided to prepare a Codesecrof round, so he has prepared m problems for the round. Let's number the problems with integers 1 through m. George estimates the i-th problem's complexity by integer b_{i}.\n\nTo make the round good, he needs to put at least n problems there. Besides, he needs to have at least one problem with complexity exactly a_1, at least one with complexity exactly a_2, ..., and at least one with complexity exactly a_{n}. Of course, the round can also have problems with other complexities.\n\nGeorge has a poor imagination. It's easier for him to make some already prepared problem simpler than to come up with a new one and prepare it. George is magnificent at simplifying problems. He can simplify any already prepared problem with complexity c to any positive integer complexity d (c \u2265 d), by changing limits on the input data.\n\nHowever, nothing is so simple. George understood that even if he simplifies some problems, he can run out of problems for a good round. That's why he decided to find out the minimum number of problems he needs to come up with in addition to the m he's prepared in order to make a good round. Note that George can come up with a new problem of any complexity.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 3000) \u2014 the minimal number of problems in a good round and the number of problems George's prepared. The second line contains space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_1 < a_2 < ... < a_{n} \u2264 10^6) \u2014 the requirements for the complexity of the problems in a good round. The third line contains space-separated integers b_1, b_2, ..., b_{m} (1 \u2264 b_1 \u2264 b_2... \u2264 b_{m} \u2264 10^6) \u2014 the complexities of the problems prepared by George. \n\n\n-----Output-----\n\nPrint a single integer \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n3 5\n1 2 3\n1 2 2 3 3\n\nOutput\n0\n\nInput\n3 5\n1 2 3\n1 1 1 1 1\n\nOutput\n2\n\nInput\n3 1\n2 3 4\n1\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first sample the set of the prepared problems"], "prompt": "\nQUESTION:\nGeorge decided to prepare a Codesecrof round, so he has prepared m problems for the round. Let's number the problems with integers 1 through m. George estimates the i-th problem's complexity by integer b_{i}.\n\nTo make the round good, he needs to put at least n problems there. Besides, he needs to have at least one problem with complexity exactly a_1, at least one with complexity exactly a_2, ..., and at least one with complexity exactly a_{n}. Of course, the round can also have problems with other complexities.\n\nGeorge has a poor imagination. It's easier for him to make some already prepared problem simpler than to come up with a new one and prepare it. George is magnificent at simplifying problems. He can simplify any already prepared problem with complexity c to any positive integer complexity d (c \u2265 d), by changing limits on the input data.\n\nHowever, nothing is so simple. George understood that even if he simplifies some problems, he can run out of problems for a good round. That's why he decided to find out the minimum number of problems he needs to come up with in addition to the m he's prepared in order to make a good round. Note that George can come up with a new problem of any complexity.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 3000) \u2014 the minimal number of problems in a good round and the number of problems George's prepared. The second line contains space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_1 < a_2 < ... < a_{n} \u2264 10^6) \u2014 the requirements for the complexity of the problems in a good round. The third line contains space-separated integers b_1, b_2, ..., b_{m} (1 \u2264 b_1 \u2264 b_2... \u2264 b_{m} \u2264 10^6) \u2014 the complexities of the problems prepared by George. \n\n\n-----Output-----\n\nPrint a single integer \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n3 5\n1 2 3\n1 2 2 3 3\n\nOutput\n0\n\nInput\n3 5\n1 2 3\n1 1 1 1 1\n\nOutput\n2\n\nInput\n3 1\n2 3 4\n1\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first sample the set of the prepared problems meets the requirements for a good round.\n\nIn the second sample, it is enough to come up with and prepare two problems with complexities 2 and 3 to get a good round.\n\nIn the third sample it is very easy to get a good round if come up with and prepare extra problems with complexities: 2, 3, 4.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}