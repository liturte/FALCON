{"4879": {"code": ["a, b, c = input().split()\nif b == 'West' and c in ['East', 'South']:\n    print('Yes')\nelif b == 'East' and c in ['West', 'North']:\n    print('Yes')\nelse:\n    print('No')\n\n\nExplanation:\nThe program reads the input and splits it into three variables `a`, `b`, and `c`. Then, it checks if the direction you want to leave (`b`) is `West` and the direction the other vehicle approaches (`c`) is either `", "def yield_right_of_way(a, b, c):\n    if (a == 'South' and b == 'West' and c == 'East') or (a == 'East' and b == 'South' and c == 'West') or (a == 'West' and b == 'East' and c == 'South'):\n        return 'Yes'\n    else:\n        return 'No'\n\na, b, c = input().split()\nprint(yield_right_of_way(a, b, c))\n\nThis Python program will take three inputs, `a", "a, b, c = input().split()\n\nif b == \"West\" and c in [\"East\", \"South\"]:\n    print(\"Yes\")\nelif b == \"East\" and c in [\"West\", \"South\"]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n\nThis Python code reads three directions as input and checks if the conditions for yielding the right-of-way are met. If they are, it prints \"Yes\". Otherwise, it prints \"No\".", "a, b, c = input().split()\nif b == 'West' and (c == 'East' or (c == 'South' and a == 'South') or (c == 'North' and a == 'North')):\n    print('Yes')\nelse:\n    print('No')\n\n\nEXPLANATION:\nThis program takes three input strings (a, b, c), representing the direction from which the car arrives, the direction in which it wants to leave, and the direction from which the other car approaches. If the direction in which the car wants to leave is West and the direction from which the other", "a, b, c = input().split()\nif (b == 'East' and c == 'West') or (b == 'West' and c == 'East') or (b == 'South' and c in ['East', 'West']) or (b == 'North' and c in ['East', 'West']):\n    print('Yes')\nelse:\n    print('No')\n\n\nThis Python program takes the inputs as direction from which you arrive, the direction in which you want to leave, and the direction from which the other vehicle approaches. It checks whether the other vehicle is coming from the same direction"], "prompt": "\nQUESTION:\nA startup company tries to develop software for self-driving cars. One of the surprisingly difficult problems turns out to be right-of-way at an intersection. The local traffic regulations prescribe that your vehicle must yield the right-of-way if one of the following two conditions is satisfied:\n - You want to pass straight through the intersection; another vehicle is approaching from your right.\n - You want to turn left at the intersection; another vehicle is approaching from the opposite direction or from your right.\n\nNote that it is not important in which direction the other vehicle wants to leave the intersection.\n\nWrite a program that decides if your car should yield the right-of-way to the other vehicle.\n\n-----Input-----\nThree strings $a,b,c \\in \\{ \\text {North},\\text {South},\\text {East},\\text {West}\\} $, corresponding to the direction from which you arrive, the direction in which you want to leave, and the direction from which the other vehicle approaches. You can assume $a \\neq b$ and $a \\neq c$.\n\n-----Output-----\nA single line with the string \u201cYes\u201d or \u201cNo\u201d as explained above.\n\n-----Explanation of Sample $1$-----$1$\nIn this example, you arrive from South and want to turn left to leave towards West. The other vehicle comes from East, which corresponds to your right. Consequently, you have to yield the right-of-way to the other vehicle because of condition $2$.\n\n-----Examples-----\nSample Input:\nSouth West East\nSample Output:\nYes\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}