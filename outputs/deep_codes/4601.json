{"4601": {"code": ["import heapq\n\nN, K = map(int, input().split())\nH = list(map(int, input().split()))\n\nheapq.heapify(H)\n\ncount = 0\nwhile True:\n    if H[0] <= 0:\n        heapq.heappop(H)\n        continue\n    if len(H) == 1:\n        count += H[0] - 1\n        break\n    a = heapq.heappop(H)\n    b = heapq.heappop(H)\n    heapq.heapp", "import sys\nfrom heapq import *\n\ndef solve():\n    n, k = map(int, sys.stdin.readline().split())\n    h = list(map(int, sys.stdin.readline().split()))\n    h.sort()\n    heap = []\n    for i in range(n):\n        heappush(heap, h[i])\n    cnt = 0\n    while heap[0] < k:\n        a = heappop(heap)\n        if len(heap) == 0 or heap[0] >= k:", "import heapq\n\nN, K = map(int, input().split())\nH = list(map(int, input().split()))\n\n# Initialize a heap with the health of the monsters\nheap = [-h for h in H]\nheapq.heapify(heap)\n\n# Perform the Special Move if possible\nif K > 0:\n    K -= 1\n    heapq.heappush(heap, 0)\n\n# Perform the Attack action\nattacks = -sum(heap)\n\nprint(attacks)", "import heapq\n\nN, K = map(int, input().split())\nH = list(map(int, input().split()))\n\n# Create a priority queue\nqueue = []\nfor h in H:\n    heapq.heappush(queue, h)\n\n# Use Special Move on the monster with the largest health\nwhile K > 0 and queue[0] < 0:\n    heapq.heappop(queue)\n    K -= 1\n\n# Calculate the total number of Attacks\nattacks = sum(queue)\n\n# Use Attack on the monster with", "import heapq\n\nN, K = map(int, input().split())\nH = list(map(int, input().split()))\n\n# heapify the list\nheapq.heapify(H)\n\n# count the number of attacks\nattacks = 0\n\nwhile H[0] > 0:\n    # get the minimum health monster\n    min_health = heapq.heappop(H)\n    \n    # if the monster's health is greater than 0, decrease it by 1\n    if min_health > 0:\n        attacks += 1"], "prompt": "\nQUESTION:\nFennec is fighting with N monsters.\nThe health of the i-th monster is H_i.\nFennec can do the following two actions:\n - Attack: Fennec chooses one monster. That monster's health will decrease by 1.\n - Special Move: Fennec chooses one monster. That monster's health will become 0.\nThere is no way other than Attack and Special Move to decrease the monsters' health.\nFennec wins when all the monsters' healths become 0 or below.\nFind the minimum number of times Fennec needs to do Attack (not counting Special Move) before winning when she can use Special Move at most K times.\n\n-----Constraints-----\n - 1 \\leq N \\leq 2 \\times 10^5\n - 0 \\leq K \\leq 2 \\times 10^5\n - 1 \\leq H_i \\leq 10^9\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\nH_1 ... H_N\n\n-----Output-----\nPrint the minimum number of times Fennec needs to do Attack (not counting Special Move) before winning.\n\n-----Sample Input-----\n3 1\n4 1 5\n\n-----Sample Output-----\n5\n\nBy using Special Move on the third monster, and doing Attack four times on the first monster and once on the second monster, Fennec can win with five Attacks.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}