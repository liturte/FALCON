{"2040": {"code": ["from queue import PriorityQueue\n\nn = int(input())\nb = [int(input()) for _ in range(n)]\n\nq = PriorityQueue()\nq.put((b[0], str(1)))\n\nres = [0]*n\nfor i in range(n):\n    val, num = q.get()\n    res[i] = int(num)\n    if i < n-1 and val == b[i]:\n        q.put((b[i+1], num", "import sys\n\ndef solve():\n    n = int(sys.stdin.readline())\n    b = [int(sys.stdin.readline()) for _ in range(n)]\n    a = [0]*n\n    for i in range(n-1, -1, -1):\n        for j in range(1, 100):\n            if sum(map(int, str(j))) == b[i] and (i == n-1 or j > a[i+1", "def find_sequence(b):\n    n = len(b)\n    a = [0]*n\n    a[0] = b[0]\n    for i in range(1, n):\n        a[i] = b[i] + a[i-1] - (a[i-1]//10)*10\n        if a[i] > b[i]*10 + 9:\n            a[i] = b[i]*10 + 9\n            a[", "from collections import deque\n\ndef get_seq(b):\n    a = [0]*len(b)\n    q = deque([(1, 9), (2, 8), (3, 7), (4, 6), (5, 5), (6, 4), (7, 3), (8, 2), (9, 1)])\n    for i in range(len(b)):\n        while True:\n            d, v = q.popleft", "from heapq import *\nfrom sys import stdin, stdout\n\nread = stdin.readline\nwrite = stdout.write\n\nn = int(read())\nb = [int(read()) for _ in range(n)]\n\nheap = [(1, 1)]\nvisited = [False] * (n + 1)\nprev = [0] * (n + 1)\n\nfor i in range(n):\n    while visited[heap[0][1]]:\n        heapp"], "prompt": "\nQUESTION:\nVasya had a strictly increasing sequence of positive integers a_1, ..., a_{n}. Vasya used it to build a new sequence b_1, ..., b_{n}, where b_{i} is the sum of digits of a_{i}'s decimal representation. Then sequence a_{i} got lost and all that remained is sequence b_{i}.\n\nVasya wonders what the numbers a_{i} could be like. Of all the possible options he likes the one sequence with the minimum possible last number a_{n}. Help Vasya restore the initial sequence.\n\nIt is guaranteed that such a sequence always exists.\n\n\n-----Input-----\n\nThe first line contains a single integer number n (1 \u2264 n \u2264 300).\n\nNext n lines contain integer numbers b_1, ..., b_{n} \u00a0\u2014 the required sums of digits. All b_{i} belong to the range 1 \u2264 b_{i} \u2264 300.\n\n\n-----Output-----\n\nPrint n integer numbers, one per line\u00a0\u2014 the correct option for numbers a_{i}, in order of following in sequence. The sequence should be strictly increasing. The sum of digits of the i-th number should be equal to b_{i}. \n\nIf there are multiple sequences with least possible number a_{n}, print any of them. Print the numbers without leading zeroes.\n\n\n-----Examples-----\nInput\n3\n1\n2\n3\n\nOutput\n1\n2\n3\n\nInput\n3\n3\n2\n1\n\nOutput\n3\n11\n100\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}