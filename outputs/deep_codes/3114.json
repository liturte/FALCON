{"3114": {"code": ["from collections import deque\n\ndef solve():\n    N, M = map(int, input().split())\n    graph = [[] for _ in range(N+1)]\n    indegree = [0] * (N+1)\n    outdegree = [0] * (N+1)\n    for _ in range(M):", "from collections import defaultdict, deque\n\ndef solve(n, m, edges):\n    graph = defaultdict(list)\n    indegree = defaultdict(int)\n    outdegree = defaultdict(int)\n    for x, y in edges:\n        graph[x].append(y)\n        graph[y].append(x)", "from collections import defaultdict, deque\n\ndef solve():\n    N, M = map(int, input().split())\n    graph = defaultdict(list)\n    for _ in range(M):\n        x, y = map(int, input().split())\n        graph[x].append(y)\n        graph[y].append(x", "from collections import defaultdict, deque\n\ndef solve(N, M, edges):\n    graph = defaultdict(list)\n    for u, v in edges:\n        graph[u].append(v)\n        graph[v].append(u)\n\n    visited = [False] * (N + 1)\n    parent = [0]", "from collections import defaultdict, deque\n\ndef is_bicolorable(graph):\n    color = defaultdict(lambda: -1)\n    for node in graph:\n        if color[node] == -1:\n            color[node] = 0\n            q = deque([node])\n            while q:\n                u = q.p"], "prompt": "\nQUESTION:\nIn the ACM kingdom, there are $N$ cities connected by $M$ two-way roads. These cities are connected, i.e., one can reach from any city $X$ to any other city $Y$ by going through some of these roads. One day, the government wishes to assign for each road a direction, such that one can still reach from any city to any other. You are asked to determine whether this task is possible.\n\n-----Input-----\nThe first line of each test case consists of two integers, $N$ ($1 \\leq N \\leq 50$), and $M$ ($1 \\leq M \\leq N(N - 1)/2$). Each of the next $M$ lines describes a road, and consists of two integers, $X$ and $Y$, ($1 \\leq X, Y \\leq N$; $X \\neq Y$), indicating that there is a road between city $X$ and $Y$. There is at most one road that directly connects each pair of cities.\n\n-----Output-----\nIf it is impossible, output a single line NO. Otherwise, output YES on the first line, followed by $M$ lines describing one possible direction assignment to these $M$ roads. Each of these $M$ lines should consist of two integers, $X$, $Y$, indicating that there is a one-way road from city $X$ to city $Y$. These $M$ lines can be output in any order.\n\n-----Examples-----\nSample Input 1:\n3 3\n1 2\n2 3\n1 3\nSample Output 1:\nYES\n1 3\n2 1\n3 2\n\nSample Input 2:\n4 3\n1 2\n1 3\n1 4\nSample Output 2:\nNO\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}