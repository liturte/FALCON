{"2473": {"code": ["def solve():\n    N, K = map(int, input().split())\n    points = [list(map(int, input().split())) for _ in range(N)]\n    points.sort()\n    x_coords = [point[0] for point in points]\n    y_coords = [point[1] for point in points]\n    min_area = float('inf')\n    for x1 in x_coords:\n        for", "import sys\ndef main():\n    input = sys.stdin.readline\n    n, k = map(int, input().split())\n    points = [tuple(map(int, input().split())) for _ in range(n)]\n    points.sort()\n    y_values = sorted(y for x, y in points)\n    min_area = float('inf')\n    for x1, y1 in points:\n        for x2,", "from sys import stdin\n\ndef min_rectangle_area(n, k, points):\n    min_area = float('inf')\n    points.sort()\n    for i in range(n):\n        for j in range(i+k-1, n):\n            x1, y1 = points[i]\n            x2, y2 = points[j]\n            if x1 == x2 or y1 == y2: continue", "def min_rectangle_area():\n    N, K = map(int, input().split())\n    points = [tuple(map(int, input().split())) for _ in range(N)]\n\n    x_coords = sorted(x for x, y in points)\n    y_coords = sorted(y for x, y in points)\n\n    def count(x):\n        return sum(1 for i in range(N) if x", "from sys import stdin\n\ndef min_rect_area():\n    N, K = map(int, stdin.readline().split())\n    points = [list(map(int, stdin.readline().split())) for _ in range(N)]\n\n    points.sort()\n\n    def check(area):\n        for i in range(N):\n            j = i + 1\n            while j < N and points[j][0] -"], "prompt": "\nQUESTION:\nWe have N points in a two-dimensional plane.\n\nThe coordinates of the i-th point (1 \\leq i \\leq N) are (x_i,y_i).\n\nLet us consider a rectangle whose sides are parallel to the coordinate axes that contains K or more of the N points in its interior.\n\nHere, points on the sides of the rectangle are considered to be in the interior.\n\nFind the minimum possible area of such a rectangle.  \n\n-----Constraints-----\n - 2 \\leq K \\leq N \\leq 50 \n - -10^9 \\leq x_i,y_i \\leq 10^9 (1 \\leq i \\leq N) \n - x_i\u2260x_j (1 \\leq i<j \\leq N) \n - y_i\u2260y_j (1 \\leq i<j \\leq N) \n - All input values are integers. (Added at 21:50 JST)  \n\n-----Input-----\nInput is given from Standard Input in the following format:  \nN K  \nx_1 y_1\n:  \nx_{N} y_{N}\n\n-----Output-----\nPrint the minimum possible area of a rectangle that satisfies the condition.  \n\n-----Sample Input-----\n4 4\n1 4\n3 3\n6 2\n8 1\n\n-----Sample Output-----\n21\n\nOne rectangle that satisfies the condition with the minimum possible area has the following vertices: (1,1), (8,1), (1,4) and (8,4).\n\nIts area is (8-1) \u00d7 (4-1) = 21.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}