{"2526": {"code": ["import heapq\ndef solve():\n    X, Y, A, B, C = map(int, input().", "import heapq\n\ndef solve():\n    X, Y, A, B, C = map(int, input", "import heapq\n\nX, Y, A, B, C = map(int, input().split())\np", "import heapq\n\nX, Y, A, B, C = map(int, input().split())\np", "import heapq\n\nX, Y, A, B, C = map(int, input().split())\np"], "prompt": "\nQUESTION:\nYou are going to eat X red apples and Y green apples.\n\nYou have A red apples of deliciousness p_1,p_2, \\dots, p_A, B green apples of deliciousness q_1,q_2, \\dots, q_B, and C colorless apples of deliciousness r_1,r_2, \\dots, r_C.\n\nBefore eating a colorless apple, you can paint it red or green, and it will count as a red or green apple, respectively.\n\nFrom the apples above, you will choose the apples to eat while making the sum of the deliciousness of the eaten apples as large as possible.\n\nFind the maximum possible sum of the deliciousness of the eaten apples that can be achieved when optimally coloring zero or more colorless apples.\n\n-----Constraints-----\n - 1 \\leq X \\leq A \\leq 10^5\n - 1 \\leq Y \\leq B \\leq 10^5\n - 1 \\leq C \\leq 10^5\n - 1 \\leq p_i \\leq 10^9\n - 1 \\leq q_i \\leq 10^9\n - 1 \\leq r_i \\leq 10^9\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nX Y A B C\np_1 p_2 ... p_A\nq_1 q_2 ... q_B\nr_1 r_2 ... r_C\n\n-----Output-----\nPrint the maximum possible sum of the deliciousness of the eaten apples.\n\n-----Sample Input-----\n1 2 2 2 1\n2 4\n5 1\n3\n\n-----Sample Output-----\n12\n\nThe maximum possible sum of the deliciousness of the eaten apples can be achieved as follows:\n - Eat the 2-nd red apple.\n - Eat the 1-st green apple.\n - Paint the 1-st colorless apple green and eat it.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}