{"284": {"code": ["n = int(input())\n\ndef is_possible(n):\n    for a in range(0, n//1234567+1):", "def check_score(n):\n    for i in range(0, n//1234567+1):\n        for j in range(0, (", "def is_possible(n):\n    for a in range(n//1234567 + 1):\n        for b in range(n//123", "def solve(n):\n    for a in range(n//1234567+1):\n        for b in range(n//12345", "def solve(n):\n    for a in range(n//1234567 + 1):\n        for b in range(n//12345"], "prompt": "\nQUESTION:\nKolya is developing an economy simulator game. His most favourite part of the development process is in-game testing. Once he was entertained by the testing so much, that he found out his game-coin score become equal to 0.\n\nKolya remembers that at the beginning of the game his game-coin score was equal to n and that he have bought only some houses (for 1 234 567 game-coins each), cars (for 123 456 game-coins each) and computers (for 1 234 game-coins each).\n\nKolya is now interested, whether he could have spent all of his initial n game-coins buying only houses, cars and computers or there is a bug in the game. Formally, is there a triple of non-negative integers a, b and c such that a \u00d7 1 234 567 + b \u00d7 123 456 + c \u00d7 1 234 = n?\n\nPlease help Kolya answer this question.\n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 10^9)\u00a0\u2014 Kolya's initial game-coin score.\n\n\n-----Output-----\n\nPrint \"YES\" (without quotes) if it's possible that Kolya spent all of his initial n coins buying only houses, cars and computers. Otherwise print \"NO\" (without quotes).\n\n\n-----Examples-----\nInput\n1359257\n\nOutput\nYES\nInput\n17851817\n\nOutput\nNO\n\n\n-----Note-----\n\nIn the first sample, one of the possible solutions is to buy one house, one car and one computer, spending 1 234 567 + 123 456 + 1234 = 1 359 257 game-coins in total.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}