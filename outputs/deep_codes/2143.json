{"2143": {"code": ["QUESTION:\nMike decided to teach programming to children in an elementary school. He knows that it is not an easy task to interest children in that age to code. That is why he decided to give each child two sweets.\n\nMike has $n$ sweets with sizes $a_1, a_2, \\ldots, a_n$. All his sweets have different sizes. That is, there is no such pair $(i, j)$ ($1 \\leq i, j \\leq n$) such that $i \\ne j$ and $a_i = a_j$.\n\nSince Mike has taught for many years, he knows that if he gives two sweets with sizes $a_i$ and $a_j$ to one child and $a_k$ and $a_p$ to another, where $(a_i + a_j) \\neq (a_k + a_p)$, then a child who has a smaller sum of sizes will be upset. That is, if there are two children who have different sums of sweets, then one of them will be upset. Apparently, Mike does not want somebody to be upset. \n\nMike wants to invite children giving each of them two sweets. Obviously, he can't give one sweet to two or more children. His goal is to invite as many children as he can. \n\nSince Mike is busy preparing to his first lecture in the elementary school, he is asking you to find the maximum number of children he can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($2 \\leq n \\leq 1\\,000$)\u00a0\u2014 the number of sweets Mike has.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^5$)\u00a0\u2014 the sizes of the sweets. It is guaranteed that all integers are distinct.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the maximum number of children Mike can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Examples-----\nInput\n8\n1 8 3 11 4 9 2 7\n\nOutput\n3\n\nInput\n7\n3 1 7 11 9 2 12\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first example, Mike can give $9+2=11$ to one child, $8+3=11$ to another one, and $7+4=11$ to the", "QUESTION:\nMike decided to teach programming to children in an elementary school. He knows that it is not an easy task to interest children in that age to code. That is why he decided to give each child two sweets.\n\nMike has $n$ sweets with sizes $a_1, a_2, \\ldots, a_n$. All his sweets have different sizes. That is, there is no such pair $(i, j)$ ($1 \\leq i, j \\leq n$) such that $i \\ne j$ and $a_i = a_j$.\n\nSince Mike has taught for many years, he knows that if he gives two sweets with sizes $a_i$ and $a_j$ to one child and $a_k$ and $a_p$ to another, where $(a_i + a_j) \\neq (a_k + a_p)$, then a child who has a smaller sum of sizes will be upset. That is, if there are two children who have different sums of sweets, then one of them will be upset. Apparently, Mike does not want somebody to be upset. \n\nMike wants to invite children giving each of them two sweets. Obviously, he can't give one sweet to two or more children. His goal is to invite as many children as he can. \n\nSince Mike is busy preparing to his first lecture in the elementary school, he is asking you to find the maximum number of children he can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($2 \\leq n \\leq 1\\,000$)\u00a0\u2014 the number of sweets Mike has.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^5$)\u00a0\u2014 the sizes of the sweets. It is guaranteed that all integers are distinct.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the maximum number of children Mike can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Examples-----\nInput\n8\n1 8 3 11 4 9 2 7\n\nOutput\n3\n\nInput\n7\n3 1 7 11 9 2 12\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first example, Mike can give $9+2=11$ to one child, $8+3=11$ to another one, and $7+4=11$ to the", "QUESTION:\nMike decided to teach programming to children in an elementary school. He knows that it is not an easy task to interest children in that age to code. That is why he decided to give each child two sweets.\n\nMike has $n$ sweets with sizes $a_1, a_2, \\ldots, a_n$. All his sweets have different sizes. That is, there is no such pair $(i, j)$ ($1 \\leq i, j \\leq n$) such that $i \\ne j$ and $a_i = a_j$.\n\nSince Mike has taught for many years, he knows that if he gives two sweets with sizes $a_i$ and $a_j$ to one child and $a_k$ and $a_p$ to another, where $(a_i + a_j) \\neq (a_k + a_p)$, then a child who has a smaller sum of sizes will be upset. That is, if there are two children who have different sums of sweets, then one of them will be upset. Apparently, Mike does not want somebody to be upset. \n\nMike wants to invite children giving each of them two sweets. Obviously, he can't give one sweet to two or more children. His goal is to invite as many children as he can. \n\nSince Mike is busy preparing to his first lecture in the elementary school, he is asking you to find the maximum number of children he can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($2 \\leq n \\leq 1\\,000$)\u00a0\u2014 the number of sweets Mike has.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^5$)\u00a0\u2014 the sizes of the sweets. It is guaranteed that all integers are distinct.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the maximum number of children Mike can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Examples-----\nInput\n8\n1 8 3 11 4 9 2 7\n\nOutput\n3\n\nInput\n7\n3 1 7 11 9 2 12\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first example, Mike can give $9+2=11$ to one child, $8+3=11$ to another one, and $7+4=11$ to the", "QUESTION:\nMike decided to teach programming to children in an elementary school. He knows that it is not an easy task to interest children in that age to code. That is why he decided to give each child two sweets.\n\nMike has $n$ sweets with sizes $a_1, a_2, \\ldots, a_n$. All his sweets have different sizes. That is, there is no such pair $(i, j)$ ($1 \\leq i, j \\leq n$) such that $i \\ne j$ and $a_i = a_j$.\n\nSince Mike has taught for many years, he knows that if he gives two sweets with sizes $a_i$ and $a_j$ to one child and $a_k$ and $a_p$ to another, where $(a_i + a_j) \\neq (a_k + a_p)$, then a child who has a smaller sum of sizes will be upset. That is, if there are two children who have different sums of sweets, then one of them will be upset. Apparently, Mike does not want somebody to be upset. \n\nMike wants to invite children giving each of them two sweets. Obviously, he can't give one sweet to two or more children. His goal is to invite as many children as he can. \n\nSince Mike is busy preparing to his first lecture in the elementary school, he is asking you to find the maximum number of children he can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($2 \\leq n \\leq 1\\,000$)\u00a0\u2014 the number of sweets Mike has.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^5$)\u00a0\u2014 the sizes of the sweets. It is guaranteed that all integers are distinct.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the maximum number of children Mike can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Examples-----\nInput\n8\n1 8 3 11 4 9 2 7\n\nOutput\n3\n\nInput\n7\n3 1 7 11 9 2 12\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first example, Mike can give $9+2=11$ to one child, $8+3=11$ to another one, and $7+4=11$ to the", "QUESTION:\nMike decided to teach programming to children in an elementary school. He knows that it is not an easy task to interest children in that age to code. That is why he decided to give each child two sweets.\n\nMike has $n$ sweets with sizes $a_1, a_2, \\ldots, a_n$. All his sweets have different sizes. That is, there is no such pair $(i, j)$ ($1 \\leq i, j \\leq n$) such that $i \\ne j$ and $a_i = a_j$.\n\nSince Mike has taught for many years, he knows that if he gives two sweets with sizes $a_i$ and $a_j$ to one child and $a_k$ and $a_p$ to another, where $(a_i + a_j) \\neq (a_k + a_p)$, then a child who has a smaller sum of sizes will be upset. That is, if there are two children who have different sums of sweets, then one of them will be upset. Apparently, Mike does not want somebody to be upset. \n\nMike wants to invite children giving each of them two sweets. Obviously, he can't give one sweet to two or more children. His goal is to invite as many children as he can. \n\nSince Mike is busy preparing to his first lecture in the elementary school, he is asking you to find the maximum number of children he can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($2 \\leq n \\leq 1\\,000$)\u00a0\u2014 the number of sweets Mike has.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^5$)\u00a0\u2014 the sizes of the sweets. It is guaranteed that all integers are distinct.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the maximum number of children Mike can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Examples-----\nInput\n8\n1 8 3 11 4 9 2 7\n\nOutput\n3\n\nInput\n7\n3 1 7 11 9 2 12\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first example, Mike can give $9+2=11$ to one child, $8+3=11$ to another one, and $7+4=11$ to a"], "prompt": "\nQUESTION:\nMike decided to teach programming to children in an elementary school. He knows that it is not an easy task to interest children in that age to code. That is why he decided to give each child two sweets.\n\nMike has $n$ sweets with sizes $a_1, a_2, \\ldots, a_n$. All his sweets have different sizes. That is, there is no such pair $(i, j)$ ($1 \\leq i, j \\leq n$) such that $i \\ne j$ and $a_i = a_j$.\n\nSince Mike has taught for many years, he knows that if he gives two sweets with sizes $a_i$ and $a_j$ to one child and $a_k$ and $a_p$ to another, where $(a_i + a_j) \\neq (a_k + a_p)$, then a child who has a smaller sum of sizes will be upset. That is, if there are two children who have different sums of sweets, then one of them will be upset. Apparently, Mike does not want somebody to be upset. \n\nMike wants to invite children giving each of them two sweets. Obviously, he can't give one sweet to two or more children. His goal is to invite as many children as he can. \n\nSince Mike is busy preparing to his first lecture in the elementary school, he is asking you to find the maximum number of children he can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($2 \\leq n \\leq 1\\,000$)\u00a0\u2014 the number of sweets Mike has.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^5$)\u00a0\u2014 the sizes of the sweets. It is guaranteed that all integers are distinct.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the maximum number of children Mike can invite giving each of them two sweets in such way that nobody will be upset.\n\n\n-----Examples-----\nInput\n8\n1 8 3 11 4 9 2 7\n\nOutput\n3\n\nInput\n7\n3 1 7 11 9 2 12\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first example, Mike can give $9+2=11$ to one child, $8+3=11$ to another one, and $7+4=11$ to the third child. Therefore, Mike can invite three children. Note that it is not the only solution.\n\nIn the second example, Mike can give $3+9=12$ to one child and $1+11$ to another one. Therefore, Mike can invite two children. Note that it is not the only solution.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}