{"4139": {"code": ["import sys\n\ndef count_numbers(n):\n    dp = [0] * (n + 1)\n    dp[0] = 1\n    dp[1] = 2\n    dp[2] = 4\n    for i in range(3, n + 1):\n        dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3]\n    return dp[n]\n\nn = int(sys.stdin.readline().strip())\nprint(count_numbers(n))\n\n\nThis code uses dynamic programming to solve the problem. The `dp[i]` is the number of ways to construct a number with digits 7, 5, and 3 of length `i`. The base cases are `dp[0] = 1`, `dp[1] = 2`, and `dp[2] = 4`, because we can have `7`, `5`, `3`, `75`, and `57`, `37`,", "def count_sgs_numbers(n):\n    sgs_numbers = []\n    for i in range(1, 10):\n        for j in range(1, 10):\n            for k in range(1, 10):\n                if i != j and j != k and i != k:\n                    number = int(str(i) + str(j) + str(k))\n                    if number <= n:\n                        sgs_numbers.append(number)\n    return len(sgs_numbers)\n\nn = int(input())\nprint(count_sgs_numbers(n))\n\n\nThis code generates all possible combinations of three distinct digits from 1 to 9, then constructs the numbers by concatenating these digits. It checks if the constructed number is less than or equal to N and if so, adds it to the list of Shichi-Go-San numbers. Finally, it returns the count of these numbers.\n\nPlease note that this code is not optimized for large inputs. It has a time complexity of O(", "def count_seven_five_three(n):\n    count = 0\n    for i in range(1, n+1):\n        if '7' in str(i) and '5' in str(i) and '3' in str(i) and len(set(str(i))) == 3:\n            count += 1\n    return count\n\nprint(count_seven_five_three(int(input())))\n\nThis Python code defines a function `count_seven_five_three(n)` that counts the number of seven-five-three numbers between 1 and n. It does this by iterating over each number from 1 to n (inclusive), checking if each number contains the digits 7, 5, and 3, and if the number has only those three digits. If the number meets all these conditions, it is counted. The function returns the total count. The input is read from standard input, and the count of seven-five-three numbers is printed to standard output.\n\nPlease note that this solution might not be efficient for large inputs due to its time complexity", "def solve(n):\n    cnt = [0]*10\n    while n > 0:\n        cnt[n%10] += 1\n        n //= 10\n    return max(0, cnt[7]+cnt[5]+cnt[3]-2)\n\nprint(solve(int(input())))\n\n\nEXPLANATION:\nThe problem can be solved by counting the number of 7, 5, and 3 in the input number. The maximum number of these numbers is the number of Shichi-Go-San numbers. However, since the digits 7, 5, and 3 must appear at least once, we subtract 2 from the sum. If the input number does not contain any of these digits, the function returns 0.\n\nThe code reads the input number, counts the digits, and then calculates the number of Shichi-Go-San numbers. The result is printed to the standard output.\n\nThe time complexity of the code is O(log(N)) because it iterates through each digit of the input", "def shichi_go_san(n):\n    count = 0\n    for i in range(1, n+1):\n        if '7' in str(i) and '5' in str(i) and '3' in str(i) and '0' not in str(i) and '2' not in str(i) and '4' not in str(i) and '6' not in str(i) and '8' not in str(i) and '9' not in str(i):\n            count += 1\n    return count\n\nprint(shichi_go_san(int(input())))\n\n\nThis Python code defines a function `shichi_go_san` which takes an integer `n` as input and returns the count of Shichi-Go-San numbers between 1 and `n`. It uses a for loop to iterate over each number from 1 to `n`, checks if each number contains the digits 7, 5, and 3 and does not contain any other digits, and if so, incre"], "prompt": "\nQUESTION:\nYou are given an integer N. Among the integers between 1 and N (inclusive), how many Shichi-Go-San numbers (literally \"Seven-Five-Three numbers\") are there?\nHere, a Shichi-Go-San number is a positive integer that satisfies the following condition:\n - When the number is written in base ten, each of the digits 7, 5 and 3 appears at least once, and the other digits never appear.\n\n-----Constraints-----\n - 1 \\leq N < 10^9\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nPrint the number of the Shichi-Go-San numbers between 1 and N (inclusive).\n\n-----Sample Input-----\n575\n\n-----Sample Output-----\n4\n\nThere are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}