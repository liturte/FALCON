{"1904": {"code": ["QUESTION:\nVasya is preparing a contest, and now he has written a statement for an easy problem. The statement is a string of length $n$ consisting of lowercase Latin latters. Vasya thinks that the statement can be considered hard if it contains a subsequence hard; otherwise the statement is easy. For example, hard, hzazrzd, haaaaard can be considered hard statements, while har, hart and drah are easy statements. \n\nVasya doesn't want the statement to be hard. He may remove some characters from the statement in order to make it easy. But, of course, some parts of the statement can be crucial to understanding. Initially the ambiguity of the statement is $0$, and removing $i$-th character increases the ambiguity by $a_i$ (the index of each character is considered as it was in the original statement, so, for example, if you delete character r from hard, and then character d, the index of d is still $4$ even though you delete it from the string had).\n\nVasya wants to calculate the minimum ambiguity of the statement, if he removes some characters (possibly zero) so that the statement is easy. Help him to do it!\n\nRecall that subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 10^5$) \u2014 the length of the statement.\n\nThe second line contains one string $s$ of length $n$, consisting of lowercase Latin letters \u2014 the statement written by Vasya.\n\nThe third line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 998244353$).\n\n\n-----Output-----\n\nPrint minimum possible ambiguity of the statement after Vasya deletes some (possibly zero) characters so the resulting statement is easy.\n\n\n-----Examples-----\nInput\n6\nhhardh\n3 2 9 11 7 1\n\nOutput\n5\n\nInput\n8\nhhzarwde\n3 2 6 9 4 8 7 1\n\nOutput\n4\n\nInput\n6\nhhaarr\n1 2 3 4 5 6\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example, first two characters are removed so the result is ardh.\n\nIn the second example, $5$-th character is removed so the result is hhzawde.", "QUESTION:\nVasya is preparing a contest, and now he has written a statement for an easy problem. The statement is a string of length $n$ consisting of lowercase Latin latters. Vasya thinks that the statement can be considered hard if it contains a subsequence hard; otherwise the statement is easy. For example, hard, hzazrzd, haaaaard can be considered hard statements, while har, hart and drah are easy statements. \n\nVasya doesn't want the statement to be hard. He may remove some characters from the statement in order to make it easy. But, of course, some parts of the statement can be crucial to understanding. Initially the ambiguity of the statement is $0$, and removing $i$-th character increases the ambiguity by $a_i$ (the index of each character is considered as it was in the original statement, so, for example, if you delete character r from hard, and then character d, the index of d is still $4$ even though you delete it from the string had).\n\nVasya wants to calculate the minimum ambiguity of the statement, if he removes some characters (possibly zero) so that the statement is easy. Help him to do it!\n\nRecall that subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 10^5$) \u2014 the length of the statement.\n\nThe second line contains one string $s$ of length $n$, consisting of lowercase Latin letters \u2014 the statement written by Vasya.\n\nThe third line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 998244353$).\n\n\n-----Output-----\n\nPrint minimum possible ambiguity of the statement after Vasya deletes some (possibly zero) characters so the resulting statement is easy.\n\n\n-----Examples-----\nInput\n6\nhhardh\n3 2 9 11 7 1\n\nOutput\n5\n\nInput\n8\nhhzarwde\n3 2 6 9 4 8 7 1\n\nOutput\n4\n\nInput\n6\nhhaarr\n1 2 3 4 5 6\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example, first two characters are removed so the result is ardh.\n\nIn the second example, $5$-th character is removed so the result is hhzawde.", "QUESTION:\nVasya is preparing a contest, and now he has written a statement for an easy problem. The statement is a string of length $n$ consisting of lowercase Latin latters. Vasya thinks that the statement can be considered hard if it contains a subsequence hard; otherwise the statement is easy. For example, hard, hzazrzd, haaaaard can be considered hard statements, while har, hart and drah are easy statements. \n\nVasya doesn't want the statement to be hard. He may remove some characters from the statement in order to make it easy. But, of course, some parts of the statement can be crucial to understanding. Initially the ambiguity of the statement is $0$, and removing $i$-th character increases the ambiguity by $a_i$ (the index of each character is considered as it was in the original statement, so, for example, if you delete character r from hard, and then character d, the index of d is still $4$ even though you delete it from the string had).\n\nVasya wants to calculate the minimum ambiguity of the statement, if he removes some characters (possibly zero) so that the statement is easy. Help him to do it!\n\nRecall that subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 10^5$) \u2014 the length of the statement.\n\nThe second line contains one string $s$ of length $n$, consisting of lowercase Latin letters \u2014 the statement written by Vasya.\n\nThe third line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 998244353$).\n\n\n-----Output-----\n\nPrint minimum possible ambiguity of the statement after Vasya deletes some (possibly zero) characters so the resulting statement is easy.\n\n\n-----Examples-----\nInput\n6\nhhardh\n3 2 9 11 7 1\n\nOutput\n5\n\nInput\n8\nhhzarwde\n3 2 6 9 4 8 7 1\n\nOutput\n4\n\nInput\n6\nhhaarr\n1 2 3 4 5 6\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example, first two characters are removed so the result is ardh.\n\nIn the second example, $5$-th character is removed so the result is hhzawde.", "QUESTION:\nVasya is preparing a contest, and now he has written a statement for an easy problem. The statement is a string of length $n$ consisting of lowercase Latin latters. Vasya thinks that the statement can be considered hard if it contains a subsequence hard; otherwise the statement is easy. For example, hard, hzazrzd, haaaaard can be considered hard statements, while har, hart and drah are easy statements. \n\nVasya doesn't want the statement to be hard. He may remove some characters from the statement in order to make it easy. But, of course, some parts of the statement can be crucial to understanding. Initially the ambiguity of the statement is $0$, and removing $i$-th character increases the ambiguity by $a_i$ (the index of each character is considered as it was in the original statement, so, for example, if you delete character r from hard, and then character d, the index of d is still $4$ even though you delete it from the string had).\n\nVasya wants to calculate the minimum ambiguity of the statement, if he removes some characters (possibly zero) so that the statement is easy. Help him to do it!\n\nRecall that subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 10^5$) \u2014 the length of the statement.\n\nThe second line contains one string $s$ of length $n$, consisting of lowercase Latin letters \u2014 the statement written by Vasya.\n\nThe third line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 998244353$).\n\n\n-----Output-----\n\nPrint minimum possible ambiguity of the statement after Vasya deletes some (possibly zero) characters so the resulting statement is easy.\n\n\n-----Examples-----\nInput\n6\nhhardh\n3 2 9 11 7 1\n\nOutput\n5\n\nInput\n8\nhhzarwde\n3 2 6 9 4 8 7 1\n\nOutput\n4\n\nInput\n6\nhhaarr\n1 2 3 4 5 6\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example, first two characters are removed so the result is ardh.\n\nIn the second example, $5$-th character is removed so the result is hhzawde.", "QUESTION:\nVasya is preparing a contest, and now he has written a statement for an easy problem. The statement is a string of length $n$ consisting of lowercase Latin latters. Vasya thinks that the statement can be considered hard if it contains a subsequence hard; otherwise the statement is easy. For example, hard, hzazrzd, haaaaard can be considered hard statements, while har, hart and drah are easy statements. \n\nVasya doesn't want the statement to be hard. He may remove some characters from the statement in order to make it easy. But, of course, some parts of the statement can be crucial to understanding. Initially the ambiguity of the statement is $0$, and removing $i$-th character increases the ambiguity by $a_i$ (the index of each character is considered as it was in the original statement, so, for example, if you delete character r from hard, and then character d, the index of d is still $4$ even though you delete it from the string had).\n\nVasya wants to calculate the minimum ambiguity of the statement, if he removes some characters (possibly zero) so that the statement is easy. Help him to do it!\n\nRecall that subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 10^5$) \u2014 the length of the statement.\n\nThe second line contains one string $s$ of length $n$, consisting of lowercase Latin letters \u2014 the statement written by Vasya.\n\nThe third line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 998244353$).\n\n\n-----Output-----\n\nPrint minimum possible ambiguity of the statement after Vasya deletes some (possibly zero) characters so the resulting statement is easy.\n\n\n-----Examples-----\nInput\n6\nhhardh\n3 2 9 11 7 1\n\nOutput\n5\n\nInput\n8\nhhzarwde\n3 2 6 9 4 8 7 1\n\nOutput\n4\n\nInput\n6\nhhaarr\n1 2 3 4 5 6\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example, first two characters are removed so the result is ardh.\n\nIn the second example, $5$-th character is removed so the result is hhzawde."], "prompt": "\nQUESTION:\nVasya is preparing a contest, and now he has written a statement for an easy problem. The statement is a string of length $n$ consisting of lowercase Latin latters. Vasya thinks that the statement can be considered hard if it contains a subsequence hard; otherwise the statement is easy. For example, hard, hzazrzd, haaaaard can be considered hard statements, while har, hart and drah are easy statements. \n\nVasya doesn't want the statement to be hard. He may remove some characters from the statement in order to make it easy. But, of course, some parts of the statement can be crucial to understanding. Initially the ambiguity of the statement is $0$, and removing $i$-th character increases the ambiguity by $a_i$ (the index of each character is considered as it was in the original statement, so, for example, if you delete character r from hard, and then character d, the index of d is still $4$ even though you delete it from the string had).\n\nVasya wants to calculate the minimum ambiguity of the statement, if he removes some characters (possibly zero) so that the statement is easy. Help him to do it!\n\nRecall that subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 10^5$) \u2014 the length of the statement.\n\nThe second line contains one string $s$ of length $n$, consisting of lowercase Latin letters \u2014 the statement written by Vasya.\n\nThe third line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 998244353$).\n\n\n-----Output-----\n\nPrint minimum possible ambiguity of the statement after Vasya deletes some (possibly zero) characters so the resulting statement is easy.\n\n\n-----Examples-----\nInput\n6\nhhardh\n3 2 9 11 7 1\n\nOutput\n5\n\nInput\n8\nhhzarwde\n3 2 6 9 4 8 7 1\n\nOutput\n4\n\nInput\n6\nhhaarr\n1 2 3 4 5 6\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example, first two characters are removed so the result is ardh.\n\nIn the second example, $5$-th character is removed so the result is hhzawde.\n\nIn the third example there's no need to remove anything.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}