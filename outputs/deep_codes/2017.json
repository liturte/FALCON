{"2017": {"code": ["import sys\nfrom bisect import bisect_left\n\ninput = sys.stdin.readline\n\nn = int(input())\nswaps = [tuple(map(int, input().split())) for _ in range(n)]\n\ninv = 0\nlst = [0] * (n + 1)\n\nfor i in range(1, n + 1):\n    a, b = sw", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nswaps = [tuple(map(int, input().split())) for _ in range(n)]\n\n# Initialize the sequence\nsequence = list(range(1, 10**9+1))\n\n# Perform the swaps\nfor a, b in swaps:\n    sequence[a-1", "import sys\n\nn = int(sys.stdin.readline())\nswaps = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n\nbit = [0] * (10**9 + 1)\n\ndef update(i, val):\n    while i <= len(bit):\n        bit[i] += val\n        i += i", "from sys import stdin, stdout\n\ndef update(i, val, tree, n):\n    while i <= n:\n        tree[i] += val\n        i += i & (-i)\n\ndef query(i, tree):\n    s = 0\n    while i > 0:\n        s += tree[i]\n        i -= i & (-i)\n    return s\n\ndef", "import sys\ninput = sys.stdin.readline\n\ndef update(i, val):\n    while i <= n:\n        bit[i] += val\n        i += i & -i\n\ndef query(i):\n    s = 0\n    while i > 0:\n        s += bit[i]\n        i -= i & -i\n    return s\n\nn = int(input"], "prompt": "\nQUESTION:\nThere is an infinite sequence consisting of all positive integers in the increasing order: p = {1, 2, 3, ...}. We performed n swap operations with this sequence. A swap(a, b) is an operation of swapping the elements of the sequence on positions a and b. Your task is to find the number of inversions in the resulting sequence, i.e. the number of such index pairs (i, j), that i < j and p_{i} > p_{j}.\n\n\n-----Input-----\n\nThe first line contains a single integer n (1 \u2264 n \u2264 10^5)\u00a0\u2014 the number of swap operations applied to the sequence.\n\nEach of the next n lines contains two integers a_{i} and b_{i} (1 \u2264 a_{i}, b_{i} \u2264 10^9, a_{i} \u2260 b_{i})\u00a0\u2014 the arguments of the swap operation.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of inversions in the resulting sequence.\n\n\n-----Examples-----\nInput\n2\n4 2\n1 4\n\nOutput\n4\n\nInput\n3\n1 6\n3 4\n2 5\n\nOutput\n15\n\n\n\n-----Note-----\n\nIn the first sample the sequence is being modified as follows: $\\{1,2,3,4,5, \\ldots \\} \\rightarrow \\{1,4,3,2,5, \\ldots \\} \\rightarrow \\{2,4,3,1,5 \\ldots \\}$. It has 4 inversions formed by index pairs (1, 4), (2, 3), (2, 4) and (3, 4).\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}