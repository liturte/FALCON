{"2649": {"code": ["N = int(input())\npoints = [list(map(int, input().split())) for _ in range(N)]\npoints.sort()\nmax_x = max(x for x, y in points)\nmin_x = min(x for x, y in points)\npoints.sort(key=lambda p: p[1])\nmax_y = max(y for x, y in points)\nmin_y = min(y for x, y in points)\nprint(max(max_x - min_x, max_y - min_y))\n\n\nEXPLANATION:\nThe code first reads the number of points and the coordinates of each point. It then sorts the points by x-coordinate and y-coordinate, and finds the maximum and minimum x-coordinates and y-coordinates. The Manhattan distance between two points is the sum of the absolute differences of their x-coordinates and y-coordinates.", "def max_manhattan_distance():\n    N = int(input())\n    points = [list(map(int, input().split())) for _ in range(N)]\n    x_coords = [x for x, y in points]\n    y_coords = [y for x, y in points]\n    x_coords.sort()\n    y_coords.sort()\n    return max(abs(x_coords[-1] - x_coords[0]), abs(y_coords[-1] - y_coords[0]))\n\nprint(max_manhattan_distance())\n\n\nExplanation:\nThis solution sorts the x and y coordinates separately and then calculates the maximum possible Manhattan distance by taking the difference between the maximum and minimum x or y coordinates. This is because the maximum Manhattan distance will occur when the two points are the furthest apart in one dimension (x or y).", "import sys\n\nn = int(sys.stdin.readline().strip())\npoints = [list(map(int, sys.stdin.readline().strip().split())) for _ in range(n)]\nx_coords = [p[0] for p in points]\ny_coords = [p[1] for p in points]\n\nprint(max(max(x_coords) - min(x_coords), max(y_coords) - min(y_coords)))\n\n\nThis solution works by first reading in the number of points and the coordinates of each point. It then calculates the maximum Manhattan distance by finding the maximum difference between the maximum and minimum x-coordinates and the maximum and minimum y-coordinates. This is because the maximum Manhattan distance will occur when the two points are on the same side of the x-axis and y-axis (i.e., the point with the largest x-", "N = int(input())\npoints = [list(map(int, input().split())) for _ in range(N)]\nx_coords = sorted([x for x, y in points])\ny_coords = sorted([y for x, y in points])\n\nmax_distance = max(x_coords[-1] - x_coords[0], y_coords[-1] - y_coords[0])\nprint(max_distance)\n\n\nExplanation:\nWe first read the input and sort the x and y coordinates separately. The Manhattan distance between two points (x1, y1) and (x2, y2) is max(|x1-x2|, |y1-y2|). So, the maximum Manhattan distance is either the maximum difference between the smallest and largest x coordinates or the maximum difference between the smallest and largest y coordinates. We calculate this and print the result.\n\nThis", "import sys\n\nN = int(sys.stdin.readline().strip())\npoints = [list(map(int, sys.stdin.readline().strip().split())) for _ in range(N)]\n\nmax_x = max(x for x, y in points)\nmax_y = max(y for x, y in points)\n\nprint(max(abs(x - max_x) + abs(y - max_y) for x, y in points))\n\n\nExplanation:\n\nThe Manhattan distance is calculated by taking the absolute difference between the x coordinates and the y coordinates of the two points. To find the maximum possible Manhattan distance, we need to find two points that are as far apart as possible. This can be achieved by finding the point with the maximum x and y coordinates and then calculating the Manhattan distance to all other points. The maximum of these distances is the maximum possible Manhattan distance.\n\nThis solution uses"], "prompt": "\nQUESTION:\nThere are N points on the 2D plane, i-th of which is located on (x_i, y_i).\nThere can be multiple points that share the same coordinate.\nWhat is the maximum possible Manhattan distance between two distinct points?\nHere, the Manhattan distance between two points (x_i, y_i) and (x_j, y_j) is defined by |x_i-x_j| + |y_i-y_j|.\n\n-----Constraints-----\n - 2 \\leq N \\leq 2 \\times 10^5\n - 1 \\leq x_i,y_i \\leq 10^9\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n-----Output-----\nPrint the answer.\n\n-----Sample Input-----\n3\n1 1\n2 4\n3 2\n\n-----Sample Output-----\n4\n\nThe Manhattan distance between the first point and the second point is |1-2|+|1-4|=4, which is maximum possible.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}