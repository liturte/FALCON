{"1622": {"code": ["QUESTION:\nThere are n employees working in company \"X\" (let's number them from 1 to n for convenience). Initially the employees didn't have any relationships among each other. On each of m next days one of the following events took place:  either employee y became the boss of employee x (at that, employee x didn't have a boss before);  or employee x gets a packet of documents and signs them; then he gives the packet to his boss. The boss signs the documents and gives them to his boss and so on (the last person to sign the documents sends them to the archive);  or comes a request of type \"determine whether employee x signs certain documents\". \n\nYour task is to write a program that will, given the events, answer the queries of the described type. At that, it is guaranteed that throughout the whole working time the company didn't have cyclic dependencies.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 10^5) \u2014 the number of employees and the number of events. \n\nEach of the next m lines contains the description of one event (the events are given in the chronological order). The first number of the line determines the type of event t (1 \u2264 t \u2264 3).   If t = 1, then next follow two integers x and y (1 \u2264 x, y \u2264 n) \u2014 numbers of the company employees. It is guaranteed that employee x doesn't have the boss currently.  If t = 2, then next follow integer x (1 \u2264 x \u2264 n) \u2014 the number of the employee who got a document packet.  If t = 3, then next follow two integers x and i (1 \u2264 x \u2264 n;\u00a01 \u2264 i \u2264 [number of packets that have already been given]) \u2014 the employee and the number of the document packet for which you need to find out information. The document packets are numbered started from 1 in the chronological order. \n\nIt is guaranteed that the input has at least one query of the third type.\n\n\n-----Output-----\n\nFor each query of the third type print \"YES\" if the employee signed the document package and \"NO\" otherwise. Print all the words without the quotes.\n\n\n-----Examples-----\nInput\n4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3\n\nOutput\nYES\nNO\nYES", "QUESTION:\nThere are n employees working in company \"X\" (let's number them from 1 to n for convenience). Initially the employees didn't have any relationships among each other. On each of m next days one of the following events took place:  either employee y became the boss of employee x (at that, employee x didn't have a boss before);  or employee x gets a packet of documents and signs them; then he gives the packet to his boss. The boss signs the documents and gives them to his boss and so on (the last person to sign the documents sends them to the archive);  or comes a request of type \"determine whether employee x signs certain documents\". \n\nYour task is to write a program that will, given the events, answer the queries of the described type. At that, it is guaranteed that throughout the whole working time the company didn't have cyclic dependencies.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 10^5) \u2014 the number of employees and the number of events. \n\nEach of the next m lines contains the description of one event (the events are given in the chronological order). The first number of the line determines the type of event t (1 \u2264 t \u2264 3).   If t = 1, then next follow two integers x and y (1 \u2264 x, y \u2264 n) \u2014 numbers of the company employees. It is guaranteed that employee x doesn't have the boss currently.  If t = 2, then next follow integer x (1 \u2264 x \u2264 n) \u2014 the number of the employee who got a document packet.  If t = 3, then next follow two integers x and i (1 \u2264 x \u2264 n;\u00a01 \u2264 i \u2264 [number of packets that have already been given]) \u2014 the employee and the number of the document packet for which you need to find out information. The document packets are numbered started from 1 in the chronological order. \n\nIt is guaranteed that the input has at least one query of the third type.\n\n\n-----Output-----\n\nFor each query of the third type print \"YES\" if the employee signed the document package and \"NO\" otherwise. Print all the words without the quotes.\n\n\n-----Examples-----\nInput\n4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3\n\nOutput\nYES\nNO\nYES", "QUESTION:\nThere are n employees working in company \"X\" (let's number them from 1 to n for convenience). Initially the employees didn't have any relationships among each other. On each of m next days one of the following events took place:  either employee y became the boss of employee x (at that, employee x didn't have a boss before);  or employee x gets a packet of documents and signs them; then he gives the packet to his boss. The boss signs the documents and gives them to his boss and so on (the last person to sign the documents sends them to the archive);  or comes a request of type \"determine whether employee x signs certain documents\". \n\nYour task is to write a program that will, given the events, answer the queries of the described type. At that, it is guaranteed that throughout the whole working time the company didn't have cyclic dependencies.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 10^5) \u2014 the number of employees and the number of events. \n\nEach of the next m lines contains the description of one event (the events are given in the chronological order). The first number of the line determines the type of event t (1 \u2264 t \u2264 3).   If t = 1, then next follow two integers x and y (1 \u2264 x, y \u2264 n) \u2014 numbers of the company employees. It is guaranteed that employee x doesn't have the boss currently.  If t = 2, then next follow integer x (1 \u2264 x \u2264 n) \u2014 the number of the employee who got a document packet.  If t = 3, then next follow two integers x and i (1 \u2264 x \u2264 n;\u00a01 \u2264 i \u2264 [number of packets that have already been given]) \u2014 the employee and the number of the document packet for which you need to find out information. The document packets are numbered started from 1 in the chronological order. \n\nIt is guaranteed that the input has at least one query of the third type.\n\n\n-----Output-----\n\nFor each query of the third type print \"YES\" if the employee signed the document package and \"NO\" otherwise. Print all the words without the quotes.\n\n\n-----Examples-----\nInput\n4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3\n\nOutput\nYES\nNO\nYES", "QUESTION:\nThere are n employees working in company \"X\" (let's number them from 1 to n for convenience). Initially the employees didn't have any relationships among each other. On each of m next days one of the following events took place:  either employee y became the boss of employee x (at that, employee x didn't have a boss before);  or employee x gets a packet of documents and signs them; then he gives the packet to his boss. The boss signs the documents and gives them to his boss and so on (the last person to sign the documents sends them to the archive);  or comes a request of type \"determine whether employee x signs certain documents\". \n\nYour task is to write a program that will, given the events, answer the queries of the described type. At that, it is guaranteed that throughout the whole working time the company didn't have cyclic dependencies.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 10^5) \u2014 the number of employees and the number of events. \n\nEach of the next m lines contains the description of one event (the events are given in the chronological order). The first number of the line determines the type of event t (1 \u2264 t \u2264 3).   If t = 1, then next follow two integers x and y (1 \u2264 x, y \u2264 n) \u2014 numbers of the company employees. It is guaranteed that employee x doesn't have the boss currently.  If t = 2, then next follow integer x (1 \u2264 x \u2264 n) \u2014 the number of the employee who got a document packet.  If t = 3, then next follow two integers x and i (1 \u2264 x \u2264 n;\u00a01 \u2264 i \u2264 [number of packets that have already been given]) \u2014 the employee and the number of the document packet for which you need to find out information. The document packets are numbered started from 1 in the chronological order. \n\nIt is guaranteed that the input has at least one query of the third type.\n\n\n-----Output-----\n\nFor each query of the third type print \"YES\" if the employee signed the document package and \"NO\" otherwise. Print all the words without the quotes.\n\n\n-----Examples-----\nInput\n4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3\n\nOutput\nYES\nNO\nYES", "QUESTION:\nThere are n employees working in company \"X\" (let's number them from 1 to n for convenience). Initially the employees didn't have any relationships among each other. On each of m next days one of the following events took place:  either employee y became the boss of employee x (at that, employee x didn't have a boss before);  or employee x gets a packet of documents and signs them; then he gives the packet to his boss. The boss signs the documents and gives them to his boss and so on (the last person to sign the documents sends them to the archive);  or comes a request of type \"determine whether employee x signs certain documents\". \n\nYour task is to write a program that will, given the events, answer the queries of the described type. At that, it is guaranteed that throughout the whole working time the company didn't have cyclic dependencies.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 10^5) \u2014 the number of employees and the number of events. \n\nEach of the next m lines contains the description of one event (the events are given in the chronological order). The first number of the line determines the type of event t (1 \u2264 t \u2264 3).   If t = 1, then next follow two integers x and y (1 \u2264 x, y \u2264 n) \u2014 numbers of the company employees. It is guaranteed that employee x doesn't have the boss currently.  If t = 2, then next follow integer x (1 \u2264 x \u2264 n) \u2014 the number of the employee who got a document packet.  If t = 3, then next follow two integers x and i (1 \u2264 x \u2264 n;\u00a01 \u2264 i \u2264 [number of packets that have already been given]) \u2014 the employee and the number of the document packet for which you need to find out information. The document packets are numbered started from 1 in the chronological order. \n\nIt is guaranteed that the input has at least one query of the third type.\n\n\n-----Output-----\n\nFor each query of the third type print \"YES\" if the employee signed the document package and \"NO\" otherwise. Print all the words without the quotes.\n\n\n-----Examples-----\nInput\n4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3\n\nOutput\nYES\nNO\nYES"], "prompt": "\nQUESTION:\nThere are n employees working in company \"X\" (let's number them from 1 to n for convenience). Initially the employees didn't have any relationships among each other. On each of m next days one of the following events took place:  either employee y became the boss of employee x (at that, employee x didn't have a boss before);  or employee x gets a packet of documents and signs them; then he gives the packet to his boss. The boss signs the documents and gives them to his boss and so on (the last person to sign the documents sends them to the archive);  or comes a request of type \"determine whether employee x signs certain documents\". \n\nYour task is to write a program that will, given the events, answer the queries of the described type. At that, it is guaranteed that throughout the whole working time the company didn't have cyclic dependencies.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 10^5) \u2014 the number of employees and the number of events. \n\nEach of the next m lines contains the description of one event (the events are given in the chronological order). The first number of the line determines the type of event t (1 \u2264 t \u2264 3).   If t = 1, then next follow two integers x and y (1 \u2264 x, y \u2264 n) \u2014 numbers of the company employees. It is guaranteed that employee x doesn't have the boss currently.  If t = 2, then next follow integer x (1 \u2264 x \u2264 n) \u2014 the number of the employee who got a document packet.  If t = 3, then next follow two integers x and i (1 \u2264 x \u2264 n;\u00a01 \u2264 i \u2264 [number of packets that have already been given]) \u2014 the employee and the number of the document packet for which you need to find out information. The document packets are numbered started from 1 in the chronological order. \n\nIt is guaranteed that the input has at least one query of the third type.\n\n\n-----Output-----\n\nFor each query of the third type print \"YES\" if the employee signed the document package and \"NO\" otherwise. Print all the words without the quotes.\n\n\n-----Examples-----\nInput\n4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3\n\nOutput\nYES\nNO\nYES\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}