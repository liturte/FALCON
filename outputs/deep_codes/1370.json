{"1370": {"code": ["H, W, K = map(int, input().split())\nS = [list(map(int, input())) for _ in range(H)]\n\ndef check(x):\n    cnt = [0]*W\n    res = 0\n    for i in range(H):\n        for j in range(W):\n            if j > 0:\n                cnt[", "import sys\nread = sys.stdin.readline\n\nH, W, K = map(int, read().split())\nS = [list(map(int, read().rstrip('\\n'))) for _ in range(H)]\nINF = float('inf')\n\ndef check(mid):\n    dp = [[0] * (W + 1) for _", "from sys import stdin\n\ndef read_int():\n    return int(stdin.readline())\n\ndef read_ints():\n    return list(map(int, stdin.readline().split()))\n\nH, W, K = read_ints()\nS = [read_ints() for _ in range(H)]\n\ndef check(mid):\n    cnt", "import sys\nfrom itertools import combinations\n\ndef solve(h, w, k, s):\n    # Count the number of white squares in each column\n    cnt = [[0] * (w + 1) for _ in range(h + 1)]\n    for i in range(1, h + 1):\n        for j in range(1, w + 1):\n            c", "def min_cuts(H, W, K, S):\n    dp = [[0] * (W+1) for _ in range(H+1)]\n    for i in range(1, H+1):\n        for j in range(1, W+1):\n            dp[i][j] = dp[i-1][j] + dp["], "prompt": "\nQUESTION:\nWe have a chocolate bar partitioned into H horizontal rows and W vertical columns of squares.\nThe square (i, j) at the i-th row from the top and the j-th column from the left is dark if S_{i,j} is 0, and white if S_{i,j} is 1.\nWe will cut the bar some number of times to divide it into some number of blocks. In each cut, we cut the whole bar by a line running along some boundaries of squares from end to end of the bar.\nHow many times do we need to cut the bar so that every block after the cuts has K or less white squares?\n\n-----Constraints-----\n - 1 \\leq H \\leq 10\n - 1 \\leq W \\leq 1000\n - 1 \\leq K \\leq H \\times W\n - S_{i,j} is 0 or 1.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nH W K\nS_{1,1}S_{1,2}...S_{1,W}\n:\nS_{H,1}S_{H,2}...S_{H,W}\n\n-----Output-----\nPrint the number of minimum times the bar needs to be cut so that every block after the cuts has K or less white squares.\n\n-----Sample Input-----\n3 5 4\n11100\n10001\n00111\n\n-----Sample Output-----\n2\n\nFor example, cutting between the 1-st and 2-nd rows and between the 3-rd and 4-th columns - as shown in the figure to the left - works.\nNote that we cannot cut the bar in the ways shown in the two figures to the right.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}