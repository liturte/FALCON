{"2019": {"code": ["def", "def", "def", "def", "def"], "prompt": "\nQUESTION:\nAlica and Bob are playing a game.\n\nInitially they have a binary string $s$ consisting of only characters 0 and 1.\n\nAlice and Bob make alternating moves: Alice makes the first move, Bob makes the second move, Alice makes the third one, and so on. During each move, the current player must choose two different adjacent characters of string $s$ and delete them. For example, if $s = 1011001$ then the following moves are possible:   delete $s_1$ and $s_2$: $\\textbf{10}11001 \\rightarrow 11001$;  delete $s_2$ and $s_3$: $1\\textbf{01}1001 \\rightarrow 11001$;  delete $s_4$ and $s_5$: $101\\textbf{10}01 \\rightarrow 10101$;  delete $s_6$ and $s_7$: $10110\\textbf{01} \\rightarrow 10110$. \n\nIf a player can't make any move, they lose. Both players play optimally. You have to determine if Alice can win.\n\n\n-----Input-----\n\nFirst line contains one integer $t$ ($1 \\le t \\le 1000$)\u00a0\u2014 the number of test cases.\n\nOnly line of each test case contains one string $s$ ($1 \\le |s| \\le 100$), consisting of only characters 0 and 1.\n\n\n-----Output-----\n\nFor each test case print answer in the single line.\n\nIf Alice can win print DA (YES in Russian) in any register. Otherwise print NET (NO in Russian) in any register.\n\n\n-----Example-----\nInput\n3\n01\n1111\n0011\n\nOutput\nDA\nNET\nNET\n\n\n\n-----Note-----\n\nIn the first test case after Alice's move string $s$ become empty and Bob can not make any move.\n\nIn the second test case Alice can not make any move initially.\n\nIn the third test case after Alice's move string $s$ turn into $01$. Then, after Bob's move string $s$ become empty and Alice can not make any move.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}