{"3405": {"code": ["def solve(X):\n    X = int(round(X * 100))\n    results = []\n    for i in range(1, 100000000):\n        if str(i)[0] == str(i * X)[", "import math\n\ndef find_numbers(X):\n    X = X * 10**8\n    results = []\n    for i in range(1, 10**8):\n        if math.floor(i * X) % 10**8 ==", "def solve(x):\n    x = x * 100000000\n    x = round(x)\n    results = []\n    for i in range(1, 100000000):\n        if str(i)[", "from decimal import Decimal, getcontext\n\ndef solve(X):\n    getcontext().prec = 10  # set decimal precision\n    X = Decimal(X)\n    results = []\n    for i in range(1, 10**8):\n        if", "def multiply_by_X(X):\n    X = int(round(X * 10000))\n    result = []\n    for num in range(1, 10**8):\n        if str(num)[0] == str(num)["], "prompt": "\nQUESTION:\nLukas is to hold a presentation on useful mathematical tricks. E.g., to take the square root of a number you just need to remove the first half of the number. To convince his audience he uses the well tested method of proof by example: $\\sqrt {25} = 5$ and $\\sqrt {5776} = 76$ so the method obviously works. To multiply a number by $X = 2.6$ all you have to do is move the first digit to the end of the number, $135\\times 2.6 = 351$ and $270270\\times 2.6 = 702702$. \n\nLukas wants to demonstrate that this last method works for any $X$. To do this he will ask his audience for values of $X$ and then show them example multiplications for which the method works. Lukas has noticed that he can not just pick arbitrary numbers for his examples, so now he wants your help. Can you write a program that given $X$ gives a list of integers for which multiplying by $X$ is equivalent to moving the first digit to the end of the number? Lukas does not like very large numbers so do not list any numbers with more than 8 digits.\n\n-----Input-----\nThe input is a single decimal number $X$ ($1\\leq X < 1000$) with at most 4 digits after the decimal point.\n\n-----Output-----\nOutput a list of all positive integers less than $10^8$ for which Lukas\u2019 second trick works. Write the numbers in ascending order, one number per line. If the list is empty, output instead \u201cNo solution\u201d.\n\n-----Examples-----\nSample Input:\n2.6\nSample Output:\n135\n270\n135135\n270270\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}