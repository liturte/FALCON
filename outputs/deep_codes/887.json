{"887": {"code": ["n = int(input())\nbuttons = list(map(int, input().split()))\n\nif sum(buttons) == 1 or sum(buttons) == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n\nThis code works by first reading the number of buttons and the list of buttons from the input. It then checks if the sum of the buttons is 1 or 0, which are the only two possible sums that meet the rules of the Berland fashion. If the sum is 1, it means there is exactly one button not fastened, so the jacket is fastened in a right way. If the sum is 0, it means all buttons are fastened, which is not allowed according to the rules. In either case, it prints \"YES\" if the jacket is fastened in a right way, and \"NO\" otherwise.", "def solve():\n    n = int(input())\n    buttons = list(map(int, input().split()))\n    if sum(buttons) == n:\n        print('NO')\n    else:\n        print('YES')\n\nsolve()\n\nThe solution is simple. If the sum of the buttons equals to the number of buttons, it means all the buttons are fastened, which is not the right way according to the rules of the Berland fashion. So, we print \"NO\". Otherwise, we print \"YES\".", "n = int(input())\nbuttons = list(map(int, input().split()))\n\nif sum(buttons) == 1:\n    print('YES')\nelse:\n    print('NO')\n\nThis code first takes the number of buttons and the list of buttons from the input. It then checks if the sum of the buttons is 1. If it is, it means that only one button is fastened, and the jacket is fastened in a right way, so it prints 'YES'. If the sum is not 1, it means that not all buttons are fastened, so it prints 'NO'.", "n = int(input())\nbuttons = list(map(int, input().split()))\n\nif sum(buttons) == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nThis code first reads the number of buttons and the list of button states from the input. It then checks if the sum of the button states is 1 (which means only one button is fastened). If the sum is 1, it prints \"YES\"; otherwise, it prints \"NO\".", "n = int(input())\nbuttons = list(map(int, input().split()))\n\nif sum(buttons) == 1 or buttons.count(0) == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\nThis Python code first takes the number of buttons and the states of the buttons as input. It then checks if the sum of the buttons is 1 or if the count of 0s in the list is 1. If either condition is true, it prints \"YES\". Otherwise, it prints \"NO\"."], "prompt": "\nQUESTION:\nAccording to rules of the Berland fashion, a jacket should be fastened by all the buttons except only one, but not necessarily it should be the last one. Also if the jacket has only one button, it should be fastened, so the jacket will not swinging open.\n\nYou are given a jacket with n buttons. Determine if it is fastened in a right way.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 1000) \u2014 the number of buttons on the jacket.\n\nThe second line contains n integers a_{i} (0 \u2264 a_{i} \u2264 1). The number a_{i} = 0 if the i-th button is not fastened. Otherwise a_{i} = 1.\n\n\n-----Output-----\n\nIn the only line print the word \"YES\" if the jacket is fastened in a right way. Otherwise print the word \"NO\".\n\n\n-----Examples-----\nInput\n3\n1 0 1\n\nOutput\nYES\n\nInput\n3\n1 0 0\n\nOutput\nNO\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}