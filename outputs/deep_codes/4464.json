{"4464": {"code": ["A, B, C = map(int, input().split())\nprint('YES' if C % A in [0, B - C % B] else 'NO')\n\n\"\"\"\n\n# Solution:\nA, B, C = map(int, input().split())\nprint('YES' if C % A in [0, B - C % B] else 'NO')\n\n\nIn this solution, we first take input A, B, C. Then we calculate C modulo A. If the result is 0 or the result plus B is equal to B, we print 'YES'. Otherwise, we print 'NO'. This is because we need to select at least one integer that is a multiple of A and the sum of these integers should be congruent to C modulo B. The condition C % A in [0, B - C % B] checks if C is a multiple of A or if the difference between C and a multiple of A is less than B.\n\nPlease note that this solution assumes that B is always greater than", "import sys\n\nA, B, C = map(int, sys.stdin.readline().split())\n\nif C == 0:\n    print('YES')\nelif A > B:\n    print('YES' if C % B == 0 else 'NO')\nelse:\n    print('YES' if C % A == 0 else 'NO')\n\n\nExplanation:\nThe solution checks if C is divisible by A or B (whichever is smaller). If it is, then it is possible to make the sum congruent to C modulo B. If C is 0, then it is always possible. If neither A nor B is smaller than C, then it is not possible.\n\nThis solution assumes that the inputs are valid, i.e., A, B, and C are integers, and that A, B, and C are within the specified constraints.\n\nIt also assumes that the input is given in the correct format. The input is read from the standard input in the format \"A B C\". The", "A, B, C = map(int, input().split())\nprint('YES' if C % A == 0 or (C + A) % B == 0 else 'NO')\n\n\nExplanation:\nThe solution uses the built-in Python function map() to read the input into three variables A, B, and C. \nThe modulo operation (%) returns the remainder of the division.\nIf C is a multiple of A (i.e., C modulo A equals 0), or if C plus A is a multiple of B (i.e., (C+A) modulo B equals 0), the sum is congruent to C modulo B. \nThe print statement then outputs 'YES' if these conditions are met, otherwise it outputs 'NO'.\n\nThis solution assumes that the input is always valid, as specified in the problem constraints.\n\"\"\"\n\n# Code:\nA, B, C = map(int, input().split())\nprint('YES' if C % A == 0 or (C +", "A, B, C = map(int, input().split())\nif C == 0:\n    print('YES')\nelse:\n    for i in range(1, B):\n        if (A * i) % B == C:\n            print('YES')\n            break\n    else:\n        print('NO')\n\n\nThis code reads the inputs A, B, and C. Then it checks if C is 0. If so, it prints 'YES' because any number modulo 0 is 0. If C is not 0, it checks each multiple of A that is less than B. If any of these multiples is congruent to C modulo B, it prints 'YES'. Otherwise, it prints 'NO'.\n\"\"\"\n\nA, B, C = map(int, input().split())\nif C == 0:\n    print('YES')\nelse:\n    for i in range(1, B):\n        if (A * i) % B == C:\n            print('", "A, B, C = map(int, input().split())\nprint('YES' if C % A in [0, B - C % B] else 'NO')\n\n\nThis code works by first reading in the inputs A, B, and C. It then checks if C modulo A is either 0 or B minus C modulo B. If either of these conditions is true, it prints 'YES' because we can find a solution. Otherwise, it prints 'NO'.\n\nThis solution works because if C modulo A is 0, then C is a multiple of A, and we can always select A as one of our integers. If C modulo A is B minus C modulo B, then C plus B is a multiple of A, and we can always select A as one of our integers. This covers all possible values of C modulo A, so we can always find a solution.\n\nThis solution is based on the fact that if C is a multiple of A, then C plus B is also a multiple of A. This is because A divides"], "prompt": "\nQUESTION:\nWe ask you to select some number of positive integers, and calculate the sum of them.\nIt is allowed to select as many integers as you like, and as large integers as you wish.\nYou have to follow these, however: each selected integer needs to be a multiple of A, and you need to select at least one integer.\nYour objective is to make the sum congruent to C modulo B.\nDetermine whether this is possible.\nIf the objective is achievable, print YES. Otherwise, print NO.\n\n-----Constraints-----\n - 1 \u2264 A \u2264 100\n - 1 \u2264 B \u2264 100\n - 0 \u2264 C < B\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B C\n\n-----Output-----\nPrint YES or NO.\n\n-----Sample Input-----\n7 5 1\n\n-----Sample Output-----\nYES\n\nFor example, if you select 7 and 14, the sum 21 is congruent to 1 modulo 5.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}