{"1711": {"code": ["MOD = 998244353\n\ndef solve(n, m):\n    fact = [1] * (n + m + 1)\n    inv = [1] * (n + m + 1)\n    for i in range(1, n + m + 1):\n        fact[i] = fact[i - 1] * i % MOD", "MOD = 998244353\n\ndef powmod(a, b):\n    r = 1\n    while b > 0:\n        if b & 1:\n            r = (r * a) % MOD\n        b >>= 1\n        a = (a * a) % MOD\n    return r\n\ndef solve(n, m):", "MOD = 998244353\nfact = [1]\nfor i in range(1, 200010):\n    fact.append((fact[-1] * i) % MOD)\ninvfact = [pow(fact[-1], MOD - 2, MOD)]\nfor i in range(200009, 0,", "def solve(n, m):\n    MOD = 998244353\n    fact = [0] * (n + 1)\n    fact[0] = 1\n    for i in range(1, n + 1):\n        fact[i] = fact[i - 1] * i % MOD\n    inv = [0] * (n + 1", "MOD = 998244353\n\ndef solve(n, m):\n    fact = [1] * (n + m + 1)\n    for i in range(1, n + m + 1):\n        fact[i] = (fact[i - 1] * i) % MOD\n\n    invfact = [1] * (n + m +"], "prompt": "\nQUESTION:\nYour task is to calculate the number of arrays such that:  each array contains $n$ elements;  each element is an integer from $1$ to $m$;  for each array, there is exactly one pair of equal elements;  for each array $a$, there exists an index $i$ such that the array is strictly ascending before the $i$-th element and strictly descending after it (formally, it means that $a_j < a_{j + 1}$, if $j < i$, and $a_j > a_{j + 1}$, if $j \\ge i$). \n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($2 \\le n \\le m \\le 2 \\cdot 10^5$).\n\n\n-----Output-----\n\nPrint one integer \u2014 the number of arrays that meet all of the aforementioned conditions, taken modulo $998244353$.\n\n\n-----Examples-----\nInput\n3 4\n\nOutput\n6\n\nInput\n3 5\n\nOutput\n10\n\nInput\n42 1337\n\nOutput\n806066790\n\nInput\n100000 200000\n\nOutput\n707899035\n\n\n\n-----Note-----\n\nThe arrays in the first example are:  $[1, 2, 1]$;  $[1, 3, 1]$;  $[1, 4, 1]$;  $[2, 3, 2]$;  $[2, 4, 2]$;  $[3, 4, 3]$.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}