{"1426": {"code": ["from", "from", "from", "from", "from"], "prompt": "\nQUESTION:\nKen loves ken-ken-pa (Japanese version of hopscotch). Today, he will play it on a directed graph G.\nG consists of N vertices numbered 1 to N, and M edges. The i-th edge points from Vertex u_i to Vertex v_i.\nFirst, Ken stands on Vertex S. He wants to reach Vertex T by repeating ken-ken-pa. In one ken-ken-pa, he does the following exactly three times: follow an edge pointing from the vertex on which he is standing.\nDetermine if he can reach Vertex T by repeating ken-ken-pa. If the answer is yes, find the minimum number of ken-ken-pa needed to reach Vertex T. Note that visiting Vertex T in the middle of a ken-ken-pa does not count as reaching Vertex T by repeating ken-ken-pa.\n\n-----Constraints-----\n - 2 \\leq N \\leq 10^5\n - 0 \\leq M \\leq \\min(10^5, N (N-1))\n - 1 \\leq u_i, v_i \\leq N(1 \\leq i \\leq M)\n - u_i \\neq v_i (1 \\leq i \\leq M)\n - If i \\neq j, (u_i, v_i) \\neq (u_j, v_j).\n - 1 \\leq S, T \\leq N\n - S \\neq T\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\nu_1 v_1\n:\nu_M v_M\nS T\n\n-----Output-----\nIf Ken cannot reach Vertex T from Vertex S by repeating ken-ken-pa, print -1.\nIf he can, print the minimum number of ken-ken-pa needed to reach vertex T.\n\n-----Sample Input-----\n4 4\n1 2\n2 3\n3 4\n4 1\n1 3\n\n-----Sample Output-----\n2\n\nKen can reach Vertex 3 from Vertex 1 in two ken-ken-pa, as follows: 1 \\rightarrow 2 \\rightarrow 3 \\rightarrow 4 in the first ken-ken-pa, then 4 \\rightarrow 1 \\rightarrow 2 \\rightarrow 3 in the second ken-ken-pa. This is the minimum number of ken-ken-pa needed.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}