{"2428": {"code": ["", "", "", "", ""], "prompt": "\nQUESTION:\nYou are given a string $s$. You can build new string $p$ from $s$ using the following operation no more than two times:   choose any subsequence $s_{i_1}, s_{i_2}, \\dots, s_{i_k}$ where $1 \\le i_1 < i_2 < \\dots < i_k \\le |s|$;  erase the chosen subsequence from $s$ ($s$ can become empty);  concatenate chosen subsequence to the right of the string $p$ (in other words, $p = p + s_{i_1}s_{i_2}\\dots s_{i_k}$). \n\nOf course, initially the string $p$ is empty. \n\nFor example, let $s = \\text{ababcd}$. At first, let's choose subsequence $s_1 s_4 s_5 = \\text{abc}$ \u2014 we will get $s = \\text{bad}$ and $p = \\text{abc}$. At second, let's choose $s_1 s_2 = \\text{ba}$ \u2014 we will get $s = \\text{d}$ and $p = \\text{abcba}$. So we can build $\\text{abcba}$ from $\\text{ababcd}$.\n\nCan you build a given string $t$ using the algorithm above?\n\n\n-----Input-----\n\nThe first line contains the single integer $T$ ($1 \\le T \\le 100$) \u2014 the number of test cases.\n\nNext $2T$ lines contain test cases \u2014 two per test case. The first line contains string $s$ consisting of lowercase Latin letters ($1 \\le |s| \\le 400$) \u2014 the initial string.\n\nThe second line contains string $t$ consisting of lowercase Latin letters ($1 \\le |t| \\le |s|$) \u2014 the string you'd like to build.\n\nIt's guaranteed that the total length of strings $s$ doesn't exceed $400$.\n\n\n-----Output-----\n\nPrint $T$ answers \u2014 one per test case. Print YES (case insensitive) if it's possible to build $t$ and NO (case insensitive) otherwise.\n\n\n-----Example-----\nInput\n4\nababcd\nabcba\na\nb\ndefi\nfed\nxyz\nx\n\nOutput\nYES\nNO\nNO\nYES\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}