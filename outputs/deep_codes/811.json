{"811": {"code": ["a, b = map(int, input().split())\ncandles = a\ntime = 0\n\nwhile candles >= b:\n    new_candles = candles // b\n    burned_out_candles = candles % b\n    candles = new_candles + burned_out_candles\n    time += new_candles * 2\n\ntime += candles\n\nprint(time)\n\n\nThis solution works by using a while loop to continuously burn candles and make new ones until there are not enough candles to make new ones. The number of candles burned and the time spent burning are kept track of separately. The final number of candles is the total time Vasily can light up the room", "def candles_burned(a, b):\n    total_candles = a\n    burned_candles = 0\n    while total_candles >= b:\n        new_candles = total_candles // b\n        burned_candles += total_candles % b\n        total_candles = new_candles + total_candles % b\n    return total_candles + burned_candles\n\na, b = map(int, input().split())\nprint(candles_burned(a, b))\n\nThis code works by looping over the number of candles Vasily initially has. In each iteration, it calculates how many new candles", "import math\n\ndef candle_hours(a, b):\n    hours = 0\n    while a > 0:\n        hours += a\n        a = math.floor(a / b)\n    return hours\n\na, b = map(int, input().split())\nprint(candle_hours(a, b))\n\n\nExplanation:\nThis code works by simulating the process of Vasily lighting up candles. It starts with the initial number of candles (`a`) and continuously burns them, replacing them with the `b`-th new candles, until there are no more candles left to burn. The number of hours Vasily can light up the room is the total number of candles burned. The `", "import math\n\ndef solve(a, b):\n    total_hours = 0\n    while a >= b:\n        total_hours += (a // b) * b\n        a = (a // b) * b + a % b\n    total_hours += a\n    return total_hours\n\na, b = map(int, input().split())\nprint(solve(a, b))\n\n\nThis Python program uses a while loop to repeatedly divide the number of candles by the number of candles that can be made from one burned out candle until there are less than b candles left. For each cycle, it adds the number of hours it can light up the room (which is the number of candles divided by b, rounded down, multi", "def candles(a, b):\n    total_candles = a\n    burned_candles = 0\n    new_candles = a\n    while new_candles >= b:\n        extra_candles = new_candles // b\n        burned_candles += new_candles - extra_candles * b\n        new_candles = extra_candles + new_candles - extra_candles * b\n    return total_candles + burned_candles\n\nprint(candles(int(input().split()[0]), int(input().split()[1])))\n\nThis Python program uses a while loop to keep burning candles"], "prompt": "\nQUESTION:\nVasily the Programmer loves romance, so this year he decided to illuminate his room with candles.\n\nVasily has a candles.When Vasily lights up a new candle, it first burns for an hour and then it goes out. Vasily is smart, so he can make b went out candles into a new candle. As a result, this new candle can be used like any other new candle.\n\nNow Vasily wonders: for how many hours can his candles light up the room if he acts optimally well? Help him find this number.\n\n\n-----Input-----\n\nThe single line contains two integers, a and b (1 \u2264 a \u2264 1000;\u00a02 \u2264 b \u2264 1000).\n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of hours Vasily can light up the room for.\n\n\n-----Examples-----\nInput\n4 2\n\nOutput\n7\n\nInput\n6 3\n\nOutput\n8\n\n\n\n-----Note-----\n\nConsider the first sample. For the first four hours Vasily lights up new candles, then he uses four burned out candles to make two new ones and lights them up. When these candles go out (stop burning), Vasily can make another candle. Overall, Vasily can light up the room for 7 hours.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}