{"2971": {"code": ["def solve(words):\n    trie = {}\n    max_power = 0\n\n    for word in words:\n        node = trie\n        power = 0\n        for i in range(len(word) - 1, -1, -1):\n            if word[i] not in node:\n                node[word[i]] = {}\n            node = node[word[", "def max_rhyme_power(words):\n    trie = {}\n    max_power = 0\n\n    def insert(word, power):\n        nonlocal max_power\n        node = trie\n        for i, char in enumerate(reversed(word)):\n            if char not in node:\n                node[char] = {}\n            max_power = max(", "def max_rhyme_power(words):\n    max_power = 0\n    for i in range(len(words)):\n        for j in range(i+1, len(words)):\n            power = max_suffix_length(words[i], words[j])\n            max_power = max(max_power, power)\n    return max_power\n\ndef", "def max_rhyme_power(words):\n    max_power = 0\n    for i in range(len(words)):\n        for j in range(i+1, len(words)):\n            power = max_suffix_length(words[i], words[j])\n            if power > max_power:\n                max_power = power\n    return max_power", "def max_rhyme_power(words):\n    words = [word[::-1] for word in words]\n    trie = {}\n    max_rhyme_power = 0\n\n    def insert(word):\n        node = trie\n        for ch in word:\n            if ch not in node:\n                node[ch] = {}\n            node = node[ch]"], "prompt": "\nQUESTION:\nRhymes are complicated. The extent to which one word rhymes with another depends on how similar they sound; but if they are too similar then they aren\u2019t considered a rhyme at all. Karim has a huge list of $N$ words and wants to determine the maximally rhyming pair of words. To that end he has introduced the concept of rhyme power:\n\nGiven two words $S$ and $T$, their rhyme power $r(S,T)$ is defined as\n - $0$, if one word is a suffix of the other,\n - the length of their longest common suffix, otherwise.\n\nFor instance, the rhyme power of \u201cfire\u201d and \u201cdesire\u201d is $3$, because their longest common suffix \u201cire\u201d has length $3$. In contrast, the rhyme power of \u201cimpossible\u201d and \u201cpossible\u201d is $0$, because \u201cpossible\u201d is a suffix of \u201cimpossible\u201d.\n\nGiven Karim\u2019s list of $N$ words, your task is to find the maximum value of $r(S, T)$ over all pairs of words.\n\n-----Input-----\nThe first line contains an integer $N$ with $2 \\leq N \\leq 10^5$, the number of words.\n\nThe following $N$ lines each contain a string $S_ i$, where $1 \\leq |S_ i| \\leq 10^6$. The sum of all string lengths $|S_ i|$ is at most $10^6$.\n\n-----Output-----\nAn integer, the maximal rhyme power.\n\n-----Examples-----\nSample Input:\n4\nspaghetti\nalready\nconfetti\nserengeti\nSample Output:\n4\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}