{"2403": {"code": ["QUESTION:\nCaptain Fint is involved in another treasure hunt, but have found only one strange problem. The problem may be connected to the treasure's location or may not. That's why captain Flint decided to leave the solving the problem to his crew and offered an absurdly high reward: one day off. The problem itself sounds like this...\n\nThere are two arrays $a$ and $b$ of length $n$. Initially, an $ans$ is equal to $0$ and the following operation is defined:   Choose position $i$ ($1 \\le i \\le n$);  Add $a_i$ to $ans$;  If $b_i \\neq -1$ then add $a_i$ to $a_{b_i}$. \n\nWhat is the maximum $ans$ you can get by performing the operation on each $i$ ($1 \\le i \\le n$) exactly once?\n\nUncle Bogdan is eager to get the reward, so he is asking your help to find the optimal order of positions to perform the operation on them.\n\n\n-----Input-----\n\nThe first line contains the integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$)\u00a0\u2014 the length of arrays $a$ and $b$.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($\u221210^6 \\le a_i \\le 10^6$).\n\nThe third line contains $n$ integers $b_1, b_2, \\ldots, b_n$ ($1 \\le b_i \\le n$ or $b_i = -1$).\n\nAdditional constraint: it's guaranteed that for any $i$ ($1 \\le i \\le n$) the sequence $b_i, b_{b_i}, b_{b_{b_i}}, \\ldots$ is not cyclic, in other words it will always end with $-1$.\n\n\n-----Output-----\n\nIn the first line, print the maximum $ans$ you can get.\n\nIn the second line, print the order of operations: $n$ different integers $p_1, p_2, \\ldots, p_n$ ($1 \\le p_i \\le n$). The $p_i$ is the position which should be chosen at the $i$-th step. If there are multiple orders, print any of them.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2 3 -1\n\nOutput\n10\n1 2 3 \n\nInput\n2", "QUESTION:\nCaptain Fint is involved in another treasure hunt, but have found only one strange problem. The problem may be connected to the treasure's location or may not. That's why captain Flint decided to leave the solving the problem to his crew and offered an absurdly high reward: one day off. The problem itself sounds like this...\n\nThere are two arrays $a$ and $b$ of length $n$. Initially, an $ans$ is equal to $0$ and the following operation is defined:   Choose position $i$ ($1 \\le i \\le n$);  Add $a_i$ to $ans$;  If $b_i \\neq -1$ then add $a_i$ to $a_{b_i}$. \n\nWhat is the maximum $ans$ you can get by performing the operation on each $i$ ($1 \\le i \\le n$) exactly once?\n\nUncle Bogdan is eager to get the reward, so he is asking your help to find the optimal order of positions to perform the operation on them.\n\n\n-----Input-----\n\nThe first line contains the integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$)\u00a0\u2014 the length of arrays $a$ and $b$.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($\u221210^6 \\le a_i \\le 10^6$).\n\nThe third line contains $n$ integers $b_1, b_2, \\ldots, b_n$ ($1 \\le b_i \\le n$ or $b_i = -1$).\n\nAdditional constraint: it's guaranteed that for any $i$ ($1 \\le i \\le n$) the sequence $b_i, b_{b_i}, b_{b_{b_i}}, \\ldots$ is not cyclic, in other words it will always end with $-1$.\n\n\n-----Output-----\n\nIn the first line, print the maximum $ans$ you can get.\n\nIn the second line, print the order of operations: $n$ different integers $p_1, p_2, \\ldots, p_n$ ($1 \\le p_i \\le n$). The $p_i$ is the position which should be chosen at the $i$-th step. If there are multiple orders, print any of them.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2 3 -1\n\nOutput\n10\n1 2 3 \n\nInput\n2", "QUESTION:\nCaptain Fint is involved in another treasure hunt, but have found only one strange problem. The problem may be connected to the treasure's location or may not. That's why captain Flint decided to leave the solving the problem to his crew and offered an absurdly high reward: one day off. The problem itself sounds like this...\n\nThere are two arrays $a$ and $b$ of length $n$. Initially, an $ans$ is equal to $0$ and the following operation is defined:   Choose position $i$ ($1 \\le i \\le n$);  Add $a_i$ to $ans$;  If $b_i \\neq -1$ then add $a_i$ to $a_{b_i}$. \n\nWhat is the maximum $ans$ you can get by performing the operation on each $i$ ($1 \\le i \\le n$) exactly once?\n\nUncle Bogdan is eager to get the reward, so he is asking your help to find the optimal order of positions to perform the operation on them.\n\n\n-----Input-----\n\nThe first line contains the integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$)\u00a0\u2014 the length of arrays $a$ and $b$.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($\u221210^6 \\le a_i \\le 10^6$).\n\nThe third line contains $n$ integers $b_1, b_2, \\ldots, b_n$ ($1 \\le b_i \\le n$ or $b_i = -1$).\n\nAdditional constraint: it's guaranteed that for any $i$ ($1 \\le i \\le n$) the sequence $b_i, b_{b_i}, b_{b_{b_i}}, \\ldots$ is not cyclic, in other words it will always end with $-1$.\n\n\n-----Output-----\n\nIn the first line, print the maximum $ans$ you can get.\n\nIn the second line, print the order of operations: $n$ different integers $p_1, p_2, \\ldots, p_n$ ($1 \\le p_i \\le n$). The $p_i$ is the position which should be chosen at the $i$-th step. If there are multiple orders, print any of them.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2 3 -1\n\nOutput\n10\n1 2 3 \n\nInput\n2", "QUESTION:\nCaptain Fint is involved in another treasure hunt, but have found only one strange problem. The problem may be connected to the treasure's location or may not. That's why captain Flint decided to leave the solving the problem to his crew and offered an absurdly high reward: one day off. The problem itself sounds like this...\n\nThere are two arrays $a$ and $b$ of length $n$. Initially, an $ans$ is equal to $0$ and the following operation is defined:   Choose position $i$ ($1 \\le i \\le n$);  Add $a_i$ to $ans$;  If $b_i \\neq -1$ then add $a_i$ to $a_{b_i}$. \n\nWhat is the maximum $ans$ you can get by performing the operation on each $i$ ($1 \\le i \\le n$) exactly once?\n\nUncle Bogdan is eager to get the reward, so he is asking your help to find the optimal order of positions to perform the operation on them.\n\n\n-----Input-----\n\nThe first line contains the integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$)\u00a0\u2014 the length of arrays $a$ and $b$.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($\u221210^6 \\le a_i \\le 10^6$).\n\nThe third line contains $n$ integers $b_1, b_2, \\ldots, b_n$ ($1 \\le b_i \\le n$ or $b_i = -1$).\n\nAdditional constraint: it's guaranteed that for any $i$ ($1 \\le i \\le n$) the sequence $b_i, b_{b_i}, b_{b_{b_i}}, \\ldots$ is not cyclic, in other words it will always end with $-1$.\n\n\n-----Output-----\n\nIn the first line, print the maximum $ans$ you can get.\n\nIn the second line, print the order of operations: $n$ different integers $p_1, p_2, \\ldots, p_n$ ($1 \\le p_i \\le n$). The $p_i$ is the position which should be chosen at the $i$-th step. If there are multiple orders, print any of them.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2 3 -1\n\nOutput\n10\n1 2 3 \n\nInput\n2", "QUESTION:\nCaptain Fint is involved in another treasure hunt, but have found only one strange problem. The problem may be connected to the treasure's location or may not. That's why captain Flint decided to leave the solving the problem to his crew and offered an absurdly high reward: one day off. The problem itself sounds like this...\n\nThere are two arrays $a$ and $b$ of length $n$. Initially, an $ans$ is equal to $0$ and the following operation is defined:   Choose position $i$ ($1 \\le i \\le n$);  Add $a_i$ to $ans$;  If $b_i \\neq -1$ then add $a_i$ to $a_{b_i}$. \n\nWhat is the maximum $ans$ you can get by performing the operation on each $i$ ($1 \\le i \\le n$) exactly once?\n\nUncle Bogdan is eager to get the reward, so he is asking your help to find the optimal order of positions to perform the operation on them.\n\n\n-----Input-----\n\nThe first line contains the integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$)\u00a0\u2014 the length of arrays $a$ and $b$.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($\u221210^6 \\le a_i \\le 10^6$).\n\nThe third line contains $n$ integers $b_1, b_2, \\ldots, b_n$ ($1 \\le b_i \\le n$ or $b_i = -1$).\n\nAdditional constraint: it's guaranteed that for any $i$ ($1 \\le i \\le n$) the sequence $b_i, b_{b_i}, b_{b_{b_i}}, \\ldots$ is not cyclic, in other words it will always end with $-1$.\n\n\n-----Output-----\n\nIn the first line, print the maximum $ans$ you can get.\n\nIn the second line, print the order of operations: $n$ different integers $p_1, p_2, \\ldots, p_n$ ($1 \\le p_i \\le n$). The $p_i$ is the position which should be chosen at the $i$-th step. If there are multiple orders, print any of them.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2 3 -1\n\nOutput\n10\n1 2 3 \n\nInput\n2"], "prompt": "\nQUESTION:\nCaptain Fint is involved in another treasure hunt, but have found only one strange problem. The problem may be connected to the treasure's location or may not. That's why captain Flint decided to leave the solving the problem to his crew and offered an absurdly high reward: one day off. The problem itself sounds like this...\n\nThere are two arrays $a$ and $b$ of length $n$. Initially, an $ans$ is equal to $0$ and the following operation is defined:   Choose position $i$ ($1 \\le i \\le n$);  Add $a_i$ to $ans$;  If $b_i \\neq -1$ then add $a_i$ to $a_{b_i}$. \n\nWhat is the maximum $ans$ you can get by performing the operation on each $i$ ($1 \\le i \\le n$) exactly once?\n\nUncle Bogdan is eager to get the reward, so he is asking your help to find the optimal order of positions to perform the operation on them.\n\n\n-----Input-----\n\nThe first line contains the integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$)\u00a0\u2014 the length of arrays $a$ and $b$.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($\u221210^6 \\le a_i \\le 10^6$).\n\nThe third line contains $n$ integers $b_1, b_2, \\ldots, b_n$ ($1 \\le b_i \\le n$ or $b_i = -1$).\n\nAdditional constraint: it's guaranteed that for any $i$ ($1 \\le i \\le n$) the sequence $b_i, b_{b_i}, b_{b_{b_i}}, \\ldots$ is not cyclic, in other words it will always end with $-1$.\n\n\n-----Output-----\n\nIn the first line, print the maximum $ans$ you can get.\n\nIn the second line, print the order of operations: $n$ different integers $p_1, p_2, \\ldots, p_n$ ($1 \\le p_i \\le n$). The $p_i$ is the position which should be chosen at the $i$-th step. If there are multiple orders, print any of them.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2 3 -1\n\nOutput\n10\n1 2 3 \n\nInput\n2\n-1 100\n2 -1\n\nOutput\n99\n2 1 \n\nInput\n10\n-10 -1 2 2 5 -2 -3 -4 2 -6\n-1 -1 2 2 -1 5 5 7 7 9\n\nOutput\n-9\n3 5 6 1 9 4 10 7 8 2\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}