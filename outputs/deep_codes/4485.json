{"4485": {"code": ["from collections import defaultdict\n\nN, M = map(int, input().split())\ngraph = defaultdict(list)\n\nfor _ in range(M):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\nvisited = [False] * (N+1)\nqueue = [1]\n\nwhile queue:\n    current = queue.pop(0)\n    if current == N", "from collections import defaultdict\n\ndef solve():\n    N, M = map(int, input().split())\n    G = defaultdict(list)\n    for _ in range(M):\n        a, b = map(int, input().split())\n        G[a].append(b)\n        G[b].append(a)\n    visited = [False]*(N+1)\n    def dfs(v, pre):\n        if v == N:\n            return True", "from collections import defaultdict\n\nN, M = map(int, input().split())\ngraph = defaultdict(list)\n\nfor _ in range(M):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\nvisited = [False]*(N+1)\ndef dfs(node, count):\n    if count >= 2:\n        return True\n    if node == N:", "def main():\n    N, M = map(int, input().split())\n    edges = [tuple(map(int, input().split())) for _ in range(M)]\n    edges.sort(key=lambda x: (x[0], -x[1]))\n    a, b = [0]*N, [0]*N\n    for i in range(M):\n        x, y = edges[i]\n        if x == 1:\n            a[y] =", "from collections import defaultdict\n\nN, M = map(int, input().split())\ngraph = defaultdict(list)\nfor _ in range(M):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\nvisited = [False] * (N+1)\nstack = [1]\nwhile stack:\n    node = stack.pop()\n    if node == N:\n        print"], "prompt": "\nQUESTION:\nIn Takahashi Kingdom, there is an archipelago of N islands, called Takahashi Islands.\nFor convenience, we will call them Island 1, Island 2, ..., Island N.\nThere are M kinds of regular boat services between these islands.\nEach service connects two islands. The i-th service connects Island a_i and Island b_i.\nCat Snuke is on Island 1 now, and wants to go to Island N.\nHowever, it turned out that there is no boat service from Island 1 to Island N, so he wants to know whether it is possible to go to Island N by using two boat services.\nHelp him.\n\n-----Constraints-----\n - 3 \u2264 N \u2264 200 000\n - 1 \u2264 M \u2264 200 000\n - 1 \u2264 a_i < b_i \u2264 N\n - (a_i, b_i) \\neq (1, N)\n - If i \\neq j, (a_i, b_i) \\neq (a_j, b_j).\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\na_1 b_1\na_2 b_2\n:\na_M b_M\n\n-----Output-----\nIf it is possible to go to Island N by using two boat services, print POSSIBLE; otherwise, print IMPOSSIBLE.\n\n-----Sample Input-----\n3 2\n1 2\n2 3\n\n-----Sample Output-----\nPOSSIBLE\n\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}