{"3507": {"code": ["MOD = 10**9 + 7\nR, W, d = map(int, input().split())\n\ndef solve(R, W, d):\n    dp = [[0]*(d+1) for _ in range(R+1)]\n    dp[0][0] = 1\n    for i in range(1, R+1):\n        dp[i][0] = dp[i-1][0]\n        for j in range(1, min(i, d)+1):\n            dp[i][j] = (dp[i-1][j-1] + dp[i][j-1]) % MOD\n    ans = dp[R][d]\n    for i in range(1, W+1):", "MOD = 10**9+7\ndef solve(R, W, d):\n    dp = [[0]*(W+1) for _ in range(R+1)]\n    dp[0][0] = 1\n    for i in range(R+1):\n        for j in range(W+1):\n            if i > 0:\n                dp[i][j] = (dp[i][j] + dp[i-1][j]) % MOD\n            if j > 0:\n                dp[i][j] = (dp[i][j] + dp[i][j-1]) % MOD\n            if i > 0 and j > 0:\n                dp[i][j] = (dp[i][j] +", "MOD = 10**9+7\nMAXN = 10**6+10\n\nfact = [0]*MAXN\ninv = [0]*MAXN\n\ndef init():\n    fact[0] = inv[0] = 1\n    for i in range(1, MAXN):\n        fact[i] = fact[i-1]*i%MOD\n        inv[i] = inv[i-1]*pow(i, MOD-2, MOD)\n\ndef C(n, m):\n    if m > n or m < 0:\n        return 0\n    return fact[n]*inv[m]%MOD*inv[n-m]%MOD\n\ndef solve(R, W, d):\n    init()", "def solve(R, W, d):\n    mod = 10**9+7\n    dp = [[0]*(R+1) for _ in range(W+1)]\n    dp[0][0] = 1\n    for i in range(1, W+1):\n        for j in range(R+1):\n            dp[i][j] = (dp[i-1][j] + dp[i][j-1]) % mod\n    res = dp[W][R]\n    for i in range(1, min(R, d)+1):\n        res = (res + dp[W][i]) % mod\n    return res\n\nR, W, d = map(int, input().split())\nprint(sol", "MOD = 10**9 + 7\n\ndef solve(R, W, d):\n    fact = [0] * (R + W + 1)\n    inv = [0] * (R + W + 1)\n    fact[0] = fact[1] = inv[0] = inv[1] = 1\n    for i in range(2, R + W + 1):\n        fact[i] = (fact[i - 1] * i) % MOD\n        inv[i] = (MOD - MOD // i) * inv[MOD % i] % MOD\n    for i in range(2, R + W + 1):\n        inv[i] = (inv[i - 1] * inv[i]) % MOD\n    def C("], "prompt": "\nQUESTION:\nThe host university is organizing a party for this year\u2019s ACM/ICPC contestants with a buffet dinner and $R$ boxes of red wine and $W$ boxes of white wine. Wine boxes are to be arranged into non-empty piles, each pile contains only one type of wine, either white or red. After that, those piles are put into a line so that no two piles belonging to the same kind sit next to each other. In addition, for security reasons, each red wine pile should not have more than $d$ boxes of red wine, although piles of white wine can be arbitrarily large.\n\nYour task is to identify $K$ - the number of different ways to arrange the given wine boxes satisfying all of the above conditions.\n\n-----Input-----\nThe input contains $3$ space separated integers in one line: $R$, $W$, $d$ $(1 \\leq R,W \\leq 10^6, 1 \\leq d \\leq R)$\n\n-----Output-----\nWrite in one line the remainder of $K$ divided by $10^9+7$.\n\n-----Sample Clarification-----\nIn the first sample below, there are $3$ valid arrangements:\n\nIn the second sample below, there are $6$ valid arrangements:\n\n-----Examples-----\nSample Input:\n2 2 1\nSample Output:\n3\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}