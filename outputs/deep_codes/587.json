{"587": {"code": ["from collections import Counter\n\nN, K = map(int, input().split())\nsushi = [list(map(int, input().split())) for _ in range(N)]\nsushi.sort(key=lambda x: x[1], reverse=True)\ncounter = Counter()\nsatisfaction = 0\nkinds = 0\n\nfor t, d in sushi[:K]:\n    if not counter[t]:\n        kinds += 1\n    counter[t] +=", "import sys\nfrom collections import Counter\nfrom heapq import nlargest\n\nN, K = map(int, sys.stdin.readline().split())\nsushi = [tuple(map(int, sys.stdin.readline().split())) for _ in range(N)]\n\nsushi.sort(key=lambda x: -x[1])\nkinds = len(Counter(x[0] for x in sushi[:K]).keys())\nbase_", "from collections import Counter\n\ndef max_satisfaction(n, k, sushi):\n    toppings = [s[0] for s in sushi]\n    delici = [s[1] for s in sushi]\n    toppings_counter = Counter(toppings)\n    variety = len(toppings_counter)\n    satisfaction = 0\n\n    # Sort the sushi by deliciousness in descending order\n    sushi.sort", "from collections import Counter\n\nN, K = map(int, input().split())\nsushi = [tuple(map(int, input().split())) for _ in range(N)]\nsushi.sort(key=lambda x: -x[1])  # sort by deliciousness in descending order\n\ntotal_deliciousness = sum(d for t, d in sushi[:K])\nkinds = Counter(t for t, d in sushi[:K])", "import sys\nfrom collections import deque\ninput = sys.stdin.readline\n\nN, K = map(int, input().split())\nsushi = [list(map(int, input().split())) for _ in range(N)]\nsushi.sort(key=lambda x: x[1], reverse=True)\n\nkinds = set()\nkinds_bonus = 0\nbase_total = 0\nsatisfaction = 0\n\ndq = deque()"], "prompt": "\nQUESTION:\nThere are N pieces of sushi. Each piece has two parameters: \"kind of topping\" t_i and \"deliciousness\" d_i.\nYou are choosing K among these N pieces to eat.\nYour \"satisfaction\" here will be calculated as follows:\n - The satisfaction is the sum of the \"base total deliciousness\" and the \"variety bonus\".\n - The base total deliciousness is the sum of the deliciousness of the pieces you eat.\n - The variety bonus is x*x, where x is the number of different kinds of toppings of the pieces you eat.\nYou want to have as much satisfaction as possible.\nFind this maximum satisfaction.\n\n-----Constraints-----\n - 1 \\leq K \\leq N  \\leq 10^5\n - 1 \\leq t_i \\leq N\n - 1 \\leq d_i \\leq 10^9\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\nt_1 d_1\nt_2 d_2\n.\n.\n.\nt_N d_N\n\n-----Output-----\nPrint the maximum satisfaction that you can obtain.\n\n-----Sample Input-----\n5 3\n1 9\n1 7\n2 6\n2 5\n3 1\n\n-----Sample Output-----\n26\n\nIf you eat Sushi 1,2 and 3:\n - The base total deliciousness is 9+7+6=22.\n - The variety bonus is 2*2=4.\nThus, your satisfaction will be 26, which is optimal.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}