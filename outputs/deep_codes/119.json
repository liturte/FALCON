{"119": {"code": ["n = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nsegments.", "n = int(input())\nsegments = [list(map(int, input().split())) for _ in range(n)]\nsegments.sort", "n = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nsegments.", "n = int(input())\nsegments = []\nfor i in range(n):\n    l, r = map(int, input().split())", "n = int(input())\nsegments = [tuple(map(int, input().split())) for _ in range(n)]\nsegments."], "prompt": "\nQUESTION:\nYou are given a sequence a_1, a_2, ..., a_{n} of one-dimensional segments numbered 1 through n. Your task is to find two distinct indices i and j such that segment a_{i} lies within segment a_{j}.\n\nSegment [l_1, r_1] lies within segment [l_2, r_2] iff l_1 \u2265 l_2 and r_1 \u2264 r_2.\n\nPrint indices i and j. If there are multiple answers, print any of them. If no answer exists, print -1 -1.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 3\u00b710^5) \u2014 the number of segments.\n\nEach of the next n lines contains two integers l_{i} and r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 10^9) \u2014 the i-th segment.\n\n\n-----Output-----\n\nPrint two distinct indices i and j such that segment a_{i} lies within segment a_{j}. If there are multiple answers, print any of them. If no answer exists, print -1 -1.\n\n\n-----Examples-----\nInput\n5\n1 10\n2 9\n3 9\n2 3\n2 9\n\nOutput\n2 1\n\nInput\n3\n1 5\n2 6\n6 20\n\nOutput\n-1 -1\n\n\n\n-----Note-----\n\nIn the first example the following pairs are considered correct:  (2, 1), (3, 1), (4, 1), (5, 1) \u2014 not even touching borders;  (3, 2), (4, 2), (3, 5), (4, 5) \u2014 touch one border;  (5, 2), (2, 5) \u2014 match exactly.\nPlease provide the solution as pure code only, without explanations or comments.\n\nANSWER:\n```python\n"}}