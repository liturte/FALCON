{"3288": {"code": ["of$1$$3$-incremental string is called$n$$n$$k$-incremental,double free strings.double free strings.({th}$in the alphabetically sorted listof all= 1,3, 2, 3,== 1, 3,3, 4, 3,3, 4, 6,6, 4,5", "{th}$ string in$k$-incremental, double free; } else {}{th}$ string instring in thealphabetized list of allstring in the alphabetically sortedofnumber ofdouble free strings.ofthestring isnumber ofthe $n^\\mathrm {th}$ string instring inin the alphabetized listthe $n^\\mathrm {th}$", "the$n^{7}$ string inone of(a string thatone of theis thethe $n^\\mathrm$k$-incremental, double free string inthethe $n^\\mathrm {th}$ string inof all $k$-incremental, double$n^\\mathrm {th}$ string in thealphabetized list of all$k$-incremental,", "string$k$-incremental, double freeof$n$ (1 \\le1 \\le n \\lethe1in athethe string isin the alphabetized list ofstring, output$n$ (1 \\le\\le n(1 \\le k \\le 26,$n$ ($1 \\le n$n\\leall$n$ $n$", "in a$k$-incremental, double freea single test caseacan bethe$n^\\mathrm {th}$ stringinof theastring isin astringof the$n^\\mathrm {th}$ string inof the alphabetically sortedof allstring inof all$n^\\mathrmin the alphabetized list ofin the alphabetically sorted", "{th}$$n^\\mathrm {th}$string inaof$1,of $k$, doublestring is$n^\\mathrm {th}$ string ina$n\\mathrm {th}$ stringin the alphabetically sorted listof allstring in thestring in the alphabeticallynumber of characters inofin theofofof thestring is", "string isisone.aofaandtheoutputthe(a,,,, 'a' )( a, 'b' ) ))( a, 'a' ) )() ) ;; if)'a' ) { return", "input$1, 2, 3, 4,and $n$ isin the alphabetically sortedstring in theof $n$1a$n^\\mathrm {th}$ string instring in the$n$\\le n \\le 10^{18}$).$n\\mathrm {th}$)the.$n$ in the alphabetically sortedof all$n", "$n$thein the alphabetizedthestring( \"\"\"( )(output.)\"() { input [( ) ). split (( )( ){. split (( ) [ 0)(( ) )( ) ; if", "is1:$n$ 2:651Output 2:1: 1:2: 1: 1:Input 2:750\nSample Output750\nSample Output 2:Output 2:Output 2:1:1:( )A $n\" \\n \".\" \",.( )(( )= \" \"\" \"."], "prompt": "\nQUESTION:\nA string is called double free if no two adjacent letters are the same.\n\nA string is called $k$-incremental if for all values of $j$ in the range $[1,k]$, there exists exactly one character with $j$ occurrences, and the string\u2019s length is $1+2+3+\\ldots +(k-1)+k$. For example, if $k=3$, then a $3$-incremental string should have one character appear once, another twice, another three times, in any order, for a total string length of $6$.\n\nA string is both $k$-incremental and double free if it meets both these criteria. Now consider examining all such strings of lowercase letters for a given $k$ in alphabetical order. Consider the following examples.\n\n$k=2$: aba, aca, ada, \u2026, aya, aza, bab, bcb, bdb, \u2026, zxz, zyz\n\n$k=3$: ababac, ababad, \u2026, ababay, ababaz, ababca, \u2026, zyzyzx\n\nWhat is the $n^\\mathrm {th}$ string in an alphabetized list of all $k$-incremental, double free strings?\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. There will be exactly one line of input. It will contain two integers, $k$ and $n$ ($1 \\le k \\le 26, 1 \\le n \\le 10^{18}$), which is asking for the $n^\\mathrm {th}$ string in the alphabetically sorted list of all $k$-incremental, double free strings.\n\n-----Output-----\nOutput the $n^\\mathrm {th}$ $k$-incremental, double free string in the alphabetized list. If no such string exists, output $-1$.\n\n-----Examples-----\nSample Input 1:\n2 650\nSample Output 1:\nzyz\n\nSample Input 2:\n2 651\nSample Output 2:\n-1\nUse Standard Input format\nANSWER:\n"}}