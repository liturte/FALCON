{"1161": {"code": ["string s, consistingthe firsttothes.if\"[(){}]<>]\"\"[(){}]<>]\" is not RBS.(s)s_2 areand \"[()]\" is notof aan emptyofs, consisting of a nonofofand thetype.and aaof ain s,of theof a type", "A stringinputformat=( ) {) {( )=]]] ] }= () {) {]=,,], \" \", \" \"]\"\" \", \" \") { } } ]], \" \",", "ofof.{=) {) ) {., \"1\", \"2\",\"3\", \"4\",, \"4\", \"5\", \"5\", \"6\", \"7\"\"7\", \"9\", \"9\", \"10\", \"9\",, \"9\", \"9\",\"9\",", "(s_1)s_2, (s_1)s_2, (s_2)s_2, (s_2)s_2,of the string.s_1,s_2,s_1, (s_1)s_2,s_2, (s_2)s_2,s_2ors_2, (s_2)s", "andisa regular bracket sequence( <s_1>s_2, {s_1}s_2,s_2, [s_1]s_2,s_2is RBS.s_2, [s_2]s_2, [s_2]s_2, [s_2]s_2,[s_2]s_2, [s_2", "input ininput in s, thatis not.a RBS, andthe stringss_1, s_2, [s_1]s_2, [s_1]s_2, (s_1)s_2, (s_1)s_2,RBS, but[s_1]s_2,s_2, (s_2)s_2, (", "an empty stringwiththestring s.2 ){}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}", "string s( ){} ]) {} ]][{}] []]inoftheofof) { if (. split ()()( )). split][]]]] ) { if (] ==[ ]] = [ ] ;", "of[{}]{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}", "stringsin a nonline contains a nonstring s, consisting ofof=,,] ] ][ ] ] ]inthe.( ),. split (. split ( \" \"] ] ) )split ( \" \")( ). split ( \" \",split () ) ;( )"], "prompt": "\nQUESTION:\nYou are given string s consists of opening and closing brackets of four kinds <>, {}, [], (). There are two types of brackets: opening and closing. You can replace any bracket by another of the same type. For example, you can replace < by the bracket {, but you can't replace it by ) or >.\n\nThe following definition of a regular bracket sequence is well-known, so you can be familiar with it.\n\nLet's define a regular bracket sequence (RBS). Empty string is RBS. Let s_1 and s_2 be a RBS then the strings <s_1>s_2, {s_1}s_2, [s_1]s_2, (s_1)s_2 are also RBS.\n\nFor example the string \"[[(){}]<>]\" is RBS, but the strings \"[)()\" and \"][()()\" are not.\n\nDetermine the least number of replaces to make the string s RBS.\n\n\n-----Input-----\n\nThe only line contains a non empty string s, consisting of only opening and closing brackets of four kinds. The length of s does not exceed 10^6.\n\n\n-----Output-----\n\nIf it's impossible to get RBS from s print Impossible.\n\nOtherwise print the least number of replaces needed to get RBS from s.\n\n\n-----Examples-----\nInput\n[<}){}\n\nOutput\n2\nInput\n{()}[]\n\nOutput\n0\nInput\n]]\n\nOutput\nImpossible\nUse Standard Input format\nANSWER:\n"}}