{"3901": {"code": ["tothenumber ofa_1, a_2,..., a_{i} \u22641] \n\nOutput- 1 ] \n1] \n1 ] \n\nOutput1] \n\nOutput1 ].....( ),]., 0 ) ;, 0 ] )() ). length - 1=. length", "31, 3, 4,1, 3,1,6] \u2014[2, 2, 3, 4,1] \n\nAnalyse:a_1, a_2, a_1,[2,2, 3, 4, 6][2,4,[2, 2, 3,[3, 1, 1, 1][1,", "number ofthethethe.thenumber ofin thetheof thethe.=2..) ; }.( )( )) ;( )( ) ;) ;() ; }", "one of the)the number of(2 \u22641, 1,[2, 2, 3,] \u2014 thethenumber ofthe1 \u22648] \na_1, a_2,...,2,2, 3, 4, 6] \u2014the number ofinput containsarray ofthe firstinteger n (", "the1 ]8[1, 1,1] \n\nA[2,2]2] \n[2, 2, 3, 4,[2, 2, 3,[1,1] \n[1, 1, 1, 1][1, 1, 1, 1]2, 3, 4,[2,3,[2,1,", "n:n, 2,..., a_{n}a_{i}thethenumber of1] \n\nOutput1] \n)(11] \n3 ] ]1 ]2 ]] ] [ 3] [2] \n1] \n\nOutput2 ][1] \n1] \n[1, 1, 1, 1] \n", "( 1 \u2264 n \u226411] \n\nAnin thetheto1,[1,1,1] \n(1 \u22641] \nnumber of operations1] \n1] \n));1 ]0 ]1 ]1 ] \n1] \n\nA21] \n[1,", "[1, 1, 1]1] \n\nAnalog \u00c0\u00c6in the inputthenumbers to 12 3 4 6]2[2, 2, 3,1] \n\nAnalog \u00c0\u00c6[1, 1, 1, 1] \n1] \n\nAnalog \u00c0\u00c61] \n1] \n\nAnalog1]1]", "a_1,1 \u22645 moves:[2, 3,6] \u2014 the number of2 ] \n1] \na_1,3, 4,1] \n(2)the first1] \n\nOutput1] \n\nOutput1] \n\nOutputthethe first sample youthethe number of1] \n1", "number ofnumber of1in the input1, 1, 1,5 moves:[2,[1,[1, 1, 1, 1] \n[1, 1, 1, 1] \n1, 1] \n1] \n1] \n1] \n1] \n1] \n1] \n[1,1] \n1] \n1]"], "prompt": "\nQUESTION:\nYou have an array a with length n, you can perform operations. Each operation is like this: choose two adjacent elements from a, say x and y, and replace one of them with gcd(x, y), where gcd denotes the greatest common divisor.\n\nWhat is the minimum number of operations you need to make all of the elements equal to 1?\n\n\n-----Input-----\n\nThe first line of the input contains one integer n (1 \u2264 n \u2264 2000) \u2014 the number of elements in the array.\n\nThe second line contains n space separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^9)\u00a0\u2014 the elements of the array.\n\n\n-----Output-----\n\nPrint -1, if it is impossible to turn all numbers to 1. Otherwise, print the minimum number of operations needed to make all numbers equal to 1.\n\n\n-----Examples-----\nInput\n5\n2 2 3 4 6\n\nOutput\n5\n\nInput\n4\n2 4 6 8\n\nOutput\n-1\n\nInput\n3\n2 6 9\n\nOutput\n4\n\n\n\n-----Note-----\n\nIn the first sample you can turn all numbers to 1 using the following 5 moves:\n\n  [2, 2, 3, 4, 6].  [2, 1, 3, 4, 6]  [2, 1, 3, 1, 6]  [2, 1, 1, 1, 6]  [1, 1, 1, 1, 6]  [1, 1, 1, 1, 1] \n\nWe can prove that in this case it is not possible to make all numbers one using less than 5 moves.\nUse Standard Input format\nANSWER:\n"}}