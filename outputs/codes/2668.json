{"2668": {"code": ["the#3:COOKIES arriveda single(of theis a singleitin( ) { if () { #3:COOKIES arrived( )#4:COOKIES arrived at the shop,have#3:COOKIES arrived atthe shop, hehad 5#4:COOKIES arrived at the( ) { #1", "; if (){ #1: #1:1: #2: #2: #2:#2: #2: #2: #2: #2:the#2: #2: #2: #2: #2:#2: #2: #2:#2: #2: #2:#2: #2: #2: #2:#2:", "theif\"Socksfor thethe1.3.1.1.2.3. #3:\nChef had5. #4:\nChef had#5:\nChef had0. #2:\nChef had 41. #3:\nChef had4.1. #3:\nWhen1.3", ".,) ) {(={ if (!) {) ; }() ;{(} }) ;(, 2 ) ; }() {, 0,; } if (( ) ) ; }.( ) ) ;.( )) ; } }", "thethethea singleif sucha single\"Luckya single sock.hadthethe() { if () {=(; } else if( \"How tothethethe last., 0) ;) ; }= \"How to buy a( ) ;.( ) ;= 1 ;", ",a()( )( ) )) )=( )) ) ; if (== 0 )( ) )( ) )( ) ; if (( ) )( ) )) ; }( ) )(( ) )( ) ) ;( )} if (( )( ) ) {( ) ; } }", "thesothemthey havea singlea singlecan buyoneone or moreathea singlethea singleoneaathe same.toa singlethesethe same tothe same as#2:\nChefthe same, so we canthe#2:\nWhen Chef arrived at thethe shop, he", "tothe.() ; } }//1:\nWhen Chef arrived at thethe shop,has 3 rupeesleast to buytheso far. #2:\nChefthe shop, hethe312 3:12 3:) { #1:\nWhen(have 22 3:0 1:1 1:", "andthey have(..( ).(..) ; Chef.( ) ; Chef.( ) ;) ; Chef.; Chef.( ) ; Chef.( ) ;.( ) ;].( ) ; Chef( ) ; Chef.) ; Chef.", ":1...)., \"jacketCost\", \"money\"\"Lucky\"Unlucky\"Lucky Chef\" )\"Unlucky\"Lucky Chef\" ).( )). append (). append ( \"( ). append (\"Unlucky( ). append) ). append ("], "prompt": "\nQUESTION:\nToday, Chef woke up to find that he had no clean socks. Doing laundry is such a turn-off for Chef, that in such a situation, he always buys new socks instead of cleaning the old dirty ones. He arrived at the fashion store with money rupees in his pocket and started looking for socks. Everything looked good, but then Chef saw a new jacket which cost jacketCost rupees. The jacket was so nice that he could not stop himself from buying it.\n\nInterestingly, the shop only stocks one kind of socks, enabling them to take the unsual route of selling single socks, instead of the more common way of selling in pairs. Each of the socks costs sockCost rupees.\n\nChef bought as many socks as he could with his remaining money. It's guaranteed that the shop has more socks than Chef can buy. But now, he is interested in the question: will there be a day when he will have only 1 clean sock, if he uses a pair of socks each day starting tommorow? If such an unlucky day exists, output \"Unlucky Chef\", otherwise output \"Lucky Chef\". Remember that Chef never cleans or reuses any socks used once.\n\n-----Input-----\nThe first line of input contains three integers \u2014 jacketCost, sockCost, money \u2014 denoting the cost of a jacket, cost of a single sock, and the initial amount of money Chef has, respectively.\n\n-----Output-----\nIn a single line, output \"Unlucky Chef\" if such a day exists. Otherwise, output \"Lucky Chef\". \n\n-----Constraints-----\n- 1 \u2264 jacketCost \u2264 money \u2264 109\n- 1 \u2264 sockCost \u2264 109\n\n-----Example-----\nInput:\n1 2 3\n\nOutput:\nUnlucky Chef\n\nInput:\n1 2 6\n\nOutput:\nLucky Chef\n\n-----Subtasks-----\n- Subtask 1:  jacketCost, money, sockCost \u2264 103. Points - 20\n- Subtask 2: Original constraints. Points - 80\n\n-----Explanation-----\nTest #1:\nWhen Chef arrived at the shop, he had 3 rupees. After buying the jacket, he has 2 rupees left, enough to buy only 1 sock.\nTest #2:\nChef had 6 rupees in the beginning. After buying the jacket, he has 5 rupees left, enough to buy a pair of socks for 4 rupees.\nUse Standard Input format\nANSWER:\n"}}