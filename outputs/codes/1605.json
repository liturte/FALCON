{"1605": {"code": ["the input is a\"aabba\" is a palindromes = s_1s_2... s_{n}a palindrome if it isstring s =s_{n}s_{n} + 1...a palindrome if it isis equal to string s_{n}s_{n}+ 1... s_1.(2\"a\", \"a\",\"aa\", \"", "string s = s_1s_2... s_{n}s_{n}s_1.s_1s_2... s_{n}s_{n}..ss_1s_2... s_{n} is as_{n}s_{n} + 1... s_{r}.s = s_1s_2...s_{n}s_{n} +s", "1'a' or 'b''b' or 'bb''a' or'a' or 'b' is'a' or 'b''a' or 'b' is'a' or 'b''b' is 'a'(1\u2264 n \u2264 10^5)the= 'a''bb' is 'a' or 'b", "string s = s_1s_2... s_{l}s_{l}1... s_{n} - 1...of the stringit is equal to strings_1s_2... s_{n} is astring s = s_1s_2...s_{r} s_{r} -s_1.isstring s =s_1s_2... s_{l}s", "theis(1(2 \u2264 n \u2264 10^5)\"a\" or \"b\".\"a\",\"b\",\"a\", \"b\", \"aa\", \"bab\", \"bab\").\"aa\", \"bab\", \"bab\", \"bab\",\"aa\", \"bab\", \"aba\", \"aba\".\"aa\" or \"bab\"", ")(1s[l, r] (1(1 \u2264ss_{r}s_{r} + 1... s_1.(1 \u2264 r \u2264s(1 \u2264l \u2264 rs_1.sa palindrome if its_1.] + 1... s_1.s_", "the string \"aabba\" is\"aabab\" isa palindrome if itis equal to string\"aabab\"iss_1s_2...\"aabab\" isis=a palindrome if itis equals_{n}s_{n} + 1... s_{r}.string sis a palindromes_1s_2...", "string s = s_1s_2...string s = s_1s_2... s_{n}1... s_1..s.(( ) ;.( ) )\"a\". splits( )) )(); if (!= 0 ) {} } else {. split (= 0 ; i <n =", "( ) {., \"b\", \"aa\",\"aa\", \"bab\",, \"bab\", \"bab\",, \"bb\", \"babaa\",\"a\"\"aa\", \"bab\", \"bab\", \"bab\",\"aa\", \"bab\", \"bab\", \"babab\", \"babab\",\"abab", "the.theof the input containstheisa palindrome if it isstring s = s_1s_2... s_{n}s_{n}s_1.string s =s_{n}s_{n} + 1...s_{r}.s_{r}.string s == s_1s_2... s_1.string s =s_1"], "prompt": "\nQUESTION:\nWe call a string good, if after merging all the consecutive equal characters, the resulting string is palindrome. For example, \"aabba\" is good, because after the merging step it will become \"aba\".\n\nGiven a string, you have to find two values:  the number of good substrings of even length;  the number of good substrings of odd length. \n\n\n-----Input-----\n\nThe first line of the input contains a single string of length n (1 \u2264 n \u2264 10^5). Each character of the string will be either 'a' or 'b'.\n\n\n-----Output-----\n\nPrint two space-separated integers: the number of good substrings of even length and the number of good substrings of odd length.\n\n\n-----Examples-----\nInput\nbb\n\nOutput\n1 2\n\nInput\nbaab\n\nOutput\n2 4\n\nInput\nbabb\n\nOutput\n2 5\n\nInput\nbabaa\n\nOutput\n2 7\n\n\n\n-----Note-----\n\nIn example 1, there are three good substrings (\"b\", \"b\", and \"bb\"). One of them has even length and two of them have odd length.\n\nIn example 2, there are six good substrings (i.e. \"b\", \"a\", \"a\", \"b\", \"aa\", \"baab\"). Two of them have even length and four of them have odd length.\n\nIn example 3, there are seven good substrings (i.e. \"b\", \"a\", \"b\", \"b\", \"bb\", \"bab\", \"babb\"). Two of them have even length and five of them have odd length.\n\nDefinitions\n\nA substring s[l, r] (1 \u2264 l \u2264 r \u2264 n) of string s = s_1s_2... s_{n} is string s_{l}s_{l} + 1... s_{r}.\n\nA string s = s_1s_2... s_{n} is a palindrome if it is equal to string s_{n}s_{n} - 1... s_1.\nUse Standard Input format\nANSWER:\n"}}