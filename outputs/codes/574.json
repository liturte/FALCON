{"574": {"code": ["the number ofto be filled., 2 ) )theof()( int x)x, y,x(2 ]x, y.x, y )] ) )( \" \",.( \" \",) ) )0 ] ) )[] )[ 1 ] ) ;2 ] )", "number ofof the inputof thethenumber ofofcellx_1 and y_1the2 x_2 \u2264 x_2x_2y_1 \u2264 y_2 \u2264thethe number ofthethe number ofthethethethe(x_1x_2 \u2264 x_1 \ufffd", "=] {] {[Image] {().[ Image ]...[ Image ] {]] {,[ Image ][[ Image ] {] {[ Image ]] {] {[ Image ] {] {] { \"[ Image ]", "3 00 0 00 0 0 00 0 0 0 00 0 00 0 0 0 001-1x_1 \u2264 x_2 \u2264 y_1- 10^9 \u2264 y_1 \u22641 52 210^9, 10^910^9 \u2264x_1 \ufffd", "theof thea.) { for (x_1, y_1, x_2x_2 + x_2 )= 0x_1 + x_2 +x_2 + y_1 +x_1 + y_2x_2 + y_2 + y_1. append (x_1 + y_2 )= x_1 +y_", "inputtheof acell containingthethe25 5 5the1 5 5 522 5 54 5 52 5 56 5 5 5105 50 1 1 1 15 2 10 10nthe1 5 58 5 55 5 5 55 5 5 5 65 5 6 2 15", "thethenumber of units to bethein theatheof the( x_1x_2 \u2264 x_2 \u226410^9 \u2264 x_2 \u2264 y_1y_2 \u226410^9 \u2264 x_1 \u2264x_2 \u226410^9 \ufffd", "number of1 5 5]a game designer selectedthealland theofin thethebe filled.the2 2 5for eachthethethethetheof thetheinputtheto be filled.thethe unit.the number of units. {", "( x_1 )x_2 \u2264 x_2 \u2264 y_2thecell( -x_1 \u2264 x_2 \u2264 y_1thecell0 1 5 5thethe number ofcell10^9x_1 \u2264 x_2 \u226410^9 \u2264 x_2 \ufffd", "thebebe used in thethethefield.thetheinput withtheofto bethe number ofcells to be10^9of theis used forthe#.;) ;if ()). length > 0 )"], "prompt": "\nQUESTION:\nDeveloping tools for creation of locations maps for turn-based fights in a new game, Petya faced the following problem.\n\nA field map consists of hexagonal cells. Since locations sizes are going to be big, a game designer wants to have a tool for quick filling of a field part with identical enemy units. This action will look like following: a game designer will select a rectangular area on the map, and each cell whose center belongs to the selected rectangle will be filled with the enemy unit.\n\nMore formally, if a game designer selected cells having coordinates (x_1, y_1) and (x_2, y_2), where x_1 \u2264 x_2 and y_1 \u2264 y_2, then all cells having center coordinates (x, y) such that x_1 \u2264 x \u2264 x_2 and y_1 \u2264 y \u2264 y_2 will be filled. Orthogonal coordinates system is set up so that one of cell sides is parallel to OX axis, all hexagon centers have integer coordinates and for each integer x there are cells having center with such x coordinate and for each integer y there are cells having center with such y coordinate. It is guaranteed that difference x_2 - x_1 is divisible by 2.\n\nWorking on the problem Petya decided that before painting selected units he wants to output number of units that will be painted on the map.\n\nHelp him implement counting of these units before painting.\n\n [Image] \n\n\n-----Input-----\n\nThe only line of input contains four integers x_1, y_1, x_2, y_2 ( - 10^9 \u2264 x_1 \u2264 x_2 \u2264 10^9,  - 10^9 \u2264 y_1 \u2264 y_2 \u2264 10^9) \u2014 the coordinates of the centers of two cells.\n\n\n-----Output-----\n\nOutput one integer \u2014 the number of cells to be filled.\n\n\n-----Examples-----\nInput\n1 1 5 5\n\nOutput\n13\nUse Standard Input format\nANSWER:\n"}}