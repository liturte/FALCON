{"3749": {"code": ["A_i =A_iA_i =A_i)theand the twoX andA_i isA_iA_i is.X and A_i isA_i is1in then.0 ] ==A_i is 1.A_i isA_i is 1.A_i isA_i", "X andX1,A_iand1.1.7,A_i, 0, 3,A_i,5, 7,10, 11,9,11,8,8, 7,5, 7,9, 9, 9, 9, 99, 9, 9, 9,9, 9, 9, 9, 9,9", "- 1 \\leq X- 1 \\leq8X:A_iA_iA_i1, 5,1, 5, 6, 7 can0,5,0, 5,0,0, 5, 6, 7 can1,3, 5,1, 6,8, 7,7, 8,5, 9,4", "A_N:288the:: 2, 23,6, 68, 686, 777, 9,16,7, 6,9, 9,9, 9, 9, 9, 9,9, 9, 9,9, 9, 9, 9,9, 9,9, 9, 9, 9", "in thethe- 1 \\leqXXXXtheof theA_iA_ito writeA_iA_itheisA_iA_i isA_iA_i is0,0,1,6, 9,isX or), A_i = 0A_i < 2^{", "- 111 1 1 1 1- 12251 1 1 26 A_i (1\\leq1 21 1X1-16 to8 to write-9 to write3.1 1 1 2 21 1 1 1 12 22 to write-1 1 1 12 1 1 1 17 to write", "the number ofnumber ofof1.0.in- 1the8.8.5.8.write 8.7 to write5.8 to write15.6 to write9.\nA_N:A_NA_NA_NA_NA_NA_NA_NA_NA_NA_NA_NA", "A_i =) {X and A_i(1\\leq i\\leqof the2.(0,8.8.8.1.2.7.0.4.8.2.8.8 to write6.8 to write 11.9.8 to write 11.A_i(1\\leq i", "A_i ( 1+ 1N A_iA_i (XA_i (X0,A_i (A_i ())NXX orXX andXX,XX, 1A,A_i, 1A, 1A,A_i isA_i.XX,A_i.", ":( A_i + 1X )A_i22.X orA_iX orA_i+1 can be writtenthein thenumber ofX.and3 to write10.A_i+1 can be writtenA_i+1 can beX orA_i+1 can be writtenA_i+1"], "prompt": "\nQUESTION:\nThere are N non-negative integers written on a blackboard. The i-th integer is A_i.\nTakahashi can perform the following two kinds of operations any number of times in any order:\n - Select one integer written on the board (let this integer be X). Write 2X on the board, without erasing the selected integer.\n - Select two integers, possibly the same, written on the board (let these integers be X and Y). Write X XOR Y (XOR stands for bitwise xor) on the blackboard, without erasing the selected integers.\nHow many different integers not exceeding X can be written on the blackboard? We will also count the integers that are initially written on the board.\nSince the answer can be extremely large, find the count modulo 998244353.\n\n-----Constraints-----\n - 1 \\leq N \\leq 6\n - 1 \\leq X < 2^{4000}\n - 1 \\leq A_i < 2^{4000}(1\\leq i\\leq N)\n - All input values are integers.\n - X and A_i(1\\leq i\\leq N) are given in binary notation, with the most significant digit in each of them being 1.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN X\nA_1\n:\nA_N\n\n-----Output-----\nPrint the number of different integers not exceeding X that can be written on the blackboard.\n\n-----Sample Input-----\n3 111\n1111\n10111\n10010\n\n-----Sample Output-----\n4\n\nInitially, 15, 23 and 18 are written on the blackboard. Among the integers not exceeding 7, four integers, 0, 3, 5 and 6, can be written.\nFor example, 6 can be written as follows:\n - Double 15 to write 30.\n - Take XOR of 30 and 18 to write 12.\n - Double 12 to write 24.\n - Take XOR of 30 and 24 to write 6.\nUse Standard Input format\nANSWER:\n"}}