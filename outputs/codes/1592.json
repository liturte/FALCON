{"1592": {"code": ["a singleand the timeofmessages fromthetime in0.1< nand t_{i} (1task was received andthetheofthethe timeof theatthethe lastof the queueone messagethe number ofmessage is sentthe queue. Thethe queue is not empty,", "theof the SMSC. a single lineofn0thethethethenthethet_{i} >c_{i}and thethe number oftaskt_{i} \u2014 thethet_{i} =1of thethen1 \u2264 n \u2264 n", "the SMSCthethetheto send theabeing sent.the(1 \u2264thetheaof thethethe number oft_{i} \u2014 the number ofmessages to send. Theof thetheof thethethe SMSC.thethethethe task was sent. The", "ntheto sendtheof thethe(1t_{i} \u2014 the.to sendmessage of theofthe lasttask was sent, correspondingly.thet_{i}of the task ofthenof the task.thethe.thethe time moment x. The", "the number ofthemessagestask wasby the time moment x.theand theof thethe taskof themessagetheof thethethe queue.the queue. Thetotheits ownof the taskto bethe number ofof thetheof thethe queue. The", "thethemessagesof thethe1task(1task was receivedthe number ofmessages to send.thethe task wastheof the task.thethe number oftask was received atthethe.thetheand the number of.the number of", "thet_{i} <1thetheattime moment x,the SMSC(1 \u2264 n \u2264(1 \u2264 nthe number ofof the).(1 \u2264the numbertheof the task.(1).thetheof thethe taskthe queue.theof the queue", "of theof thethe.(1nin the) : t_{i}c_{i}(2 \u2264)the,n = 0 ;<1n < n ;n) {..n ) ; }}(1(2 \u2264 n{ n =", "thethet_{i}the number ofmessages to send. Thetask isin thethethe)the number ofmessages to send.t_{i}the number ofthetask was received, correspondingly.thethethei-ththet_{i}the number oftask was receivedthe number ofthe task was", "t_{i}(1 \u2264 t_{i}the taskthe number of)the task'st_{i} \u2014 thethethe tasktheisa singlenumber oftheand thethetask of thethethe task' descriptions:t_{i} andthethetheof the taskbethe"], "prompt": "\nQUESTION:\nSome large corporation where Polycarpus works has its own short message service center (SMSC). The center's task is to send all sorts of crucial information. Polycarpus decided to check the efficiency of the SMSC. \n\nFor that, he asked to give him the statistics of the performance of the SMSC for some period of time. In the end, Polycarpus got a list of n tasks that went to the SMSC of the corporation. Each task was described by the time it was received by the SMSC and the number of text messages to send. More formally, the i-th task was described by two integers t_{i} and c_{i} \u2014 the receiving time (the second) and the number of the text messages, correspondingly.\n\nPolycarpus knows that the SMSC cannot send more than one text message per second. The SMSC uses a queue to organize its work. Consider a time moment x, the SMSC work at that moment as follows:\n\n  If at the time moment x the queue is not empty, then SMSC sends one message from the queue (SMSC gets the message from the head of the queue). Otherwise it doesn't send messages at the time moment x.  If at the time moment x SMSC receives a task, then it adds to the queue all the messages from this task (SMSC adds messages to the tail of the queue). Note, that the messages from the task cannot be send at time moment x. That's because the decision about sending message or not is made at point 1 before adding these messages to the queue. \n\nGiven the information about all n tasks, Polycarpus wants to count two values: the time when the last text message was sent and the maximum size of the queue at some time. Help him count these two characteristics he needs to evaluate the efficiency of the SMSC.\n\n\n-----Input-----\n\nThe first line contains a single integer n (1 \u2264 n \u2264 10^3) \u2014 the number of tasks of the SMSC. Next n lines contain the tasks' descriptions: the i-th line contains two space-separated integers t_{i} and c_{i} (1 \u2264 t_{i}, c_{i} \u2264 10^6) \u2014 the time (the second) when the i-th task was received and the number of messages to send, correspondingly.\n\nIt is guaranteed that all tasks were received at different moments of time. It is guaranteed that the tasks are sorted in the chronological order, that is, t_{i} < t_{i} + 1 for all integer i (1 \u2264 i < n).\n\n\n-----Output-----\n\nIn a single line print two space-separated integers \u2014 the time when the last text message was sent and the maximum queue size at a certain moment of time.\n\n\n-----Examples-----\nInput\n2\n1 1\n2 1\n\nOutput\n3 1\n\nInput\n1\n1000000 10\n\nOutput\n1000010 10\n\nInput\n3\n3 3\n4 3\n5 3\n\nOutput\n12 7\n\n\n\n-----Note-----\n\nIn the first test sample: \n\n  second 1: the first message has appeared in the queue, the queue's size is 1;  second 2: the first message is sent, the second message has been received, the queue's size is 1;  second 3: the second message is sent, the queue's size is 0, \n\nThus, the maximum size of the queue is 1, the last message was sent at the second 3.\nUse Standard Input format\nANSWER:\n"}}