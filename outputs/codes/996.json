{"996": {"code": ["theof thetheandin theof thethe(n\u00b7m\u00b7k)theof theof theis the(n\u00b7m\u00b7k)theof theof theof theof the(0 \u2264 n\u00b7m\u00b7kof thethethe number ofthethe number ofthe number ofthe number", "1 \u2264 n\u00b7m\u00b7k\u00b7k\u00b7k\u00b7n\u00b7n\u00b7\u00b7k\u00b7n\u00b7n\u00b7n\u00b7\u00b7\u00b7\u00b7\u00b7k\u00b7\u00b7\u00b7n\u00b7m\u00b7k\u00b7n\u00b7k\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\ufffd", "(10 \u2264(2 \u2264 1(3 \u22641 \u2264kthe number ofthebethe number of.n )n1 )n =m =.) ) ;)][ 1)( () ) ):.", "of theathetheof thetheone ofof the(a, b, c, d, e,d, e, f)c, f)of theand (x, y, z)theof thethetheaof thethe secondof thethree int iof the secondofof thethe second line. The number", "ofthethethe=0, 1, 1,inin thetheis runningif theofthe line numberofthe line numberof(1m=(1 \u2264 n,1, 1, 1)\u00a0\u2014 the numberoftheto(1 \u2264 m, ka, b, c, d", "thethreetheof theof the(n\u00b7m\u00b7km\u00b7ktheonethe number ofofthe number ofof thethe number ofCPU (x, y, z) isandthe numberof thetheof the(n\u00b7m\u00b7k)the number ofof thethe number ofn\u00b7m\ufffd", "the number ofthe number ofoneoftheof thethe(x, y, z) can(x, y,the number ofthethethe number ofofis aof= bc ) controlledthe number ofof thetheto=of n= n += b + 1, y_1=c, z_1=c", "1theCPU (nm\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\u00b7k\ufffd", "thetheof then\u00b7m\u00b7k\u00b7n\u00b7k\u00b7k\u00b7n\u00b7k\u00b7n\u00b7n\u00b7\u00b7k\u00b7n\u00b7k\u00b7n\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7", "= 0m = 1= 1, n=1,== 2,= 2,= 3, m= 1,= 1,=2,==11,.),)}) { for ( int= 0 ; i <++ ) { if (== 2 ) { return"], "prompt": "\nQUESTION:\nA super computer has been built in the Turtle Academy of Sciences. The computer consists of n\u00b7m\u00b7k CPUs. The architecture was the paralellepiped of size n \u00d7 m \u00d7 k, split into 1 \u00d7 1 \u00d7 1 cells, each cell contains exactly one CPU. Thus, each CPU can be simultaneously identified as a group of three numbers from the layer number from 1 to n, the line number from 1 to m and the column number from 1 to k.\n\nIn the process of the Super Computer's work the CPUs can send each other messages by the famous turtle scheme: CPU (x, y, z) can send messages to CPUs (x + 1, y, z), (x, y + 1, z) and (x, y, z + 1) (of course, if they exist), there is no feedback, that is, CPUs (x + 1, y, z), (x, y + 1, z) and (x, y, z + 1) cannot send messages to CPU (x, y, z).\n\nOver time some CPUs broke down and stopped working. Such CPUs cannot send messages, receive messages or serve as intermediates in transmitting messages. We will say that CPU (a, b, c) controls CPU (d, e, f) , if there is a chain of CPUs (x_{i}, y_{i}, z_{i}), such that (x_1 = a, y_1 = b, z_1 = c), (x_{p} = d, y_{p} = e, z_{p} = f) (here and below p is the length of the chain) and the CPU in the chain with number i (i < p) can send messages to CPU i + 1.\n\nTurtles are quite concerned about the denial-proofness of the system of communication between the remaining CPUs. For that they want to know the number of critical CPUs. A CPU (x, y, z) is critical, if turning it off will disrupt some control, that is, if there are two distinctive from (x, y, z) CPUs: (a, b, c) and (d, e, f), such that (a, b, c) controls (d, e, f) before (x, y, z) is turned off and stopped controlling it after the turning off.\n\n\n-----Input-----\n\nThe first line contains three integers n, m and k (1 \u2264 n, m, k \u2264 100)\u00a0\u2014 the dimensions of the Super Computer. \n\nThen n blocks follow, describing the current state of the processes. The blocks correspond to the layers of the Super Computer in the order from 1 to n. Each block consists of m lines, k characters in each \u2014 the description of a layer in the format of an m \u00d7 k table. Thus, the state of the CPU (x, y, z) is corresponded to the z-th character of the y-th line of the block number x. Character \"1\" corresponds to a working CPU and character \"0\" corresponds to a malfunctioning one. The blocks are separated by exactly one empty line.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of critical CPUs, that is, such that turning only this CPU off will disrupt some control.\n\n\n-----Examples-----\nInput\n2 2 3\n000\n000\n\n111\n111\n\nOutput\n2\n\nInput\n3 3 3\n111\n111\n111\n\n111\n111\n111\n\n111\n111\n111\n\nOutput\n19\n\nInput\n1 1 10\n0101010101\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first sample the whole first layer of CPUs is malfunctional. In the second layer when CPU (2, 1, 2) turns off, it disrupts the control by CPU (2, 1, 3) over CPU (2, 1, 1), and when CPU (2, 2, 2) is turned off, it disrupts the control over CPU (2, 2, 3) by CPU (2, 2, 1).\n\nIn the second sample all processors except for the corner ones are critical.\n\nIn the third sample there is not a single processor controlling another processor, so the answer is 0.\nUse Standard Input format\nANSWER:\n"}}