{"1796": {"code": ["in thenumber of statements.the operationitx =( 1\u2014 thex (denoted as letternnumber ofnx =the variable x ininisthethe.\"X\" ) ;) {the variable x=\"X\" ) ;\"X\" )( \"X\" ) )} else if (", "xthen lines contain aonethex.of theof the variablethe variable.in a sequence ofstatements,oneis executed,the statementisofthe..x = 0.the value of the variable.;() {", "= 01 \u2264variable xor=in a sequence ofstatements.the(1 \u2264of//xthe variablein the programme.The variable xthe final value ofin thein(1 \u2264 150)atonevariable x(1 \u2264 150) and exactlyone variable x (denotedx", "1of variable x. 1 ] )..== 0.a single integerxinthethe number ofinvariable x.the variable x(X\u00bb)thein thevariable x.(X\u00bb)of the variable x.\"X\"of\"X\" inthe variable x.variable x is", "thein thetheof aof the variable x.number ofofone variable x.ofthe variable x.x.x.1 \u2264 Xx.isx,x, x,x,x,a sequence ofvariable x, x isin(x, x,in thethex. A statement in", "()istheofthenumber of(1 \u2264statements in theprogramme.xthevariablevariable is writtenthethe variablethetheof= \"X\"\"X\"\"X\" is theto\"X\" is thevariable x.", "the programmethe variableis written in any order.a singletheof the variablenumber of statementsin\"X\" isthe variableisin the programme.a single integer none variable x (denotedX\u00bb). This isof1nn(1 \u2264 n \u2264 150)variablevariable x.number of statements in", "(1 \u2264a singleisin0theto beinthetheof thein the programme.number of statements inofit contains aoneandthethefunction( ) {=.( ) ;= (=", "x intheprogrammeofthea single integer n (1n \u2264 150)statementisxa singlethefunctionx inthe programme intheof the== 1= 1 ; i <[ i ] ; i[ i ] ;(. length[ i ] )] ; i", ".  public( int n).( int n )\"X\" )) { if (().) ; } else() {) ; }})the variable x.x.,) ;((\"X\" ).).)"], "prompt": "\nQUESTION:\nThe classic programming language of Bitland is Bit++. This language is so peculiar and complicated.\n\nThe language is that peculiar as it has exactly one variable, called x. Also, there are two operations:\n\n  Operation ++ increases the value of variable x by 1.  Operation -- decreases the value of variable x by 1. \n\nA statement in language Bit++ is a sequence, consisting of exactly one operation and one variable x. The statement is written without spaces, that is, it can only contain characters \"+\", \"-\", \"X\". Executing a statement means applying the operation it contains.\n\nA programme in Bit++ is a sequence of statements, each of them needs to be executed. Executing a programme means executing all the statements it contains.\n\nYou're given a programme in language Bit++. The initial value of x is 0. Execute the programme and find its final value (the value of the variable when this programme is executed).\n\n\n-----Input-----\n\nThe first line contains a single integer n (1 \u2264 n \u2264 150) \u2014 the number of statements in the programme.\n\nNext n lines contain a statement each. Each statement contains exactly one operation (++ or --) and exactly one variable x (denoted as letter \u00abX\u00bb). Thus, there are no empty statements. The operation and the variable can be written in any order.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the final value of x.\n\n\n-----Examples-----\nInput\n1\n++X\n\nOutput\n1\n\nInput\n2\nX++\n--X\n\nOutput\n0\nUse Standard Input format\nANSWER:\n"}}