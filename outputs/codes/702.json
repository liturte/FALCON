{"702": {"code": ["[Image][Image][Image][Image]if any ofof thein thethethe][Image]) { if (i = 0i < n ; i].( ).[.). lengthi. length - 1 ]< n ;0. length - 1 ]if ( n. length", "the boardthecan bethein the<= 1is nottiled by{\\leq\\leq2the= new{[],,,,,:,( int ){ i ++} if ( int", "thefor thethe board.thetheifthein thethethe board.of theoneallthe board.theof theallthethethethethe first line of thethe firstof thethe first lineof the board. The first", "theisaabe\".\"isthe(thethetheto a non-emptyofatheisa single string ofof length\".\" if thetheof length $n$. Its$i$-th character isthe $j$-th column is free.is equal to \".\"of the $i$-th row", "Alice was:  public class:( ) :( ): ( () (;,)( ) )( )( )( ) )( ).]) ) ) )( )].( ) :; } } else( )) ) {)} } else {.", ": [Image](); if ($n$ )i $ - th$j$-th column. The\\leq n$ \u2014 thethe\\leq n$ $2$ isa single string of length$1 \\leqisthe< n= 1 ;n$ >$n$length $n$$i$-th character", "{/}  public( ) ;if () { if (( )) {; } }= [ ] ;) ) {in.] ; } }) {. split (. split (; }{[] ; } }. split ()( ) ) { for,) ; }", "Alice wasaa singleofofthethecan be tiled by Alice'sthebethetheall of thethethethethethemaof thethethe([Image] Alicetheall of the pieces to", "Alice wasifof thetheistothe.0 ] )[Image] ] )[Image] ] )[Image]] )( ) {)],,, 0 ) ) {. split (, 2 )(). join( \" \" ).. split. join ( \" \"", "Alice wasbythe==) if () )(\\leq i(n$ ) > 0 )= 0= 0)[Image])( \"Alice\",) )Alice wasof( \"Alice\",\"Alice\", \"Alice\", \"Alice\", \"Alice\", \"Alice\""], "prompt": "\nQUESTION:\nOne day Alice was cleaning up her basement when she noticed something very curious: an infinite set of wooden pieces! Each piece was made of five square tiles, with four tiles adjacent to the fifth center tile:  [Image]  By the pieces lay a large square wooden board. The board is divided into $n^2$ cells arranged into $n$ rows and $n$ columns. Some of the cells are already occupied by single tiles stuck to it. The remaining cells are free.\n\nAlice started wondering whether she could fill the board completely using the pieces she had found. Of course, each piece has to cover exactly five distinct cells of the board, no two pieces can overlap and every piece should fit in the board entirely, without some parts laying outside the board borders. The board however was too large for Alice to do the tiling by hand. Can you help determine if it's possible to fully tile the board?\n\n\n-----Input-----\n\nThe first line of the input contains a single integer $n$ ($3 \\leq n \\leq 50$) \u2014 the size of the board.\n\nThe following $n$ lines describe the board. The $i$-th line ($1 \\leq i \\leq n$) contains a single string of length $n$. Its $j$-th character ($1 \\leq j \\leq n$) is equal to \".\" if the cell in the $i$-th row and the $j$-th column is free; it is equal to \"#\" if it's occupied.\n\nYou can assume that the board contains at least one free cell.\n\n\n-----Output-----\n\nOutput YES if the board can be tiled by Alice's pieces, or NO otherwise. You can print each letter in any case (upper or lower).\n\n\n-----Examples-----\nInput\n3\n#.#\n...\n#.#\n\nOutput\nYES\n\nInput\n4\n##.#\n#...\n####\n##.#\n\nOutput\nNO\n\nInput\n5\n#.###\n....#\n#....\n###.#\n#####\n\nOutput\nYES\n\nInput\n5\n#.###\n....#\n#....\n....#\n#..##\n\nOutput\nNO\n\n\n\n-----Note-----\n\nThe following sketches show the example boards and their tilings if such tilings exist:  [Image]\nUse Standard Input format\nANSWER:\n"}}