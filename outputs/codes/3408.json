{"3408": {"code": ["the following $N$of $Q$ lines containsthe number oftheof $N$ lines containsthe number oftheof the$N$theof the$N$ lines containstheof the first set itin the firstof the first set itof thethe first set it covers.of the first setof the firstof the firstof the firstthe", "$N$ lines containsthe first setof thethetheinputthethe first setthethe1thethe number ofthe first setthe firstthe firstistheof the firstoneof the first.[ 0 ]for ( int i. length ; i) {", "isofthe firstthe first set it covers.of the followingofaanother set ofa pattern thatmatches thethatwords that thetheof the first setof thethe$N$ linesof the first$Q$ linesof the firstof the first setthe firstthe first(n)of the first set itoutput how many words", "- 1 11 1 1 1 1A patternaa$N$$N$n =k = 0 ; k] ; if ()); else if (([(] ; }() { return( ) ; })( ) ;(]] ; } else if[ k ]", "of thetheall$N$the firstmatches thematches thethe$N$ lines, thetheof thethe secondthe first setthe first set it covers.the first set itthe firstof$N$the$N$ lines.$Q$ lines, thethe$k$-th line containing the numberof thewords that thethe", "and() ;) {( ) ; for= 0 ; i <. length ; i ++)[ i ]) { if ([] ;=) ; } else if) {[ i ]) { if (=[0] ; if ([ i ].) { if[ i] ) ;] )", "the firstofthethein a$n$ofthe firstthe firstof the first setin thethe firstthe first setthe first set itoutput how manyis the$k$-ththat the firstnumber ofofofof the firstline containsthe first setofthe first set it covers.", "an arbitraryofthe followingthethe first set it covers.(n in(in) { if (.( n )=0n ) ) {in the( n[ n ] ;} }( n ) ;).; } } elsen ] ; }( n ) {=] ; } }", "$N$ lines, thecontainstheisofof theof the firstwords.oftheof thethe first setthethe firstofthethethe first setthe first setthe// $k$-ththe first setthe firstof thein the firstof the first set, the", "output how many wordstheof the firstinput containswords thatthethe firstthe first set(=(()1 )if () ) {(( ) ))( ) ;( )) {: 0,) ; }.0,"], "prompt": "\nQUESTION:\nLittle Matej is solving an OOP (Object-oriented programming) laboratory exercise and he\u2019s having trouble with solving one subtask.\n\nHe is given a set that contains $N$ words. He is also given $Q$ queries where each query is one pattern. A pattern consists of a single character \u201c*\u201d and lowercase letters of the English alphabet. For example, \u201c*\u201d, \u201ckul*to\u201d, \u201cana*\u201d.\n\nA pattern is said to cover a word if such an array of letters (which can be empty) exists that, when replacing the character \u201c*\u201d, the pattern and the word become completely identical. It is necessary to output how many words each pattern covers.\n\n-----Input-----\nThe first line of input contains two integers $N$ and $Q$ ($1 \\leq N, Q \\leq 100000$). Each of the following $N$ lines contains a word that consists of lowercase letters of the English alphabet. Each of the following $Q$ lines contains a pattern for which you need to output how many words from the first set it covers. The total number of characters will be less than $4000000$.\n\n-----Output-----\nOutput $Q$ lines, the $k$-th line containing the number of words that the $k$-th pattern covers.\n\n-----Examples-----\nSample Input:\n3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\nSample Output:\n2\n1\n1\nUse Standard Input format\nANSWER:\n"}}