{"4770": {"code": [".theof chickenchickena singleofChaz.()[ 0 ].();+=;<=) {()) {=. split (0 ]. length( ) ;", "of chicken left over!isof chickenof chicken left over!Chazisof chickenM$ pieces ofof chicken left over!Chazmore pieces of chicken1:Chazisof chicken left over!Chazof chicken leftin thebeingthetheofofof", "orwill havetheofandofofoftheChaz hasofchickenachickenof chicken left over!output format2:\nDr. Chaz will have1:\n2 31:\nDr.Chaz1:\nDr.Chazwill have 1of chicken left over!{ Random. Int (", "ofthe.\" +\" + \"ofofof chicken left over!ofof chickenchickenof chickenof chicken left over!Chazmore pieces ofof chicken left over!outputofof chicken left over!chickenmore piecesof chicken left over!of\" +of ch", "of chicken left over!Chaz will havemore piecesofof chicken left over!Chaz will havechickenleft over!of2:Output 3:\nDr.can haveof chicken left over!Chazcan haveof chicken left over!Chaz will haveof chicken left over!Chaz4:\nDr.", "andchicken left over!Chazthe.) ;.( \" \" )) ; }.) ; } },.) ; }( ) ;( )( ) ) ;( ) ; }({,.( ) ;) ;(.", "theofofofofof chicken left over!M$of chicken left over!bein theof theofandof chicken left over!theoftheof theof theofChazno leftovers.of chickenof chicken left over!1:\nDr.Chaz will have", "of chicken left over!ofin theofofofof chicken left over!of chicken left over!aofof chicken left(theof chicken left over!of chicken left over!Chaz1:\nDr. Chaz will have3:\nDr.1:\nDr. Chazhaveof chick", "of chicken left over!M$chicken left over!in theof theof theof theof theif Dr.morechicken and needsof chickenisof chicken.ofof chicken leftin thetheof theof theis enough pieces ofof chicken left over!Chaz will haveof", "of chicken left over!inofof chicken left over!will havetheof chicken left over!chickenChaz will haveofchicken left over!Input format\nDENOTYPE:.ofof chicken left over!chicken1:(of chickenChazChazin the("], "prompt": "\nQUESTION:\nDr. Chaz is hosting a programming contest wrap up dinner. Dr. Chaz has severe OCD and is very strict on rules during dinner, specifically, he needs to be sure that everyone take exactly $1$ piece of chicken at his buffet, even if that will result in an enormous amount of leftovers. This is why every year before the dinner, Dr. Chaz would give a powerful speech: \u201cEveryone, one chicken per person!\u201d\n\nHowever, Dr. Chaz does not always have an idea how many pieces of chicken he needs, he believes if there are $N$ people at the buffet and everyone takes exactly $1$ piece of chicken, providing $M$ pieces of chicken will be perfect, i.e., is enough and will have no leftovers. Help Dr. Chaz find out whether his decision is good or not!\n\n-----Input-----\nThe first line contain integers $0\\leq N\\leq 1000$, $0\\leq M\\leq 1000$, $N\\neq M$ , the number of people at the buffet and the number of pieces of chicken Dr. Chaz is providing.\n\n-----Output-----\nOutput a single line of the form \u201cDr. Chaz will have $P$ piece[s] of chicken left over!\u201d, if Dr. Chaz has enough chicken and $P$ pieces of chicken will be left over, or \u201cDr. Chaz needs $Q$ more piece[s] of chicken!\u201d if Dr. Chaz does not have enough pieces of chicken and needs $Q$ more.\n\n-----Examples-----\nSample Input 1:\n20 100\nSample Output 1:\nDr. Chaz will have 80 pieces of chicken left over!\n\nSample Input 2:\n2 3\nSample Output 2:\nDr. Chaz will have 1 piece of chicken left over!\nUse Standard Input format\nANSWER:\n"}}