{"4662": {"code": ["maxdepth = 0theoutput format\nANSWER:= 0tree.getroot().getchildren() #1= 0 maxdepth=0maxdepth = maxdepth= maxdepth + 1=1print(maxdepth)\nUseformat\nANSWER:\nANSWER:maxdepth=+= 1( ) ){.()( ))+", "outputXML document{level} maxdepthleveltree ===\"\" '=( )( tree. getroot (1 ))maxdepth = 0= 0,= 1())if ()#) #n", "= 0\nmaxdepth =)0= 0+\"\"\nmaxdepth = 0\nmaxdepthprint(maxdepth)\nuseoutput format\nANSWER:format0:=;= 0= 0= 0,)0 : maxdepth) :) )#the treedepth(tree.getroot(), -1): maxdepth =(1 :", "atheline,1, thethethethein the XMLthe XML document.+ input() + \"\\n\"=. getroot ( )tree.getroot() ifxml = \"\"+\"=) #.. getroot ( ).)= 0= 1= 1 #getroot(", "=\"depth(tree.getroot(),(tree.getroot(), 0))=+ \"()( maxdepth),output, 1 ) )output\" +output = \"\"= 0 for= 0; i:= 0 ;if( )[ 1) :(] =)", "XML documentof the root nodeis axml == 0, maxdepth = maxdepth: maxdepth = maxdepthoutput (: maxdepthoutput ()output))( input ( )) )output () )\")(output ( )) ))1 ] ) ) )) )", "maxdepth)depth(tree.getroot(),1) #=output(tree)) print(maxdepth)\nUseXML document(maxdepth)\nmaxdepth =output(tree)0)print(maxdepth)\nuse0)\nmaxdepth = maxdepth0)\nmaxdepth = maxdepth(level)\nmaxdepth= 0 #n =in()", "format\nANSWER:\nANSWER = 0), \"maxdepth\" );0: maxdepth == 0\nMaxDepth=maxdepth)\nMaxDepth = maxdepth= maxdepth #)] = 0= 0\nMaxDepth =maxdepth= 00: maxdepth =.(.))() {( )] )", "<input>print(maxdepth)\nUseoutput format\nANSWER:int(input()) # you)( )\" + input()( )= 10:maxdepth=0)=) ) #(= 0; i < nn == 0in1: maxdepth=n - 10:maxdepth = n= nn + 1:", "output format.(=, maxdepth )print(maxdepth)\",1 )\"+ input() + \"\\n\"1= 0for i in range(n):xml\"(input()) +.:( )+ \"\\n\"\"\",,\" \"+\" + input()"], "prompt": "\nQUESTION:\n=====Problem Statement=====\nYou are given a valid XML document, and you have to print the maximum level of nesting in it. Take the depth of the root as 0.\n\n=====Input Format=====\nThe first line contains N, the number of lines in the XML document.\nThe next N lines follow containing the XML document.\n\n=====Output Format=====\nOutput a single line, the integer value of the maximum level of nesting in the XML document.\nimport xml.etree.ElementTree as etree\n\nmaxdepth = 0\ndef depth(elem, level):\n    global maxdepth\n    # your code goes here\n\nif __name__ == '__main__':\n    n = int(input())\n    xml = \"\"\n    for i in range(n):\n        xml =  xml + input() + \"\\n\"\n    tree = etree.ElementTree(etree.fromstring(xml))\n    depth(tree.getroot(), -1)\n    print(maxdepth)\nUse Standard Input format\nANSWER:\n"}}