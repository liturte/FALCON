{"2321": {"code": [".= >in.the>of thetheis:the number ofcharacters inisthethe string $s$the stringthe number ofand thethe<number ofcharacters that have been deletedall the characters in the$n$$t$ of thethe length of string $n$", "<$n - 1$ \u2013in:=a sequence of: > > > ><< $n-1$ \u2013$n-1$ \u2013 the lengthin string $s$.thestring isthethe)of $t$ \u2013 thethelength of string $s$.the$s$.", "a stringthe string will become<> > > ><<the stringcharacter intothe stringacharacter in string<character in stringcharacter in stringin stringtothetesta string inthe)( (< <.) +\"<\" ) +", "theis$s$.thethe= $s$1 $n$ \u2013 theofit isisthatif there is a\\le\\le$n$\\le 100$andthethe string $s$.the string isofthe stringthethe$s$. Thethe stringthe characters in the string.", "<.the string is.ofcharacters inisfor thecharactersthethe number ofthethe()..,) ; if0, n ) ;thelength ofcharacterof a characterand the charactersand nocharacter isin the string $s$of length $n$theof the", "(the stringaisof( 1- 1$;$t$$n$ \u2013 the lengththe$n$$t$ $n$ \u2013 thestring$n$ $n$the string $s$, consisting ofcharacters.and<characters are>the= $n$ +$n$ + $n$", "character$t$.the string is() ))) {.( $t$ )thenumber ofof$t$ contains onethe.of all$n$( $n$ )aoftheof $s$,( $n$\\le$t$ \u2013 thelength of string $s$.", "the\\ lethethe string=thecharacter in$n$ <<.the string isthethe= 2.0 *isthe number of characters tothethe number ofisin theof characters in thecharacters in thethe number ofcharacters in the string.the number of characters inthe string is good, becausethe string is good.", "the<.:> > > > >thethe string $s$theof)$s$ofathe number ofoftheone line of $t$thethe first line of $i$-th$n$ \u2013 the$n$isthethe string $s$and theof the first lineof $t$", "> > <the stringcharacter > > <$s$ \u2013 theof a test$s$ thattheanumber of$n$thecharacter.test cases..()if{.( ).) ; }) {.( ) ; }"], "prompt": "\nQUESTION:\nYou have a string $s$ of length $n$ consisting of only characters > and <. You may do some operations with this string, for each operation you have to choose some character that still remains in the string. If you choose a character >, the character that comes right after it is deleted (if the character you chose was the last one, nothing happens). If you choose a character <, the character that comes right before it is deleted (if the character you chose was the first one, nothing happens).\n\nFor example, if we choose character > in string > > < >, the string will become to > > >. And if we choose character < in string > <, the string will become to <.\n\nThe string is good if there is a sequence of operations such that after performing it only one character will remain in the string. For example, the strings >, > > are good. \n\nBefore applying the operations, you may remove any number of characters from the given string (possibly none, possibly up to $n - 1$, but not the whole string). You need to calculate the minimum number of characters to be deleted from string $s$ so that it becomes good.\n\n\n-----Input-----\n\nThe first line contains one integer $t$ ($1 \\le t \\le 100$) \u2013 the number of test cases. Each test case is represented by two lines.\n\nThe first line of $i$-th test case contains one integer $n$ ($1 \\le n \\le 100$) \u2013 the length of string $s$.\n\nThe second line of $i$-th test case contains string $s$, consisting of only characters > and <.\n\n\n-----Output-----\n\nFor each test case print one line.\n\nFor $i$-th test case print the minimum number of characters to be deleted from string $s$ so that it becomes good.\n\n\n-----Example-----\nInput\n3\n2\n<>\n3\n><<\n1\n>\n\nOutput\n1\n0\n0\n\n\n\n-----Note-----\n\nIn the first test case we can delete any character in string <>.\n\nIn the second test case we don't need to delete any characters. The string > < < is good, because we can perform the following sequence of operations: > < < $\\rightarrow$ < < $\\rightarrow$ <.\nUse Standard Input format\nANSWER:\n"}}