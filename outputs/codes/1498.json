{"1498": {"code": ["the(1n )\u00a0\u2014 thetheof serversthe number of serverstheof serverst_{i} \u2264 n,1,number of serversaa taskthethe number of servers'the i-th linetheofn,the number ofof theserverthe number of servers' idsthe number offor a server,", "a..( 1t_{i} \u2264 n,t_{i}).,...( 1)],),)..)( 1 ) ;( 2 ) ;{( n.if ( n < n", "theathetheand thet_{i}/of thethe time needed to performof thethetaskthe number oftask will bethethe number of serversthe task isthe task isthe number oftheofintask isto perform the task.inthe i-th task, the numberofof the servers' ids.the", "k_ia randomin ainthe serverand thethek_i..( 1() {.( 2).=..).).;).. add ( 1,; i < k_i. add ( 1,", "thethet_{i}of thetheallserver in the firstt_{i} \u22641thehigher the numbernumber of servers inaaa singletask, thei-ththethey will bethat thet_{i}server, the numberthe number of serversthe task isthe time needed to performthe task in", "taskin aof thethe,afortheserver.server. Atask can be performedthe server and theserver. Aserver. Aserverof thethe server, theserver and thethe server and theserver. Aserver. Aserverthe number of serverstheof servers. Aa one server: A1 1", "the taskone server.thethe i-th taskand nt_{i}, k_{i}, d_{i},t_{i}, k_{i},t_{i}, k_{i},t_{i}, k_{i}, d_{i},and n,,2t_{i}, k_{i}, t_{i}, d_{i},,,(1t_{i", ")2(1 \u2264)in the secondi-th line2 1 2 1332 2111k_i } [] [] = []] = [[] ;[ ]] )] ]1] [[ ] ; for (", "the number of serversinthe task isthe first tasktheinthe(1 \u2264 n \u22641happened by thethethetheandthe number of serverstheserver is athe i-ththet_{i}1,..., t_{i} +t_{i} +thethetheand the", "ofaof the servers with thethem will be busy overthe first.the number of serverstheofthe i-ththethethethem willbe busy over thethethem will be busy overk_{i}t_{i} \u2264 n,(1n \u2264 n, 1t_{i}and d_{i"], "prompt": "\nQUESTION:\nThere are n servers in a laboratory, each of them can perform tasks. Each server has a unique id\u00a0\u2014 integer from 1 to n.\n\nIt is known that during the day q tasks will come, the i-th of them is characterized with three integers: t_{i}\u00a0\u2014 the moment in seconds in which the task will come, k_{i}\u00a0\u2014 the number of servers needed to perform it, and d_{i}\u00a0\u2014 the time needed to perform this task in seconds. All t_{i} are distinct.\n\nTo perform the i-th task you need k_{i} servers which are unoccupied in the second t_{i}. After the servers begin to perform the task, each of them will be busy over the next d_{i} seconds. Thus, they will be busy in seconds t_{i}, t_{i} + 1, ..., t_{i} + d_{i} - 1. For performing the task, k_{i} servers with the smallest ids will be chosen from all the unoccupied servers. If in the second t_{i} there are not enough unoccupied servers, the task is ignored.\n\nWrite the program that determines which tasks will be performed and which will be ignored.\n\n\n-----Input-----\n\nThe first line contains two positive integers n and q (1 \u2264 n \u2264 100, 1 \u2264 q \u2264 10^5) \u2014 the number of servers and the number of tasks. \n\nNext q lines contains three integers each, the i-th line contains integers t_{i}, k_{i} and d_{i} (1 \u2264 t_{i} \u2264 10^6, 1 \u2264 k_{i} \u2264 n, 1 \u2264 d_{i} \u2264 1000)\u00a0\u2014 the moment in seconds in which the i-th task will come, the number of servers needed to perform it, and the time needed to perform this task in seconds. The tasks are given in a chronological order and they will come in distinct seconds. \n\n\n-----Output-----\n\nPrint q lines. If the i-th task will be performed by the servers, print in the i-th line the sum of servers' ids on which this task will be performed. Otherwise, print -1.\n\n\n-----Examples-----\nInput\n4 3\n1 3 2\n2 2 1\n3 4 3\n\nOutput\n6\n-1\n10\n\nInput\n3 2\n3 2 3\n5 1 2\n\nOutput\n3\n3\n\nInput\n8 6\n1 3 20\n4 2 1\n6 5 5\n10 1 1\n15 3 6\n21 8 8\n\nOutput\n6\n9\n30\n-1\n15\n36\n\n\n\n-----Note-----\n\nIn the first example in the second 1 the first task will come, it will be performed on the servers with ids 1, 2 and 3 (the sum of the ids equals 6) during two seconds. In the second 2 the second task will come, it will be ignored, because only the server 4 will be unoccupied at that second. In the second 3 the third task will come. By this time, servers with the ids 1, 2 and 3 will be unoccupied again, so the third task will be done on all the servers with the ids 1, 2, 3 and 4 (the sum of the ids is 10).\n\nIn the second example in the second 3 the first task will come, it will be performed on the servers with ids 1 and 2 (the sum of the ids is 3) during three seconds. In the second 5 the second task will come, it will be performed on the server 3, because the first two servers will be busy performing the first task.\nUse Standard Input format\nANSWER:\n"}}