{"3393": {"code": ["the(of the lastisthe)(2 ))( n,,;] [ 1 ];) ;) ; }) ; }) ; }( n,= 0 ; i <= 1( n,) ; } if (( n,{,", "the.()1 )) {. contains () ;. contains (1 ) ;(. contains (the,. contains (( ) ) ;( ) ;. contains (, 0 ) ;]in., 0( ) ;. contains (; } }", "of ain thesaying thethe(atakesTomthethe.( a)the number of coursestheis athe number ofof thetheof the lastaisoftheaaof the last year, andit is anumber ofthe number of( a", "andone. Theisthe lastbythenumbered by athetheaand the $d_ i$and theof thethe finalof the.). split (. length. split (if ((=. split (). join (=", "theanumbered forofatheandtheisaofin the secondis the first linethe first lineis a numbered numberedofofin the first lineaaof the firstof the lastof theof theand thethe first lineinof the lastof theof the", ". Thethe last()1 )in the last)Tomain thefor the lastof the last year,theof thethethetheistheof the last yearthethe last yearin thetheofthe last year is(takingthe last yearof the last year, and", ".Tom can be very=1 11 2in( $1a1 21 2 2the lastof a{if ( $n$( $n$ )11 )2 ] )(1)([ 0 ] )) ) ; if1 ]1 ) ) ;", "aall of the1 $2and the $d_isthe1)a numbertheitthe number ofthe$1$ and thenumber of$n$ and $k$be aifis ait hasbythe.in the last year,.( 1 ).", "the.( ) )(the= $i$) ;; }) ) {] [ 1]. split (=] [ 1 ]=[ 1 ]] [ 2 ]] [ 1 ]]]]. split ()] =[ 1 ] [[ 1 ]. split (] [ 1 ]", ";the...]. split ([. split ()1;. split ('']. split () [ 1 ]. split ( ') [ 0 ]. split ('') [ 1 ]split ( ') [2 ]]} }= ('.' ) [ 1 ]. split (''"], "prompt": "\nQUESTION:\nTom is an upcoming senior undergraduate student planning for his courses for the final year. The final year will have two semesters, in which there are $n$ courses offered numbered from $1$ to $n$. Course $i$ has a difficulty level $d_ i$. Two courses may be on a same topic but are at different levels: Level I or Level II. For example, there may be Calculus I and Calculus II offered. In this case, Level I and Level II are two different courses, and Level I is a prerequisite of Level II. Tom can only take Level II in the second semester if he takes Level I in the first semester. He does not necessarily need to take Level II after taking Level I.\n\nTo satisfy his graduation requirement, Tom needs to take $k$ courses in total in his last year. Tom would not want to spend too much time studying for courses, as the last year before graduation can be very busy. He therefore would like the sum of difficulties of all courses he takes to be as small as possible. Given that many courses Tom struggles to figure out a good course schedule. Can you help him?\n\n-----Input-----\nThe first line of the input has two integers $n$ and $k$ ($1 \\leq k \\leq n \\leq 2 \\cdot 10^5$). Each of the next $n$ lines has a string and a positive integer. The $i$th line describes the name of course $i$ and its difficulty $d_ i$. All difficulties are no larger than $10^6$. All course names contain at least one and no more than $20$ lowercase English letters. A course name can be optionally followed by a trailing digit \u20181\u2019 or \u20182\u2019 that denotes that it is a Level I or Level II course. It is guaranteed that if the input contains a Level I course, then it also contains its corresponding Level II course, and vice versa. It is also guaranteed that if a course name has two levels, then there does not exist another course with a same name but without levels.\n\n-----Output-----\nOutput the minimum sum of difficulties of the $k$ courses that Tom can take in the last year.\n\n-----Examples-----\nSample Input:\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\nSample Output:\n20\nUse Standard Input format\nANSWER:\n"}}