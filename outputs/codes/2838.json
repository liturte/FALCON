{"2838": {"code": ["the expressionin the output ofandaofforainputinputinput) {,}) {. split (, 0,}, 1 ),), 1 ). split[ 1 ] ). split () {,] ; } }", "ofof({, 0.5, 0.5, 0.5,, 0.5, 0.51.5 )0.51.5 )..,., 0.5, 0.5 )..( ), 0.5 )...) ;0.5 )) { if (", "thethatexpression,the number of=input) {= new..expression [ 0 ],) ; if () {( ) ; }expression [ 1 ]}= new[] ; ii ] ;.)() )( ) ; if", "expression.input isthethe expression.areof theexpression.theexpression, and aof the expression.the expression is( ) {( ) ; }for\",\", \"0\", \"1\",\"0\", \"0\",, \"0\", \"0\",\"0\", \"0\", \"0\"\"0\"", "isin theinput contains twoexpression with brackets.[ 1], 2,1, 2,], [ 2,12,, 2[ 2, 2,1, 2,, 2,1,2, 2, 2, 2,1, 0, 00, 0, 1, 0, 00, 01, 2,", "expressionexpression, andto havetheexpressions,the expression.theexpression. Theof thetwo expressions are notoftheexpression.theexpression isexpression. The expressionis not valid.thethe expression isinputis not valid.ofininput. Thisexpressionthe expression is not valid.", "ofof(expressions,more thanof brackets.a validexpression with1:and theexpression isthethe correct rangeof the expression.1:1:\n(2+2+2)\n2+2+2)1:\n(2+2+2)2:\n(2+2+2)Output 2:\n(2+2+2)", "() { return; }1 ) { return()) { return() ) )}( )) { return( )( ))( ) ; if( ).( ) ;() { return ({,( ) ; },( ) ) )) ; }", "aofexpression withnumber ofexpression.2:output 2:0)0: 0) 0: 00: 0)0: 0) 0: 0:0: 0)Input1: 0)0:0:0) 0:0 0:01:01:0 0:01:0) 0:00:0 0:0 0", "andmore than.() {(;(( )) ) {) ; } if.( ) ) {(( ) ) {) ; }) { return.) { return() { return (( ) ) ;( )( ),) ; } else"], "prompt": "\nQUESTION:\nMirko was bored at his chemistry class, so he played Bomb Switcher on his cell phone. Unfortunately, he was spotted and was given a ridiculously heavy assignment for homework. For a given valid math expression with brackets, he must find all different expressions that can be obtained by removing valid pairs of brackets from the original expression. Two expressions are different if there is a character at which they differ.\n\nFor example, given $(2+(2*2)+2)$, one can get $(2+2*2+2)$, $2+(2*2)+2$, and $2+2*2+2$. $(2+2*2)+2$ and $2+(2*2+2)$ can\u2019t be reached, since we would have to remove pairs of brackets that are not valid. More than one pairs of brackets can surround the same part of the expression.\n\n-----Input-----\nThe first and only line of input contains one valid mathematical expression composed of nonnegative integers, basic arithmetic operations denoted with characters \u2018+\u2019, \u2018*\u2019, \u2018-\u2019 and \u2018/\u2019, and brackets \u2018(\u2019 and \u2018)\u2019.\n\nGiven expression doesn\u2019t have more than 200 characters, and will have at least one, and no more than 10 pairs of brackets. Each expression is guaranteed to have at least one pair of brackets.\n\n-----Output-----\nOutput all different expressions that can be obtained by removing valid pairs of brackets, sorted lexicographically.\n\n-----Examples-----\nSample Input 1:\n(0/(0))\nSample Output 1:\n(0/0)\n0/(0)\n0/0\n\nSample Input 2:\n(2+(2*2)+2)\nSample Output 2:\n(2+2*2+2)\n2+(2*2)+2\n2+2*2+2\nUse Standard Input format\nANSWER:\n"}}