{"28": {"code": ["thethe\"file_1\" is to bethethefilefile_1 is to be\"file_2\" is to be\"file_1\" is to beafile_1 is to bethethe\"file_1\" is to bethe \"move\" commandthe \"move\"the \"move\" commandthethe \"move\" command\"move\" command.", "file_1 file_2 file_3files with tests. the test\"1\"\"2\" file_3 file_4 file_5 file_6file_1 file_6 file_7 file_8file_2 file_7 file_6files with\"0\"file_1 file_5file_5 file_7\"file_2\" file_5 file_6 file_", ".thethe file_2the files withfiles withthein afilethe).\"file_2\".file_1 file_2files with\"n\", \"e\", \"e\", \"n\",\"e + 1\", \"e\"n\").\"n\"\"n\"file_2\"\"1\" and \"0\"\"1", "the(nthe files with.in the\"name_i\" is theto befilefileisthe filename.the\"name_i\" is the\"type_i\" is thethe\"type_i\" is thefile.is thefile. Thefile isfile_1 isfile_2 is the\"file_2\" is to befile", "file\"file_1\"\"file_1\"file_1\" is to bethefile \"file_2\"is to be renamed\"1\" if thefile is\"e\" is to be renamed\"e +file is to befile_2\"file\"e +\"e + 2\" is to\"n\" is theof the\"file_1\"file", "\"move\" command.thethe files withfile_1\" is to bethat isthethefile_1 is to be\"move\" command. ( ) {test =test.test ) {Testtest. testtest.test. test ))test. test.test.test. test. testtest.test. test.test. test", "thetest.the number oftest, and the number oftest.tests arethe) { if (( \"add\" )test_1the number oftest_2.\"add\"the \"add\" command.the test.\"add\" command.the \"add\" command.is\"add\"\"add\" command.\"add\" command..)", "thethethe testistheand thetheinthe\"file_1\" isthe filethe firstis theand the\"file_2\"file hasarethe\"file_1\"the file \"file_2\"the filename is \"1\"\"file_1\" is to be\"file_1\" is to be\"file_2\" is", "the file with tests. thefiles withtests,the file\"1\", \"2\", \"3\",...,\"0\" if thecontainstest, and \"1\"is\"1\",\"2\", \"3\", \"4\", \"5\",\"2\", \"3\", \"4\", \"5\",\"1\",\"4\", \"4\", \"6\",\"1\",\"", "1 tofile_1 file_2.the fileis a\"file_1\"\"file_2\" file_2 isthe file\"file_1\" file_2.file_1 file_2.file_2.file_1 isfile_2.the file \"file_1\" file_2 isthe file \"file_2\".file_1 isof the"], "prompt": "\nQUESTION:\nThe All-Berland National Olympiad in Informatics has just ended! Now Vladimir wants to upload the contest from the Olympiad as a gym to a popular Codehorses website.\n\nUnfortunately, the archive with Olympiad's data is a mess. For example, the files with tests are named arbitrary without any logic.\n\nVladimir wants to rename the files with tests so that their names are distinct integers starting from 1 without any gaps, namely, \"1\", \"2\", ..., \"n', where n is the total number of tests.\n\nSome of the files contain tests from statements (examples), while others contain regular tests. It is possible that there are no examples, and it is possible that all tests are examples. Vladimir wants to rename the files so that the examples are the first several tests, all all the next files contain regular tests only.\n\nThe only operation Vladimir can perform is the \"move\" command. Vladimir wants to write a script file, each of the lines in which is \"move file_1 file_2\", that means that the file \"file_1\" is to be renamed to \"file_2\". If there is a file \"file_2\" at the moment of this line being run, then this file is to be rewritten. After the line \"move file_1 file_2\" the file \"file_1\" doesn't exist, but there is a file \"file_2\" with content equal to the content of \"file_1\" before the \"move\" command.\n\nHelp Vladimir to write the script file with the minimum possible number of lines so that after this script is run:  all examples are the first several tests having filenames \"1\", \"2\", ..., \"e\", where e is the total number of examples;  all other files contain regular tests with filenames \"e + 1\", \"e + 2\", ..., \"n\", where n is the total number of all tests. \n\n\n-----Input-----\n\nThe first line contains single integer n (1 \u2264 n \u2264 10^5) \u2014 the number of files with tests.\n\nn lines follow, each describing a file with test. Each line has a form of \"name_i type_i\", where \"name_i\" is the filename, and \"type_i\" equals \"1\", if the i-th file contains an example test, and \"0\" if it contains a regular test. Filenames of each file are strings of digits and small English letters with length from 1 to 6 characters. The filenames are guaranteed to be distinct.\n\n\n-----Output-----\n\nIn the first line print the minimum number of lines in Vladimir's script file.\n\nAfter that print the script file, each line should be \"move file_1 file_2\", where \"file_1\" is an existing at the moment of this line being run filename, and \"file_2\" \u2014 is a string of digits and small English letters with length from 1 to 6.\n\n\n-----Examples-----\nInput\n5\n01 0\n2 1\n2extra 0\n3 1\n99 0\n\nOutput\n4\nmove 3 1\nmove 01 5\nmove 2extra 4\nmove 99 3\n\nInput\n2\n1 0\n2 1\n\nOutput\n3\nmove 1 3\nmove 2 1\nmove 3 2\nInput\n5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n\nOutput\n5\nmove 1 5\nmove 11 1\nmove 1111 2\nmove 111 4\nmove 11111 3\nUse Standard Input format\nANSWER:\n"}}