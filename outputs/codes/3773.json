{"3773": {"code": ["= 1last() =int [( int i )if (== 1 )= 1 ; if (i> 0 ) {{if () {0 ; },=1 ; } if (( int i )) { if (( int ){ ifint ).) {.1 ) { if (", "the first pile in thea- 1 \\leq\\leq K_i \\leqint0 )[ 0 ] )[ 1 ] ) ;1 ] )() ; } else {( ) ;0 ] ) ;int ) ) ;=( ) ; }0 ]] ; } })] ) ; }= Aoki[ 1 ]", "ifis= 1 ;= 0 ;=if Aoki takeslast stonesecond pile atat a time, andsecond1if1 ;if( A_i / K_i; } } else) {] = 1 ;0 ; } else if., 01} else if (( A_i; } else) )", "of= 0..a) {.( ) ; }. K_N ) ;;;; }) {] = ( int(].)} }: Aoki.(, 2 )( ) ) ;) ; } }if ( Aoki.( ) ; }) )( ) ; } }", "Takahashi takesonly one stone can(10- Iffirstlast stonecan be removed at ais the firstisone stone fromsecond pile at most floor(3/3)=1canto) > 1stonewill win, printTakahashi takes twotwo stones from the second) >)if A", "isin thefirst pile..1 )Floor(x)=0.(x)=0, and from the-in the followingthe second pile, from thetobe removed at athetheto befrom a.)] ))) ) ) {} }Takahashi takes twosecond pile at most floor", ".of0.) ) {.) ) { printif (()== 0 ) {; } } else {=,) ;; }; }}0 ) )((1 ) ) ; }= 0 ;; } } }) ; }.", "1the first pilewill bethe first(stones canbe removeda time, and froma time, and from thetothe first.0 ).0 ).].) )(=.1 ])[ 0 ]..[ 1 ].", "Takahashi and Aoki arein thetheof) ) {}( )) ; }0 )0 ) ) {,, 1, 00, 0, 0010;2 )=1, 0 )1,, 000, 1,01, 1, 0", "thethe second pilethe second pile.111 11 1 1 11 1 2212 2 2 1 11 1 1 1 11 1 1 122 2 2 2 22 22 3.1 ].);.1 )1 ].....;) ;"], "prompt": "\nQUESTION:\nTakahashi and Aoki are playing a stone-taking game. Initially, there are N piles of stones, and the i-th pile contains A_i stones and has an associated integer K_i.\nStarting from Takahashi, Takahashi and Aoki take alternate turns to perform the following operation:\n - Choose a pile. If the i-th pile is selected and there are X stones left in the pile, remove some number of stones between 1 and floor(X/K_i) (inclusive) from the pile.\nThe player who first becomes unable to perform the operation loses the game. Assuming that both players play optimally, determine the winner of the game.\nHere, floor(x) represents the largest integer not greater than x.\n\n-----Constraints-----\n - 1 \\leq N \\leq 200\n - 1 \\leq A_i,K_i \\leq 10^9\n - All input values are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA_1 K_1\n:\nA_N K_N\n\n-----Output-----\nIf Takahashi will win, print Takahashi; if Aoki will win, print Aoki.\n\n-----Sample Input-----\n2\n5 2\n3 3\n\n-----Sample Output-----\nAoki\n\nInitially, from the first pile at most floor(5/2)=2 stones can be removed at a time, and from the second pile at most floor(3/3)=1 stone can be removed at a time.\n - If Takahashi first takes two stones from the first pile, from the first pile at most floor(3/2)=1 stone can now be removed at a time, and from the second pile at most floor(3/3)=1 stone can be removed at a time.\n - Then, if Aoki takes one stone from the second pile, from the first pile at most floor(3/2)=1 stone can be removed at a time, and from the second pile no more stones can be removed (since floor(2/3)=0).\n - Then, if Takahashi takes one stone from the first pile, from the first pile at most floor(2/2)=1 stone can now be removed at a time, and from the second pile no more stones can be removed.\n - Then, if Aoki takes one stone from the first pile, from the first pile at most floor(1/2)=0 stones can now be removed at a time, and from the second pile no more stones can be removed.\nNo more operation can be performed, thus Aoki wins. If Takahashi plays differently, Aoki can also win by play accordingly.\nUse Standard Input format\nANSWER:\n"}}