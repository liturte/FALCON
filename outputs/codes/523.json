{"523": {"code": ["the=] )( )) ;[ \"m\" ] [].] ) ; }] )]] ) ; }\"battab\",: \"battab\"] []] [ \"m\" ].]() ; }].[ \"battab\" ]] [] ) [ \"battab\" ]", "a validand \"n\" isto be athethein thethethe,\"n\"\"m\"\"k\" is\"n\" ),\"m\" ), \"n\",\"n\", \"m\",\"n\", \"m\",\"n\", \"m\",, \"m\", \"m\", \"n\"\"", "to=\"pop\", \"noon\"\"tv\", \"moon\"\"moon\", \"tv\", \"abab\"\"n\"\"n\" \"m\" \"n\"\"n\" \"m\" \"n\" \"n\"\"n\" \"n\" \"m\" \"m\"\"n\" \"m\" \"m\" \"n\"\"n\" \"n\"\"", "ana valid\"battab\" is also a validthethethe firstoutput and print the(in thethethe lastthe lastthe lastthethein thethe first linethe firstathe(inthe first linethe first line, printtheofthe last line, printeach line.", "=) {([ \"battab\"] ) )a palindrome.. split () ). join (( \") )( \" \" ) ;. split ()) )( ) ;. split ( \" \". split) ; if (1= \" \" ) )( ) ). split\" \" ) )( ) ;", "the\"n\", \"m\", \"n\"\"n\").'n' ) ).(( \"n\" )( \"m\" ).( \"n\" ).( \"m\" ).( \"m\" )..( \"n\" ).. split () )).( \"m\" ). split) ).)", "if( \"battab\" ) )thea palindromethethe.\"battab\" )\"battab\" ) )( \"battab\" ) )[ \"battab\"), \"battab\" ).(( \"battab\" ) )( \"battab\" ) )\"battab\"\"battab", "inthe first line.himthe firstit.theinput.one of theall of theifthe first line istheifthethenotthe first line,the firstline.the first line,the first line, printthe first line.ifthe first line, printthe first line.the second line, print the", "it isa valid\"kkkkkkkkkkkkkk\" is\"him\" is alsoin a\"him\"is a validif the palindrome isis a validthe\"him\" isa valid\"him\" isin a valid\"him\"theofthe\"him\" is a\"him\"", "thethethe stringtheone of thean empty line.a validis thethe firstthe first line, print thethe\"battab\" is also a validis thestring.thestring is a validthe firststring,thea validof thea valid(HINT: \"HINT: \"string, thetheof the number of"], "prompt": "\nQUESTION:\nReturning back to problem solving, Gildong is now studying about palindromes. He learned that a palindrome is a string that is the same as its reverse. For example, strings \"pop\", \"noon\", \"x\", and \"kkkkkk\" are palindromes, while strings \"moon\", \"tv\", and \"abab\" are not. An empty string is also a palindrome.\n\nGildong loves this concept so much, so he wants to play with it. He has $n$ distinct strings of equal length $m$. He wants to discard some of the strings (possibly none or all) and reorder the remaining strings so that the concatenation becomes a palindrome. He also wants the palindrome to be as long as possible. Please help him find one.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($1 \\le n \\le 100$, $1 \\le m \\le 50$) \u2014 the number of strings and the length of each string.\n\nNext $n$ lines contain a string of length $m$ each, consisting of lowercase Latin letters only. All strings are distinct.\n\n\n-----Output-----\n\nIn the first line, print the length of the longest palindrome string you made.\n\nIn the second line, print that palindrome. If there are multiple answers, print any one of them. If the palindrome is empty, print an empty line or don't print this line at all.\n\n\n-----Examples-----\nInput\n3 3\ntab\none\nbat\n\nOutput\n6\ntabbat\n\nInput\n4 2\noo\nox\nxo\nxx\n\nOutput\n6\noxxxxo\n\nInput\n3 5\nhello\ncodef\norces\n\nOutput\n0\n\n\nInput\n9 4\nabab\nbaba\nabcd\nbcde\ncdef\ndefg\nwxyz\nzyxw\nijji\n\nOutput\n20\nababwxyzijjizyxwbaba\n\n\n\n-----Note-----\n\nIn the first example, \"battab\" is also a valid answer.\n\nIn the second example, there can be 4 different valid answers including the sample output. We are not going to provide any hints for what the others are.\n\nIn the third example, the empty string is the only valid palindrome string.\nUse Standard Input format\nANSWER:\n"}}