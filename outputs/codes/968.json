{"968": {"code": ["nondeterministicas a handle.as athethe given permutationthethethe nondeterministicfortheisthethe number ofthe given permutation p_{i}.. nondeterministic = true;.. nondeterministic( nondeterministic ) ; }. nondeterministic) ;] =. nondeterministic ) {", "can be usedthe)theof theh_1,h_2,..., p_{n} (1s_{i}aand aas a handle.the handlethethe(1 \u2264 n)\"YES\",\"NO\", \"YES\", \"YES\",a \"YES\"\"YES\", \"NO\", \"NO\", \"YES\",\"NO\",", "11 21 2 311 23 9 10a new task ofthenumber of people. Athe number ofanthea new task.isthethewethethen ofa(1n ofh_1, h_2,...,theisn't possible, output \"NO\", otherwise", ".( 1 \u2264 n)the,,(1 \u2264 n).[ ], 2 ) ){ return.[ ][ ] )] ) ; }. append(((} )] ) ; }) { return; }(] ) ; if. append ( \" \"; } else {", "the same..0... nofall. nofall.. nofall. nofall.( \"H\".( \"H\" ), \"H\"\"H\" ), \"H\"\"H\" )\"H\" ), \"H\" )( \"H\" ),, \"H\", \"H\" ), \"H\"\"", "h_1, h_2,...,h_n) : h_{p_{i}} <of the(1 \u2264p_{i} \u2264[] =(1 \u22642 3( 1 \u2264 p_{i}=2 34 5 6 75 8 9 107 8 9 101 21 2 2", "thethethethean.. H1(1 12 3 3 4 56 7 8 9 10h_1,h_2,..., h_2,...,\"YES\", \"NO\", \"YES\", \"NO\",\"YES\", \"YES\", \"YES\", \"NO\",\"YES\", \"NO\", \"YES\",\"YES\", \"YES\", \"YES\", \"", "( n) :[ i ] === [ ] ;]1 ].( ) ==; }( ) == 1 )) ).=) { return) { return;if (()\" \" )))[ 0 ]( ) == 1 )\"N\" ).. split ( '", "the.the nondeterministic.theis athe1the nondeterministicthe nondeterministicand thethe h_{i} \u2264 p_{i}.).) ;; i < n) { h_{i} =h_{i}; i.( n ) ;) {.) {.", "(1(1of thein aa singlenamethe.(1 \u2264 n \u2264\"YES\"h_1, h_2,...,) {\"YES\", \"NO\", \"YES\",, \"NO\"\"YES\", \"NO\"\"YES\", \"YES\", \"YES\", \"NO\"\"NO"], "prompt": "\nQUESTION:\nA way to make a new task is to make it nondeterministic or probabilistic. For example, the hard task of Topcoder SRM 595, Constellation, is the probabilistic version of a convex hull.\n\nLet's try to make a new task. Firstly we will use the following task. There are n people, sort them by their name. It is just an ordinary sorting problem, but we can make it more interesting by adding nondeterministic element. There are n people, each person will use either his/her first name or last name as a handle. Can the lexicographical order of the handles be exactly equal to the given permutation p?\n\nMore formally, if we denote the handle of the i-th person as h_{i}, then the following condition must hold: $\\forall i, j(i < j) : h_{p_{i}} < h_{p_{j}}$.\n\n\n-----Input-----\n\nThe first line contains an integer n (1 \u2264 n \u2264 10^5) \u2014 the number of people.\n\nThe next n lines each contains two strings. The i-th line contains strings f_{i} and s_{i} (1 \u2264 |f_{i}|, |s_{i}| \u2264 50) \u2014 the first name and last name of the i-th person. Each string consists only of lowercase English letters. All of the given 2n strings will be distinct.\n\nThe next line contains n distinct integers: p_1, p_2, ..., p_{n} (1 \u2264 p_{i} \u2264 n).\n\n\n-----Output-----\n\nIf it is possible, output \"YES\", otherwise output \"NO\".\n\n\n-----Examples-----\nInput\n3\ngennady korotkevich\npetr mitrichev\ngaoyuan chen\n1 2 3\n\nOutput\nNO\n\nInput\n3\ngennady korotkevich\npetr mitrichev\ngaoyuan chen\n3 1 2\n\nOutput\nYES\n\nInput\n2\ngalileo galilei\nnicolaus copernicus\n2 1\n\nOutput\nYES\n\nInput\n10\nrean schwarzer\nfei claussell\nalisa reinford\neliot craig\nlaura arseid\njusis albarea\nmachias regnitz\nsara valestin\nemma millstein\ngaius worzel\n1 2 3 4 5 6 7 8 9 10\n\nOutput\nNO\n\nInput\n10\nrean schwarzer\nfei claussell\nalisa reinford\neliot craig\nlaura arseid\njusis albarea\nmachias regnitz\nsara valestin\nemma millstein\ngaius worzel\n2 4 9 6 5 7 1 3 8 10\n\nOutput\nYES\n\n\n\n-----Note-----\n\nIn example 1 and 2, we have 3 people: tourist, Petr and me (cgy4ever). You can see that whatever handle is chosen, I must be the first, then tourist and Petr must be the last.\n\nIn example 3, if Copernicus uses \"copernicus\" as his handle, everything will be alright.\nUse Standard Input format\nANSWER:\n"}}