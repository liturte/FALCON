{"3532": {"code": ["thetheexplosions aretheexplosionin thethethe.explosionexplosionthetheexplosion, for example,thetheexplosion, it isexplosion, thetheexplosion, thethe string, $1\\leq 1\\ 000\\explosion, the", "(.] ) {[ 0 ] ) ;((] ) ; } }() { if) ) {) ) {) ; }( ) ; }explosion inexplosionexplosion in( )explosion in the) {explosion.( )( )explosion in the", "(isexplosiontheexplosion in thetheexplosion inexplosion in the string.in the string)thatthein theexplosion inexplosion in theisexplosionstring.explosion in theexplosion in the string.explosion in theexplosion", "-{explosion}(explosion) )({explosion}explosions,theexplosion, (1)theexplosion isexplosions in theexplosion, (1) the(2) theexplosion, (1)the explosion string,thestring, ($", "theexplosionexplosion(explosion isin theexplosion isthethetheis,explosion is:explosion isexplosion isthe explosion is// theexplosion isexplosionexplosion is theexplosion isexplosion is", "theofexplosions, theexplosions areexplosionstheexplosion) {(explosion )explosion = explosion. splitexplosion. split () ;explosion. split (;) ;explosions] =explosionexplosions. split (,", "areisexplosions are.(Explosion, \"explosion\" )explosion ), \"explosion\"explosionexplosion. split (, \"explosion\" )explosion is) ) {explosion.=( ) ; ifexplosion. split=explo", "thetheexplosionto theis not(explosion string istheexplosion string isisasexplosionis used toin theexplosiontheexplosion string, $1 $6 $7explosion string. Theis thestringexplosion string isthe first line of inputexplos", "thepart inif aexplosionif any ofpart in theexplosion is()the string totheexplosionexplosion:)explosion:explosion:explosion in the{explosion:explosion:explosion:explosion:explos", "explosionsas well as(explosions- theexplosions are(explosions arethetheisthethe stringthebeingexploded as.explosions areas well asexplosions areexplosions are allexplosions areexplosions.the first line ofexplos"], "prompt": "\nQUESTION:\nMirko likes to play with strings of characters, but this time he has taken it too far \u2013 he put an \u201cexplosion\u201d in the string! An explosion is a series of characters which, if found in the vicinity of fire, explodes and starts a chain reaction.\n\nMirko, being as negligent as he usually is, forgot that his string contained an explosion and placed it near a candlelight. Thus the chain reaction began.\n\nThe chain reaction takes place in the following way:\n - if a string contains explosions, they all explode and a new string is formed by concatenating the pieces without the exploding parts\n - this concatenation could possibly create new explosions\n - the chain reaction repeats while there are explosions in the string\n\nNow Mirko wants to know whether anything will be left after this series of chain reactions. If nothing remains, output \u201cFRULA\u201d (without quotes). If, by any chance, something is left, output the final string remaining after all the reactions.\n\nPlease note: The explosion will not contain two equal characters.\n\n-----Input-----\nThe first line of input contains Mirko\u2019s string, ($1 \\leq |\\text {Mirko\u2019s string}| \\leq 1\\ 000\\ 000$).\n\nThe second line of input contains the explosion string, ($1 \\leq |\\text {explosion}| \\leq 36$).\n\nBoth Mirko\u2019s string and the explosion string consist of uppercase and lowercase letters of the English alphabet and digits 0, 1, \u2026, 9. The characters in the explosion string are all different.\n\n-----Output-----\nThe first and only line of output must contain the final string remaining after all the reactions as stated in the task.\n\nClarification of the second example: Firstly, the bombs on positions $1$ and $6$ explode. Then we are left with ****1****2ab (where * marks the character that exploded) and when that string is put together, we get 12ab. Sadly, that is an explosion all over again so it disappears.\n\n-----Examples-----\nSample Input:\nmirkovC4nizCC44\nC4\nSample Output:\nmirkovniz\nUse Standard Input format\nANSWER:\n"}}