{"3125": {"code": ["a. Ifinput, thethe string is aofa stringtheformatof the input format:2:input1:BXJYJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "thethe$S$a stringthatthethe input,theastringin' + $I$thethethein a string $S$be encoded as,a stringin a stringthethecharacter in.)0 ] ).[ ] ) [", "andall( ) {ifthethat=; } if (==)} else if ({ returnprint <any>.outputoutput[] ;( )) {== string.) { return( ) ; }(ifif (! string.", "string formatthe.$I$[ 0 ]] + \"[ 1 ] + \"] +2:Input format\nA+a-b-c-a-b-d-c-a-b-d-c-a-b-c-a-b-d-c-a-b-a-a-b-a-a-a-b-a-a-a-b", "andthe input.the output of the(theof thetheoutput, and the=)()[]. split (]. join () ;[] ) ;( ) ; }output inoutput:=( ) ;. split () ; }", "// - / // - / /thethethatthecan becan bein thetothecharacters that were sent in,a + andato becan beit can bethe stringasandtheto be encodedas, andthea-z, 0-9, + and -,", "theto getanyarecan<any>output, and print <any>.output is <any>output <any> <any><any>input isone ofof athe stringtheoutput isthe string, andaa-z,a-z,A-Z, A-Z, A-Z, A-Z,(thethe", "arein any order./ \\\\\\leq-\\leq.) ;+++ d-c+++ d-c1:+d-c+d-c+d-c+d-c+d-c+d-c+d-c+d-c+d-d-c+d-c+d-c+d-", "string isand aareandtheinput andathe output,the string isit isthe string isthe output isif theis not empty, print<any><any> <any>=$I$= $O$if (!( ) ) {=string+., \"", "thetototheoutputit.output\"theoutputof thethethea stringthe string instring,is theittheathatthe value of ait isthis. lengthif ( output. length"], "prompt": "\nQUESTION:\nApostrophes and double quotes tend to get badly encoded by systems, causing them to print back things like &#x27; or \\\". As a QA tester, Nova has seen lots of these issues. Today, she overheard that the Tweeper messaging app may have an issue with these symbols as well, and may encode them in strange ways. This was interesting, so she has written a Tweep to see if this is the case. Based on this Tweep, can you find out if Tweeper has an encoding issue, and if so, what the symbols are encoded into?\n\n-----Input-----\nThe input is two strings separated by a line. The first string $I$ represents the input characters that was sent in, and the second string $O$ is how Tweeper presents the string. To avoid encoding troubles, apostrophes and double quotes have been replaced with + and -, respectively.\n\n-----Output-----\nThe output should have $n$ lines of output, one for each possible encoding + and - may have. Each line must have two strings $a^{+}_ i$ and $a^{-}_ i$, representing what a + and a - can be encoded as, respectively.\n\nIf the string is empty, print instead <empty>, and if the string can be anything, print <any>. If there are multiple answers, you can output them in any order.\n\nIf there is no valid answer, write corrupted instead.\n\n-----Limits-----\n - $1 \\leq |I|, |O| \\leq 280$\n - $I$ and $O$ contain only the lowercase letters a-z, 0-9, + and -\n\n-----Examples-----\nSample Input 1:\na+b-c\na-b+d-c\nSample Output 1:\n- +d-\n\nSample Input 2:\nknuth-morris-pratt\nknuthmorrispratt\nSample Output 2:\n<any> <empty>\nUse Standard Input format\nANSWER:\n"}}