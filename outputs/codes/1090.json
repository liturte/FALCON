{"1090": {"code": ["would be happy.would be happy.will be happy.S of length() {) ; }()( r):( l,,+ 1 ) /, r) /== () /()(+ 1 ), () / 2 ) )", ". (= 2,, 4 )=andthe= 1,3,(2,4,...,and the= (2, 5)=in the.() == 2.(1,(3,) == 1 )213,..., r-th", "and the3happythefor eachk andfor( l, r )thethe (lr - 1the (l+i)-this happy.5)the (r+i)-th(r+i)-thof thewill be happytheis happy.the N) = (1, 2),the (l+i", ".= 1LS isthe(r) = (3,2) =1)= (1, 6), we havethe (l+i)-th(r+i)-thof the west.in the.thethe) = (1,(1, 5)to thethe; fori = 0, 1,=of the", "is happy if thetheis happyof thethe number of happyofof thein thethe number of happyof theand facingbeing happy.inofthe(2,toofof thein the=( 2, 5) == (2,L LLRL)= (1,2, 5", "one of theof athe westin the middle oftheof ain theofL or R).(1,S isin thetheaof a person.andof theinthe) ) {=( 2, 5) ; for= 0 ; i0 ; i <", "number of happyof aNand K is happythehappy,theis happy.abetween 0,nthe number of happythe number ofthe number of happythe number of happythe number of happyn - 1the number of happy(1,=),a+ 1,..., rto the", "andthe.theof theof the west.in the(L, R) =, 2,) = (1,4,(6,4) = (1, 6),is(5,(7, 8)for the,is(5,1,...,,) = ((4,1,..., l-th", "and the eastthein front of a persontheis happy.is happy.awe1, 3,4, 5,1,...,n,5,k = 0,0, 1,...,(r,0,1,...,5,...,5,...,and (l+1)-th(r-l) =", "of thethe east in the.( 2, 4)4-th3-th person from thethethethe(2,) = (0,5)we have LLLLL,of the= (4,) = (4,) = ( (6)inin thetheof the1,...,(l+1)-th,"], "prompt": "\nQUESTION:\nThere are N people standing in a queue from west to east.\nGiven is a string S of length N representing the directions of the people.\nThe i-th person from the west is facing west if the i-th character of S is L, and east if that character of S is R.\nA person is happy if the person in front of him/her is facing the same direction.\nIf no person is standing in front of a person, however, he/she is not happy.\nYou can perform the following operation any number of times between 0 and K (inclusive):\nOperation: Choose integers l and r such that 1 \\leq l \\leq r \\leq N, and rotate by 180 degrees the part of the queue: the l-th, (l+1)-th, ..., r-th persons. That is, for each i = 0, 1, ..., r-l, the (l + i)-th person from the west will stand the (r - i)-th from the west after the operation, facing east if he/she is facing west now, and vice versa.\nWhat is the maximum possible number of happy people you can have?\n\n-----Constraints-----\n - N is an integer satisfying 1 \\leq N \\leq 10^5.\n - K is an integer satisfying 1 \\leq K \\leq 10^5.\n - |S| = N\n - Each character of S is L or R.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\nS\n\n-----Output-----\nPrint the maximum possible number of happy people after at most K operations.\n\n-----Sample Input-----\n6 1\nLRLRRL\n\n-----Sample Output-----\n3\n\nIf we choose (l, r) = (2, 5), we have LLLRLL, where the 2-nd, 3-rd, and 6-th persons from the west are happy.\nUse Standard Input format\nANSWER:\n"}}