{"3409": {"code": ["the.(== \" \"[ 0 ]. split[ 1 ][ 0 ]]. split () [ 0 ][ 0 ](=.( ) ;[ 0 ].. split () []. split) ;[ 1 ].]. split (]. split ()=", "the2thethe lastawill havethe firstof the nextthe next $r$ lines will(representing acharacterthethe given configuration.theis thetheof the(representing a peg that isis down, andthethethe secondthethe first characteris the first characterof the last characterthethe first character.the", ") { if=,,2, '1' )) ; } else=the}. length ; i <=. length ; i ++.if ().) ;] ) )]( ) ; }] [ 0 ] [] [ 1 ]]] [ 2 ] [] ) ; }", "the(the{ $.(( ),) ; }=( ),. length),. length )=) { if (. length )).( ) ) ;output. append() ;. append ( () ) ; } elseoutput. append () ; } }( ) ; }", "theistheconfiguration andtheitsofof thebein thethea single integer,is a single integer,thein a singlecharacter,and $1$ if it isin the target configuration, andthea single character, $1$ ifis possible to reachthe target configuration from.( \"Hommering\" +\" \" + \"", "inthetheis down).is aofthetheofisto be hammered, andtheto bethein the target configuration,thethethetheisa single integer, $1$the target configuration,of theis up, and thethat is down, andthat is up, and theand the \u201cham", "totheathe)( ) {( ) ;=, 2 ) ;= 0 ; i << 3 ; i ++)[ 0 ]. length> 0 )) {] ; }if () {= 0 ; i. length ; i{ if (]) {. length )[ 0 ] ; }", "orinof thethein thethe(representing a) ; if (= 0 ; i <= 0 ; i) { if (. length[ i ]]( ) ) {; } else {( ) ; }=,,) ; }= 0 ; j <( ) ;++ ) { if (( j( j", "......(( )., \"A\"A\" )= \"A\" ).\"A\" ).\"A\" ).).\"A\" ).\"A\" ).\"A\" ).( \"A\" )., \"A\" ).\"A\" ).( \"A\" )\"A\"", "in a== 1= 222 ]\" \".2 ]. split (' '['' ]]1 ] )]. split ( ')}; if (!{ if (1) {. split (''[ ''']. join ('') [ 'x' ].)]"], "prompt": "\nQUESTION:\nRemember the busy boards for toddlers that have an array of holes into which to hammer pegs of various shapes? There\u2019s a new, electronic version. The board consists of a 2D grid of pegs. Each peg on the board can be either up or down, but not both simultaneously. You can pick any peg that is currently up, and \u201chammer\u201d it down. This will push that peg down, and also raise all of the other pegs in its row, and its column, regardless of their current state. You cannot \u201chammer\u201d a peg that is down (well, maybe you can, but it will have no effect). Those poor kids will never get all the pegs down at one time!\n\nThis example shows what happens when the top right peg is \u201chammered.\u201d ($\\circ =$ up, $\\bullet =$ down)\n\nA substitute teacher wants to challenge her class. She uses the \u201cTeacher Mode\u201d to set up the board in a particular configuration, and then asks her students to see if they can get the board to a second configuration by hammering some (perhaps none) of the pegs.\n\nThat may be too tough of a problem for toddlers, but maybe you can handle it.\n\n-----Input-----\nEach test case will begin with a line with two space-separated integers $r$ and $c$ ($1\\! \\le \\! r,c\\! \\le \\! 1000$), which are the dimensions of the board.\n\nEach of the next $r$ lines will have exactly $c$ characters, consisting only of capital \u2018O\u2019 (representing a peg that is up), capital \u2018X\u2019 (representing a peg that is down), and no spaces or other characters. This is the starting configuration.\n\nFollowing this, each of the next $r$ lines will have exactly $c$ characters, consisting only of capital \u2018O\u2019 (representing a peg that is up), capital \u2018X\u2019 (representing a peg that is down), and no spaces or other characters. This is the target configuration.\n\n-----Output-----\nOutput a single integer, $1$ if it is possible to reach the target configuration from the starting configuration, and $0$ if it is impossible.\n\n-----Examples-----\nSample Input:\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\nSample Output:\n1\nUse Standard Input format\nANSWER:\n"}}