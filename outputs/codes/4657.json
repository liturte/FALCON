{"4657": {"code": ["$q$ queriesof$n$.in the$k$ subsegments areof the $n$$k$ subsegments areof $n$(all subsegmentssubsegments, respectively.subsegments of $a$$n$of$a$the first element of $a$the second$n$thesubsegments of the $a$$k$", "array ofof $k$ subsegmentsin thea_i$$a_i$ is the$n$of $a$$n$(all$i$-th element of$k$the firstelement of $a$,$k$ subsegmentsof $n$subsegments of theof $k$ subsegments$k$subsegments of $a$", "$n$$k$ subsegments.andof $n$$k$the$n$of the$k$ subsegments.the subsegments are$n$subsegments.andof thethe$n$the$k$ subsegments aretheof thethesubsegments.is thethe $k$ subsegments.$k$ sub", "$a$ isone$k$ subsegments andof$a$$k$the $k$$k$ subsegments, respectively.theof $n$the $n$subsegmentsthe$n$$k$ subsegments, respectively.$a$ is$a$ isthe$k$ subsegments, respectively.thea_i$of", "$n$$a$$k$of $a$istheof $n$thetheof thethe $n$$i$-th element of $a$.the $i$-th element of $a$.of $k$thethe$n$the $n$ element ofsubsegments of the$k$$a$$", "$k$ subsegments$n$$k$ subsegments.thein the$n$thesubsegments$k$ subsegments$k$subsegments$n$subsegments areof thesubsegments ofthe $k$ subsegments.thesubsegments, respectively.of the$k$ subsegments ofsubsegments ofthe$k$ subsegments", "$2 \\ cdot 10^5$theisof the$k$ subsegments$n$$k$ subsegments$n$ elements$n$ elements$k$ subsegments, respectively.$q$ queries follow.$q$ queries follow.$q$ queries follow.$n$$a$$i$-th element of $a$a_i$", "$k$ subsegmentsin$a$ contains the$n$ is$n$ of $k$ subsegmentsof $a$$n$the$q$ queries follow.thethethe $k$ subsegments$n$thethe$k$ subsegments.the$n$\\dots, a_n$thethe $k$ subsegments", "$a$ isit$k$thesubsegments ofthe arrayof$k$ subsegments of thesubsegments of thesubsegmentsthesubsegmentssubsegments of the.$i$-th element of$i$-th$n$(the $n$ elements$k$ subsegments of$k$subsegments=subsegments of the", "$k$ subsegments,$a$ are$n$ elements$k$ subsegments, respectively.$k$$n$$n$ elements are$n$the$k$ subsegments, respectively.the$n$ elements areof $n$in the$k$ subsegments, respectively.subsegments arethe$n$$k$subsegments."], "prompt": "\nQUESTION:\nYou are given an array $a$ consisting of $n$ integers $a_1, a_2, \\dots, a_n$. You want to split it into exactly $k$ non-empty non-intersecting subsegments such that each subsegment has odd sum (i. e. for each subsegment, the sum of all elements that belong to this subsegment is odd). It is impossible to rearrange (shuffle) the elements of a given array. Each of the $n$ elements of the array $a$ must belong to exactly one of the $k$ subsegments.\n\nLet's see some examples of dividing the array of length $5$ into $3$ subsegments (not necessarily with odd sums): $[1, 2, 3, 4, 5]$ is the initial array, then all possible ways to divide it into $3$ non-empty non-intersecting subsegments are described below:  $[1], [2], [3, 4, 5]$;  $[1], [2, 3], [4, 5]$;  $[1], [2, 3, 4], [5]$;  $[1, 2], [3], [4, 5]$;  $[1, 2], [3, 4], [5]$;  $[1, 2, 3], [4], [5]$. \n\nOf course, it can be impossible to divide the initial array into exactly $k$ subsegments in such a way that each of them will have odd sum of elements. In this case print \"NO\". Otherwise, print \"YES\" and any possible division of the array. See the output format for the detailed explanation.\n\nYou have to answer $q$ independent queries.\n\n\n-----Input-----\n\nThe first line contains one integer $q$ ($1 \\le q \\le 2 \\cdot 10^5$) \u2014 the number of queries. Then $q$ queries follow.\n\nThe first line of the query contains two integers $n$ and $k$ ($1 \\le k \\le n \\le 2 \\cdot 10^5$) \u2014 the number of elements in the array and the number of subsegments, respectively.\n\nThe second line of the query contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$), where $a_i$ is the $i$-th element of $a$.\n\nIt is guaranteed that the sum of $n$ over all queries does not exceed $2 \\cdot 10^5$ ($\\sum n \\le 2 \\cdot 10^5$).\n\n\n-----Output-----\n\nFor each query, print the answer to it. If it is impossible to divide the initial array into exactly $k$ subsegments in such a way that each of them will have odd sum of elements, print \"NO\" in the first line. Otherwise, print \"YES\" in the first line and any possible division of the array in the second line. The division can be represented as $k$ integers $r_1$, $r_2$, ..., $r_k$ such that $1 \\le r_1 < r_2 < \\dots < r_k = n$, where $r_j$ is the right border of the $j$-th segment (the index of the last element that belongs to the $j$-th segment), so the array is divided into subsegments $[1; r_1], [r_1 + 1; r_2], [r_2 + 1, r_3], \\dots, [r_{k - 1} + 1, n]$. Note that $r_k$ is always $n$ but you should print it anyway. \n\n\n-----Example-----\nInput\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\nOutput\nYES\n1 3 5\nNO\nNO\nUse Standard Input format\nANSWER:\n"}}