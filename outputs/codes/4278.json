{"4278": {"code": ["2s_1s_1 is an anagrams_2 is anofaof1..( 1 \\leq.N \\leq 10^5 )...( 1), 1 ),,().),=( 1 \\leq N <s_N ), 1), 11", "in the followingofa string of1oflengthas_1 = a.an anagram(1 \\leq\\leq N \\leqs_2s_Ns_N(1 \\leqs_i isn is aofs_i is anan anagram of s_j.s_i is an anagrams_", "of1..a\\leq N \\leq 10^5inthe answer is 2.s_i iss_j.s_i iss_Ns_i isis an anagram ofa string of length.length 10,is a string of lengthof a\\leq N \\leq\\leq= s_j.s", "s_1 a in a:s_1s_2 a in\\leq N \\leq 10^5of s_jN s_1 a ins_2 a in as_N a inNN \\leqs_i is an anagram ofs_N a in as_i is as_i is an anagram of s_j.", ":  def\" \"( a [ 0):[(= a [ 1] = a [ 1= a [][, 0 ] =, 1 ]=, 1, 1 ]0 ] =, 0]] =]) if (in a [ 0 ], 1 ] =0 ]. split (", "isinSif( 1 \\leq\\leq N=s_j.s_i is an\\leq N\\leq 10^5s_i is ans_j.s_j.A string of lengths_i is a=[ ].].] [].] [1] [ 1] [", "theofis aofs_1, s_2, \\ldots,s_2an anagram of s_j.s_1 is anofs_2 isis an anagram ofs_1 is anofs_N isis a string of lengtha string of lengthofof a string ins_2 isa string ofa string of", "a string of length(1s_i is an anagram ofs_3 = acornistnt.s_2s_j is ans_3is an anagram of s_j.(1 \\leq i <N) such that s_i isors_j.a string of length\\leq N\\leq 10^5\\leq 10^", "s_i is an anagram ofs_i is a string ofNtheas_N.s_i iss_i is an anagrams_i isis anan anagram of s_j.theasin theofisis anthethe(1 \\leq i <N) such that s_i is\\leq N", "in the following:( 1s_i isa string of lengths_2 is aa string of lengthlength 10.fortheofofnumber ofi, j such thats_j is an anagram ofs_i is an anagram) s_j.s_i is ans_iisortheisofof)"], "prompt": "\nQUESTION:\nWe will call a string obtained by arranging the characters contained in a string a in some order, an anagram of a.\nFor example, greenbin is an anagram of beginner. As seen here, when the same character occurs multiple times, that character must be used that number of times.\nGiven are N strings s_1, s_2, \\ldots, s_N. Each of these strings has a length of 10 and consists of lowercase English characters. Additionally, all of these strings are distinct. Find the number of pairs of integers i, j (1 \\leq i < j \\leq N) such that s_i is an anagram of s_j.\n\n-----Constraints-----\n - 2 \\leq N \\leq 10^5\n - s_i is a string of length 10.\n - Each character in s_i is a lowercase English letter.\n - s_1, s_2, \\ldots, s_N are all distinct.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\ns_1\ns_2\n:\ns_N\n\n-----Output-----\nPrint the number of pairs of integers i, j (1 \\leq i < j \\leq N) such that s_i is an anagram of s_j.\n\n-----Sample Input-----\n3\nacornistnt\npeanutbomb\nconstraint\n\n-----Sample Output-----\n1\n\ns_1 = acornistnt is an anagram of s_3 = constraint. There are no other pairs i, j such that s_i is an anagram of s_j, so the answer is 1.\nUse Standard Input format\nANSWER:\n"}}