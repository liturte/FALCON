{"2277": {"code": ["22 ] \u22644 ] and a= [1, 2, 3,21,1]= [2,1, 2, 3], inversions:2. \n\nThe3, 1],3, 1), (3, 2),3, 1). \n\nThe2.3.3, 1). \n\nThe3). \n\nThe3.", "inversion : (3,2\u00b710^5 ) \u2014 thequery a = [1, 2,1, 3]of a= [1,3] and a = [1,] \u2264n2\u00b710^5)the first query a= [1,3] a = [1,1, 3], inversions: (1,2", "3 ] inversion : (2,4 ] inversion(3, 2),1,2,...,a_1, a_2,...,a_2,..., a_{n} (2 \u2264m(2 \u2264\u2014 thea_1,3])of the(1 \u22642\u00b710^5)", "the first query2 ](1 \u2264 4))the) {) ;(2; } elsem =12 ] ;.] ; for (= 0 ; i <= 1 ; i) {( 1. indexOfm[ i ] ;([ i ] ;) {} else { if (", "(1 ) ) {inversion : (1, 1), (1,) {= [2, 3,(3,4 ] ) {[l_{i}, r_{i}] of(4, 1) \u2014 thethe last query a =2, 3],21). \n\nThe thirdquery a = [2,3] a =(2, 3,", "athena_2,..., a_{n} (1 \u2264(1 \u2264) \u2014 the number ofqueries totheinversion: (1,(1, 1, 3),a_1, a_2,...,) \u2014 thetheinversion:(1, 1), (3,2). \n\nThe", "a_2,..., a_{n} (1 \u2264thequery a =2, 3,1, 3, 1],the second query a == [2,4] and3, 1] and a= [2, 1, 3] andquery a = [3,2, 3, 2] anda2, 4]the first query a= [3", "and one query a[ 4,) \u2014 the[4, 1, 3]= [2, 1,3] and a =2, 3] and1,2,..., a_{n}(2,1, 3], inversions: (2, 1),3, 1). \n\nThe third.][1 ] =[[ ]]", "] a_13, 2 ]4 ]=3, 2, 4]2,...,] a_1, a_2,..., a_{n}] a_1,2,...,[1,a_2,...,\u2014 the elements ofinversion: (4,2).3). \n\nThe(3, 2))3", "i - th.= [ 1,2 ].4 ]4 ].2 ]...2 ]) {a = [(3, 2).(3, 1), (3,2 ].a_2 = [2 ].) ; }3 ].(3, 2).(4, 1), (4, 2),(4"], "prompt": "\nQUESTION:\nA permutation of size n is an array of size n such that each integer from 1 to n occurs exactly once in this array. An inversion in a permutation p is a pair of indices (i, j) such that i > j and a_{i} < a_{j}. For example, a permutation [4, 1, 3, 2] contains 4 inversions: (2, 1), (3, 1), (4, 1), (4, 3).\n\nYou are given a permutation a of size n and m queries to it. Each query is represented by two indices l and r denoting that you have to reverse the segment [l, r] of the permutation. For example, if a = [1, 2, 3, 4] and a query l = 2, r = 4 is applied, then the resulting permutation is [1, 4, 3, 2].\n\nAfter each query you have to determine whether the number of inversions is odd or even.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 1500) \u2014 the size of the permutation. \n\nThe second line contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 n) \u2014 the elements of the permutation. These integers are pairwise distinct.\n\nThe third line contains one integer m (1 \u2264 m \u2264 2\u00b710^5) \u2014 the number of queries to process.\n\nThen m lines follow, i-th line containing two integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) denoting that i-th query is to reverse a segment [l_{i}, r_{i}] of the permutation. All queries are performed one after another.\n\n\n-----Output-----\n\nPrint m lines. i-th of them must be equal to odd if the number of inversions in the permutation after i-th query is odd, and even otherwise.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n2\n1 2\n2 3\n\nOutput\nodd\neven\n\nInput\n4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n\nOutput\nodd\nodd\nodd\neven\n\n\n\n-----Note-----\n\nThe first example:\n\n  after the first query a = [2, 1, 3], inversion: (2, 1);  after the second query a = [2, 3, 1], inversions: (3, 1), (3, 2). \n\nThe second example:\n\n  a = [1, 2, 4, 3], inversion: (4, 3);  a = [3, 4, 2, 1], inversions: (3, 1), (4, 1), (3, 2), (4, 2), (4, 3);  a = [1, 2, 4, 3], inversion: (4, 3);  a = [1, 4, 2, 3], inversions: (3, 2), (4, 2).\nUse Standard Input format\nANSWER:\n"}}