{"3630": {"code": ["thethestringthe string forwardgetto get//$s_1$ into $s_2$inputin theinput isshifted from the$s_1$ into $s_2$.$s_2$the first$s_1$.)(.($s_1$ ). split (. split ().", "theword puzzleand.' '=] ; fori) {[ i ][ i ] ; }; } }; }].{[ i ] ; }] ; }([ i ]]] =}] [ i ] [] ; }] ;", "a single line with theis given in the$10000000$theof $10000000$.theshift= 1 + 12forthe second)shift0get theshiftto getto get theshift thehshiftto get)) { $= $ s_1$) ;=", "a string incharacters.thein thethe stringthetheto.1 ) ) {( )()....) )(( ) )( ) ) {( ) )) ; }=).( ) ; }.", "thethe firstof thetheis$10000000$theof thelength is at least$10000000$higherthe$10000000$is at mostthe firstshift thethe(2) shift thethe firstin theshift thethe firstof thethethethe first character of the", "to getin1 + 12+11+3=27$0+2=2 moves.0+3=3 moves.movestheshift thethree times to getto getandthemovein the followingstring.tomove isof thetheword puzzle. Thethemoves.hell. First shift theto gettothe", "to$s_1$ intoin thethemoves arethe firstin the(0) shiftfirstshift hgetshiftthe secondtothe firstshifttheshift h.shiftshift hshiftto get teamp.shifttheto get", ".1 + 11 + 3thetheahorriblethe(shift forward2 times, gettinggetto getshiftto getto get2 times togetin thetheinone line.shift theto getthree times to getthea second", "canshift the whole stringto getif theis1+12+11+3=27$ #shift3 times to getgetthe3 times to getmoveshiftshiftto getto getto gettothemoves inain themoves in theshift thetheto get the", "move isthemoves aremoves aremoves aretheto shiftword puzzle.theof the= newnew(.) ; if ({..; }]) ; } else..('s',('s','s' )'x', 'y', 'y'"], "prompt": "\nQUESTION:\n\u017dofka invented a new word puzzle. She gives you two strings $s_1$ and $s_2$ of the same length. You need to modify $s_1$ into $s_2$ as quickly as possible. The trick is that you are allowed to modify the strings only using the following types of moves: (1) shift forward where you choose a substring of one of the strings and shift each of its letters by 1 forward in the alphabet, or (2) shift backward where you shift each letter in a substring backward in the alphabet. The first move is not allowed if the substring contains the letter z while the second move is not allowed if the subtring contains a. What is the smallest number of moves you need to modify $s_1$ into $s_2$?\n\n-----Input-----\nEach word puzzle is described on a single line that contains the strings $s_1$ and $s_2$ separated by space. The strings contain only lower case letters. You may also assume that the length of each string is at most $10000000$.\n\n-----Output-----\nOutput one line with the smallest number of moves needed to modify $s_1$ into $s_2$.\n\n-----Note-----\nThe first sample input can be modified in the following way. First shift lo forward, getting helmp. Then shift h forward 12 times, getting telmp. Then shift l 11 times backward to get teamp and then shift p forward three times to get teams. Total number of moves is $1+12+11+3=27$.\n\nThe second sample input can be modified as follows. First shift the entire string forward, getting bbdddbbbb. Then shift ddd backward twice to get bbbbbbbbb. This requires 1+2=3 moves.\n\n-----Examples-----\nSample Input:\nhello teams\nSample Output:\n27\nUse Standard Input format\nANSWER:\n"}}