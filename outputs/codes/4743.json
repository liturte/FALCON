{"4743": {"code": ["nimionese  def. split (= word. split ( '. split ( '] ;. split ( '. split (''[ 1 ] ;) ) ;= word. split (('' )('' )split (('' )[ 2 ] ;+)]. split ( ') ;(output [ 2)", "aof words.in theanimiones. A wordbail outaword isis in aand acan be removed:):\"nimiones\" ] [. length :] [ 0 ]][: [ ],],[ 1 ]: [ ],[ 1 ]: [ ],: [ ],", "word, the output(a).) ).( ).).)( ).( )..( )( ).( ). split( ) [( ).( ) ). join( ) ).( ) ). join). join ())( )if () ). join", "tothewordword isa wordof the wordthe word andwordto the wordtto the wordthe wordit isby the first worda word, theword.it's a word.a word, theword.word is a wordword.word to the wordword.word isthe word. The wordword is a word,", "the wordinput.the word.word.of the wordoutput. Thisis a tie. A tiethe wordin theword. A tieword isin theword ends\u2018A\u2019aconsonant. A tiein the word. A tieof the wordthe word ends in theword ends inword ends inthe next word.the first word", "in theworda word,aword in the( \u2018A\u2019 or \u2018A\u2019)the first word isin the input, translatedwords.word isthe word. split () )outputoutput) ) {.. split ((). split] ] } ) [] )output,) ;", "words inof-theone inwordword. ifWordor. length > 1 )word(= 0 ; i <) {. split ((] ) ). split () [ 0]]= 1 ; i <() {+. split (", ":::::: 'A': 'D' },: 'B' }, 'C':'F', 'T''G''G' }, 'C''A', 'G', 'G''D', 'A', 'A''A', 'D', 'A', 'A", "word isandword ends inifnimiones are inif itorthebeing)the first word of a+the last wordthe) ) {]if ([]]. split (if ([ 0 ].((([ 0 ].", "in thewordawordthe input, translated to1:\nI loveInput1:CociccahOutput 2:Cociccah2:CO-dingOutput 3:CO-ding is the bestOutput 4:CO-ding is theOutput 5:CO-ding is theinputinputoutput 1:CO-ding is theInput 4:CO-ding is the"], "prompt": "\nQUESTION:\nNimions speak a funny form of language.\n\nWhichever word they are trying to say, from which ever language, it doesn\u2019t quite come out the same. There are several rules for converting words, from any language, to nimionese.\n\nFor any word:\n - All nimion words start with \u2018hard\u2019 consonants (b, c, d, g, k, n, p, t) so you must replace each first letter with the nearest one (choose the option nearest to \u2018A\u2019 if there is a tie).\n - \u201cEach\u201d becomes \u201cDach\u201d.\n - Any hard consonant in subsequent syllables after the first one is remarkably better if it is replaced with the same consonant as the one at the start of the word.\n - \u201cHip-po\u201d becomes \u201cGip-go\u201d.\n - No word ends in a hard consonant. You must add an \u2018ah\u2019, \u2018oh\u2019 or \u2018uh\u2019 at the end, whichever is nearest, rounding toward \u2018A\u2019 in the case of a tie, to the last hard consonant in the word.\n - \u201cDog\u201d becomes \u201cDogah\u201d\n - \u201cHip\u201d becomes \u201cGipoh\u201d.\n\n-----Input-----\nThe only line of input contains a sentence of between $1$ and $50$ words and up to $10^4$ symbols, including single whitespace characters (\u2018\u00a0\u2019) between words and the dashes (\u2018-\u2019) between each syllable.\n\nApart from dashes, the sentence will contain solely lower-and-upper-case Latin letters\u2014and only the first letters of words can be upper-case.\n\n-----Output-----\nWrite to standard output the same sentence from the input, translated to nimionese. Remove any dashes before printing.\n\nIt is guaranteed that the output will fit within $5 \\cdot 10^4$ characters.\n\n-----Examples-----\nSample Input 1:\nI love ba-na-na\nSample Output 1:\nGah kove bababa\n\nSample Input 2:\nCat-a-pil-lar\nSample Output 2:\nCatacillar\n\nSample Input 3:\nCo-ding is the best\nSample Output 3:\nCociccah gs the bestuh\nUse Standard Input format\nANSWER:\n"}}