{"3299": {"code": ["{0 1 2 30 1 2 30 1 2 3 00 1 21a1 1 2 3 00 0 100 100 1000 0 100 0 100 0 101:0 0Output 2:00 0 00 0 01:0 0 001:1 0 100 00 00", "the checkboard.theisthethenumberofthenumber ofthea valid Magic Checkerboard.one integer representing the2 3 0 10 5 608\n7 0102:47 8\n7 0 0 102:1:2:2:2:2:3:2:3:2:3:0:0:0:0", "aanumber ofisinput andis aforthe number ofisthenumber of rows andnumbers. The number ofcellsis notthetothe4 ]0 5 67 80 10Output 2: {1,2,3,4}3] {1,2}[] { 1, 2} } } } }", "aaof the$n$ and $m$atoaa1:0 5 68100 10Output 2:4: 0 5 680 100 1000 100 0 10input4:40 0 50 5 6\n0 0 7", "allthe same parity,$c$ and $c$of thethethenumber of rows ($n$theofthe=1 2 30 5 60 4 78 8\n7 00 10\nSample Output 2:47 8\n7 0 08\n7 0 0 10\nSample00 0 1000 0 101:0 1:", "the1:2:0 5 60 4 788\n7 0 0 102:2:2:2:1:1:2:2:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:", "input[- 2 ] =( c $] =( c2 ] =c] =] =2 ] =1 ] =; int= 1) ; int= 0 ; int1int )0)0; int i =) ) {) {. split] ) ;", "the0.inputnumber ofnumbersifnotthe number ofnumbersto be used toa valid Magic Checkerboard.(n, m, c,0, c, c,0, c, c,0, c, c, c2,2, c,4, c,0, c,1,0, c, c, c,aif", "to be= $c$411 1 211 2 32 3 00 5 688\n7 0888\n7 0 0 10088\n7 0 00 100 100 01:4:0 1 2 30 5 60 5 888:0 0 10 10", "$1000 0 0 0aor0$0(a1,2,2, 3,1, 2, 3, 3, 1,0,0, 1, 2,1,1, 2, 2,, 10, 1,1,2,1, 2,0,1,1, 2,1"], "prompt": "\nQUESTION:\nConsider an $n \\times m$ checkerboard. On each cell of the checkerboard, place a positive integer. The values in each column of the checkerboard must be in strictly increasing order from top to bottom, and the values in each row of the checkerboard must be in strictly increasing order from left to right.\n\n1\n\n2\n\n3\n\n4\n\n3\n\n4\n\n5\n\n6\n\n5\n\n6\n\n7\n\n8\n\n7\n\n8\n\n9\n\n10\n\nA Magic Checkerboard has an additional constraint. The cells that share only a corner must have numbers of different parity (Even vs Odd). Note that the following checkboard is invalid, because 2 and 4 share only a corner and have the same parity:\n\n1\n\n2\n\n4\n\n6\n\nThe first $4 \\times 4$ example is a valid Magic Checkboard. Given a partially filled magic checkboard, can you fill the remaining locations on the checkboard, so that the sum of all values is as small as possible?\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each input starts with a line with two space-separated integers $n$ and $m$ ($1 \\le n, m \\le 2000$), representing the number of rows ($n$) and the number of columns ($m$) of the checkerboard. Each of the next $n$ lines will contain $m$ space-separated integers $c$ ($0 \\le c \\le 2000$), representing the contents of the checkerboard. Zero is used for cells without numbers that you must fill in. You may use any positive integers to fill in the cells without numbers, so long as you form a valid Magic Checkerboard. You are not limited to numbers $\\le 2000$, and the numbers are not required to be unique.\n\n-----Output-----\nOutput a single integer representing the minimum sum possible by replacing the 0 cells with positive integers to form a valid Magic Checkerboard. Output $-1$ if it is not possible to replace the 0 cells to meet the constraints of a Magic Checkerboard.\n\n-----Examples-----\nSample Input 1:\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\nSample Output 1:\n88\n\nSample Input 2:\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\nSample Output 2:\n-1\nUse Standard Input format\nANSWER:\n"}}