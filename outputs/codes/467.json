{"467": {"code": ["a..if thereathere\u2019s noaat least once ins.theline of the inputwhich occurs at least onceone of theof thethe(the first line in thetheifthe first linethe first line in thetheline,if there\u2019s no solution, print. split (.", "theawithtwoand \"A\"a path thatthethethethe=). split ( \"{.( \"A\" )) ; }\"M\" ) ;=\"M\" ) ;= \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\"KXWIHIJK\", \"MAB\", \"MAB\",", "thein theisone of thetheof theis aistothethethethethebethethefortheof thethethe\"MAB\". \"KXWIHIJK\" isis a path. \"KXWIHIJK\". \"KXWIHIJK\" isis not a pathtakes a string", "a) { #(() { #of the( ) ; for () {(( ) ) {=] ; for (;i <i ++ )() { if( ) ; }. length ;[ i= 0 ; i <[ i ] ;]] ; }[ i ] =0 ] ; }", "the() ) {=. split (,, 2,]). join, 1 ) )=. split ( \" \"). join ( \") ) ;\" \" ) ;. join ( \" \". join ( \"). split () )0 ]() {( \" \" ). split) [ 0 ] )", "in( \"ABCDEFGHIJKLMNOPQRSTUVWXYZintheis adjacent toof theat least once intheandisof thea\"YXWIHIJK\" is not a paththeis\"MAB\" is not a pathandis not athethethe\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" (with", "aone of the\"ABCDEFGHIJKLMNOPQRSTUVWXYZof thein thetheitsthe\"B\"theaa\"A\" is adjacent tothe)( \"M\" is\"M\" is not\"MAB\" is not\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"MAB\" is not\"MAB\"", "aan.the({ if) ) {( ) ).( ) )()\"Impossible\" )( ) )( ) )=) ;( ) )if (] )( ) ;( ) ) {\"0\"(( ) ; } if; } }", "are not adjacent tothein athatthe grid. Ifthe grid isthe samebetheisthetheof thethetheis adjacent to thebethethe. split (. split ( ') [ 0 ]for eachthe\"A\" is adjacent to the. split ( 'M'", "athe=.\"N\" in\"Y\" in theisain the\"A\"\"M\" in\"Y\" in thethethethe\"A\" is.\"M\" is not ais not ain the//theof thetheathe input contains the"], "prompt": "\nQUESTION:\nLet\u2019s define a grid to be a set of tiles with 2 rows and 13 columns. Each tile has an English letter written in it. The letters don't have to be unique: there might be two or more tiles with the same letter written on them. Here is an example of a grid: ABCDEFGHIJKLM\n\nNOPQRSTUVWXYZ \n\nWe say that two tiles are adjacent if they share a side or a corner. In the example grid above, the tile with the letter 'A' is adjacent only to the tiles with letters 'B', 'N', and 'O'. A tile is not adjacent to itself.\n\nA sequence of tiles is called a path if each tile in the sequence is adjacent to the tile which follows it (except for the last tile in the sequence, which of course has no successor). In this example, \"ABC\" is a path, and so is \"KXWIHIJK\". \"MAB\" is not a path because 'M' is not adjacent to 'A'. A single tile can be used more than once by a path (though the tile cannot occupy two consecutive places in the path because no tile is adjacent to itself).\n\nYou\u2019re given a string s which consists of 27 upper-case English letters. Each English letter occurs at least once in s. Find a grid that contains a path whose tiles, viewed in the order that the path visits them, form the string s. If there\u2019s no solution, print \"Impossible\" (without the quotes).\n\n\n-----Input-----\n\nThe only line of the input contains the string s, consisting of 27 upper-case English letters. Each English letter occurs at least once in s.\n\n\n-----Output-----\n\nOutput two lines, each consisting of 13 upper-case English characters, representing the rows of the grid. If there are multiple solutions, print any of them. If there is no solution print \"Impossible\".\n\n\n-----Examples-----\nInput\nABCDEFGHIJKLMNOPQRSGTUVWXYZ\n\nOutput\nYXWVUTGHIJKLM\nZABCDEFSRQPON\n\nInput\nBUVTYZFQSNRIWOXXGJLKACPEMDH\n\nOutput\nImpossible\nUse Standard Input format\nANSWER:\n"}}