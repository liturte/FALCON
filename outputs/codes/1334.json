{"1334": {"code": ["string s.( )( n, kin.a )) )if ( n) {).)( a ); if( a().((.((. length{ if[ 0 ] == 'a'", "thea subset ofof aareaifaaofainthes is ina subseta subsetas follows: aaa, aab, aac,abab, abb,aba, abb,abd,aba, abb,.... Ina subset ofarab, abb,aba, aba, abb", "in a string sssa subset ofofis lexicographicallyas follows:s, abb,aba, abb,.... Among them,aba,abab, abab, abb,and abd is lexicographicallyisbeof s, aba, aba, abb,abab,abab, aba, abb,the", "number of<s and isis= {ab, aba, abd, afa,of s, aofa, ab, abb,abab, aba, abb,a, aba, abb,a, abb,....areinin theisthe length of s,is(1 \u2264n,n, k", "string softheisisthe length of sof t is a subseta set ofofof s is a subsetofofsa subset ofisof t isarein thein the set ofis(0\u2264 n, kof sof s,the length ofoflength of t is a", "theandnotis not= {a, b, c},a, abcdabcd, abec, abba, afa,areisa subset ofisofisa subsetofin theof s, s isthe length of t,.ta subset ofis a subsetof(s,t of length k, such", "the.= (s ) ).. length=s ).().([ 0 ]... length,. length ) )) ).. length( ) ; if. length,) ); }) {.) ; }) ).", "t inina subset oflength.if (nlength k.s in= t.= s.. length ;= s.= s. substring (].() ;. length =. length).if (. length ). length ==return new. length ) ) ;", "tin thethelength ofanda subset oft isof thein thea subset ofisthe=isa subset oftis a subset ofofin theas follows: aaa, aab, abb,aab,abab, abb,.... Among them,areof theisa subset of", "are the phone numbers?theoft =n = s. splitn ) ; i[ i ] ; j<i ] =. split () ; }. split ( '[i ] ) ; }in a string(1 \u2264 n, k \u2264n) { if (length( s ) ) {. split ((."], "prompt": "\nQUESTION:\nAnd where the are the phone numbers?\n\nYou are given a string s consisting of lowercase English letters and an integer k. Find the lexicographically smallest string t of length k, such that its set of letters is a subset of the set of letters of s and s is lexicographically smaller than t.\n\nIt's guaranteed that the answer exists.\n\nNote that the set of letters is a set, not a multiset. For example, the set of letters of abadaba is {a, b, d}.\n\nString p is lexicographically smaller than string q, if p is a prefix of q, is not equal to q or there exists i, such that p_{i} < q_{i} and for all j < i it is satisfied that p_{j} = q_{j}. For example, abc is lexicographically smaller than abcd , abd is lexicographically smaller than abec, afa is not lexicographically smaller than ab and a is not lexicographically smaller than a.\n\n\n-----Input-----\n\nThe first line of input contains two space separated integers n and k (1 \u2264 n, k \u2264 100 000)\u00a0\u2014 the length of s and the required length of t.\n\nThe second line of input contains the string s consisting of n lowercase English letters.\n\n\n-----Output-----\n\nOutput the string t conforming to the requirements above.\n\nIt's guaranteed that the answer exists.\n\n\n-----Examples-----\nInput\n3 3\nabc\n\nOutput\naca\n\nInput\n3 2\nabc\n\nOutput\nac\n\nInput\n3 3\nayy\n\nOutput\nyaa\n\nInput\n2 3\nba\n\nOutput\nbaa\n\n\n\n-----Note-----\n\nIn the first example the list of strings t of length 3, such that the set of letters of t is a subset of letters of s is as follows: aaa, aab, aac, aba, abb, abc, aca, acb, .... Among them, those are lexicographically greater than abc: aca, acb, .... Out of those the lexicographically smallest is aca.\nUse Standard Input format\nANSWER:\n"}}