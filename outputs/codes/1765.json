{"1765": {"code": ["a_1 \u2264number5a_1...number b_{1}42 2 2.- 1a_1,a_2,..., a_{n} \u2264 10^5a_{n} (1 \u2264 a_1 <number b_{1} \u2264of the numberb_{k} \u2264 10^", "numbers tothenumbernumber a_1,a_2,..., a_{n}=/a_1,..., a_{n}of) {numbernumberis, for anyinteger v, number b_1,numbernumber b_1,number b_2,...,number(1 \u2264 n\u2264 10^5 <a", "numbers tonumbera_1 < a_2 <...a_{n} \u2264 10^5 \u2264 10^910^5 \u2264 10^9n \u2264numbera_1 < a_2 <...andof thennumberthenumber ofnumber ofthe numberinthenumber of= a_1 < a_", "number ofnumberinthe numberthe number ofnumber of numbers tonumber ofnumber ofnumbernumber ofnumber ofnumber ofthe numbernumber ofnumber ofnumbernumber of numbers to writenumber ofnumber ofnumbers toin the second line printnumber of numbers tonumber ofnumber of numbers tonumber ofnumber of numbers to write", "numbera_1 > a_2...,b_{k} =a_1 > a_2 <a_{n} <a_{n} \u2014 thenumber inthe number b_1, b_2,...,number b_{n}isandin thenumber b_1, b_2,..., b_{n}to printnumberthe number", "( 1 \u2264number vnumber v and= a_1 + a_2 +a_2 + a_k< a_2 + a_knumbersa_1 + a_2 + a_ka_2 +> 0 ))a_1a_2 + a_ka_2 + a_k) a_1 = a_1 +a", "number.number ofandnumbers) {1 \u2264.>2 + 3 + 451 + 34 + 5554454.= 0 ; n= 1 ; n] )) ; if (0 ) {> 0 ) {() ) {= 2 ) ; }", "the2number12(1b_1, a_2,...,2(1numbernumber1> 1,the number)(1 \u2264 n \u2264 10^510^9 <... <0,<< a_{n}\u2264number\u2264 10^9 <... <1,n", "beauty of thenumber v....) ;(. length -number of numbersb_1,> 0> 0 )numbersof theinteger k. length -a_1a_2,...,= a_1 + a_2 += a_1 + a_2+ a_2) ;. length -+ a", "numbernumberof2 32 54 51 2 33 3 4 54 52 555558 3 42 3 4 55514 5552 3 4 53 5 53 5 5 55 5 5 5 5"], "prompt": "\nQUESTION:\nVasily the bear has got a sequence of positive integers a_1, a_2, ..., a_{n}. Vasily the Bear wants to write out several numbers on a piece of paper so that the beauty of the numbers he wrote out was maximum. \n\nThe beauty of the written out numbers b_1, b_2, ..., b_{k} is such maximum non-negative integer v, that number b_1 and b_2 and ... and b_{k} is divisible by number 2^{v} without a remainder. If such number v doesn't exist (that is, for any non-negative integer v, number b_1 and b_2 and ... and b_{k} is divisible by 2^{v} without a remainder), the beauty of the written out numbers equals -1. \n\nTell the bear which numbers he should write out so that the beauty of the written out numbers is maximum. If there are multiple ways to write out the numbers, you need to choose the one where the bear writes out as many numbers as possible.\n\nHere expression x and y means applying the bitwise AND operation to numbers x and y. In programming languages C++ and Java this operation is represented by \"&\", in Pascal \u2014 by \"and\".\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^5). The second line contains n space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_1 < a_2 < ... < a_{n} \u2264 10^9).\n\n\n-----Output-----\n\nIn the first line print a single integer k (k > 0), showing how many numbers to write out. In the second line print k integers b_1, b_2, ..., b_{k} \u2014 the numbers to write out. You are allowed to print numbers b_1, b_2, ..., b_{k} in any order, but all of them must be distinct. If there are multiple ways to write out the numbers, choose the one with the maximum number of numbers to write out. If there still are multiple ways, you are allowed to print any of them.\n\n\n-----Examples-----\nInput\n5\n1 2 3 4 5\n\nOutput\n2\n4 5\n\nInput\n3\n1 2 4\n\nOutput\n1\n4\nUse Standard Input format\nANSWER:\n"}}