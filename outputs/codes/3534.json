{"3534": {"code": ["thethemulti-keyforin thein themulti-keythe multi-keythe) {].theif (== 0 ) {() ;0 ]..; })the multi-keythe multi-key to;}:) :: - 1 }", "the multi-keythe multi-key that isthe-shehave notthein the multi-compositionthethetheif (==)= 0 ; i <{ if (<=()(, 1 )=0 ] ;= 0 ; i0 ; i <) {", "thethe$1_$1_thethemulti-keythe multi-keythe multi-keyfor) { if!= -(() ) {().).(.(.)) { int=. length ; if (", "themulti-keytothein thethemulti-keymulti-keybebe removed.int= 0; int=; int0 ; int=;=[ i ]) ; int=.(] ] ; int; int i =", "of the multi-keymulti-keyis nottothethe..= 0 ; i <>; i ++ )0 ;- 1:. indexOf () ; }) {]}. length >) ; }[ ](,] = 0 ;.", "the multi-key thatin the multi-composition.thethethekey isthetheandMirka hastheto press athethey arethethey arein thethethe(amulti-keythe multi-keythethe multi-keythe multi-key.$A$ multi-key, denote the multi-key that", "the multi-keywhich is thethebeen.,.) {( 'A' ).0 ).multi-key...[ 1 ] )( 'A' ).( 'A' ).( 'A' ).).} }.0 ] ).) ); } }.( 'A' )", "(onethethemulti-key played in thecomposedmulti-keyin themulti-composition.is)the multi-key thatthey aretheonewith the firstthe second line of outputthe first line of outputthe multi-keyinbethetheby the multi-key thatof the multi-key thatMirka can play", "the multi-keymulti-keythe multi-key..)0 )= 0 ;0 ; i <in the( the(in the[ i ]()= 0 ; i <;; i ++ ) {]. append)() { if (in the0 ) { if (", "int numbertheyin theMirka:: A$; A$}) ;( A$ ===}..= 0 ; A$= 0 ; A$; A$1 ; A$A$] =a_ i$1 ; A$A$A$,A$, A$, A$, A$"], "prompt": "\nQUESTION:\nYoung Mirka is an amateur musician. She plays the multi-piano. $A$ multi-piano consists of an infinite number of multi-keys, denoted with integers that can be interpreted as the pitch. $A$ multi-composition (a composition written for a multi-piano) can be represented with a finite array of integers, where integers denote the order of multi-keys to press in order to play the multi-composition.\n\nYoung Mirka has heard a multi-composition on the multi-radio and now she wants to play it. Unfortunately, she cannot hear exactly which key was pressed, but instead she can hear whether the pressed multi-key was higher, lower or equal to the previously played key (a higher key is denoted with a larger number). Therefore she has decided to play the composition in the following way:\n - before playing, she will choose one non-negative integer $K$\n - in the beginning, she will play the correct multi-key (her multi-teacher told her which multi-key that is)\n - when she hears that the multi-key played in the multi-composition is higher than the previous multi-key played in the multi-composition, she will play the multi-key denoted with the integer larger than the multi-key she played previously by $K$\n - analogously, when she hears that the multi-key played in the multi-composition is lower than the previous multi-key played in the multi-composition, she will play the multi-key denoted with the integer smaller than the multi-key she played previously by $K$\n - when she hears that the multi-key played in the multi-composition is equal to the previous multi-key played in the multi-composition, she will repeat the multi-key she played previously\n\nNotice that, when Mirka is playing, she does not compare the pitch of the keys she played to the pitch of the keys from the composition.\n\nHelp Mirka choose the integer $K$ in order to hit as many correct pitches as possible.\n\n-----Input-----\nThe first line of input contains the integer $N$ ($2 \\leq N \\leq 10^6$), the number of multi-keys in the multi- composition on the multi-radio.\n\nThe second line of input contains $N$ integers $a_ i$ ($-10^9 \\leq a_ i \\leq 10^9$), the multi-keys played in the multi-composition.\n\n-----Output-----\nThe first line of output must contain the maximum number of multi-keys that Mirka can play correctly. The second line of output must contain the non-negative number $K$ that Mirka must choose in order to hit as many correct pitches as possible. The number must be smaller than or equal to $2 \\cdot 10^9$. The required number does not have to be unique, but will surely exist within the given constraints.\n\n-----Examples-----\nSample Input:\n5\n1 2 0 3 1\nSample Output:\n3\n2\nUse Standard Input format\nANSWER:\n"}}