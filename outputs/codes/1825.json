{"1825": {"code": ["isthe number ofof strings t_{i},0of thethet_{i}thethe number of stringst_{i}, jt_{i}, j, k_{i}, k_{i},in increasing orderof.) { if (( n ).) {.( ) ;length) {) {1 ; } }) ;", "String s.to2 3 5 7inin1 2 5 71 3 5 71 3 51 3 51 1 34513 53 5 7445 5 51 3 53 5 7 71 3 5 71 1 31 31 3 5 588 5 7 7", "of0 1 5 71 3 51 3 51 3 51 3 52 3 5 71 41 3 51 3t_{i} ist_{i}, 1,noft_{i}, k_{i}, 1,ink_{i},1133 52 54 2 5 74 51 3 5 7", "of thestringstring2,..., x_{i}, k_{i},1 3 510^6,1 2 5 72 3 5 7thenumber ofstring sandto beofnumber oftheofthe number ofof stringsin) {0 ; i <i( kt_{i}1 3 5 5", "inofsuchin theas k_{i}theyin the string s startthe number ofs. The number of1 1 3 52 3 5kth of these linesthe stringoft_{i},in theof the stringsthese linesthe number ofthe number of stringstoofthe string s startt_{i}, 1, x_{", "the number ofstringsisthet_{i})thethe.)) ;(])) ;.) ;[] =] = [ ]) ; int ii = 0 ; i) ; i ++] = [ ]] ;[", ") {) ;( int) ;; for ( int i) { if ([++ ) { if() {]. length( ) ; }( )( ) ; }if ()if( ) )[ i ]. lengthlengthlength = 0 ; i1 ] ) ) {() ). length ) ; if", ") {.a.[ ]. split ([]. split (). join (. join (}} }) ;) { for (++ ) { if(,]. split ( ')) ; }. join ('') ;) {.)", "ofthestringsbeenin thein the stringthein the stringanumber ofin the string s startin thethe string s start.t_i,itt_i,k_i, j \u2264 10^6, 11 \u2264,1, 102 2 51 3 510^6, 1", "sto reconstruct lexicographically minimal stringthestring s, then1, x_{i}, 1, x_{i},1,1, x_{i},at least oneand the number of1, x_{i},and the number of1, x_{i}, 1, x_{i},x_{i},2,..., x_{i},3,..., x_{i},"], "prompt": "\nQUESTION:\nIvan had string s consisting of small English letters. However, his friend Julia decided to make fun of him and hid the string s. Ivan preferred making a new string to finding the old one. \n\nIvan knows some information about the string s. Namely, he remembers, that string t_{i} occurs in string s at least k_{i} times or more, he also remembers exactly k_{i} positions where the string t_{i} occurs in string s: these positions are x_{i}, 1, x_{i}, 2, ..., x_{i}, k_{i}. He remembers n such strings t_{i}.\n\nYou are to reconstruct lexicographically minimal string s such that it fits all the information Ivan remembers. Strings t_{i} and string s consist of small English letters only.\n\n\n-----Input-----\n\nThe first line contains single integer n (1 \u2264 n \u2264 10^5) \u2014 the number of strings Ivan remembers.\n\nThe next n lines contain information about the strings. The i-th of these lines contains non-empty string t_{i}, then positive integer k_{i}, which equal to the number of times the string t_{i} occurs in string s, and then k_{i} distinct positive integers x_{i}, 1, x_{i}, 2, ..., x_{i}, k_{i} in increasing order \u2014 positions, in which occurrences of the string t_{i} in the string s start. It is guaranteed that the sum of lengths of strings t_{i} doesn't exceed 10^6, 1 \u2264 x_{i}, j \u2264 10^6, 1 \u2264 k_{i} \u2264 10^6, and the sum of all k_{i} doesn't exceed 10^6. The strings t_{i} can coincide.\n\nIt is guaranteed that the input data is not self-contradictory, and thus at least one answer always exists.\n\n\n-----Output-----\n\nPrint lexicographically minimal string that fits all the information Ivan remembers. \n\n\n-----Examples-----\nInput\n3\na 4 1 3 5 7\nab 2 1 5\nca 1 4\n\nOutput\nabacaba\n\nInput\n1\na 1 3\n\nOutput\naaa\n\nInput\n3\nab 1 1\naba 1 3\nab 2 3 5\n\nOutput\nababab\nUse Standard Input format\nANSWER:\n"}}