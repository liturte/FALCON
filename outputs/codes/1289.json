{"1289": {"code": ["starts at thestop number0 \u2014 the number4 )3,4,2,3, 4,5,5, 6.3, 4,5, 6, 6,7, 6, 6, 7,6, 7,5, 7,6,4,2,5,6, 7,2, 6, 7,5,", "n.the busthe(1 \u2264 n)the bus isthe(2 \u2264 n \u2264)thethethetheof theofstarts at the stopto thestop1. iftheif the=stop numberthe busis in thethe current stops", ".) { if (0 ) {;stop13 )stop.is notstop.: [,,] }stop. add ( n. add (:,stop.). add () ; }} } ) {. add ( n)", "thein the middle ofin the middle ofthethethestarts at thetheof the).starts at the1, 2, 3, 4, 5,5,4, 5, 6,4, 6, 7, 9,2,2, 2,5,3,3,5,2,4, 7,3, 7,", "starts at the(.theisthethetheone stopthe1 to n -theis.is thethea stop from thethestop ofthethe busisthe busthethestop of the(i.e., if a stopthe one of thestops arethe second line contains n", "theandthe path tothestop numberbeingthethe path from1 to n - 1.) {stop number 3 (i.e.,thethea stop number3,5, 5, 6.the paththat stops arethethestopastop number(3 \u2264 nstop number 5)stop number 3, and the", "the= 2thethe bus is22\u00b710^5) \u2014 the4 \u2014 thenumber of stopsthetheof the).thestart of thethethe.(]).,)..( n \u2264 2\u00b710^5)n.. add ( 1 )", "the.stop number 2 \u2264stop number2.) ; }( 1= 0 ;>=>=1 ).>=.) )[].stop number 11stop number 2stop number.) ;stop number 3the bus to the first", "stop number nthe- 1 if0 ;.( nthestop.,) ; }) ; }a.( )( 1 ) ;.() ) ) {. length:( ).). length.[ 0 ].0 ) ; }", ".3 isthea3 isthe busin the middlethethethe(3) {; }in the middle of thea secondthatthe firstthe lastthe first stopstop...0 ) {stop. length. length ; }"], "prompt": "\nQUESTION:\nIn Berland a bus travels along the main street of the capital. The street begins from the main square and looks like a very long segment. There are n bus stops located along the street, the i-th of them is located at the distance a_{i} from the central square, all distances are distinct, the stops are numbered in the order of increasing distance from the square, that is, a_{i} < a_{i} + 1 for all i from 1 to n - 1. The bus starts its journey from the first stop, it passes stops 2, 3 and so on. It reaches the stop number n, turns around and goes in the opposite direction to stop 1, passing all the intermediate stops in the reverse order. After that, it again starts to move towards stop n. During the day, the bus runs non-stop on this route.\n\nThe bus is equipped with the Berland local positioning system. When the bus passes a stop, the system notes down its number.\n\nOne of the key features of the system is that it can respond to the queries about the distance covered by the bus for the parts of its path between some pair of stops. A special module of the system takes the input with the information about a set of stops on a segment of the path, a stop number occurs in the set as many times as the bus drove past it. This module returns the length of the traveled segment of the path (or -1 if it is impossible to determine the length uniquely). The operation of the module is complicated by the fact that stop numbers occur in the request not in the order they were visited but in the non-decreasing order.\n\nFor example, if the number of stops is 6, and the part of the bus path starts at the bus stop number 5, ends at the stop number 3 and passes the stops as follows: $5 \\rightarrow 6 \\rightarrow 5 \\rightarrow 4 \\rightarrow 3$, then the request about this segment of the path will have form: 3, 4, 5, 5, 6. If the bus on the segment of the path from stop 5 to stop 3 has time to drive past the 1-th stop (i.e., if we consider a segment that ends with the second visit to stop 3 on the way from 5), then the request will have form: 1, 2, 2, 3, 3, 4, 5, 5, 6.\n\nYou will have to repeat the Berland programmers achievement and implement this function.\n\n\n-----Input-----\n\nThe first line contains integer n (2 \u2264 n \u2264 2\u00b710^5) \u2014 the number of stops.\n\nThe second line contains n integers (1 \u2264 a_{i} \u2264 10^9) \u2014 the distance from the i-th stop to the central square. The numbers in the second line go in the increasing order.\n\nThe third line contains integer m (1 \u2264 m \u2264 4\u00b710^5) \u2014 the number of stops the bus visited on some segment of the path.\n\nThe fourth line contains m integers (1 \u2264 b_{i} \u2264 n) \u2014 the sorted list of numbers of the stops visited by the bus on the segment of the path. The number of a stop occurs as many times as it was visited by a bus.\n\nIt is guaranteed that the query corresponds to some segment of the path.\n\n\n-----Output-----\n\nIn the single line please print the distance covered by a bus. If it is impossible to determine it unambiguously, print  - 1.\n\n\n-----Examples-----\nInput\n6\n2 3 5 7 11 13\n5\n3 4 5 5 6\n\nOutput\n10\n\nInput\n6\n2 3 5 7 11 13\n9\n1 2 2 3 3 4 5 5 6\n\nOutput\n16\n\nInput\n3\n10 200 300\n4\n1 2 2 3\n\nOutput\n-1\n\nInput\n3\n1 2 3\n4\n1 2 2 3\n\nOutput\n3\n\n\n\n-----Note-----\n\nThe first test from the statement demonstrates the first example shown in the statement of the problem.\n\nThe second test from the statement demonstrates the second example shown in the statement of the problem.\n\nIn the third sample there are two possible paths that have distinct lengths, consequently, the sought length of the segment isn't defined uniquely.\n\nIn the fourth sample, even though two distinct paths correspond to the query, they have the same lengths, so the sought length of the segment is defined uniquely.\nUse Standard Input format\nANSWER:\n"}}