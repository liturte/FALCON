{"1918": {"code": ["if).= Alice)(n characters A orA or BA or BA \u2014 thetheA andBobthe number of.afor:1: 1; fori =< n ;) { if (==) {A( A ) ; }", "theAliceAlice'stheof the.thenumber ofthethethethe number ofnumber oftothethethenumber ofthe number ofoftheAlice'sA and Bob.A andof theBob can be", "Alice'stothe.islengthAliceAlice'sand Bob'stheABob'stheto the(A/B).Thebe(A/B).the1(A/B)).A/B. AAA in Alice'sABob can achieve. Alice's", "inthetheof aAliceisofBob can achieve. ) {[ 1 ]( n - 1) ;.[ 1 ] ;[ 1 ])]( 1 ]) ;. length - 1[ 1 ]=] )1 ]] ) ;. length -", "AliceAlice\u2014 Alice\u2014 Bob\u2014Alice\u2014 Alice\u2014Alice\u2014Alice\u2014 Bob\u2014 Bob\u2014Alice\u2014Alice\u2014 Alice\u2014 Bob\u2014 Alice\u2014Alice\u2014 Alice\u2014 Alice\u2014Alice", "Aliceand BobisthetheA and B BobA andABob will haveof lengthofBob.AAtheA and B BAB BAisoftheA or BBobtheA and B", "to AAlice and BobABobAliceAlice's initialAliceAlice'sisBob can beof theAlice's(2Alice's initial split intoAlice'sABob cantheAlice's initial split into.Alice'sAlice's initialAlice'sAlice's initialthea", ")Alice isA or B isA or BA or B isBob isthethe character in thatA or B isA or B isof theA or B is AA orB \u2014 theABAAAAA is aA isB is aBA is aof A and B", "thetheBob.Alice'sa=) { if (.()) {.( ). split (( ) ).() ) )( ) ; } }) ; }( )( ) )( ) ; } }( ) ) {} } } )( ) ;) ; }", "aA or B:A or BA or BtheA or Ba \u2014A or BA or BBob shouldA or BABABA or BABBBob canthe maximum strength ofaA or B canaA or B"], "prompt": "\nQUESTION:\nAlice and Bob are playing a game. The game involves splitting up game pieces into two teams. There are n pieces, and the i-th piece has a strength p_{i}.\n\nThe way to split up game pieces is split into several steps:\n\n  First, Alice will split the pieces into two different groups A and B. This can be seen as writing the assignment of teams of a piece in an n character string, where each character is A or B.  Bob will then choose an arbitrary prefix or suffix of the string, and flip each character in that suffix (i.e. change A to B and B to A). He can do this step at most once.  Alice will get all the pieces marked A and Bob will get all the pieces marked B. \n\nThe strength of a player is then the sum of strengths of the pieces in the group.\n\nGiven Alice's initial split into two teams, help Bob determine an optimal strategy. Return the maximum strength he can achieve.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 5\u00b710^5) \u2014 the number of game pieces.\n\nThe second line contains n integers p_{i} (1 \u2264 p_{i} \u2264 10^9) \u2014 the strength of the i-th piece.\n\nThe third line contains n characters A or B \u2014 the assignment of teams after the first step (after Alice's step).\n\n\n-----Output-----\n\nPrint the only integer a \u2014 the maximum strength Bob can achieve.\n\n\n-----Examples-----\nInput\n5\n1 2 3 4 5\nABABA\n\nOutput\n11\n\nInput\n5\n1 2 3 4 5\nAAAAA\n\nOutput\n15\n\nInput\n1\n1\nB\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first sample Bob should flip the suffix of length one.\n\nIn the second sample Bob should flip the prefix or the suffix (here it is the same) of length 5.\n\nIn the third sample Bob should do nothing.\nUse Standard Input format\nANSWER:\n"}}