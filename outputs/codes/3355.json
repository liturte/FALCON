{"3355": {"code": ["at the samethe$T$ minutes.ofthe$T$$T$$T$$T$ minutes. Thetime to$T$the task$T$the$T$()$T$$T$$T$$T$$T$$T$, $T$, $T$,$T$, and", "ainthetime to$T$ minutes. Thetime to travel from a$j$ to$p_ i$$t_ i$$t_ i$time to$i$ to$t_$T$ minutes to complete.thisthethethe$p_ i$ isthe firsti$$n$$i$$t$", "thethebe performedthe timethethetoto the$p_ i $$d_ i $theisthethe first $n$ linethethethe last line$n+1$theof theofthe last line of$T$$T$$T$ is$T$ is an integer", "$n$ and $T$$T$ minutes.$n$the(\\leq$t_ ithe$T$$p_ i $$t_ i $($T$\\leq$T$$T$ $T$)$T$ $T$$T$ $T$ $T$.[[ 0 ]", "$n$$n$$p_ i$ ($1 \\leqthe$t_ i$ ($1 \\leq$d_ i$ ($1$p_ i$t_ i $\\leq$n$ is$T$$n$$T$ $T$$T$ $T$$n$$n$ isthetakes to travel", "theintimetheandthetakes to travel fromtheand thetakes tothethetakes to$j$ to the$i$and $j$thetime to travel tothethe timetothe time toat the lasttime to travel toto the$d_ i$ is the", "andthe$T$ minutes. The timethethebethe time tothe$T$timetime to travel to aa$T$the time to travel toto travel tothemight be$T$isto travel to$T$ minutes,theofthethe$T$ minutes. The time to", "$i$$T$ minutes,time to travelthetheof the$d_ i$the$T$isthe timethetheand the time totothe time tothe$j$the time toof thethe$T$;fora taskin $T$ minutes, $T$$T$t$$", "thetime to traveltheto thetime to traveltheto theofi$ is$n$to the=$T$the time to(e.g. uphill$T$time to travel to$t$ isthe$T$ is the number of$d_ i$ is the$T$ is the number$T$ is the", "thethetime tothe$T$$d$$T$the time toat the$T$thetime to traveltime to travel to theis$T$theto travel to $T$thethe$T$ $T$ isthe time to$T$ to $T$$T$ to thethethe first linethe second"], "prompt": "\nQUESTION:\nA scavenger hunt is being organized for programming contest participants. In addition to the starting and ending locations of the race, there are $n$ ($n \\leq 20$) other locations for competitors to travel to. At each location $i$ ($1 \\leq i \\leq n$), there is a task that must be performed to earn $p_ i$ points. The task at each location takes $t_ i$ minutes to complete. However, each task can only be performed once, so a competitor may not travel to the same location more than once. The competitor cannot return to the starting location after the race begins, and the race finishes as soon as the ending location is reached. \n\nThe scavenger hunt must be completed within $T$ minutes. That is, the time between leaving the starting location and arriving at the ending location must be no more than $T$ minutes. In addition, some tasks have a specific deadline $d_ i$, meaning that the task must be completed within $d_ i$ minutes since leaving the starting location. Again, note that if a competitor arrives at location $i$, the task at location $i$ must be performed. If the competitor were to arrive at the location too late and would not finish the task at that location by the deadline, then the competitor would not be allowed to travel to the location at all.\n\nWhat is the maximum total number of points that can be obtained from the tasks?\n\n-----Input-----\nThe input consists of one case. The first line of input contains two positive integers $n$ and $T$ ($T \\leq 1440$). Each of the next $n$ lines contains three integers $p_ i$ ($1 \\leq p_ i \\leq 100$), $t_ i$ ($1 \\leq t_ i \\leq 1440$), and $d_ i$ ($-1 \\leq d_ i \\leq 1440$). If $d_ i = -1$ then there is no deadline for task $i$. Finally, the last $n+2$ lines each contains $n+2$ nonnegative integers. The entry in the $i$th row and $j$th column is the number of minutes ($\\leq 1440$) it takes to travel from location $i$ to location $j$. The indices of the starting and ending locations are $n+1$ and $n+2$, respectively.\n\nIt is guaranteed that the time to travel from a location to itself is $0$, but the time to travel between two locations in different directions may not be the same (e.g. uphill instead of downhill).\n\n-----Output-----\nPrint the maximum total number of points that can be obtained on the first line. In the second line, print a set of indices of the tasks that need to be performed to achieve this maximum. The list of tasks should be sorted by the indices of the tasks (not by the order in which they are performed). The indices should be separated by a single space. If there are multiple sets of tasks that can achieve the maximum, print the one that is lexicographically smallest. That is, if two sets of tasks achieve the same maximum, the index of the first task in the set should be as small as possible. If there is a tie, the index of the second task in the set should be as small as possible, and so on.\n\nIf the maximum number of points that can be obtained is $0$, output a blank line for the indices of the tasks to be performed.\n\nIf there is no way of travelling from the starting location to the ending location within $T$ minutes, print $0$.\n\n-----Examples-----\nSample Input:\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\nSample Output:\n99\n3\nUse Standard Input format\nANSWER:\n"}}