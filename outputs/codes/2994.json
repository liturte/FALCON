{"2994": {"code": ["--- Theapple moves into(,,: [, 0,., 1,,,., 2,, 2, 33, 3,,50000, 5000010$,], 2,3,,.. a", "output formatoutput format\"A\" isthe\"C\".] = 0 ;. append (. append (). append (. append (1= 1;) ; }] = 0 ;= 1]0 ; i <. length ; i0= 0 ; i[ i ] = 0) ; i ++) ; }", "theof thethe grid.theandthe grid,of theallthethethe grid. Theof thetheand thethethethethe finalthe grid. Thethethe lastthe lastof the grid. Theof theis shown as\"a\"", "thethetheto theaaaaofthe grid. Theofrows, thethethethe([]] ) [ 1] ) [ 1].[ 1 ] )[ 2 ]]] )[ 1 ] [ 0", "a cellthe grida. a #0. athethethe grid. The\"A\" is[) {a]. a [A\" )A\" ).AA\" ).\"A\" ).AA\" )A\" ).\"A\" ).( A )AA ).A \" ).)", "aapplein thethe grid.\\leq#100$ or$1 \\leq C \\leq50000$ and10$thethe)athethe grid.= 11.1.2.12.2.2.1.1.1.1.2.1.1.1.1.2.1.1.1.1", "theofof thethethethethethethe final configuration of thethetheof thethe finalof thethethebeenthethethethe initialandthe finalthe final configuration of thetheof the", "thethethe.==.( ) ; if(( ) ;) ; if (.] =] = 0 ;. length ; i0 ; i <) {.] =; } }] =] = 01 ]1 ]] = 0 ; i. length", "alloftheand aaofandaof thethe grid.:24.1.1.2.2.2.2.2.3.2.2.3.2.3.3.3.2.2.2.3.1.3.3.2.2.2.2.2.2.3.3.1.2.2.3", "a singleofthethe grid, thetheofit andthethethea cell.A cellistheto thetheofthe final configuration of thethe apple,to theto thethethe apple, theof thethethe"], "prompt": "\nQUESTION:\nYou have a 2D rectangular grid. Each grid cell contains either an apple, an obstacle, or is empty. Empty cells are denoted as \u2019.\u2019, apples as \u2019a\u2019, and obstacles as \u2019#\u2019. You are to implement a simulation of gravity, based on the following rules: \n - The obstacles do not move.\n - Whenever there is an empty cell immediately below an apple, the apple moves into the empty cell.\n\nPrint out the final configuration of the board after all apples reach their final locations. Merely iterating the gravity rule, a step at a time, will likely take too long on large datasets.\n\n-----Input-----\nThe input begins with a line containing integers $R$ and $C$, designating the number of rows and columns of the grid, such that $1 \\leq R \\leq 50000$ and $1 \\leq C \\leq 10$. The first line is followed by $R$ additional lines, each designating a row of the grid, from top to bottom. Each line has $C$ characters, each of which is either \u2019.\u2019, \u2019a\u2019, or \u2019#\u2019.\n\n-----Output-----\nOutput $R$ grid lines displaying the final state.\n\n-----Examples-----\nSample Input:\n3 3\naaa\n#..\n..#\nSample Output:\na..\n#.a\n.a#\nUse Standard Input format\nANSWER:\n"}}