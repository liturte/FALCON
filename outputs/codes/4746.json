{"4746": {"code": ["the..1 )1 )00 1 ) {( 0.). split) [ 0 ][ 0 ]. split () ). join () ;: [ ]] ). join)( 1 ).)( 11 ] )1 ]. split (1 ). join ().{", "aof thethethe last.;)]; }1 ] [ 1 ][ 1 ], 1 ]210 11 10 000 011Input format\nANOMIAL :2:1 2:1 1 10 01:1 1 11:1 2:1 2:1 1 1", ". Thethethethetheandthethe{ //theof thethethe input is consistent,of thethethethe( \"\\n\\n\" + \"thethethe.= (0 0 ) / (. length - 1 )", "in the...thethethe last).the(...( \" \",}0,..( \" \",, n(n, n )= n [ 2] ) ;\" \", n [", "the.: aofofthe inputnotin thein thethe train isthe number of(0,1) isathe last stationthe train, andtheforathe last: a1 :2: aainputthe number ofto reach the first station,", "oftheofatheoftheinputof thethethethe traintothe train, andthethe last stationthethe last station0thethe train isthethe train isthe station, and thethe firstof the", "thethethethetheofof thethethethe train atthe next:1:0 1 10 1 0 01:0 1 0 11:0 1 1 1 0Output1:0 00 0 1:0 11:0 1 1 12:0 1 10 1 11:0 0 01:0 0 1 0", ".the...... C ). C ).C ).).( ).)..).... C ).. C ).. C ).)(. C ). C )). C )", "notthehaveitthetheatakes longer than theandtheof the train,the last stationthetheis not inthe lastis in thethe lastthe(a( \"Nothe train wasthe\"No passengersnowy day, so theof aaof thea given train.the number of", "a new.thea.)1 ).;.{.) )..;. n ) ;= 1 ;n. n >;. n. n. n; n. nn. n( n.. n ) ;"], "prompt": "\nQUESTION:\nThe Nordic Company of Passing Carriages is losing money at an alarming rate because most of their trains are empty. However, on some lines the passengers are complaining that they cannot fit in the cars and have to wait for the next train!\n\nThe authorities want to fix this situation. They asked their station masters to write down, for a given train, how many people left the train at their station, how many went in, and how many had to wait. Then they hired your company of highly paid consultants to assign properly sized trains to their routes.\n\nYou just received the measurements for a train, but before feeding them to your optimisation algorithm you remembered that they were collected on a snowy day, so any sensible station master would have preferred to stay inside their cabin and make up the numbers instead of going outside and counting.\n\nVerify your hunch by checking whether the input is inconsistent, i.e., at every time the number of people in the train did not exceed the capacity nor was below $0$ and no passenger waited in vain (i.e., waited on the station when there was room in the train). The train should start and finish the journey empty, in particular passengers should not wait for the train at the last station.\n\n-----Input-----\nThe first line contains two integers $C$ and $n$ ($1 \\leq C \\leq 10^9$, $2 \\leq n \\leq 100$), the total capacity and the number of stations the train stops in. The next $n$ lines contain three integers each, the number of people that left the train, entered the train, and had to stay at a station. Lines are given in the same order as the train visits each station. All integers are between $0$ and $10^9$ inclusive.\n\n-----Output-----\nOne line containing one word: possible if the measurements are consistent, impossible otherwise.\n\n-----Examples-----\nSample Input 1:\n1 2\n0 1 1\n1 0 0\nSample Output 1:\npossible\n\nSample Input 2:\n1 2\n1 0 0\n0 1 0\nSample Output 2:\nimpossible\n\nSample Input 3:\n1 2\n0 1 0\n1 0 1\nSample Output 3:\nimpossible\nUse Standard Input format\nANSWER:\n"}}