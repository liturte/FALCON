{"4849": {"code": ["beCIAcan beofAof thebeone of theoris aof theby thea list ofthe.for thethebe aonethe list of thethe list ofa singletheof thethethe list of", "as:( ) {=()) ) {; }, 1 ))))=) ; };( ) ; }( ){() ;(.) ;( ) ; }( ) ;.", "thethethebea stringthebe athebeisthetheof thethe list ofthetheof theone of thethe=.1 ] [ 0 ]. contains (( int )( int ). contains", "of theregistrations of..=[ ]. split (.)] ) ; }. join ( \") ; }[ \"\" ) ; }) {\" \" ). split ( \" \")() )\"( \" \" ) ;(\". split (} ) ;", "thebeingtheofsuch as aaa='n'.: 'F', 'b''A', 'c', 'b',, 'c','A', 'B', 'D''H', 'D', 'H''D', 'P''Y', 'Y''S", "( n:) ; }() ; }) ; }) { for( i ) {i=) ; i <(= 0 ; i <i++ ) {[( ) ;]] ;) ) {] =] =() ).. indexOf ( 'B' )", "beto beabeinginthebe atheoftheof theinput and outputis a list ofin the inputthea single lineofthe linein the listisatheof theathethe last line of the", "thethetheablimp:.\" \" ). split (). split ()]. split (\" \" )\" \" )( \") )=. split (. split () ;[ 0 ]. split])( \" \" )( \" \" )", "andone of the followingin the() {= input( )..) ; if () ) ) {} else) ;. format (. format () ; } else. format( ) ; }(( );=( ) ; for () ) {. format () ; }", "be aa.[ 0 ].]. split (.) ). split (1 ][ 1]]] [ 0 ] []. split. split ()0 ]. split ( '']] [ 0 ][ 1 ])] ) [ 0] [ 1 ]]"], "prompt": "\nQUESTION:\nMirko and Slavko are USKOK agents tracking the movements of an unnamed corrupt government official. Anonymous sources have tipped them about his upcoming escape attempt. They now know he plans to use his diplomatic liaisons to try and hitch a ride on a CIA blimp leaving from Severin na Kupi blimp port.\n\nIt is common knowledge that all CIA blimps have the string \u201cFBI\u201d somewhere in their registration codes. They obtained a list of all blimps scheduled for the designated day. There are exactly 5 blimps on the list. Write a program that will point out all CIA blimps.\n\n-----Input-----\nThere are exactly $5$ rows of input, each row representing one blimp registration code from the list. A registration code is a sequence of at most $11$ uppercase letters of the English alphabet, digits \u20180\u2019 to \u20189\u2019, or dashes \u2018-\u2019.\n\n-----Output-----\nThe first and only line of output must contain a space separated list of integers, sorted in increasing order, indicating the corresponding input rows containing registrations of CIA blimps.\n\nIf there are no CIA blimps, output the string \u201cHE GOT AWAY!\u201d.\n\n-----Examples-----\nSample Input 1:\nN-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\nSample Output 1:\n1\n\nSample Input 2:\nN321-CIA\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\nSample Output 2:\nHE GOT AWAY!\nUse Standard Input format\nANSWER:\n"}}