{"4939": {"code": ["it isthetheofthethenotthe)in theisthebeto thethe1to the) {== 1 ;[ 0 ] ;= 0 ; j <1 ; j1 ; j++", "- 1n -$m$thethe..1= $->) ; if){\"...[ ] )].] ) ; }= 0 ; ii <) {else {}= 0 ; i <", "thenot to be.$5$ to thetheto thetheto thethebethenotthethey are not inintheistheto be thrown.of thethethethethetheof thethisofthe lastthe last $t$ throws should", "theone of$3$ and then fromtheto thetheto the=$4$ to$4$ to childa- 3$5$ tothe-thetheto thethe(or$2$ toto theof thetheof thecommand $4$ to child", "the-the-1$theundo commands $i$theto the$3$ toto thethetotheisthey canto thethe(and thethethethe// the=tothea number ofthe number ofof the.", "thecommands. Theofis an integer $p$a positive integer $m$indicating how manythethethethewere(or$p, $m,thetheof thetheofthetheto thethe(orthein thethe first line contains two", "theofinthethewoulda(n, k,oftheofthe$m$ofofthea numberof thethethe$m$waswouldwould be atoof theof thethatthe(n, k, k, etc.) Thethe above line containsthe first line contains the", ".the=of..1 ].- 1)- 1 ](11 ].) ;.) )(.[ 0 ] ))} else {. add (. add]. add () ;]", "it. Thisofthethethethethey arethethey arethethethe(or$n$$k$ (or $1\\leqtheinthethe(i.e. athethechild $1$, thenthe(i.e. thethe first line contains the", "it is aof twocommand.- 1 $ofthecommand $t$the$t$wasto thetheof thethethewhich(carefully) throws thethecanthemthetheof thethethethe lastof the last$t$ which isthe next"], "prompt": "\nQUESTION:\nDaenerys frequently invents games to help teach her second grade Computer Science class about various aspects of the discipline. For this week\u2019s lesson she has the children form a circle and (carefully) throw around a petrified dragon egg.\n\nThe $n$ children are numbered from $0$ to $n - 1$ (it is a Computer Science class after all) clockwise around the circle. Child $0$ always starts with the egg. Daenerys will call out one of two things:\n - a number $t$, indicating that the egg is to be thrown to the child who is $t$ positions clockwise from the current egg holder, wrapping around if necessary. If $t$ is negative, then the throw is to the counter-clockwise direction.\n - the phrase undo $m$, indicating that the last $m$ throws should be undone. Note that undo commands never undo other undo commands; they just undo commands described in item $1$ above.\n\nFor example, if there are $5$ children, and the teacher calls out the four throw commands 8 -2 3 undo 2, the throws will start from child $0$ to child $3$, then from child $3$ to child $1$, then from child $1$ to child $4$. After this, the undo 2 instructions will result in the egg being thrown back from child $4$ to child $1$ and then from child $1$ back to child $3$. If Daenerys calls out $0$ (or $n, -n, 2n, -2n$, etc.) then the child with the egg simply throws it straight up in the air and (carefully) catches it again.\n\nDaenerys would like a little program that determines where the egg should end up if her commands are executed correctly. Don\u2019t ask what happens to the children if this isn\u2019t the case.\n\n-----Input-----\nInput consists of two lines. The first line contains two positive integers $n$$k$ ($1\\leq n \\leq 30$, $1 \\leq k \\leq 100$) indicating the number of students and how many throw commands Daenerys calls out, respectively. The following line contains the $k$ throw commands. Each command is either an integer $p$ ($-10000 \\leq p \\leq 10000$) indicating how many positions to throw the egg clockwise or undo $m$ ($m \\geq 1$) indicating that the last $m$ throws should be undone. Daenerys never has the kids undo beyond the start of the game.\n\n-----Output-----\nDisplay the number of the child with the egg at the end of the game.\n\n-----Examples-----\nSample Input:\n5 4\n8 -2 3 undo 2\nSample Output:\n3\nUse Standard Input format\nANSWER:\n"}}