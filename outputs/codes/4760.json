{"4760": {"code": ["$N$ and $K$$N$,$K$thea number to betheoutput.(1+ 1 ) *+ 2 ) *)2) *if (1)[] ) *)) * (; } else= 0 ; i <) ; i ++(", "format\"1.2\"\"2.3\"\"2.1\"\"1.2\" ]) )[1 ],[)(, 1, 2[ 1 ], 1,[ 1],, 11 ], 1)2 ]1 ])],1,[ 1 ],", "$P$ in.-Crossed- output $P$.1.A,.12 ),2 ], 2 ),0 ]..2 ]., 2, 1.].].),() ),", "output( 1) {) { return; })() ; }; } else() {) ; }1 ; },; }() ; }=) ;;) ; }) ; }( \"A) ; }) { return(", ").) {0{},:(), $P$ ) ;\"\" \"0 ],, \" \"1 :\",, \" \" :\" \" : \" \"\"\" \",(\" \"\" \", \" \"\" \"", "( 1( $N$ )=( 1) {) ;(]( ) {=() {(}( 1,.( ).)...) ;(0,1 )", "- Write theit,$P$,101N1:1:Output 1:COF2:COFOutput 1:COF1:COFOutput 2:COFOutput1:COF output formatCOF1:COF output formatCOFOutput formatCOF Output formatCOFoutputOutput formatCOF output:COF output:COF", "(2,0.0, 1,3, 1, 1,1,$N$, $K$,the-1, 1,3,1,$N$1, 1,1, 1, 1,1,1:2:1:Output 2:0, 1:0, 1:0,0:1,Output 2:1:", "( $P$) -it to be crossed out.2:Output 2:0.01n1n1n1n2n2n2n1n2n2n2n2n1n1n2n2n1n1n1n1n1n1n1n1n1n1n2n1n2n2n2n2n2n2n1n1n1", "int nn % 2.output() ; }.output.output.) ) )[] ; }, n ) {1 ] = n}.0.0,.) ; } }];(] =) ;"], "prompt": "\nQUESTION:\nThe sieve of Eratosthenes is a famous algorithm to find all prime numbers up to $N$. The algorithm is:\n - Write down all integers between 2 and $N$, inclusive.\n - Find the smallest number not already crossed out and call it $P$; $P$ is prime.\n - Cross out $P$ and all its multiples that aren\u2019t already crossed out.\n - If not all numbers have been crossed out, go to step 2.\n\nWrite a program that, given $N$ and $K$, find the $K$-th integer to be crossed out.\n\n-----Input-----\nThe integers $N$ and $K$ $(1 \\leq K < N \\leq 100000)$.\n\n-----Output-----\nOutput the $K$-th number to be crossed out.\n\n-----Examples-----\nSample Input 1:\n7 3\nSample Output 1:\n6\n\nSample Input 2:\n15 12\nSample Output 2:\n7\nUse Standard Input format\nANSWER:\n"}}