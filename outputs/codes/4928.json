{"4928": {"code": ["(it istheirthem tochessboard.of chessboardchessboards cantheof chessboards.Chessboards canaoftheofMirkoMirko can,(..chessboard.((, 1, 0,", "theachessboardanda number ofoftheofthethe) {1(( 1,) {1,{ 0 }{()==( 1,) {=( 1,", "of chessboardsof chessboardstochessboardsChessboardchessboardforchessboard.( n{n ) );{.( n )}{ print ({ print (n ) }\" \". split ( \"\"() { print (( n ) ;,", "athatchessboard..:the[1,0,ofof inputoutput= 1.= 1.ofthe\"No chessboardof(,,\"No chessboard\" ] ),] )(, \"No chessboard\" ), \"No chessboard\" )", "(between 0 andcancuts,a singlechessboard.Mirko canmight.=][ 0 ];( \"H\" ) )],],( \"H\" )( \"H\" ) ),= ( \"H\") ) ; }(] )]) ;.} ) ; }", "of1Mirko canin aischessboard:How many(;of);()) ; }() ; }} ) ; })..) ) ; }) ;( ) ;; }; }", "chessboards, and they can(as inof chessboards, it canaMirko canin a singlechessboard.=ahis chessboard.his chessboard.asphereandatothe\" \"of\" \"of the\" \"of\" \"of theof(\" \"of the\"", "it canchessboards.Chessboardof chessboardofachessboardchessboard.ofthe number ofthethecanof chessboard.( )Mirko can( )( ),.( ) ). split (()) ) { return=", "canin aaofhis chessboard cancantochessboardtheof chessboarda number ofMirko canthe first line oftoinintheMirko canit canathe chessboard{ #regionof chessboardthe first lineofthe number of cuts", "of.madeain theof chessboards.canthethe chessboardschessboards,thein aofin the(hopefully).( \"Helps toinof chessboards.theMirkochessboard.,,theato move the chessboard."], "prompt": "\nQUESTION:\nThrilled about his new valid set of pieces, Mirko rushed over to Slavko\u2019s, to find that Slavko too found a set of chess pieces in his attic. Slavko\u2019s set, miraculously, contains only black pieces. But since neither of them can play chess, they settled on smashing one another senseless with their chessboards.\n\nWhile Slavko is warming up with a series of stretches, Mirko decided to sabotage Slavko\u2019s chessboard. An expert in carving wood, he decided to cut Slavko\u2019s chessboard so that it shatters into as many pieces as possible when Slavko attempts to hit Mirko.\n\nMirko can only make horizontal and vertical cuts (parallel to the sides to the board), edge to edge, and has time to make at most $N$ cuts.\n\n-----Input-----\nThe first line of input contains an integer $N$ ($1 \\le N \\le 10^9$), the number of cuts Mirko can make.\n\n-----Output-----\nOutput the largest number of pieces Slavko\u2019s chessboard can crash into.\n\n-----Examples-----\nSample Input:\n1\nSample Output:\n2\nUse Standard Input format\nANSWER:\n"}}