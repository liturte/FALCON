{"3198": {"code": ["one wordthethe=(10.0 ) )1.0 )( )) { if( ) ) {.) ; } }{} }{} ) {( ) ;(.(( ) ;( ) ).( )( ) ; }", "atheis aisthethehooseto thethat it is aaand thetheto thetype= [ ] ;[ ] {} ;[[ 1 ] ]=)[][ 0 ]] [ 1 ][ 0 ] [ 0", "the inputthethe word in.isatheacorrespondingthethethethe\"_N_\"the word in thethethethethethethethethe dictionary.the textthe last word inthe word in the dictionary.the text, and thethethe word in thethethe text, thethe dictionary", "it is. Anotherwethethe wordthe word inthetheword in thetheis one of theandof thetoa single word in thetheword in theaancorresponding word in theword in the. Athe word in thethat the wordthe word in(", "(thetheoftheadictionary is $\\{\\texttt{noise}\\} $thea\\texttt{noise}, \\texttt{noise}\\} $aa word in thetheof the input.the wordthethethethethethethe first line of inputthedictionary. If the first linethe first line of input", ")the inputthethe( n > 0 )thethe output formattheisthethe input is.(,outputFormat =,[,., 0). append (}outputFormat = \" \",= \" \", n,", "thein thedictionarycorresponding to aanother word inis a.aofof thethethethe first line ofdictionaryofall words. thethein thetheof thethewords in thethe dictionary.the first line ofthe input is an array,", "the)aa single word inone of theis thethetheof the word inthetheword in theone of thethethethe word inthethecorrespondingone ofthethe words. Thethethe last word in thethea single word in the", "thethe inputtheof thewordofthe word intheword in thein the input.theword in the input.thethe output is athethethethe word inthethe word.the word is awordthe first line of inputthethethe word in the input.", "=ain thethestring isaof thedictionary..in ain thein theathestring. Thestring is thethetheword isthetheword isthe word is athe word is a.. split ("], "prompt": "\nQUESTION:\nIt is now far into the future and human civilization is ancient history. Archaeologists from a distant planet have recently discovered Earth. Among many other things, they want to decipher the English language.\n\nThey have collected many printed documents to form a dictionary, but are aware that sometimes words are not spelled correctly (typos are a universal problem). They want to classify each word in the dictionary as either correct or a typo. Na\u00efvely, they do this using a simple rule: a typo is any word in the dictionary such that deleting a single character from that word produces another word in the dictionary.\n\nHelp these alien archaeologists out! Given a dictionary of words, determine which words are typos. That is, which words result in another word in the dictionary after deleting a single character.\n\nFor example if our dictionary is $\\{ \\texttt{hoose}, \\texttt{hose}, \\texttt{nose}, \\texttt{noises}\\} $. Then hoose is a typo because we can obtain hose by deleting a single \u2019o\u2019 from hoose. But noises is not a typo because deleting any single character does not result in another word in the dictionary.\n\nHowever, if our dictionary is $\\{ \\texttt{hoose}, \\texttt{hose}, \\texttt{nose}, \\texttt{noises}, \\texttt{noise}\\} $ then the typos are hoose, noises, and noise.\n\n-----Input-----\nThe first line of input contains a single integer $n$, indicating the number of words in the dictionary.\n\nThe next $n$ lines describe the dictionary. The $i^\\textrm {th}$ of which contains the $i^\\textrm {th}$ word in the dictionary. Each word consists only of lowercase English letters. All words are unique.\n\nThe total length of all strings is at most $1000000$.\n\n-----Output-----\nDisplay the words that are typos in the dictionary. These should be output in the same order they appear in the input. If there are no typos, simply display the phrase NO TYPOS.\n\n-----Examples-----\nSample Input 1:\n5\nhoose\nhose\nnose\nnoises\nnoise\nSample Output 1:\nhoose\nnoises\nnoise\n\nSample Input 2:\n4\nhose\nhoose\noose\nmoose\nSample Output 2:\nhoose\nmoose\nUse Standard Input format\nANSWER:\n"}}