{"3637": {"code": ["athe pizza hasthethethethethewe have noof the toppingsarethat the pizzathetheof the currentwill bethea list ofof thethat itthe list ofthe listofthe pizza with thea list ofthe friends inof the friends. By", "a list of toppingsthethe friends, ortheistheone ofof thetheof theall theis anthe listofand thatitsof the toppings thatis not allowed toathe toppings thatthat area list ofofthe list ofofthat is not", "thatthepizzatheir wishesandwishes.is.) {thesuch thatthe list ofthe list)( 'The number ofthatofwishes arethe.( ).) ) {.( ). length ;wishes andof the friends in the", "aof.athetheofand aof theof the friends intheand a list ofof the friends inthethey havetheirlist offriendstheir wishesbeen added tothe list ofofin atoof the pizza. Athe selection of toppings,in alist ofof", "thewe havewetheinis thethethe last line ofthe numbera singleof theof thewishes. Thethe firstof thethe firstthat we havethe first linethe lastof the$2of the nextfriends, and the nextof thethe first line ofthe first line of input", "of aathetheisthe,list ofaofof thefriend. The number ofhave aof theofthealla listthatis not allowed to containthat theythe same number ofthe number ofof thethe number ofthe number of", "thein thethehave ain the list ofyousuch that everyonewishes fulfilled. Itisthe sameyou havethe current selection ofwishesthat a friendinthewill betheof the.) {(ofa list ofof) ; }", "the pizzathe same) {\"Friend:\" +in a\" \"ofthe. split ({for( int n) { if (( n;0) { if (. split ( \"; }( \" \" ) ;) {=. split (if ( n == 1", "forthe.is aintothe numberof.thatthe number of friendsthe number ofthe number ofthe number ofthe number offorof the friends intheand a listis athe numberofof thelist ofthe number of.", "a single.in thethatthe.).}(list ofofthe number ofthe number ofthe number ofof thethewishesthe number ofa list offriends of)...((( ). length -"], "prompt": "\nQUESTION:\nMe and my friends are ordering a big pizza to share. As you can imagine this is quite complicated, since everyone has different wishes about what should be on the pizza. For instance Gunnar wants bananas on the pizza, Emma doesn\u2019t want bananas but wants olives, Marc wants there to be tomatoes, and so on. Fortunately, against all odds, we managed to come up with a selection of toppings such that everyone had at least $2/3$\u2019s of their wishes fulfilled, which we unanimously decided was good enough.\n\nBut then, disaster struck! We sent out Luk\u00e1\u0161 to buy the pizza, but he accidentally lost the piece of paper on which we had written down our carefully selected list of toppings. Now we\u2019re back at square one, and have to construct a new selection of toppings. Given how long it took us to find the original selection of toppings, we have decided to lower our standards a bit and just try to find a selection such that everyone has strictly more than $1/3$ of their wishes fulfilled.\n\nCan you help us with this? If you do, you\u2019ll get some pizza!\n\n-----Input-----\nThe first line of input contains an integer $1 \\le N \\le 10000$, the number of friends in the group (including yourself). Each of the next $n$ lines contains the list of wishes of one of the friends. This list starts with an integer $1 \\le w \\le 30$, the number of wishes this friend has, followed by a space-separated list of wishes. Each wish is either \u201c+<topping>\u201d or \u201c-<topping>\u201d where <topping> is the name of a topping, indicating that this friend wants or does not want this topping. Each topping name appears at most once in each list.\n\nTopping names are non-empty strings of up to $15$ lower-case English letters \u2018a\u2019-\u2018z\u2019. There are at most $250$ different toppings.\n\n-----Output-----\nOutput a list of toppings (without repetitions, separated by spaces or newlines) such that each friend has strictly more than $1/3$ of their wishes fulfilled. You may assume that there exists a list such that every friend has at least $2/3$ of their wishes fulfilled.\n\nYour list of toppings is not allowed to contain any toppings that are not mentioned in the input, nor is it allowed to contain repetitions.\n\n-----Examples-----\nSample Input:\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\nSample Output:\nzucchini\nmozzarella\nmushrooms\nartichoke\nUse Standard Input format\nANSWER:\n"}}