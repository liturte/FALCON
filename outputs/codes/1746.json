{"1746": {"code": ["leafa leafthe root.(1 \u22642a spruce.the rootedis not a spruce.isaa leaf.a leaf.leaf.a non-leaf vertexa leaf.a leaf.1is=) == 00.1 ) )1 ]1 ] ) == 1( 1 )", "a leaf=( )(1 )a( n1 ).( 1))the\"No\" ifrooteda spruce, because the non-leaf//aa leaf vertexis not athe rooteda leaf vertex).\"Yes\" if the treea leafvertex 1 has only(2 \u2264 n", "a.)( 3 \u2264 n.( 2 \u2264)()( 3 \u2264 n(1 \u2264n - 1 )1(3 \u2264n - 1n0n) +(1(\"No\" if the tree isa spruce and \"No\"0. 1", "a leafathe rootthe root.hasthethe root. Arootedin theofthe root is aaa leaf. Aisleaf. A leafleaf.(1= 00 ; i < n1 ; i) {0] )) ) {if (== 0 ) {", "a leaf)a leafis a spruce.\"No\" if the treeisleaf.is not a spruce.isleaf.the non-leaf vertexis not aleaf.leaf.3a leaf.the\"No\" if thethe rooted tree is\"Yes\"\"No\"the root.the root.\"No\" if the", "a leaf vertex{ @link #CIDLECONSUME}thea leaf(1of aof thethe(1 \u2264 1 000)vertex 2 has only.=1 ].]= [ ]].0 ].].].)]. append)]]. append). append (", "aifa leaf)if the leaf(1 \u2264)the12the root.if thethe root is notis not a spruce, becausea leafthe root hasa2leaf children.the non-leaf vertex2the non-leafis not a spruce, becausea leafa leafof the root.", "a leaf vertex(1 \u2264 1 000).a leafa leaf.and \"No\" if thea leaf.the root isa//the root)1(3 \u2264 1 000).a leaf vertexaleaf.the root.(1 \u2264 1)1 )1) )2 ]] )) ;", "is a leaf vertex( 1 \u2264rooted treethe rooteda leaf vertex////the rootedthethe roota leaf vertexthethe root.is not a leafa leaf//theof the rootedvertex 1//the rooted(1 \u2264 n \u2264n - 1) ) {if ( i >", "a leaf vertexa leafa leafif therea non-leaf vertex 1 hasa leafan edge betweenthethe root.thethe edge(1= (1(3 \u2264 n+ 1)..)).(1 \u2264 n1 + 1- 1. ))a leaf1 ] ).+ 1 ] )"], "prompt": "\nQUESTION:\nConsider a rooted tree. A rooted tree has one special vertex called the root. All edges are directed from the root. Vertex u is called a child of vertex v and vertex v is called a parent of vertex u if there exists a directed edge from v to u. A vertex is called a leaf if it doesn't have children and has a parent.\n\nLet's call a rooted tree a spruce if its every non-leaf vertex has at least 3 leaf children. You are given a rooted tree, check whether it's a spruce.\n\nThe definition of a rooted tree can be found here.\n\n\n-----Input-----\n\nThe first line contains one integer n\u00a0\u2014 the number of vertices in the tree (3 \u2264 n \u2264 1 000). Each of the next n - 1 lines contains one integer p_{i} (1 \u2264 i \u2264 n - 1)\u00a0\u2014 the index of the parent of the i + 1-th vertex (1 \u2264 p_{i} \u2264 i).\n\nVertex 1 is the root. It's guaranteed that the root has at least 2 children.\n\n\n-----Output-----\n\nPrint \"Yes\" if the tree is a spruce and \"No\" otherwise.\n\n\n-----Examples-----\nInput\n4\n1\n1\n1\n\nOutput\nYes\n\nInput\n7\n1\n1\n1\n2\n2\n2\n\nOutput\nNo\n\nInput\n8\n1\n1\n1\n1\n3\n3\n3\n\nOutput\nYes\n\n\n\n-----Note-----\n\nThe first example:\n\n[Image]\n\nThe second example:\n\n$8$\n\nIt is not a spruce, because the non-leaf vertex 1 has only 2 leaf children.\n\nThe third example:\n\n[Image]\nUse Standard Input format\nANSWER:\n"}}