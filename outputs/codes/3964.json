{"3964": {"code": ["the programmer, ifanda singlethea single integermodmoda_1, a_2,...,thealln_1 +3 103 1000000007theof thenumber ofa_1 ++ a_2. append (. append (. append ())= a_2 + a_1 ++) ;", "theofthelines of code ina_1 + a_2 +a_2 +... +them- 1866 11710a_1 +91 1(1 \u2264 n,a_2 +b,)\u00a0\u2014 the number of(1 \u2264 a_{n} \u2264", "a singleabea singlea_1 +a_2 +... +a_1 +a_2 +... +8a_1 + a_2 +a_2 +... +m_1 + a_2 +++a_1 + a_2 +...a_2 +... +a_{i}the) {=a_1", "a single integer \u2014the programmerof thea singlethe problem modulo mod.A single integer \u2014 themodmod.themod.mod.mod. \u03c0mod.mod.mod, n,mod, a_1,...,mod.mod.a_1 +..., a_2 +mod.mod. \u03c0", "na_2 \u2014 the number ofthethe answer to the problem(1 \u2264a_1a_2 \u2014 the number ofcodefor each programmer, thea_2mod (10)\u00a0\u2014 the number ofall(1 \u2264\u2264 10^9 +3 114 1mod (", "a singlea single integer \u2014 thenumber oflines of code in thecode in the(a_1 +a_2 +... + a_n)\u00a0\u2014 the number ofofall programmersa_1 ++ a_2 +...a_2 +... +a_2 +... += n *(1 \u2264 nb", "the programmer isa single integer \u2014a singlethe#111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111", "the problem1 1.,.;=; } }the) ;0.0., [ ] ) ;.] ) ;.= 0.0 ;) ; }..) ;; }(( n ) ;( n ) ;( n ) ;", "number oflines of code(1 \u22648 )\u00a0\u2014 thethenumber ofnumber ofthenumber ofthe problem modulo mod.1 2 36 118 11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111", "the task4output,the answer to theoutput, theand the problemthe problem modulo mod.a_1 + a_2 +thethe problem modulo mod.number of2 20(2 2 0na_2 +... +) a_2 +...a_n +5 10000000075 113n_2 +... +a"], "prompt": "\nQUESTION:\nProgrammers working on a large project have just received a task to write exactly m lines of code. There are n programmers working on a project, the i-th of them makes exactly a_{i} bugs in every line of code that he writes. \n\nLet's call a sequence of non-negative integers v_1, v_2, ..., v_{n} a plan, if v_1 + v_2 + ... + v_{n} = m. The programmers follow the plan like that: in the beginning the first programmer writes the first v_1 lines of the given task, then the second programmer writes v_2 more lines of the given task, and so on. In the end, the last programmer writes the remaining lines of the code. Let's call a plan good, if all the written lines of the task contain at most b bugs in total.\n\nYour task is to determine how many distinct good plans are there. As the number of plans can be large, print the remainder of this number modulo given positive integer mod.\n\n\n-----Input-----\n\nThe first line contains four integers n, m, b, mod (1 \u2264 n, m \u2264 500, 0 \u2264 b \u2264 500; 1 \u2264 mod \u2264 10^9 + 7)\u00a0\u2014 the number of programmers, the number of lines of code in the task, the maximum total number of bugs respectively and the modulo you should use when printing the answer.\n\nThe next line contains n space-separated integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 500)\u00a0\u2014 the number of bugs per line for each programmer.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the answer to the problem modulo mod.\n\n\n-----Examples-----\nInput\n3 3 3 100\n1 1 1\n\nOutput\n10\n\nInput\n3 6 5 1000000007\n1 2 3\n\nOutput\n0\n\nInput\n3 5 6 11\n1 2 1\n\nOutput\n0\nUse Standard Input format\nANSWER:\n"}}