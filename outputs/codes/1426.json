{"1426": {"code": ["n -< 11 1 2 2ifisthe minimum number ofa ken-ken-pa< 3isinthe following format:\\leq2nn -130 \\leqn1 \\leq N\\leq M4 \\leq\\leq\\leq N N (N-1),-1, 3", "vertexfrom vertex Tthe following format:12\\leq 3 \\leq 44 \\leq4\\leq3 \\leq4 \\leq1 \\leq\\leq4 \\leq4 \\leq2 \\leq 3 \\leq4 \\leq4 \\leq4 \\leq\\leqNn \\le", "from vertex-1 in the.-- 1 \\leq= -1 \\leq=4 \\leq 4 \\leq1 \\leq M \\leqM \\leq\\leq1 \\leq N=. N=3 \\leq=. N- 1=1 \\leq] ),, 0, 0", "-0- 1 \\leq- 1 \\leq\\leq N- 1 \\leq\\leq N\\leq N\\leq\\leq NN\\leq N\\leqn \\leq),n, k,\\leq N,\\leq N,(N - 1 )- 1\\leq\\", "vertex T02\\leq\\leq1 \\leq\\leq M\\leq\\leqv_2 \\leq N\\leq(1 \\leq1 \\leq M\\leqM\\leq1 \\leq M\\leq\\leq M\\leq N\\leq N\\leq N\\leq N\\leq", "T( 0)in the following21 \\leq( 1)- 1\\leq1 \\leq 23 \\leq 2N4 \\leq\\leq\\leq2 \\leq\\leq\\leqT1 \\leq M1 \\leq2 \\leq(11 \\leq M \\", ".- 2 \\leq\\leq\\leq 1 \\leq\\leq 1 \\leq\\leqM \\leq\\leq\\leqTM \\leq N\\leq 1 \\leq\\leq\\leq3\\leq N \\leq\\leq1 \\leq\\leq 1 \\leq-", "inthe.=(- 1) )\" +\"\" + \"\"\" + \"T\"\"T\"\"T\", \"T\", \"T\"\"T\", \"T\", \"T\", \"T\",\"T\",, \"T\", \"T\",, \"T\", \"T\", \"T\",", "=11 \\leq1 \\leq\\leq- 1 \\leq\\leq\\leqn_k, n_j ) ==n_k2 \\leq\\leq\\leqv_k \\leq0 \\leqn_j\\leq(n_k11 \\leq N2 \\le", "if the answer isnot reachVertexto reach VertexTTif0\\leqTTT1\\leq N\\leq N\\leq\\leq M \\leqN - 1 \\leq3 \\leq M \\leq\\leqM \\leq N (N-1)N - 1\\leq N\\leq"], "prompt": "\nQUESTION:\nKen loves ken-ken-pa (Japanese version of hopscotch). Today, he will play it on a directed graph G.\nG consists of N vertices numbered 1 to N, and M edges. The i-th edge points from Vertex u_i to Vertex v_i.\nFirst, Ken stands on Vertex S. He wants to reach Vertex T by repeating ken-ken-pa. In one ken-ken-pa, he does the following exactly three times: follow an edge pointing from the vertex on which he is standing.\nDetermine if he can reach Vertex T by repeating ken-ken-pa. If the answer is yes, find the minimum number of ken-ken-pa needed to reach Vertex T. Note that visiting Vertex T in the middle of a ken-ken-pa does not count as reaching Vertex T by repeating ken-ken-pa.\n\n-----Constraints-----\n - 2 \\leq N \\leq 10^5\n - 0 \\leq M \\leq \\min(10^5, N (N-1))\n - 1 \\leq u_i, v_i \\leq N(1 \\leq i \\leq M)\n - u_i \\neq v_i (1 \\leq i \\leq M)\n - If i \\neq j, (u_i, v_i) \\neq (u_j, v_j).\n - 1 \\leq S, T \\leq N\n - S \\neq T\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\nu_1 v_1\n:\nu_M v_M\nS T\n\n-----Output-----\nIf Ken cannot reach Vertex T from Vertex S by repeating ken-ken-pa, print -1.\nIf he can, print the minimum number of ken-ken-pa needed to reach vertex T.\n\n-----Sample Input-----\n4 4\n1 2\n2 3\n3 4\n4 1\n1 3\n\n-----Sample Output-----\n2\n\nKen can reach Vertex 3 from Vertex 1 in two ken-ken-pa, as follows: 1 \\rightarrow 2 \\rightarrow 3 \\rightarrow 4 in the first ken-ken-pa, then 4 \\rightarrow 1 \\rightarrow 2 \\rightarrow 3 in the second ken-ken-pa. This is the minimum number of ken-ken-pa needed.\nUse Standard Input format\nANSWER:\n"}}