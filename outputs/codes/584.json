{"584": {"code": ["thethe number ofof theof thea single integer n2the length of the givenword outside the parentheses (print0, if there is noword inside the parentheses).theof the input containsword(print 0, ifthestringa single integerthe length ofthe length of thewordstring.the first line contains thelength of the givenstring inthe", "theof the input containssinglethe length of thewordthethe first line containsthethe\"_Hello_Vasya(and_Petya)__bye_(and_OK)\". \n\n-----Output-----Yields thestring. \n\n-----Output-----Yields theof thethe length of thewordtheword,thethe given string,thethe", "0).thea single integer nthe length of thestring containsthecharacter to the right ofthe firstof theword.the first\"_Hello_Vasya(and_Petya)__bye_(and_OK)\". \n\n-----Output-----the first linethethea singleword. The first linewordthe firstof the firstword. The", "aword.thethe\"Hello_Vasya(and_Petya)__bye_(and_OK)\".thethethe(1 \u2264 n \u2264 255)\u00a0\u2014thethethe firstfirstthethe2the firstthethe\"Hello_Vasya(and_Petya)\". \nGeneratorTypes", "thethe string contains a singlecharacter.the length of theword inside the parenthesesthe number ofthewordthethethethe.nthethe length of theword inside the parentheses (print0,theword inside the parentheses),the parentheses,the number ofwordthe giventheof the string. The first", "a string containing\"Hello_Vasya(and_Petya)__bye_(and_OK)\".the firstthe second linetheword1the) {\" \"(1 \u2264 255)\u00a0\u2014thethe first wordthe\" \"the length ofstringthetheand\" \" )\"\" \"the first", "theone characterthewordthe stringthe firstthe first character\"Hello_Vasya(and_Petya)__bye_(and_OK)\".theandthe firstofinput contains a singlecharacter in thethea singlethethethethe number ofthethe first character in thea single integer n (1word in thethe", "the first samplein thetwoa singlewordword in theline of the input containsthe number ofwordthe length ofwordthethethelength of thetheword in thethe input contains a singleword inside the parentheses (printthe length of theword inside the parentheses,the number ofword in the parentheses, theword in thethe firstthe first line", "theword inside the parentheses.onea singlecharacters containinga0, if there is noword inside thetheofthe length of thethe(print 0, if thereword inside the parentheses,the length ofthethelength ofthethethe length of theword inside theword inside the parentheses.thethe given string.= 0 ; i <word", "the\"Hello_Vasya(and_Petya)__bye_(and_OK)\".. \n\n-----Output-----the firsta single\"Hello_Vasya(and_Petya)\". \n\n-----Examples-----a single integer n (1n\"Hello_Vasya(and_Petya)\". \n\nInputCnkstring\"Hello_Vasya"], "prompt": "\nQUESTION:\nModern text editors usually show some information regarding the document being edited. For example, the number of words, the number of pages, or the number of characters.\n\nIn this problem you should implement the similar functionality.\n\nYou are given a string which only consists of:  uppercase and lowercase English letters,  underscore symbols (they are used as separators),  parentheses (both opening and closing). \n\nIt is guaranteed that each opening parenthesis has a succeeding closing parenthesis. Similarly, each closing parentheses has a preceding opening parentheses matching it. For each pair of matching parentheses there are no other parenthesis between them. In other words, each parenthesis in the string belongs to a matching \"opening-closing\" pair, and such pairs can't be nested.\n\nFor example, the following string is valid: \"_Hello_Vasya(and_Petya)__bye_(and_OK)\".\n\nWord is a maximal sequence of consecutive letters, i.e. such sequence that the first character to the left and the first character to the right of it is an underscore, a parenthesis, or it just does not exist. For example, the string above consists of seven words: \"Hello\", \"Vasya\", \"and\", \"Petya\", \"bye\", \"and\" and \"OK\". Write a program that finds:  the length of the longest word outside the parentheses (print 0, if there is no word outside the parentheses),  the number of words inside the parentheses (print 0, if there is no word inside the parentheses). \n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 255)\u00a0\u2014 the length of the given string. The second line contains the string consisting of only lowercase and uppercase English letters, parentheses and underscore symbols. \n\n\n-----Output-----\n\nPrint two space-separated integers:  the length of the longest word outside the parentheses (print 0, if there is no word outside the parentheses),  the number of words inside the parentheses (print 0, if there is no word inside the parentheses). \n\n\n-----Examples-----\nInput\n37\n_Hello_Vasya(and_Petya)__bye_(and_OK)\n\nOutput\n5 4\n\n\nInput\n37\n_a_(_b___c)__de_f(g_)__h__i(j_k_l)m__\n\nOutput\n2 6\n\n\nInput\n27\n(LoooonG)__shOrt__(LoooonG)\n\nOutput\n5 2\n\n\nInput\n5\n(___)\n\nOutput\n0 0\n\n\n\n\n\n-----Note-----\n\nIn the first sample, the words \"Hello\", \"Vasya\" and \"bye\" are outside any of the parentheses, and the words \"and\", \"Petya\", \"and\" and \"OK\" are inside. Note, that the word \"and\" is given twice and you should count it twice in the answer.\nUse Standard Input format\nANSWER:\n"}}