{"2800": {"code": ["the game$0$ cardthe top ofcardsthethe secondcards arethethethetheto remove thethe firstthe first cardthe nextcard isthethethe next pilethethe cardthe next card.the first card isto remove thecards.cards.the firstcards.the first pile.", "-cardsthe player to moveby selectingcardsa card.cardsthe\\leqto remove the card fromthe playerbethebea player.a player canthethecardtotheto move. athe firstcard to removethe first card, having to", "the pile..  public( ) {()card( ).( ) ;}.the( ) ;}.).( ) ; }) ; }.] ) ;}..( ) ; } }) ; } }", "the firstthethe topcards.  public,) { for iin range ( 0,) {( )) { if (().{) ;( ) ; }[[ i ]] ) ;[ i ].,,] ) ; } }. add (( ) ) ;1", "..the first pile andthebe abethethe firstthethethefirst card is.) {]cards.}the number ofcards.cards arethe playerto. add (( c, n) ;) ; }", ".  public( ) {cards on the) {-() ; } }:= 0 ; n <(n <.( ) ; n( ) ; }n <( ) { n= 0 ; n0 ; n).n( ) ; }( )=, n ) ; }, n ) ;", "- Select the firstcardsthethethatthethethethethethethe second card withthe card to remove\\leq Kthe carda cardthethethetheby thea card from thethe topcards, the number of cardsthecards, the number of", "thea.) {cardstheto removecards with thethat.cards in thethethe firstto remove.the first pile.theand thetheand thecards withto remove.the nextcards.the firstthe first card. Athe next pile and the", "being.1$( )the.( ) ) {( ) ; if\\leq C \\leq 100$1$\\leqthe( ) ;( ) ; }) { if (( ),]) {( )( ) ) {.(.)( ) ) ) {", ". TheAlicethethethe([ ] card] ).( )card\\leq)).).( ).( ).).(cardsthe{}.}.,( ).( )."], "prompt": "\nQUESTION:\nAlice and Bob created a new game while at the beach this summer. All they need is a set of numbered playing cards. They start by creating $P$ piles with all cards face-up and select a non-negative number $K$. After that, they take turns like this:\n - A player starts by selecting one of the piles.\n - Then, he removes from $0$ up to $K$ cards from the top of that pile, leaving at least one card in the pile.\n - Next, he looks at the card left at the top of the pile and must remove a number of cards equal to its value (from the top of the same pile).\n\nWhoever doesn\u2019t have more cards to remove, or whoever is forced to remove more cards than those available on a pile, loses the game.In the figure, you can see an example with two piles and $K = 1$. The player to move might: \n - Select the first pile and $0$ cards to remove, being forced to remove $1$ card from the top next.\n - Select the second pile and $0$ cards to remove, having to remove $1$ card from the top next.\n - Select the second pile and $1$ card to remove, having to remove $2$ cards from the top next.\n\nAlice has realized that Bob is very good at this game and will always win if he has the chance. Luckily, this time Alice is first to play. Is Alice able to win this game?\n\n-----Task-----\nGiven the description of the piles with all the cards and the maximum number of cards they can start to remove, your goal is to find out whether Alice can win the game if she is the first to play.\n\n-----Input-----\nThe first line contains $2$ space separated integers, $P$, the number of piles, and $K$, the maximum number of cards they can start to remove on their turn. The next\u00a0$P$ lines start with an integer $N$, indicating the number of cards on a pile. $N$\u00a0space separated integers follow, representing the cards on that pile from the bottom to the top.\n\n-----Constraints-----\n\n$1 \\leq P \\leq 100$\n\nNumber of piles.\n\n$1 \\leq K \\leq 10$\n\nMaximum number of cards a player can start to remove.\n\n$1 \\leq c \\leq 10$\n\nNumber on each card.\n\n$1 \\leq N \\leq 1000$\n\nSize of each pile.\n\n-----Output-----\nA single string, stating \u201cAlice can win.\u201d or \u201cBob will win.\u201d, as appropriate.\n\n-----Sample Output Explanation-----\nIn the first sample, the piles are the same, so Bob will always be able to mirror whatever move Alice makes.\n\nIn the second sample, Alice can start by removing $0$ cards from the second pile and then $1$ card from its top. Two legal moves will be possible next, Bob will make one and Alice the other.\n\n-----Examples-----\nSample Input 1:\n4 1\n4 1 1 1 1\n6 2 1 2 1 2 1\n4 1 1 1 1\n6 2 1 2 1 2 1\nSample Output 1:\nBob will win.\n\nSample Input 2:\n2 1\n1 1\n3 1 2 1\nSample Output 2:\nAlice can win.\nUse Standard Input format\nANSWER:\n"}}