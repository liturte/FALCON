{"213": {"code": ["thenthethethe0, 1, 0,0, 1, 1, 1,1,1, 0, 1,0,3, 1, 1,2, 1, 1,2,3, 1, 1,3,7, 2, 3,4,3,3, 2, 1,2,3,1,1,", "the lastis onfloor.andof the1 -floor.4-th(11-th floor.the1-thin theflat is2-th2-th floor.1-this on the3-th3-th3-th0-th3-th floor.3-th flat is3-th floor", "thosein thethenthe.in thethe1.(.( 1..(.() ) { if (( 2) ==( ) == 2 )1 ) {..( ) ==", "thethe firstis on the3-th1-tha1-ththe(1 \u22641-th3-th flat2-th floor.3-this on the 3-ththe 6-this2-ththethethetheflat isto determinethe 3-thin a unique way.of the above", "of4.5.3.3.= 1;2;3; 3; 3; 3;3;3; 2; 2;3;2;3; 3; 3;3; 2;3; 2; 3;3; 3; 3;3; 3; 3;4; 1; 1;3;2; 3;3;", "3and the2-th flatthethe4-this3-thn-th2-this the1-this the4-th3-thflat istheand the1-ththe1-th3-thof the 3-th floor.the 5-th3-th floor.3-th", "on.thethefloor.the 4-ththethe3-th floor,3-th floor.3-th3-th3-th3-th2-th floor.3-th floor.the3-th3-th4-th7-th6-th floor, so, thethe 5-thflat is on", "then-th.thethethe234-th1-th(1 \u22642-th, so, the4-th, so, the 3is on the 3-ndof the 4-th3-th, so, the3-th, so, the(1 \u2264nisfor the1, 2,", "theofthe.in the.thethe.(n.isthe. floor. floor.. floor.. floor. floor.. floor. floor.. floor. floor. floor. floor. floor. floor. floor. floor. floor. floor.", "1 -thethat is theflat is onthe2-th2-th1-thin the4-th floor.the 5-ththe3-th1-th(13-th3-th2-th floor.3-th3-th3-ththe 4-ththefloor, so, thethe 2-"], "prompt": "\nQUESTION:\nIn a building where Polycarp lives there are equal number of flats on each floor. Unfortunately, Polycarp don't remember how many flats are on each floor, but he remembers that the flats are numbered from 1 from lower to upper floors. That is, the first several flats are on the first floor, the next several flats are on the second and so on. Polycarp don't remember the total number of flats in the building, so you can consider the building to be infinitely high (i.e. there are infinitely many floors). Note that the floors are numbered from 1.\n\nPolycarp remembers on which floors several flats are located. It is guaranteed that this information is not self-contradictory. It means that there exists a building with equal number of flats on each floor so that the flats from Polycarp's memory have the floors Polycarp remembers.\n\nGiven this information, is it possible to restore the exact floor for flat n? \n\n\n-----Input-----\n\nThe first line contains two integers n and m (1 \u2264 n \u2264 100, 0 \u2264 m \u2264 100), where n is the number of the flat you need to restore floor for, and m is the number of flats in Polycarp's memory.\n\nm lines follow, describing the Polycarp's memory: each of these lines contains a pair of integers k_{i}, f_{i} (1 \u2264 k_{i} \u2264 100, 1 \u2264 f_{i} \u2264 100), which means that the flat k_{i} is on the f_{i}-th floor. All values k_{i} are distinct.\n\nIt is guaranteed that the given information is not self-contradictory.\n\n\n-----Output-----\n\nPrint the number of the floor in which the n-th flat is located, if it is possible to determine it in a unique way. Print -1 if it is not possible to uniquely restore this floor.\n\n\n-----Examples-----\nInput\n10 3\n6 2\n2 1\n7 3\n\nOutput\n4\n\nInput\n8 4\n3 1\n6 2\n5 2\n2 1\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first example the 6-th flat is on the 2-nd floor, while the 7-th flat is on the 3-rd, so, the 6-th flat is the last on its floor and there are 3 flats on each floor. Thus, the 10-th flat is on the 4-th floor.\n\nIn the second example there can be 3 or 4 flats on each floor, so we can't restore the floor for the 8-th flat.\nUse Standard Input format\nANSWER:\n"}}