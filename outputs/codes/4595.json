{"4595": {"code": ["A and ends with ZA and ends with).thes.A and.A and ends withZ.A,A,A andZ.A,A, Z,Snuke can.A,Z,A,Z,A,A,Z,A,Z,", "the.A andZ,with A andA andZ,.Snuke can) ;ifSnuke hassuch that..( ) ;. split (=. split; for ( int1. split.( ) ;( )split ( )", "A andis the same asA andandZ.A andZ.A andZ.AAZ.A andZ,A andZ,AZ.Snuke has decided to constructof theA andA andZ.=; if (length )", "A and ends withA and ends with Z.of theA and ends with Z.A andZ.A andZ.Snuke can construct aA and ends withA andZ.is given fromin the following format:A and ends withA, and ends withZ.\nNoAA andZ.s. A and ends withs.", "thethe) ).A andZ.A andZA and endsSnuke can construct a... AA,A,A andZ. AZA.AZ. AZ. ASnuke can constructA and Z. AZ is", "of ain the following format:A and ends with Z.A and endsA and ends within the following format:A and ends withA and ends withA and ends withZ, A andA andZ.A and ends withA andZ, A andA and ends withA and endsZ.Z,A andAA andZ, and A", "A andinoutput is given fromstandard input format:is givenof the following format:is givenin the followingformat:A and ends with Zoutput.Snuke has decidedbetheinSnuke can construct,aA and ends withA,Snuke can constructA andA andZ,A and ends withSnuke can constructA and", "in the following format:Snukehas decided to constructA, which ends withA and ends withSnuke.stringSnuke.s.in theofA and ends withA,Z,A andSnuke..) ).Snuke.Snuke.Snuke.A,.( \" \" ). Snuke ( ) )", ".A and ends with Z.A and ends withZ,s, which isA and ends withA andZ.A and ends withA and ends withA and ends withA and ends withandZ.A,Z.AZ.A,and ends withA, Z isA,Z.A,Z,.", "A and ends withA and ends withA andZA and ends withA and ends withA and ends with ZA andZs,isin the followingstandard input format:input in the followingofA andA and ends withandthethethes,ais given fromofA and ends with"], "prompt": "\nQUESTION:\nSnuke has decided to construct a string that starts with A and ends with Z, by taking out a substring of a string s (that is, a consecutive part of s).\nFind the greatest length of the string Snuke can construct. Here, the test set guarantees that there always exists a substring of s that starts with A and ends with Z.\n\n-----Constraints-----\n - 1 \u2266 |s| \u2266 200{,}000\n - s consists of uppercase English letters.\n - There exists a substring of s that starts with A and ends with Z.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\ns\n\n-----Output-----\nPrint the answer.\n\n-----Sample Input-----\nQWERTYASDFZXCV\n\n-----Sample Output-----\n5\n\nBy taking out the seventh through eleventh characters, it is possible to construct ASDFZ, which starts with A and ends with Z.\nUse Standard Input format\nANSWER:\n"}}