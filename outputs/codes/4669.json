{"4669": {"code": ["a singlea singlea single word isof theof the= 0words in words:forif num_vowels % 2 ==0:() :1 ] )( )= [ ]]] if[ 1 ][ 0 ]][ 1 ]if num_vowels % 2 ==] =: for: score += 1for num_", "inthea single=+2 )if num_vowels % 2 ==is_vowel(letter):num_vowels % 2 ==:1) :score +=else :score +=1if num_vowels %:) :+= 1if num_vowels0 :0 :0 := 0 :if num_vowels", "athe given. split () := 0==. split ( )0'.'split ( )= 0+=] :. split (] :2]1 :] [ 00 ] [ 11]] :[ 1 ] [ 11 ] :", "(the giventhe inputtheif,) ) :(. split () ) ifis_vowel ( letter )if num_vowels % 2 ==0:(1 )for0::= 0) if num_vowels %1is_vowel ( letter ) :( num_vowels % 20:score +==", "if:(0:: if num_vowels % 2>=]: #if num_vowels % 21: #if num_vowels %1: #if num_vowels %num_vowels % 2:num_vowelsforif1=if num_vowels % 2else#if num_vowels %0: #if", "{. split ( )= 0= 0]. split ( )score += 2(. split ( )= 0 if=== 0 if num_vowels ==:== 1 else :if num_vowels ==:= 0 if num_vowels== 0:= 1=scorereturn score\n\nn= 0 for:[ 0", ": #1 ] #) #in the input as( ) #in the1 ] ) #in [ 'a', 'e','i', 'o', 'u', 'y'][ 'a'] #if is_vowel(letter):num_vowels(1num_vowels % 2 == 0:12if num_vowels % 2", "input().split()\nCASES:=. split== 0\nn =:if len (word : if= 1= 21=if) >) ) :if:0if num_vowels % 2 ==:if num_vowels % 2]] )) for] == 0: if= 2", ",) :in,'a','e', 'i','o', 'u','y', 'u', 'y', 'n', 'a', 'e','y', 'y','A', 'B',, 'A', 'B', 'A''A', '", "thethethe(=(=[ ]],, 1, 2 )(, 3 )( 'a',) ) if len) :) if len () ==) :]1 )] =1] = len (]) if len"], "prompt": "\nQUESTION:\n=====Problem Statement=====\nIn this challenge, the task is to debug the existing code to successfully execute all provided test files.\nConsider that vowels in the alphabet are a, e, i, o, u and y.\nFunction score_words takes a list of lowercase words as an argument and returns a score as follows:\nThe score of a single word is 2 if the word contains an even number of vowels. Otherwise, the score of this word is 1. The score for the whole list of words is the sum of scores of all words in the list.\nDebug the given function score_words such that it returns a correct score.\nYour function will be tested on several cases by the locked template code.\n\n=====Input Format=====\nThe input is read by the provided locked code template. In the first line, there is a single integer n denoting the number of words. In the second line, there are n space-separated lowercase words.\n\n=====Constraints=====\n1\u2264n\u226420\nEach word has at most 20 letters and all letters are English lowercase letters\n\n=====Output Format=====\nThe output is produced by the provided and locked code template. It calls function score_words with the list of words read from the input as the argument and prints the returned score to the output.\ndef is_vowel(letter):\n    return letter in ['a', 'e', 'i', 'o', 'u', 'y']\n\ndef score_words(words):\n    score = 0\n    for word in words:\n        num_vowels = 0\n        for letter in word:\n            if is_vowel(letter):\n                num_vowels += 1\n        if num_vowels % 2 == 0:\n            score += 2\n        else:\n            ++score\n    return score\n\n\nn = int(input())\nwords = input().split()\nprint(score_words(words))\nUse Standard Input format\nANSWER:\n"}}