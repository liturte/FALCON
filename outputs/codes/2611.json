{"2611": {"code": ["$i$to removepile from$t_i$the$t_i$tothe coordinate $t_i$$t_i$ is the coordinate of$t_i$ is the coordinate(0 \\le$t_i$ is$t_i$ is the coordinate ofof the$t_i$ is the coordinatet_i$$t_i", "of theisin thethe coordinate $x$thatpile in the coordinateat this moment.thethe $i$-th$t_i$ is the coordinateand thethe$x$the coordinate$t_i$ is the coordinatethe$n$$q$$t_i$the$t_i$ is the coordinate ofthe$", "the). (= 0; $q$ is$t_i$ $t_i$ $t_i$t_i$t_i$t_i $n $$t_i$ $t_i$ $t_i$$t_i$ $t_i$of thethe(t_i$t_i$ $t", "thepilea query$p_i$the coordinate $i$-th pile.$t_i$ isa$n$the$p_i$ is the coordinate ofthe $i$-thpile.theof the$t_i$ isthe $i$-th pile..$p_i$theand $p_", "the$t_i$ is the coordinatethe$t_i$ is the coordinate ofthe $t_i$$x$ $1$$t_i$ is the coordinate ofthe $t_i$the $t_i$thethein the$t_i$the coordinate $t_i$the$t_i$ isthethe $t_", "of theat some moment.it$0$ to$t_i$the $t_i$$n$the$q$ contains$t_i$the $t_i$ is the$t_i$ is the coordinate of$t_i$ is thethe$n$$p_i$ is the coordinateof the $i$-th pile.", "theifqueries are appliedthe$t_i$the coordinatethethe$n$ is the number$p_i$the coordinate of the$t_i$theto the$p_i$ is the coordinatethein the $i$-th$p_i$ is the$t_i$ is thethethethe $i$-th", "$t_i$. )pile of trashthe coordinatethetothe coordinate $t_i$the$t_i$= 1 ;$t_i$a pile in$t_i$$t_i$ is the coordinate$t_i$ isof the $i$-th$t_i$theto $t_i", "a.thethe:: $x$ $n$the coordinate.( ) {);) {pile.pile.( ) ; }(, p_1, p_2p_i ) ; }$t_i$, p_n$p_i = p_n$ (p_ip_i,, p", "the. the( ) {..) { pile =( )t_i. pile( );. pile = pile$x$ =(( )).. pile.i=.( )).t_i, 1). pile."], "prompt": "\nQUESTION:\nVova decided to clean his room. The room can be represented as the coordinate axis $OX$. There are $n$ piles of trash in the room, coordinate of the $i$-th pile is the integer $p_i$. All piles have different coordinates.\n\nLet's define a total cleanup as the following process. The goal of this process is to collect all the piles in no more than two different $x$ coordinates. To achieve this goal, Vova can do several (possibly, zero) moves. During one move, he can choose some $x$ and move all piles from $x$ to $x+1$ or $x-1$ using his broom. Note that he can't choose how many piles he will move.\n\nAlso, there are two types of queries:\n\n  $0$ $x$ \u2014 remove a pile of trash from the coordinate $x$. It is guaranteed that there is a pile in the coordinate $x$ at this moment.  $1$ $x$ \u2014 add a pile of trash to the coordinate $x$. It is guaranteed that there is no pile in the coordinate $x$ at this moment. \n\nNote that it is possible that there are zero piles of trash in the room at some moment.\n\nVova wants to know the minimum number of moves he can spend if he wants to do a total cleanup before any queries. He also wants to know this number of moves after applying each query. Queries are applied in the given order. Note that the total cleanup doesn't actually happen and doesn't change the state of piles. It is only used to calculate the number of moves.\n\nFor better understanding, please read the Notes section below to see an explanation for the first example.\n\n\n-----Input-----\n\nThe first line of the input contains two integers $n$ and $q$ ($1 \\le n, q \\le 10^5$) \u2014 the number of piles in the room before all queries and the number of queries, respectively.\n\nThe second line of the input contains $n$ distinct integers $p_1, p_2, \\dots, p_n$ ($1 \\le p_i \\le 10^9$), where $p_i$ is the coordinate of the $i$-th pile.\n\nThe next $q$ lines describe queries. The $i$-th query is described with two integers $t_i$ and $x_i$ ($0 \\le t_i \\le 1; 1 \\le x_i \\le 10^9$), where $t_i$ is $0$ if you need to remove a pile from the coordinate $x_i$ and is $1$ if you need to add a pile to the coordinate $x_i$. It is guaranteed that for $t_i = 0$ there is such pile in the current set of piles and for $t_i = 1$ there is no such pile in the current set of piles.\n\n\n-----Output-----\n\nPrint $q+1$ integers: the minimum number of moves Vova needs to do a total cleanup before the first query and after each of $q$ queries.\n\n\n-----Examples-----\nInput\n5 6\n1 2 6 8 10\n1 4\n1 9\n0 6\n0 10\n1 100\n1 50\n\nOutput\n5\n7\n7\n5\n4\n8\n49\n\nInput\n5 8\n5 1 2 4 3\n0 1\n0 2\n0 3\n0 4\n0 5\n1 1000000000\n1 1\n1 500000000\n\nOutput\n3\n2\n1\n0\n0\n0\n0\n0\n499999999\n\n\n\n-----Note-----\n\nConsider the first example.\n\nInitially, the set of piles is $[1, 2, 6, 8, 10]$. The answer before the first query is $5$ because you can move all piles from $1$ to $2$ with one move, all piles from $10$ to $8$ with $2$ moves and all piles from $6$ to $8$ with $2$ moves.\n\nAfter the first query, the set becomes $[1, 2, 4, 6, 8, 10]$. Then the answer is $7$ because you can move all piles from $6$ to $4$ with $2$ moves, all piles from $4$ to $2$ with $2$ moves, all piles from $2$ to $1$ with $1$ move and all piles from $10$ to $8$ with $2$ moves.\n\nAfter the second query, the set of piles becomes $[1, 2, 4, 6, 8, 9, 10]$ and the answer is the same (and the previous sequence of moves can be applied to the current set of piles).\n\nAfter the third query, the set of piles becomes $[1, 2, 4, 8, 9, 10]$ and the answer is $5$ because you can move all piles from $1$ to $2$ with $1$ move, all piles from $2$ to $4$ with $2$ moves, all piles from $10$ to $9$ with $1$ move and all piles from $9$ to $8$ with $1$ move.\n\nAfter the fourth query, the set becomes $[1, 2, 4, 8, 9]$ and the answer is almost the same (the previous sequence of moves can be applied without moving piles from $10$).\n\nAfter the fifth query, the set becomes $[1, 2, 4, 8, 9, 100]$. You can move all piles from $1$ and further to $9$ and keep $100$ at its place. So the answer is $8$.\n\nAfter the sixth query, the set becomes $[1, 2, 4, 8, 9, 50, 100]$. The answer is $49$ and can be obtained with almost the same sequence of moves as after the previous query. The only difference is that you need to move all piles from $50$ to $9$ too.\nUse Standard Input format\nANSWER:\n"}}