{"2984": {"code": ["orin the1.0,theisthe)thethe,(0.0, 1.0, 1.01.0, 1.0,1.0,2.0,2.0, 1.0, 2.0, 3.0,1.0, 1.0,1.0, 2.0,1.0,", "thein the2 * Mthetheof the1car.theto thethe.00.0 ).\\leq 1000$ )\"\"' +\" +\\leq 100$\" + \"\" +.\\leq 100$ )\" + \"\" + \"", "theof thethetheof thethethe..= 0.00001 ;0.00001 ;)1.00001 ;.; } }() ;0.000010.00001 ; }= 0.00001 ;)=1.00001 ;0.00001 ;) ; }.", "210(\\leq 0$)ofthethe.( 1 )1 ) )'+ ''')) )in( ) ) ;( ) ; if (=.(( ) ) ;) ;( ) ; }( ) ;) ; }( ) ) ;) ; }", "thethethetheofin thethethethethetheof thecar.thetheaaisthethethe( 1thethetheof the passengers. The", "and the.aof the2,of thecar.(\\leq100$, $L$ ($2is the1, $P$ ($3 \\leq2,$4, $5,\\leq 100$,the first line of1, $2,(1, $L) is thethethe(1, $L)length", "thethethethe#1...()..(.( \" \",)) ; }. format ( \")\"(, \" \",\" \", \" \"\" \"\" \",\" \", \" \"\" \", \" \"", "ofof the.theoftheof thethetheto the2theofthethe. format (,(. format ( \",\" \" )( ) )( ) ) ;. format ( \" \"; if (( )", "(thethe(the(thenumber ofcar in thethe( 'D', 'M')( 'F', 'M','T', 'S''S', 'S''N',, 'P', 'P''S', 'T', 'T''T', 'T',,", "athatthethethethethethe= 0) ; for (.(,2]. length ) ;{ int i = 0[ i ][ i ]=] [ 0 ][ i ][ i ]]. length ) ;[ i ] [ 1] []. length"], "prompt": "\nQUESTION:\nPunctual City is well known for the punctuality of its citizens and its public transportation system. It is particularly famous for its train system. It is always on time, and never too late (or even too early). Statistics about train boarding is regularly collected to keep things running smoothly.\n\nA train has cars numbered $1$ to $N$ (from front to back), each of length $L$ meters. Each car has exactly one door for boarding located at the center ($L/2$ meters from each end of the car). There are no gaps between cars.\n\nWhen the train stops at the boarding platform, each passenger waiting for the train walks to the door of the car which is closest to them, taking the higher numbered car in the case of a tie.\n\nGiven the location of the passengers relative to the train, help the city by reporting the longest distance that any passenger has to walk and the maximum number of passengers boarding any single car.\n\n-----Input-----\nThe first line of input contains three integers $N$ ($1 \\leq N \\leq 100$), which is the number of cars of the train, $L$ ($2 \\leq L \\leq 100$), which is the length of each car, and $P$ ($1 \\leq P \\leq 1000$), which is the number of passengers waiting for the train. It is guaranteed that $L$ is an even number.\n\nThe next $P$ lines describe the location of the passengers relative to the train. Each line contains a single integer $x$ ($0 \\leq x \\leq 10000$), which is the distance the passenger is behind the front-end of the train.\n\n-----Output-----\nDisplay the longest distance that any passenger has to walk on one line. On the next line, display the maximum number of passengers boarding any single car.\n\n-----Examples-----\nSample Input:\n68 90 6\n3809\n288\n2306\n2215\n4211\n379\nSample Output:\n27\n1\nUse Standard Input format\nANSWER:\n"}}