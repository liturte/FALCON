{"2259": {"code": ["a1isna[i] a[i] a[i]a[i] a[i]2]2]a[i] a[i] a[i+1](1,) a[i]a[i] a[i+1]a[i]a[i] a[i] a[i]) a[i] end if", "in1.a_1, a_2,...,.[ 2,[ 3, 2] is(1, 3, 2)].3, 2]a[i] \u2264 a[i]a[i] \u2264 a[i]]. length >2 ]. length). length ==). length == 1(1,2", "the= 1theif a[i] < a[i+1] thena[i] end for01 ] if1 ] =. addedges (a[i]end for)) )))(1(2,) ) end for(2,(1,(1, 2) and(2, 3) and (3,", "aa_1, a_2,...,a_{n} (1a_{n} (1 \u2264a_{n} (1n = 2[= 21edges inis [1,1]a_1, a_2,..., a_{n} (1,A1 \u2264 n] =edges1, 3) and", "a_1,a_2,..., a_{n} (1 \u2264isa_1, a_2,...,a_{n} (1 \u2264 a_{i} \u22641, 3).2.thea_1, a_2,..., a_{n}2.andof thethethea_1, a_", "a_1 \u2264 a_2 \u2264the(1,0.a[i]a[i+1]edge in G betweeni+1]a[i]a[i+1] if a[i] >if a[i] > a[i+1]theis [1,1] if1]anda[i]", "a_1, a_2,..., a_{n}theedges inthe=independent set of[3, 2] ifindependent set] andindependent set of(2, 3) and (1, 2)edges (1, 2)1.independent settheindependent set ofindependent set ofindependent set ofthe(3, 3", "a1, 2) and (2, 3)Aindependent set of thegraphand 2 edges (1, 3)a[i]edgesthethegraph G,1, 2).theaa_1, a_2,..., a_{n}= 122, 3)edge (1, 3) and3).(3,3", "a_1 a_2 a_{n} a_{i} \u2264a_1 \u2264 a_{i}=a_1 \u2264 a_{i}thetheindependent set ofthe input containsthe. \n\ngetthe(1, 3). \n\nget3).a_2,..., a_{n}).", "thetheedges is [1, 2].1, 2]gather4)a_1, a_2,..., a_{n}n. If thelength of thethe graphinof11, 3]a[i] and a[i+1] isa[i]a[i]to a[i] and a[i+1]"], "prompt": "\nQUESTION:\nIahub recently has learned Bubble Sort, an algorithm that is used to sort a permutation with n elements a_1, a_2, ..., a_{n} in ascending order. He is bored of this so simple algorithm, so he invents his own graph. The graph (let's call it G) initially has n vertices and 0 edges. During Bubble Sort execution, edges appear as described in the following algorithm (pseudocode). \n\nprocedure bubbleSortGraph()\n\n    build a graph G with n vertices and 0 edges\n\n    repeat\n\n        swapped = false\n\n        for i = 1 to n - 1 inclusive do:\n\n            if a[i] > a[i + 1] then\n\n                add an undirected edge in G between a[i] and a[i + 1]\n\n                swap( a[i], a[i + 1] )\n\n                swapped = true\n\n            end if\n\n        end for\n\n    until not swapped \n\n    /* repeat the algorithm as long as swapped value is true. */ \n\nend procedure\n\n\n\nFor a graph, an independent set is a set of vertices in a graph, no two of which are adjacent (so there are no edges between vertices of an independent set). A maximum independent set is an independent set which has maximum cardinality. Given the permutation, find the size of the maximum independent set of graph G, if we use such permutation as the premutation a in procedure bubbleSortGraph.\n\n\n-----Input-----\n\nThe first line of the input contains an integer n (2 \u2264 n \u2264 10^5). The next line contains n distinct integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 n).\n\n\n-----Output-----\n\nOutput a single integer \u2014 the answer to the problem. \n\n\n-----Examples-----\nInput\n3\n3 1 2\n\nOutput\n2\n\n\n\n-----Note-----\n\nConsider the first example. Bubble sort swaps elements 3 and 1. We add edge (1, 3). Permutation is now [1, 3, 2]. Then bubble sort swaps elements 3 and 2. We add edge (2, 3). Permutation is now sorted. We have a graph with 3 vertices and 2 edges (1, 3) and (2, 3). Its maximal independent set is [1, 2].\nUse Standard Input format\nANSWER:\n"}}