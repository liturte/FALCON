{"3965": {"code": ["\"NO\" (without quotes)in thetheoftis nobler in thetheof the output.1(1 \u2264then1thethe inputisthe giventheword1.of the giventheofthe output.the line of thethat linea number of lines", ".  public static void) {())the output is().]\" \"if\" \" in the\" \"\" \" in the; }= 0; i <()), \" \" ) ;\" \" ) {() ) {; } }( ) { if (", ")the given.]]=.;. length > 1] ) {] ; }) ; }) { if (is( )) {( )( ).().=) ) {} else {( ) ; } }) ; } } }", ") { if (\"Tu\" )a} else(\"Tu\" ) ;() ;=(in the output.+ '' + 'a' )\"Tu\" ) ;, \"Tu\" )\"A\" ) ;\"A\" ) ;\"A\" )(\"Tu\" ) ;;) {; if (", "thethe(() ) { if () {.0.(in( ) {) )( ) )} else {( )( )} }is notif( ) ) {\"YES\" (without quotes) in then( )( ) )( ) ) {", "theof theintheofthe givenis the(inthe givenaofcharacters. split ()( )if ( word.( ) == 0word. length >) { word.wordword. length) { word.( ) == 0 )word. length ==) { word.; word. length", "andtheof\"n\"of the\"n\" ) {( \"n\") ). length}) { for ( int= 0 ; i++ ) {1 ) {[ i ])] [].) ;) { if () { for; i < n ;{ if (\"n\" ) { for ([ i ]", ".)).a single(0 \u2264 1 )\u00a0\u2014(1 \u2264 1the first linethe input contains a singlein thetheword thatconsonantsthat aretothe(1 \u2264 1)\u00a0\u2014 thethe word.1)\u00a0\u2014 the number oflines(1the", ".in the).=. split ( \" \") ;n. split ( \" \")( \" \" ).( \" \" ).( \" \" )\" \").( \" \" ).( \" \" )). join ( \"){ for (( \"\"\" \" ).\" \"\" \"]. split( \"", "istheofato betheof a consonantthethetheof atisisthethe.} }tis to be(tis to bethe tistis to betheaaof aa"], "prompt": "\nQUESTION:\nYou are given a text consisting of n lines. Each line contains some space-separated words, consisting of lowercase English letters.\n\nWe define a syllable as a string that contains exactly one vowel and any arbitrary number (possibly none) of consonants. In English alphabet following letters are considered to be vowels: 'a', 'e', 'i', 'o', 'u' and 'y'.\n\nEach word of the text that contains at least one vowel can be divided into syllables. Each character should be a part of exactly one syllable. For example, the word \"mamma\" can be divided into syllables as \"ma\" and \"mma\", \"mam\" and \"ma\", and \"mamm\" and \"a\". Words that consist of only consonants should be ignored.\n\nThe verse patterns for the given text is a sequence of n integers p_1, p_2, ..., p_{n}. Text matches the given verse pattern if for each i from 1 to n one can divide words of the i-th line in syllables in such a way that the total number of syllables is equal to p_{i}.\n\nYou are given the text and the verse pattern. Check, if the given text matches the given verse pattern.\n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 100)\u00a0\u2014 the number of lines in the text.\n\nThe second line contains integers p_1, ..., p_{n} (0 \u2264 p_{i} \u2264 100)\u00a0\u2014 the verse pattern.\n\nNext n lines contain the text itself. Text consists of lowercase English letters and spaces. It's guaranteed that all lines are non-empty, each line starts and ends with a letter and words are separated by exactly one space. The length of each line doesn't exceed 100 characters.\n\n\n-----Output-----\n\nIf the given text matches the given verse pattern, then print \"YES\" (without quotes) in the only line of the output. Otherwise, print \"NO\" (without quotes).\n\n\n-----Examples-----\nInput\n3\n2 2 3\nintel\ncode\nch allenge\n\nOutput\nYES\n\nInput\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n\nOutput\nNO\n\nInput\n4\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\n\nOutput\nYES\n\n\n\n-----Note-----\n\nIn the first sample, one can split words into syllables in the following way: in-tel\n\nco-de\n\nch al-len-ge\n\n\n\nSince the word \"ch\" in the third line doesn't contain vowels, we can ignore it. As the result we get 2 syllabels in first two lines and 3 syllables in the third one.\nUse Standard Input format\nANSWER:\n"}}