{"1848": {"code": ["thethea_{i}a_{n}(1 \u2264 a_n \u2264< a_{i}a_{i}1,...,a_{n} (1 \u2264a_{i}the(1 \u2264+ 1 >1)\u00a0\u2014 the number ofa_{n} \u2264(1 \ufffd", "thea_{n} \u2264 1000)thea_{n}]] [ 1 ]) [] [ 1 ]]]]); }]( 1]) ; } else( a_{n}) {i - 1) ; }()( 1) ; }) { for ( int", "painting thea_1,..., a_2,...,0 \u2264..)...) )=( 0a_1.a_2.+ 1) ).=] ;1] ) ; if (>= 1 ) {a_1.( 1) ) ;( 1", "thethat a_1 \u226411 \u22642a_1,a_2,..., a_{n})the) )a_1,n-1(1 \u2264, a_2,...,a_{n} (1 \u2264a_{i}(1 \u2264>(1 \ufffd", "of(1 \u2264 a_{i}0.thethe.= 1 ; i <n ; i ++(1) {= 1 ; i <++ ) {0n. append. append ((]) ;] ) ;. append ([ i] )] ) ;", "if)) ) {(0 ] = a_1> a_{n}0 ] = a_22]] = a_1,a_2,..., a_{n} (1] = a_1]] = a_2,,...,] = a_1,] = a_2,...,a_{n} (1 \ufffd", "is athethe)a_1, a_2,..., a_{n} (1>= a_{n})thethethea_{n}a_{n} (1 \u2264>=1thea_{n}a_{n}= 10.0,.<a_1,(1 \u2264", ": Aana_1,..., a_{n} (1a_{i} \u2264a_{i} \u2264i-th painting)thethethe next sample, thethe optimal order is:100,100, 200.Ain a_1, a_2,...,(1 \u2264thethethe2 ", "the1,a_1,..., a_2,...,a_{i} \u2264 1000)the nextthethe next sample, the optimalin100, 200, 200.the second sample, theis:100, 200, 200.theof thethe(1 \u2264 n.1,a_{n} \u2264 1000).", ".{a_i,) a_2,..., a_{n}(1 \u2264a_{n} \u2264is:a_n, a_{n} (1a_{n} \u2264 1000).the number ofthea_{n} (1 \u2264n- 1 \u2264100, 100, 200.a_{"], "prompt": "\nQUESTION:\nThere are n pictures delivered for the new exhibition. The i-th painting has beauty a_{i}. We know that a visitor becomes happy every time he passes from a painting to a more beautiful one.\n\nWe are allowed to arranged pictures in any order. What is the maximum possible number of times the visitor may become happy while passing all pictures from first to last? In other words, we are allowed to rearrange elements of a in any order. What is the maximum possible number of indices i (1 \u2264 i \u2264 n - 1), such that a_{i} + 1 > a_{i}.\n\n\n-----Input-----\n\nThe first line of the input contains integer n (1 \u2264 n \u2264 1000)\u00a0\u2014 the number of painting.\n\nThe second line contains the sequence a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 1000), where a_{i} means the beauty of the i-th painting.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the maximum possible number of neighbouring pairs, such that a_{i} + 1 > a_{i}, after the optimal rearrangement.\n\n\n-----Examples-----\nInput\n5\n20 30 10 50 40\n\nOutput\n4\n\nInput\n4\n200 100 100 200\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first sample, the optimal order is: 10, 20, 30, 40, 50.\n\nIn the second sample, the optimal order is: 100, 200, 100, 200.\nUse Standard Input format\nANSWER:\n"}}