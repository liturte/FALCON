{"4911": {"code": ["Note that itand thetheandthe firsttheis the(aofthe currentis:#ofifSong_Title #++ \"\" + \"Song_Title,\" \"+ \"Song_Title\", \"Song_Title\",\"Song_Title\"\"Song_Title\", \"Song_Title\"", ")) ;\" + \"thethe\"sort(\" \" ) ;( )\" \" ) ;( ) ;( ) ;( ) ; }( ) ; for () ; i <[ i ]] ; i) ; i ++ )] ) )) ; }=;(;( ) ; }= true ;", "( ) {; } #regiona( ) ;song_name. join (;(). join (;; }. split ( ) ;. split ( ) ;( ) ;= \"+; }\" \" )( )], \" \" ), \" \" )\" \" ) ; }\" \" ) ; }\" \" )", "thetotheorder,.in thethe,in the input; for (. length ; i ++) { print (; print ( \"\" +.) ; print ((=) ) ; print) ; print ( \"; print; print (; print( \"; print ( \"( ) ) ; print", ") {Song_Title Song_TitleSong_Title Song_TitleSong_Title Song_Title Song_TitleSong_Title Song_Title Song_TitleSong_Title Song_TitleSong_Title Song_Title Song_Title Song_Title.theMusic_Title Song_TitleSong_Title Song_Title Song_", ".... A. A; }.. A.. A,. A. A.. A. A. A.A. A.. A. A.. A. A.. A. A.. A.A. A.A. A. AA. A. AA. A. AAA.", ":::\"\" \", \"n\"\" \", \"a\" :\"b\", \"c\" :\"h\",\"m\", \"n\" : \"m\"\"s\" :, \"a\" : \"b\" }\"s\", \"b\"\"g\", \"b\", \"c\", \"j\", \"m\",\"g\"", "thethethetheis..= 0 ; i <. length( ) { for= 0 ; i <++ ) {( )++ )0 ].. indexOf ()!= - 1) ). length[][ i ] ). indexOf (. indexOf. indexOf]", "Music_Title) ;\"\" \" ) ;) ;. add () ; }() ;. add ((\" \" ) ;\" \" ) ;0 ] ) ;.( \" \" ) ;\" \" ) ;) ; }(,. add () ; } else {, \" \" ) ;, \" \" ) ;\" \"", "thethein thethe firstisallthe. join (( \" \" ). join ();= 0 ;++ ) {++ ) {. split ( \" \"()[ 0 ] )= 0 ; i <; i) {) ; }; i= 0; } } else if"], "prompt": "\nQUESTION:\nMyTunes, a new music application from Mapple, allows you to display and sort your music according to many different attributes. Attributes like album name, song title, artist, and song length are available, among others. One feature MyTunes does NOT have is stable sorting. You need to write the software which does this. Stable sorting would allow the user to do something like this: first sort the whole list by song title, and then sort the whole list by artist. The result is that the list of songs are sorted primarily by artist (since it\u2019s the last thing used to sort), then within each artist they are sorted by song name (since before the artist sort, the songs were ordered by song name). When sorting two songs with equal attribute values they should remain in their relative order prior to sorting (giving stable sorting).\n\nThe first sort starts from the order of songs as given in the input. Each subsequent sort starts from the order given by the previous sort, rather than starting from the initial order. All sorting should be done least to greatest, in lexicographic order (using ASCII values, even for numeric data).\n\n-----Input-----\nThe first line contains a list of $1$ to $20$ unique attributes, separated by single spaces. The next line contains an integer $1 \\leq m \\leq 100$ giving the number of songs that follow, one song per line. Each song has the values for all the attributes, separated by single spaces. The next line contains an integer $1 \\leq n \\leq 20$ giving the number of sorting commands. The following $n$ lines each contain one sort command, which is the name of an attribute. Initially, the song list is in the order given on the input. All attributes and values are between $1$ and $30$ characters, using only a\u2013z, A\u2013Z, $0$\u2013$9$, and underscore (_).\n\n-----Output-----\nAfter each sort command, print the list of attributes followed by the song list in the order given by the sort command, one song per line. Print a space between adjacent fields. Between each pair of printed lists, print a blank line.\n\n-----Examples-----\nSample Input:\nArtist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nGeorge_Winston Summer Lullaby 215\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nUse Standard Input format\nANSWER:\n"}}