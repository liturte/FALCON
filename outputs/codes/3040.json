{"3040": {"code": ["output:ofa single line ofinput stringinput string within theformatif{ if () ); } else {( \"{input; } } else {output =output ) ;output =, output = output1 ) ; }output ) ; }= input.( ) ;(output ) ; }", "the input string.ifa singleoutput: theof theoutput:the first occurrence ofthe first occurrence of theone, and theain theinput.2:\naaaaaa\nUseoutput: theisif the inputthe output: thein the output.(\" ) ) {: \" \"\" \" ):} else { return \"input", "input stringa single line of output:a singleof input stringoutput:output:in the input string.input inputoutput:output: the longest substringtheinput string:output: the longest substringthe input stringin the input string.output:Input format\nANON:Input format\nANON:Output format\nANON:nouna(output:output:", ")(( ) {output [ 0\"( ) ; }) ; }output [ 1output [ 2 ]output [ 3 ]1 ]output [1 ]output [ 2 ]output [2 ](output [ 12 ].output [ 2 ]]. split ([ 2 ] )[] [ 1 ]].1", "input stringinputthe input string.2:\naaaaa\nUseInput 3:\naaaa\nUseOutput 4:\naaaa\nUseInput 3:\naaaa\nUseInput 3:\naaaaaaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "a singleinput stringofinput stringinput string:(input) output:(output) output: a single lineoutput:(input) output:input string: input stringinput stringlength:input :input :)(() ) ;() ;( ) ;outputinput( outputoutput : print ((", "input string. inputoutput isof input stringof input string.inthe2:2:\naaaa\nUse Output 3:input stringoutput:in the inputstring.in the outputof theinput:output:output:input:input: input: output:output:output: output: output:string input1:\nabcbcbcba", ".  public.).\" ) ) {= \"1\";\"2\"( ) ).)] = \"1\"\"1\" ) ;; if ({( );)(if (\"2\" ) )\"1\" ) )) ; if) { print (, \"1\" ) ;\"1\" )", "input stringstring ofof the input stringlength ofinput stringinput string oflength of. split ( ').) ) ;(()outputoutputoutputoutput:+. split ('')) ) ;output : output( \" \" ) ;output0 ]0 ] ;", "output:input string.inputinput string.isofa single lineinputof input:input:1:Output 1:2:\naaaa\nUse StandardOutput 2:\naaaa\nUse Output 3:\naaaa\nUse3:\naaaa\nUse2:\naaaa\nUse1:\naaaa\nUse Output2:\naaaa\nUse Output"], "prompt": "\nQUESTION:\nGiven an input string composed solely of lowercase English letters, find the longest substring that occurs more than once in the input string. The two occurrences are allowed to partially overlap.\n\n-----Input-----\nThe input is a single line containing a string of lowercase letters. The string contains more than one character, but no more than $10^5$. At least one letter will appear at least twice.\n\n-----Output-----\nPrint a single line of output: the longest substring that occurs more than once in the input string. If there are multiple longest repeated substrings, print the one the would come first when the longest substrings are sorted in lexicographical (alphabetical) order.\n\n-----Examples-----\nSample Input 1:\nabcefgabc\nSample Output 1:\nabc\n\nSample Input 2:\nabcbabcba\nSample Output 2:\nabcba\n\nSample Input 3:\naaaa\nSample Output 3:\naaa\nUse Standard Input format\nANSWER:\n"}}