{"1701": {"code": ["ofip ofthe serverthe.....) ; }in theline is of\"command ip;\" (1separated byntheofip of theof the server,and a stringthe name of the serverthe commandip of thea string ip, ip ofof theof the server, separated by", ".n /thea string name,a string ip oftheip of thetheand a string name,ip ofthea string name,ip of the server,is ofand a string ip ofip of theone of the na string name,ip of thea stringip of the server, separatedof English lowercase letters.ip isoftenof", "command.) ;( 1).; #namea stringip of thethe server, separated byof( 1 \u2264ip of theof theone of the n.( 1 \u2264 |name| \u2264.......) ;( 1 \u2264(.", "athea string ip, ip ofa string ip, ipof a stringof the server, separated byofof the server.a string ip, ip ofofline contains a string name,ip of the server,of the(1 \u2264 |name|(1 \u2264 |ip| \u2264(1andof).). split", "thethe network.the network.thethenof then servers, and aa stringip, ip of the server,separated by space.the nof theip of theof thethe none of theof thethe nofa stringtheip of the server,ofof the server,of the ip of the", ".the ncommand is ofthe name of the= \"command ip; #name\"thein.][[]] [ ]]\"command ip;\"ip of the]ip of[ ] [ ]] [ ] [] [ 1] [ 1 ] [] [ 2 ]] [ 1 ] [] [ 1 ](", "for)..a stringip, ip of thecommand..a string name,.[Image] \nline contains.) {) { #(1, 2, 3, 4, 5,#1, 2, 2,2, 2, 3,2, 3, 5, 6,6, 9,3,5, 4,", "theofis a string name,a stringa string name,ip of the server,ofof a stringip of the server,is a(1theof the nalltheand ip of the server,and ipthe(1n, mthe serverofthe nthe command inthe nof the server, separated by", "theof aip of thetheof theof thethe n servers, and aof a stringthetheserver and a string ipip, ip of the server,isthe n servers.of the= \"command ip;\" (1 \u2264ip, ip ofbebyofof thea string(1 \u2264 |command| \ufffd", "a singlecommand. The nginxisa string ip,of the ntheof na string ip, ip ofin theline is ofofof n(1)the commanda string name,ip of theof the nthe nofof the nofof a string ip, ipof the server, separated by(1 \u2264 |"], "prompt": "\nQUESTION:\nAs the guys fried the radio station facilities, the school principal gave them tasks as a punishment. Dustin's task was to add comments to nginx configuration for school's website. The school has n servers. Each server has a name and an ip (names aren't necessarily unique, but ips are). Dustin knows the ip and name of each server. For simplicity, we'll assume that an nginx command is of form \"command ip;\" where command is a string consisting of English lowercase letter only, and ip is the ip of one of school servers.\n\n [Image] \n\nEach ip is of form \"a.b.c.d\" where a, b, c and d are non-negative integers less than or equal to 255 (with no leading zeros). The nginx configuration file Dustin has to add comments to has m commands. Nobody ever memorizes the ips of servers, so to understand the configuration better, Dustin has to comment the name of server that the ip belongs to at the end of each line (after each command). More formally, if a line is \"command ip;\" Dustin has to replace it with \"command ip; #name\" where name is the name of the server with ip equal to ip.\n\nDustin doesn't know anything about nginx, so he panicked again and his friends asked you to do his task for him.\n\n\n-----Input-----\n\nThe first line of input contains two integers n and m (1 \u2264 n, m \u2264 1000).\n\nThe next n lines contain the names and ips of the servers. Each line contains a string name, name of the server and a string ip, ip of the server, separated by space (1 \u2264 |name| \u2264 10, name only consists of English lowercase letters). It is guaranteed that all ip are distinct.\n\nThe next m lines contain the commands in the configuration file. Each line is of form \"command ip;\" (1 \u2264 |command| \u2264 10, command only consists of English lowercase letters). It is guaranteed that ip belongs to one of the n school servers.\n\n\n-----Output-----\n\nPrint m lines, the commands in the configuration file after Dustin did his task.\n\n\n-----Examples-----\nInput\n2 2\nmain 192.168.0.2\nreplica 192.168.0.1\nblock 192.168.0.1;\nproxy 192.168.0.2;\n\nOutput\nblock 192.168.0.1; #replica\nproxy 192.168.0.2; #main\n\nInput\n3 5\ngoogle 8.8.8.8\ncodeforces 212.193.33.27\nserver 138.197.64.57\nredirect 138.197.64.57;\nblock 8.8.8.8;\ncf 212.193.33.27;\nunblock 8.8.8.8;\ncheck 138.197.64.57;\n\nOutput\nredirect 138.197.64.57; #server\nblock 8.8.8.8; #google\ncf 212.193.33.27; #codeforces\nunblock 8.8.8.8; #google\ncheck 138.197.64.57; #server\nUse Standard Input format\nANSWER:\n"}}