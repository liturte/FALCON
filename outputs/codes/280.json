{"280": {"code": ["the.- 1 \\leqthe.(10 ).(in the1 )if (0.- 1 )) ;) ;() ) {the)the.(. split (''2 ] ) ; }", "thethe.thetheathe- 1\\cdots w_Nl_1 w_Nl_1 w_Nl_1\\cdots w_Nl_1 w_Nl_M/the- 1 \\cdots w_Nl_1M \\cdots w_Nl_M w_Nl_1-thein the2 \\", "thethe bridge willthe() ; if (0 ) {( 1 )2 ) ; if2 ) ;( 1 ) ; if1 ) ; if ()=) ; if ((() ; if() { if.((() ; if} if (; } if (!", ".thethe.if it is possiblethethethethethethethethethe- 1thethe= 24 22 2 2 2= 1 ; i <; i ++ ) {.( w_i,= 1) { if (=.( w_i, v_i= 1= 0if", "theifequal to1 -thethe linew_i, l_i,4 - the weight capacity2 --the- 1 - the- 1 -(4 - the2 -the-part 2 - sotheifis notthe first and last(,= 0 ; i <", "22theof)is not0 - the21 -if thein the-thein thethethethem in the line,thethethethethethe line, thethethe first and lastof thetheof theof thew_i, l_i, v_M_i, w_i,", "thethein the- 1 \\leq2 \\leq- 1 \\leqthe4 - the12 is inside the1 isthe1the2 -2 -in the= 1-thein the= 1if the= 1 ; ifin the0.0if thetheif ( i > 0.0", "= 1the0v_i.) ; if (,,)( 0, 1,) ;() { if( 1; } else if (2 )if (; } }( ) ;:, \"\" )\";\" \" )) ; }", "thein thein theof the= -=the=( w_i ) /( w_i ) /)(( w_i ) /( w_i ) /( w_i/( w_i ) /) / ( w_i.( w_i ) / ((w_i ) /- ( w_i", "thethe(thethe4 - the2 -of theifthe first and lasttheof the(excluding the endpoints)- 1 -(excluding the endpoints) is(excluding the endpoints) isthethetheof thetheis(excluding the2) isa non-negative real number. if ("], "prompt": "\nQUESTION:\nThere are N camels numbered 1 through N.\nThe weight of Camel i is w_i.\nYou will arrange the camels in a line and make them cross a bridge consisting of M parts.\nBefore they cross the bridge, you can choose their order in the line - it does not have to be Camel 1, 2, \\ldots, N from front to back - and specify the distance between each adjacent pair of camels to be any non-negative real number.\nThe camels will keep the specified distances between them while crossing the bridge.\nThe i-th part of the bridge has length l_i and weight capacity v_i.\nIf the sum of the weights of camels inside a part (excluding the endpoints) exceeds v_i, the bridge will collapse.\nDetermine whether it is possible to make the camels cross the bridge without it collapsing. If it is possible, find the minimum possible distance between the first and last camels in the line in such a case.\nIt can be proved that the answer is always an integer, so print an integer.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq N \\leq 8\n - 1 \\leq M \\leq 10^5\n - 1 \\leq w_i,l_i,v_i \\leq 10^8\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\nw_1 w_2 \\cdots w_N\nl_1 v_1\n\\vdots\nl_M v_M\n\n-----Output-----\nIf the bridge will unavoidably collapse when the camels cross the bridge, print -1.\nOtherwise, print the minimum possible distance between the first and last camels in the line when the camels cross the bridge without it collapsing.\n\n-----Sample Input-----\n3 2\n1 4 2\n10 4\n2 6\n\n-----Sample Output-----\n10\n\n - It is possible to make the camels cross the bridge without it collapsing by, for example, arranging them in the order 1, 3, 2 from front to back, and setting the distances between them to be 0, 10.\n - For Part 1 of the bridge, there are moments when only Camel 1 and 3 are inside the part and moments when only Camel 2 is inside the part. In both cases, the sum of the weights of camels does not exceed 4 - the weight capacity of Part 1 - so there is no collapse.\n - For Part 2 of the bridge, there are moments when only Camel 1 and 3 are inside the part and moments when only Camel 2 is inside the part. In both cases, the sum of the weights of camels does not exceed 6 - the weight capacity of Part 2 - so there is no collapse.\n - Note that the distance between two camels may be 0 and that camels on endpoints of a part are not considered to be inside the part.\nUse Standard Input format\nANSWER:\n"}}