{"2803": {"code": ["animal name youcanof animal namesthe next player,thethe last onetheanimal nameis athethe last onetheanimalthe nexttheone theanimal namethe first onethethe last one thatthethe last one thatathe next one.lasta single word, the animal", "(animal nameis notanimal namethe next playerinputcanan animal namethe nextname that you can playthe nextthe firstif thereanimal name that you canthe next playerthe next onethe next one,the next oneisthe last oneto be said beforethe next oneifmore than 1,the next onethe next", "input).( ) ;if () { if)\" \")input,.=( ) ;( ). appendif(); if ()( ) ; } }. append (''() ; if () ) {; }", "one of theanimalcan bethat itnotathename toanimal name.the nextand onenotisin the input list..( ).]).).) ).) ). split ().(. split (if (", ".)a=) ; for i) ; i <; i ++{ if () )) { if (.())) ) {( ) ) ;}) ; } }) )( ) ; }() ;(if (.0 ) { if (", "andthe last one thatof the lastnot yetif thattotheanimal name you:::::: { } }:::: { } }: { } }: { } }1:: { } }0 } ;: {} ;the last animal name", "output a question mark.if anyyou cantheof inputthe lasta)).)output ).( )1 )( ).( )( );( ).]( ) ; ifinput(( )\"( )( ),", "the last animal name youthethelast onetheis ayoubethe first one, butthe)the last onethe nexttheanimal thatin thethe last onethe last onethethe next onethe next oneis notanimaltheall animals. split (", "animal name that you canplayyou canyou cana name thatyou canthe nextathe.. split () ; for (( i) ; i < n) {, \" \" ) )) ; }) {if ().) )( ) ;} else {if (]( \" \" ).", "animalthe lasttheisthe nextthethe nextanimal is not yetor youyou canthea singlethe last animal isandthethe last onetheanimal namethe lastto( ). split ()( )( ).( ))"], "prompt": "\nQUESTION:\nYou are playing a game in which a group of players take turns saying animal names. The animal name you say when it is your turn must start with the same letter as the previously said animal ends with and it must not have been said previously in this round of the game. If there is no valid name or you cannot come up with one you are eliminated. \n\nGiven the last animal name said before your turn and a list of all names not yet used, can you make it through this turn? If so, can you make sure to eliminate the next player?\n\n-----Input-----\nThe first line of input contains a single word, the animal that the previous player just said. The next line contains a single integer $n$ ($0 \\le n \\leq 10^5$), the number of valid unused animal names. Each of the following $n$ lines contains one valid unused animal name.\n\nAll animal names (including the one the previous player said) are unique and consist of at least $1$ and at most $20$ lower case letters \u2018a\u2019-\u2018z\u2019.\n\n-----Output-----\nIf there is any animal name you can play that eliminates the next player, output the first such name from the input list, followed by an exclamation mark. Otherwise, if there is any animal name that you can play, output the first such name. Otherwise, output a question mark (in this case you will just have to make up a fake name in the hope that the others will trust you that this is a real animal).\n\n-----Examples-----\nSample Input 1:\npig\n2\ngoat\ntoad\nSample Output 1:\ngoat\n\nSample Input 2:\ndog\n2\nsnake\nemu\nSample Output 2:\n?\nUse Standard Input format\nANSWER:\n"}}