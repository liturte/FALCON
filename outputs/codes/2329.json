{"2329": {"code": ["theareas$a_i$ is $b_i$$a_i$ is$a_i$ is$a_i$ is $b_i$ $a_i$ isall discs in thethe firstdiscs in the firstthe first tower isthe$a_i$$a_i$ is $b_i$ andthe first tower", "of thediscs$1$ and $2$thediscsare$1$ andthetowersthe discs$2$ and$n$ is$m$$j$of thediscstoand$a_i$1 ]$ and$k$ isit is a$b_i$and thediscs area", "$n$ and $m$.thediscs inthe. \n\n\nTowerof$k$,thediscsof$k$, $a_i$, and $b_i$,theof theofthe discs in$n$ $k$$k$ $k$$k$$n$$k$$k$", "of the discsthethediscs$a_i$themthediscs areto the firstdiscs areare$j$the firstdiscs arethediscsthediscsthediscs arediscs arethe firstdiscs are $i$ anddiscs arethem in the bottom to", "$a_i$ $b_i$ $a_i$the first$i$ $ j$(22 \\cdot 10^5$n$$m$(1,a tower is. \n\n\nInput-----the output containsarray ofthediscsdiscs arethethediscs arethediscs areof theof", "$m$1 ]$thediscsthese discs arethe$a_i$is a$m$ $n$$i$ $n$$i$to bethediscsthe$j$ $n$ $j$ $j$$j$ $j$ofthediscs.discsdiscs.$m$ $", "a singleofdiscsinof thethediscsthe firstdiscs from the first tower,the firstdiscs in$n$ and $m$of $i$$k$,thediscsthediscs areat least onedisc, sothe discs are$j$, sothediscsthediscs is", "of discsthediscs todiscs are= $i$ - $j$$i$ $ j$ $1]$ anddiscs from the$i$ anddiscs in$m$ $n$ and $j$ $j$discs fromof the$i$ $k$discs to the$a_i$ and $b_i$ $k$", "$n$thediscs in theof the discsin the(each disc$k$$n$at leastdiscs, thediscs$k$ is$a_i$$b_i$$a_i$ is the firsttower$k$, and $b_i$ is$a_i$ is$b_i$ is", "thethe$k$ queries are performedthediscs in the first towerand$k$$a_i$ and $b_i$the first towertheis)the firstdiscs are$k$ queries are performedthe$n$ $n$ $i$discs inthe second tower $b_i$towerthethe"], "prompt": "\nQUESTION:\nYou have a set of $n$ discs, the $i$-th disc has radius $i$. Initially, these discs are split among $m$ towers: each tower contains at least one disc, and the discs in each tower are sorted in descending order of their radii from bottom to top.\n\nYou would like to assemble one tower containing all of those discs. To do so, you may choose two different towers $i$ and $j$ (each containing at least one disc), take several (possibly all) top discs from the tower $i$ and put them on top of the tower $j$ in the same order, as long as the top disc of tower $j$ is bigger than each of the discs you move. You may perform this operation any number of times.\n\nFor example, if you have two towers containing discs $[6, 4, 2, 1]$ and $[8, 7, 5, 3]$ (in order from bottom to top), there are only two possible operations:\n\n  move disc $1$ from the first tower to the second tower, so the towers are $[6, 4, 2]$ and $[8, 7, 5, 3, 1]$;  move discs $[2, 1]$ from the first tower to the second tower, so the towers are $[6, 4]$ and $[8, 7, 5, 3, 2, 1]$. \n\nLet the difficulty of some set of towers be the minimum number of operations required to assemble one tower containing all of the discs. For example, the difficulty of the set of towers $[[3, 1], [2]]$ is $2$: you may move the disc $1$ to the second tower, and then move both discs from the second tower to the first tower.\n\nYou are given $m - 1$ queries. Each query is denoted by two numbers $a_i$ and $b_i$, and means \"merge the towers $a_i$ and $b_i$\" (that is, take all discs from these two towers and assemble a new tower containing all of them in descending order of their radii from top to bottom). The resulting tower gets index $a_i$.\n\nFor each $k \\in [0, m - 1]$, calculate the difficulty of the set of towers after the first $k$ queries are performed.\n\n\n-----Input-----\n\nThe first line of the input contains two integers $n$ and $m$ ($2 \\le m \\le n \\le 2 \\cdot 10^5$) \u2014 the number of discs and the number of towers, respectively.\n\nThe second line contains $n$ integers $t_1$, $t_2$, ..., $t_n$ ($1 \\le t_i \\le m$), where $t_i$ is the index of the tower disc $i$ belongs to. Each value from $1$ to $m$ appears in this sequence at least once.\n\nThen $m - 1$ lines follow, denoting the queries. Each query is represented by two integers $a_i$ and $b_i$ ($1 \\le a_i, b_i \\le m$, $a_i \\ne b_i$), meaning that, during the $i$-th query, the towers with indices $a_i$ and $b_i$ are merged ($a_i$ and $b_i$ are chosen in such a way that these towers exist before the $i$-th query).\n\n\n-----Output-----\n\nPrint $m$ integers. The $k$-th integer ($0$-indexed) should be equal to the difficulty of the set of towers after the first $k$ queries are performed.\n\n\n-----Example-----\nInput\n7 4\n1 2 3 3 1 4 3\n3 1\n2 3\n2 4\n\nOutput\n5\n4\n2\n0\n\n\n\n-----Note-----\n\nThe towers in the example are:\n\n  before the queries: $[[5, 1], [2], [7, 4, 3], [6]]$;  after the first query: $[[2], [7, 5, 4, 3, 1], [6]]$;  after the second query: $[[7, 5, 4, 3, 2, 1], [6]]$;  after the third query, there is only one tower: $[7, 6, 5, 4, 3, 2, 1]$.\nUse Standard Input format\nANSWER:\n"}}