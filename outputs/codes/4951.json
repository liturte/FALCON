{"4951": {"code": ["thethe first line of inputthethethe first linetheanda conclusion. If theis notthe first lineisthe number(line numbers start at//the number ofline is the numberthe number of theiftheandis theof theone conclusion. If thetheare thethe", "thethein the \u201cproof\u201d.one of theoftheconclusions ofis aconclusion.of theconclusionsa conclusion.conclusions ofthea conclusion. Theconclusions of the firstline with an erroris athe first lineand thethethe first lineandthe number offirst line isthe first", "ifthethethe first.=.( )( ) ;($0; }... A = () ;if ()in thethe\" + $1$( ) ; } }() ; } }) ; }= ( \" \"", "the number ofthe first line of inputthe number ofthe first linein(theof$1$ line isa conclusiontheandconclusionsthelineandthethe= 2$the2$1$ linethe first line isoftheare allof the \u201cproof\u201d. Thethe first line isand", "of the.:: A AB A AA A A AB A A BA AA A AB AFermat ->COMCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCO", "the \u201cproof\u201d. Theanconclusionthe \u201cconclusion\u201d.anthethe \u201cconclusion\u201dthetheof the \u201cconclusion\u201d.anandconclusion \u201cconclusion\u201d.thealltheall of theof theconclusions. Thethe", "itthea\\le 5$conclusions, followed byofof.line1, 2,and theof theonetheconclusions. The first linethe number ofis1, 2, 3,2, 3, 4,1, 1, 1,1,1, 2, 2,1, 2, 2,2, 2,3", "bethethethe)) ;( ) ; if (if () ;if (} else if (( )( ) ; }) ; }output) ; if(} else {) {) ; }) ; } })).(in ( ) ; }", "a. Sometimes theof thea conclusion.thein the \u201cconclusions\u201dthe. Sometimes thethethetheand conclusions areas well asthe number ofthe \u201cconclusions\u201d.the number ofthe \u201cconclusions\u201d.thetheis aa conclusion. Theof", "aisas well as theandthein the \u201cproof\u201d.in thethe$2$, the number oflines of the \u201cproof\u201d). Ifthe number of linesthe \u201cproof\u201d.theof thethethe number ofisthethe number ofthe \u201cproof\u201d."], "prompt": "\nQUESTION:\nYou are teaching discrete math. You have done your best to teach your students about axioms and inference rules, proofs and theorems. Sometimes the students write beautiful proofs that Fermat would be proud of but sometimes, also like Fermat, their proofs are not quite right. You are getting a little tired of hunting through some of these so-called \u201cproofs\u201d for the magic tricks that let them prove $1 = 2$ and had the great idea to write a computer program to speed things up!\n\nBecause this is the first class in proof-based mathematics, you have started your students off with a simple proof system. All proof lines consist of a list of assumptions, an arrow, and a conclusion. If there are no assumptions, the conclusion is an axiom. A line of the proof is valid if and only if all assumptions were conclusions of previous lines. Sometimes the students derive a conclusion more than once just to be extra sure it is true, and that is perfectly all right!\n\n-----Input-----\nThe first line of input consists of an integer $1 \\le n \\le 400000$, the number of lines in the \u201cproof\u201d. Then follow the $n$ lines of the \u201cproof\u201d. Each line has $0 \\le a \\le 5$ assumptions, followed by an arrow (the string \u201c->\u201d), followed by one conclusion. All assumptions and conclusions consist of $1 \\le c \\le 5$ uppercase alphabetic characters. The assumptions, arrow, and conclusion are all separated by single spaces.\n\n-----Output-----\nIf every line is correct output \u201ccorrect\u201d. Otherwise, output the number of the first line with an error (line numbers start at $1$).\n\n-----Examples-----\nSample Input:\n3\n-> ALICE\n-> BOB\nALICE BOB -> CARL\nSample Output:\ncorrect\nUse Standard Input format\nANSWER:\n"}}