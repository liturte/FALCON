{"1653": {"code": ["AB CAAAAAA ABCin theCA \u00a0\u2014 AAA'A' AAA B BAA AA AB $\\rightarrow $A A A A AB AA AC $\\rightarrow $$ \\rightarrowA A A AA A A A BAA AC $", "1 2A B2 2 4 3 4A A AA A C CBC \\rightarrowA AA AAA B \\rightarrowA AA AAA AA BBA B CB $\\rightarrowA AA A A $\\rightarrowAA A A\\rightarrow A A C \\rightarrowA A A", "andin thestring,thecharacter isa'A' and 'B''C' or 'B'character'A' and 'C''B''C' or'C' and 'C'to 'A''B' or 'C'theand 'C' are 'A''B' and'C' or'C' and '", "inthetheto aofisthethe first query is'A' and 'B''C' and 'D''0' if the'1' ifthe resultof the(1 \u2264)'0' if(1'1' if'1' if//'0' if the} if'A''B", "can beaaA BA AAA BA A AA AAA A BAB A CAAA\u00a0\u2014 AA AA A BA A AAA A BAA BAABA A AA A B BBAB B B C A", "a stringa.BAA A CA A A A AC'C''A' \u00a0A A AA A AA A AAAA A BAA AA A A AAA A AA A AA \u00a0A \u00a0 A A A AA B B B BA BB", "'C''C''B')(1(1\u2264 a'B''C' 'C' 'C' 'A''C' 'A' 'A''B' 'C' 'A' 'A' 'A''B'A' 'B' 'C''C' 'C' 'B''C' 'A'", "AAAAA C AAA AA AAA A CA \u00a0\u2014 AC \u00a0\u2014 A AA A A CA A A AA \u00a0\u2014 A AA\u00a0\u2014 A AA\u00a0\u2014 A AAAA A AA A A AA A A A AA", "forA\u00a0\u2014A\u00a0\u2014 A\u00a0\u2014theof the'A'A\u00a0\u2014 A\u00a0\u2014 A\u00a0\u2014 A\u00a0\u2014 A\u00a0\u2014 A\u00a0\u2014A\u00a0\u2014 A\u00a0\u2014 A\u00a0\u2014 A\u00a0\u2014 A\u00a0\ufffd", "the:AAB CAABA A CA A AAA C BCA A A BAA A CAAA A BA BAA AA A CA B BA\u00a0\u2014 A \u00a0 \u2014 A ABA \u00a0\u2014 A BA B CBA"], "prompt": "\nQUESTION:\nAlice has a string consisting of characters 'A', 'B' and 'C'. Bob can use the following transitions on any substring of our string in any order any number of times:   A $\\rightarrow$ BC  B $\\rightarrow$ AC  C $\\rightarrow$ AB  AAA $\\rightarrow$ empty string \n\nNote that a substring is one or more consecutive characters. For given queries, determine whether it is possible to obtain the target string from source.\n\n\n-----Input-----\n\nThe first line contains a string S (1 \u2264 |S| \u2264 10^5). The second line contains a string T (1 \u2264 |T| \u2264 10^5), each of these strings consists only of uppercase English letters 'A', 'B' and 'C'.\n\nThe third line contains the number of queries Q (1 \u2264 Q \u2264 10^5).\n\nThe following Q lines describe queries. The i-th of these lines contains four space separated integers a_{i}, b_{i}, c_{i}, d_{i}. These represent the i-th query: is it possible to create T[c_{i}..d_{i}] from S[a_{i}..b_{i}] by applying the above transitions finite amount of times?\n\nHere, U[x..y] is a substring of U that begins at index x (indexed from 1) and ends at index y. In particular, U[1..|U|] is the whole string U.\n\nIt is guaranteed that 1 \u2264 a \u2264 b \u2264 |S| and 1 \u2264 c \u2264 d \u2264 |T|.\n\n\n-----Output-----\n\nPrint a string of Q characters, where the i-th character is '1' if the answer to the i-th query is positive, and '0' otherwise.\n\n\n-----Example-----\nInput\nAABCCBAAB\nABCB\n5\n1 3 1 2\n2 2 2 4\n7 9 1 1\n3 4 2 3\n4 5 1 3\n\nOutput\n10011\n\n\n\n-----Note-----\n\nIn the first query we can achieve the result, for instance, by using transitions $A A B \\rightarrow A A A C \\rightarrow \\operatorname{AAA} A B \\rightarrow A B$.\n\nThe third query asks for changing AAB to A\u00a0\u2014 but in this case we are not able to get rid of the character 'B'.\nUse Standard Input format\nANSWER:\n"}}