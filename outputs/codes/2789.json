{"2789": {"code": ["the lastthatif theis not theMirko can taketheifthe.(.1 :1 :output 1:Input 2:\n9\n9output1:\n10\n91:\n10\n9 Output 2:({).(( ).( )} else if (", "Mirko can only takeofin abeing a winningato takethe lastMirko(his firstthe)} else {(( ):(), \"Min\" : \"Max\"\"Max\" :\"Max\"\"Min\"\"Min\" : \"Min\"\"Min\", \"Min\" : \"Min\"", "thethethe.).( ) ; }.=.)( ) ;()..( ) ).( ) ;=( ) ; }; } }=( ) ;0= 0 ;() ;if ( i <", "wethethe) :=( ) ;= 0 ;<=).1 ) ) ;;0 ;0 ) ;) ; }= 0 ; i <; i ++ )}..([ i ] )[ i ] ;if (,) ; }", ")=( 1 ) ;:[ 1 ][ 2 ] ;[ 1 ] ;1:1 :0:(1,).]) {=1=[ 1 ] ;[ 1 ] ;] ;(1 ]. length >", ".:the..( ) ).) ) ;( ) ):: \"0\" )( ) ;;.. input ) {=.[ 0; } if;(input,:,) ) ; if (.", "number ofin the$3$,thebethethatcan takethe( ) ;=( ) ;-- 1 ) *(Mirko) ) )( ) ) )) ; if () {( ) ; }{ return( ) ; }}. format () ; }", "one orthe.(( 'n')( 'n' ) ) ;=).( 'n' ) ;1( 'n' ) ) )( 'n' ) ;= (( 'n' )( 'n').( 'n' ) ;( 'n' ) ;;() ;( 'n' )", "a(of(nn) ;) ;.) ; }( n)) ; } }) ; } };( n ).) ;n ) ; }( n) ; }()( n ) ;.( n ) ; }{ if ( n", "Mirkothe..= (( ) ; if.) )( ) ) {( )() ); } else if (( ) ; }) { return () ; } else if(],; } }.{ return( )( ) ) ;)) { if ("], "prompt": "\nQUESTION:\nMirko and Slavko\u2019s favourite pastime is competing against each other in mathematical games. This time they took a heap of $N$ pebbles and settled on the following rules:\n - Mirko is the first to play, then Slavko, then Mirko again, then Slavko and so on;\n - Mirko can take any number of pebbles (between $1$ and $N$, inclusive) from the heap during his first move;\n - In each of the following turns the current player must take at least $1$ pebble and is allowed to take at most double the amount of pebbles taken during the previous turn by the other player; naturally, one cannot take more pebbles than the remaining amount in the heap;\n - The player who takes the last pebble is the winner.\n\nBoth Mirko and Slavko play optimally (if it is possible for one player to beat the other, that player will always win). We need to find the minimum number of pebbles that Mirko must take during his first turn such that he is guaranteed to win the game.\n\n-----Input-----\nThe first and only line of input contains the positive integer $N$ ($2 \\le N \\le 10^{15}$), the number of pebbles in the starting heap.\n\n-----Output-----\nThe first and only line of output must contain the required minimum number of pebbles that Mirko needs to remove during his first turn.\n\n-----Explanation of Sample Input 1-----\nMirko has $4$ possibilities to choose from: he can take $1$, $2$, $3$, or $4$ pebbles from the heap. If he takes all $4$ pebbles he will naturally win, but that is not the minimum solution. We need to check the remaining alternatives. If Mirko takes only one pebble, Slavko is left with a heap of $3$, but he can take at most $2$. Slavko cannot take all pebbles, but Mirko will be able to take all remaining pebbles during his next turn, winning the game. We conclude that $1$ is the minimum solution for this test case.\n\n-----Examples-----\nSample Input 1:\n4\nSample Output 1:\n1\n\nSample Input 2:\n7\nSample Output 2:\n2\nUse Standard Input format\nANSWER:\n"}}