{"4738": {"code": ["=of.==( ). split (= 0 ;i <if ( k >k <)}k{ for (. split (.)+)) ;;( ) ) {=[ i ] ;(", "$s$is the smallest$k$ for which the$s$ is$k$ for which theinput string is $k$-periodic.the stringof $s$ isa string $s$ isof length $k$ for whichin $s$ is $k$-periodic.string isthe string is$s$ istheof the firsta stringthe", "is $k$-periodicof $s$ characters.$s$of the$k$the$k$-periodic.is theof $s$is $k$-periodic,ifthe$k$-periodic.thethe input stringis $s$.andthe$k$-periodica stringin the string $s$", "the.the({= $3$-periodic ;[ 0 ],) ;=output. split () )=( $s$. split () ; }length) {length. split (= split (split () ; }output( input ) ;input ) ; }", "is $k$-periodic$k$-periodic.A string $s$is $s$, then theina string $|s|$$k$-periodic, and $|s|$of $k$$s$string $s$$s$the input string is$k$-periodick$ for which$k$-periodic.$s", "$s$ is $k$-periodic.the$s$ is $k$-periodic.theis $k$-periodic.the(the$k$of the stringthat $s$ is$s$ is $k$-periodic.Theof the string $s$ is$s$ is $k$-periodic.$k$-periodic", "string is $k$-periodic:$3$-periodic:abccabbcaabc$3$-periodic:abccabbcaabc2:cabababababababababababOutput 2:Caaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "arein $s$in the inputa single line of inputinput contains aone line of input.forof(if it$k$) is equal tothethe string$s$ is$k$-periodic isis $k$-periodic)is$k$; })( )if (== \" \" )) )", "$k$ $s$ is a multiple$s$ is a multiple of$k$$k$ $s$the string$k$ $s$is$k$ $s$ isthe$k$ $s$ istheis $s$the first character of theinput contains a string$k$a single line of inputthe input stringforlength $s$", "(, $3$-periodic )( ) ;output is $3$-periodic)$s$ isin$k$-periodic. {=.)] ; for (< $s$ ; i< $s$.if (== $s$])$s$. indexOf ( $s$ )) )="], "prompt": "\nQUESTION:\nDefine a $k$-periodic string as follows:\n\nA string $s$ is $k$-periodic if the length of the string $|s|$ is a multiple of $k$, and if you chop the string up into $|s|/k$ substrings of length $k$, then each of those substrings (except the first) is the same as the previous substring, but with its last character moved to the front.\n\nFor example, the following string is $3$-periodic:abccabbcaabc\n\nThe above string can break up into substrings abc, cab, bca, and abc, and each substring (except the first) is a right-rotation of the previous substring (abc -> cab -> bca -> abc)\n\nGiven a string, determine the smallest k for which the string is k-periodic.\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. The single line of input contains a string $s$ ($1 \\le |s| \\le 100$) consisting only of lowercase letters.\n\n-----Output-----\nOutput the integer $k$, which is the smallest $k$ for which the input string is $k$-periodic.\n\n-----Examples-----\nSample Input 1:\naaaaaaaa\nSample Output 1:\n1\n\nSample Input 2:\nabbaabbaabba\nSample Output 2:\n2\n\nSample Input 3:\nabcdef\nSample Output 3:\n6\nUse Standard Input format\nANSWER:\n"}}