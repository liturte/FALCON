{"2598": {"code": ["the number of( 1 \u2264a_1,)a_2,..., a_{k},thetothethethe color ofthe edge isand thea_2,...,thea_{k},thethethatthea_{k},a_{k},the vertices connected byi-th edge,the numberof the", "of thea singleedge,thethethe number ofedge isif there are multiplemoves, outputa_1, a_2,...,the i-tha_{k} \u2264and a_{k}the number ofof the edgesa_{k},the number ofthe number ofof allanda_{k},the number ofof", "thea single vertex1 \u2264n\u00a0\u2014 the number ofthe edges arebeenofthe edges133 R1 14 R1 1 B2 BR1 3 R1 3R1 2 B3 R12 B1 R1 2 B2 R1R1 2 B1 R12 R1R1 2", "the)the number ofthe edgetothe=(1a_2,..., a_{k}{ na_2,..., a_{k} isedge{ a_{i}i =(( 1 \u2264)(2() ; if () {() ;( 0 ) ;( 1 ) ; }", "thetheoutput of the edges1thethe1 \u2264 nm \u2264 n, m \u2264'B'a_1, a_2,...,theof the edges,the.n, ma_1,i-thi-thi-thand:edge,itheedge and the", "theedges ofthe(1 \u2264 n,v_{i} \u2264 v_{i} \u2264ofthe edgethis edge is initiallyifthe edge isthe color ofand the edgesthetheedge, i-thandthethemtheedge isand the edgestheatheof the edges, i-th", "theof the edgesthe vertex that should beisone of thethe number ofthethethethe edge,the edge. ) ) { if ().) ) )) )) ) {:]if () )) { if () {) { if (.) ; } else if", "one edge.theof the input.0n + 1]- 1 ) ; }]]) ;.) ;n +.( nedge.=() ;0 ;.] ) ;} else {= m.; if ( m.if ( m.", "and).( n() {() {; } }} }} else {a_1, a_2,..., a_{k},i: a_1, a_2, a_ki ] }a_1, a_2,...,, a_2, a_{k},a_{k}, a_{k},a_{", "the edges thatinifthe input is notis(1) ; })if (( 0,i = 0 ; i)( 1,=) ;<= n ; i +++=) ; } else(( 1, m(, m],; }in theedge, i.e. theedge,( a"], "prompt": "\nQUESTION:\nYou are given an undirected graph that consists of n vertices and m edges. Initially, each edge is colored either red or blue. Each turn a player picks a single vertex and switches the color of all edges incident to it. That is, all red edges with an endpoint in this vertex change the color to blue, while all blue edges with an endpoint in this vertex change the color to red.\n\nFind the minimum possible number of moves required to make the colors of all edges equal.\n\n\n-----Input-----\n\nThe first line of the input contains two integers n and m (1 \u2264 n, m \u2264 100 000)\u00a0\u2014 the number of vertices and edges, respectively.\n\nThe following m lines provide the description of the edges, as the i-th of them contains two integers u_{i} and v_{i} (1 \u2264 u_{i}, v_{i} \u2264 n, u_{i} \u2260 v_{i})\u00a0\u2014 the indices of the vertices connected by the i-th edge, and a character c_{i} ($c_{i} \\in \\{B, R \\}$) providing the initial color of this edge. If c_{i} equals 'R', then this edge is initially colored red. Otherwise, c_{i} is equal to 'B' and this edge is initially colored blue. It's guaranteed that there are no self-loops and multiple edges.\n\n\n-----Output-----\n\nIf there is no way to make the colors of all edges equal output  - 1 in the only line of the output. Otherwise first output k\u00a0\u2014 the minimum number of moves required to achieve the goal, then output k integers a_1, a_2, ..., a_{k}, where a_{i} is equal to the index of the vertex that should be used at the i-th move.\n\nIf there are multiple optimal sequences of moves, output any of them.\n\n\n-----Examples-----\nInput\n3 3\n1 2 B\n3 1 R\n3 2 B\n\nOutput\n1\n2 \n\nInput\n6 5\n1 3 R\n2 3 R\n3 4 B\n4 5 R\n4 6 R\n\nOutput\n2\n3 4 \n\nInput\n4 5\n1 2 R\n1 3 R\n2 3 B\n3 4 B\n1 4 B\n\nOutput\n-1\nUse Standard Input format\nANSWER:\n"}}