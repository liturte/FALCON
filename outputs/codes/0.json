{"0": {"code": ["accordions area stringthe following:accordionsthein the accordionthataccordions areaccordions areaccordions areaccordions areaccordions in theaccordionis notaccordion is aaccordions are athe firstit isthethe first line isandthe first line is theaccordion.", "{ a:b:|}accordions havinglengthaand$s$. If.)+(.)({}.] ).. length ).)a: ].].] ) )]. length. length ) ; }", "accordionto obtain the accordionaccordioninaccordion.accordion. Aaccordiontheaccordion isthe accordiontheaccordionof theaccordion.the accordion..() )).aofaccordion$s$ (ASCII codea string; }", "accordion(ASCII code $094$). Thecharacters in the accordion$s$.accordion is astring$s$)$-1$.accordionthe accordion is aof characters intheaccordion isthecharacters in//the accordionnotthe accordion.accordion.lengththe accord", "aofaccordionlength $-1$.in theresult. Aaccordion isaccordion isbeandtheinput$s$ isthetheaofand ais givenif$s$ isis giventhe accordionof a stringof theof the accordion. A", "theof thelength of the accordiona stringformataccordionis given a string$s$, print $-1$.characters that arefor aofcharactersin it, print $-1$.print=).length ( )). length ( ); if (. length( ) ;( (. length ( )in ac", "accordionthecorresponding stringthe accordion.in aof$-1$. This isresulting accordionis givenaccordiona string $s$.is given a stringlength ofof characters in $s$.)(s$ is not(a:b:|)(a:b:|)the accordion.and", "accordionaccordionandaaccordion inaor[a:b:|]the accordion inaccordion[a:b:|],and.(a.() { if (!) ) {print ( \"Error:return false ; }(\"(, \" \", \"", "accordionora singleaaccordionacharacterit isthe accordiona singleaccordion.accordion.accordion.in atheaccordion.the accordionthe accordion.and$-1$.the accordion is nota accordion.and the accordionthe accordion", "a sequence ofaccordions using theof$s$ $1\\le |s|$-1$.astringa string of$s$$s$aa sequence ofofcharacters. Astring containingaccordionaccordionstring:|:|:|:|:|:|:|:|:|:|:|:|:|:"], "prompt": "\nQUESTION:\nAn accordion is a string (yes, in the real world accordions are musical instruments, but let's forget about it for a while) which can be represented as a concatenation of: an opening bracket (ASCII code $091$), a colon (ASCII code $058$), some (possibly zero) vertical line characters (ASCII code $124$), another colon, and a closing bracket (ASCII code $093$). The length of the accordion is the number of characters in it.\n\nFor example, [::], [:||:] and [:|||:] are accordions having length $4$, $6$ and $7$. (:|:), {:||:}, [:], ]:||:[ are not accordions. \n\nYou are given a string $s$. You want to transform it into an accordion by removing some (possibly zero) characters from it. Note that you may not insert new characters or reorder existing ones. Is it possible to obtain an accordion by removing characters from $s$, and if so, what is the maximum possible length of the result?\n\n\n-----Input-----\n\nThe only line contains one string $s$ ($1 \\le |s| \\le 500000$). It consists of lowercase Latin letters and characters [, ], : and |.\n\n\n-----Output-----\n\nIf it is not possible to obtain an accordion by removing some characters from $s$, print $-1$. Otherwise print maximum possible length of the resulting accordion.\n\n\n-----Examples-----\nInput\n|[a:b:|]\n\nOutput\n4\n\nInput\n|]:[|:]\n\nOutput\n-1\nUse Standard Input format\nANSWER:\n"}}