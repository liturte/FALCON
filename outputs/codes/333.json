{"333": {"code": ["ofansubsequence of astring ba is a subsequenceand \"abbc\"atheaaastring bare not\"abbc\" and \"abbc\" areofstring b as ita subsequencestringin the firstina is asubsequence of aastring b is a subsequenceof stringa.", "subsequences of aa is a subsequence ofis a subsequencethesubsequence of a.the length)inis a subsequence ofaa subsequence of string a.a subsequence\"abcd\"a is aof stringsa.a. A.stringa.stringa. A. A. A. Aa. A. Aa", "a string anda stringis aa subsequenceisa subsequence ofa string b.thesubsequenceis aa subsequencea subsequence of string a.inthe first lineis one ofthe second linea, andaa, and thearesubsequences of( a,) {strings,) ;", "a subsequence of stringa subsequencestrings are not.a= \"abc\"ais a subsequence of stringa.() {\"abc\") ;\"abbc\"\"abbc\".()\"ab\" ) {\"a\" ))\"a\") ; } else) {\"a\" ) ; }", "the\"defgh\"atheof \"defgh\"in thea and bthesubsequence of(a and b)the\"a\"is aof \"a\"a, and thea, and thea, and theb,a, and thea, andin the string a,the length of a,the length ofa, and the", "astring aais a subsequenceaaa subsequence of string\"abc\" and \"abbc\"asubsequence ofaaa)\"abc\" and\"abbc\" and \"abbc\" are\"abbc\"\"ab\" and\"abb\" and \"abb\" aresubsequences of\"a\" is a subsequence\"ab\"", "and \"abcd\" aresubsequences of stringstheisastringsubsequence ofaa, and theofstring a, and thestring b, and thea, and thestring a, andare nota subsequence of stringis thea subsequence ofstring b, andsubsequence ofstring( a )a )=(] = a", "theina subsequence ofthe length of thea subsequenceasubsequence of a astring a, andaa subsequence of stringsubsequence of stringa.\"a\" is a subsequence ofis aof stringathestring b, andaofstringaanda subsequence of stringa.string a, and", "thearethea subsequencethethe firststring a,.\"-\"\"-\"\"-\" )0 ;a\"-\" ) ;\"-\" ) ; }()) ;the first\"\\n\" ) ; if (. length ()[ 0 ]) ; } }{ if (!. length ( )", "the\"abc\" andstring \"abbc\" and \"aba\" arean empty string. A subsequenceare subsequences ofthethestringsof thestringa\"a\" andthethea\"a\" andaa\" and a \"b\" aresubsequencethe\"a\" and\"abcd\" and \"a\" arearesubsequences of"], "prompt": "\nQUESTION:\nWhile Mahmoud and Ehab were practicing for IOI, they found a problem which name was Longest common subsequence. They solved it, and then Ehab challenged Mahmoud with another problem.\n\nGiven two strings a and b, find the length of their longest uncommon subsequence, which is the longest string that is a subsequence of one of them and not a subsequence of the other.\n\nA subsequence of some string is a sequence of characters that appears in the same order in the string, The appearances don't have to be consecutive, for example, strings \"ac\", \"bc\", \"abc\" and \"a\" are subsequences of string \"abc\" while strings \"abbc\" and \"acb\" are not. The empty string is a subsequence of any string. Any string is a subsequence of itself.\n\n\n-----Input-----\n\nThe first line contains string a, and the second line\u00a0\u2014 string b. Both of these strings are non-empty and consist of lowercase letters of English alphabet. The length of each string is not bigger than 10^5 characters.\n\n\n-----Output-----\n\nIf there's no uncommon subsequence, print \"-1\". Otherwise print the length of the longest uncommon subsequence of a and b.\n\n\n-----Examples-----\nInput\nabcd\ndefgh\n\nOutput\n5\n\nInput\na\na\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first example: you can choose \"defgh\" from string b as it is the longest subsequence of string b that doesn't appear as a subsequence of string a.\nUse Standard Input format\nANSWER:\n"}}