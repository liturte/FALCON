{"2401": {"code": ["a.N - 1thewe have tothe first linethetheN - 1the numbernumber ofthewish tosheifthe number ofthe number offor theathe number ofN - 1theand R (2 \u2264T (1 \u2264N - 1n_{i} of", "ofthethe. Thethethetheis thefor atheone of thethe- 1thebe the same asthewe have tothethethetheof thethe number ofthe first line holds1 integer, R (2 \u2264the number of the", "and thefellows. Thethen_{i}theN - 1thewerethe) {\"N-1.N - 1(1 \u2264 N \u2264thethethe number ofthe(1 \u2264 N \u2264#the number ofthewereofthe number ofthe number of", ". Fortheand ittheN - 1) { if( 1the numberof the)thethebe atheof..) ) {..(),( 1 \u2264 N \u2264\u2264 N \u2264 N \u2264the number ofthe number of the", "thethethethe1the, 1 ),, 2 ),(1 \u2264thethe number onoftheincreasing order of thethethethetheincreasing order of thetheN - 1thethe last one is the. add (( 0, 0,) ) ) ) {", "histhe numberthemselvesthe(3 \u2264 Rthen_{i}the number ofof thethethethethey have to) {= new Random (. rand ( ) ;( 1N - 1,1 ) ) {. rand (. rand (, 2 )( 2 \u2264 N) ) {", ".the.../.0 ]. get ().(( 1 \u2264 Nthe number ofthe. get ().[. get (). get ().1 ]. get (( 1 )..).", "thethe number on thethethe(1 \u22642 \u2264 NNthe number ofof thethethethe number ofthethethehave to be theof theN -N - 1(1 \u2264 N \u2264N (2 \u2264 NN (2 \u22642), the number", "thein increasing order of theone)thethethe) thethem are: A\"A\": A:: A }A: A0 : A }: A }1 : A }: A } ) ;AAA \u2264 A \u2264 A: A }A \u2264 A \u2264 A", "N - 1.say.theof thehappening,the number onthethe numberwho has tothebe the same.N - 1 numbers, listedof theofthethe number offor theT (2 \u2264 Tthe number ofthea single. T (1N -). T ("], "prompt": "\nQUESTION:\nHeidi got one brain, thumbs up! But the evening isn't over yet and one more challenge awaits our dauntless agent: after dinner, at precisely midnight, the N attendees love to play a very risky game...\n\nEvery zombie gets a number n_{i} (1 \u2264 n_{i} \u2264 N) written on his forehead. Although no zombie can see his own number, he can see the numbers written on the foreheads of all N - 1 fellows. Note that not all numbers have to be unique (they can even all be the same). From this point on, no more communication between zombies is allowed. Observation is the only key to success. When the cuckoo clock strikes midnight, all attendees have to simultaneously guess the number on their own forehead. If at least one of them guesses his number correctly, all zombies survive and go home happily. On the other hand, if not a single attendee manages to guess his number correctly, all of them are doomed to die!\n\nZombies aren't very bright creatures though, and Heidi has to act fast if she does not want to jeopardize her life. She has one single option: by performing some quick surgery on the brain she managed to get from the chest, she has the ability to remotely reprogram the decision-making strategy of all attendees for their upcoming midnight game! Can you suggest a sound strategy to Heidi which, given the rules of the game, ensures that at least one attendee will guess his own number correctly, for any possible sequence of numbers on the foreheads?\n\nGiven a zombie's rank R and the N - 1 numbers n_{i} on the other attendees' foreheads, your program will have to return the number that the zombie of rank R shall guess. Those answers define your strategy, and we will check if it is flawless or not.\n\n\n-----Input-----\n\nThe first line of input contains a single integer T (1 \u2264 T \u2264 50000): the number of scenarios for which you have to make a guess.\n\nThe T scenarios follow, described on two lines each:   The first line holds two integers, N (2 \u2264 N \u2264 6), the number of attendees, and R (1 \u2264 R \u2264 N), the rank of the zombie who has to make the guess.  The second line lists N - 1 integers: the numbers on the foreheads of all other attendees, listed in increasing order of the attendees' rank. (Every zombie knows the rank of every other zombie.) \n\n\n-----Output-----\n\nFor every scenario, output a single integer: the number that the zombie of rank R shall guess, based on the numbers n_{i} on his N - 1 fellows' foreheads.\n\n\n-----Examples-----\nInput\n4\n2 1\n1\n2 2\n1\n2 1\n2\n2 2\n2\n\nOutput\n1\n2\n2\n1\n\nInput\n2\n5 2\n2 2 2 2\n6 4\n3 2 6 1 2\n\nOutput\n5\n2\n\n\n\n-----Note-----\n\nFor instance, if there were N = 2 two attendees, a successful strategy could be:   The zombie of rank 1 always guesses the number he sees on the forehead of the zombie of rank 2.  The zombie of rank 2 always guesses the opposite of the number he sees on the forehead of the zombie of rank 1.\nUse Standard Input format\nANSWER:\n"}}