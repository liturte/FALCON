{"4996": {"code": ["isthethethethetheis thethethewe\u2019llif the keyis theis thethe keyis thethe keythis) )theis aof the same length asthe key $0$-basedis thekey, thethe key isthe key $11$ is", "thekey isthein thetheof thethetheis theofthekey in thethetheit is thethetheis thethe message and thethethethe key isof thethe key,and the key is the$1$ characters long and", "andabethetheistheandthe keythethe originalthe key. A isthe original key.the messageisthe key is thethethe key.key. A is thethethethe key. Theis athethe originalthe original", "thethethetheisthe keythetheisthe first characterandof the keythe second characterthe first character inthe firstthe secondthe second character inthe firstin thethe firstthe secondthe second character in theof thethe first character inthe first characterthe second character in the", "theisofin theisthe)theisthethe:: (): (( ). length) ; } }(( ) )) ; }}( ) ;; }) { return (: (), (", "theofof.(C$ and K$ arein thethekeyand thethethethe key isC$ is shifted bythe firstcharacterthe first character inthe secondthe first character in thethe firstthe secondthe secondthe first character inthe secondthe second character in thethe", "thetheisofthethe encryptionthethekey is aof $1$ and $200$ charactersthethe encryptedthe key is a$0$is atheathethe key is athethe key istheis athe key isof thethe key is $0$-based", "the encrypted message.thethekeythethekey.oftheof1:: a.: a.( ) {( ) )} else {( ){ return (:(the key.=( ) ; for= 0 ; i <", "the:::::: 0.2,1.2, 2.22.2, 2.3, 2.3, 2.4,2.3, 2.5, 3.6, 3.5,1.1, 3.2, 3.4,3.6, 3.5, 3.5,2.0,3.3,3", "ofthe keyis giventheisin thethethethethat..)(, \"A\" ).).)..( \"A\" ).\"A\" ).] ].(( \"B\" ).( \"B\" )."], "prompt": "\nQUESTION:\nOne of the most well-known and classic methods of encryption is the Vigen\u00e8re cipher. Given a message and key of equal length, all you need to do to encrypt the message is shift each character forward by a certain number of characters in the alphabet.\n\nFor example, if your string is CALGARY and key is ALBERTA, the number of letters to shift the $i$-th letter in the message is given by the position in the alphabet of the $i$-th letter in the key, using $0$-based indexing. So the first character in our message C is shifted $0$ letters forward since the first character in our key is A. Likewise, A is shifted $11$ characters since L is the $11$-th letter in the alphabet. Repeating for each character, we\u2019ll find the encrypted message ends up being CLMKRKY.\n\nOf course since this is such a well known encryption method, it isn\u2019t very safe so your friend Yraglac has come up with a brilliant idea: for each even-indexed character in your message, you do the usual encryption as described above, but for the odd-indexed characters, instead of shifting forwards by the key, you actually shift backwards. Thus, our example above would actually be encrypted as CPMCRYY. That\u2019ll throw off any pesky hackers trying to read your secrets!\n\nOf course Yraglac has left the implementation up to you. Given an encrypted message and the key, can you write a program to decrypt it? Don\u2019t forget that everything is using $0$-based indexing.\n\n-----Input-----\nInput consists of two lines. The first contains the encrypted message $C$ and the second contains the key $K$. $C$ and $K$ are always of equal length between $1$ and $200$ characters long and consists only of uppercase alphabetic letters.\n\n-----Output-----\nOutput the decrypted message.\n\n-----Examples-----\nSample Input:\nCPMCRYY\nALBERTA\nSample Output:\nCALGARY\nUse Standard Input format\nANSWER:\n"}}