{"1960": {"code": ["number ofsubsequences of length(14, 1, 3,2, 3, 4,{a_1, a_2,1, 1,1,= {1, 3, 2,.4, 1, 1, 1,1,1,a_3,a_4} = {1, 3,2, 5}. Sequencea_1,a", "a0, 0, 0, 1,...,subsequenceofa_2, a_3, a_4} = {1,a_2, a_3, a_4} =a_4,=2,subsequences ofnumber ofinclusive subsequence,the first sample,subsequences of lengthsequence a consists2,=1, 3, 2,", "a[ 15 ]( 1 \u2264 a_{i} \u2264).{: 2 }0 ] =125145 }a_1, a_2, a_3, a_4} =3, 2, 5}. Sequencea_1, a_2, a_3,subsequence4, a_4}", "1 \u2264 a_2, a_3,a_4 } = {1,5,subsequence0, 2,1, 2, 5}. Sequence4,3, 2, 5}. Sequencesubsequences of4,a_1, a_2, a_3,a_4}4,and. \n\nOutputA2,5, 4,", "1subsequences of length 3.3, 2,a_3, a_4} = {1,3, 2, 5}. Sequencea_3,,= {1,2,5}. Sequence a has exactlysubsequences ofsubsequences of lengthis{1, 3, 2,= {1, 3,1, 5}. Sequencethe first sample,isthe", "number of elements of..a_1..( ).] ).a_2, a_3, a_4.( )..( )..[]]..a_3, a_4 }.).].)[ ] ).][ ] )", "a_1, a_2,.((a_4,...,(2lengthlength.; for i = 0) {) {i. length ;( i.; i ++ )( a_1(a_3)..).(( a_1, a_2a_3, a_4.", "a_1, a_2,...,2 3 2 33 2 5}. Sequencea_1, a_2, a_3,a_4} =1,2 3 3, 5,0, 1, 3,3, 2, 5}.a_1, a_2, a_3, a_4}a_4} = {1,3, 2, 5}.", "insubsequences ofofisina_1, a_2,...,a_{i} \u22641,(1 \u2264 nincreasing subsequence<< a_{i}a_{i}\u2264subsequences of length 4, theya_1, a_2,...,a_{n} (1 \u2264 n", "subsequences ofa_4 } = {1,3, 2, 5}.in a_4 } = {1,2, 3, 2, 5}. Sequencea_4}a_3, a_4} = {1,{a_1, a_2,1, 3, 2, 5}.sequence a consists ofof={1, 3, 2, 5}. Sequence"], "prompt": "\nQUESTION:\nThe next \"Data Structures and Algorithms\" lesson will be about Longest Increasing Subsequence (LIS for short) of a sequence. For better understanding, Nam decided to learn it a few days before the lesson.\n\nNam created a sequence a consisting of n (1 \u2264 n \u2264 10^5) elements a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5). A subsequence a_{i}_1, a_{i}_2, ..., a_{i}_{k} where 1 \u2264 i_1 < i_2 < ... < i_{k} \u2264 n is called increasing if a_{i}_1 < a_{i}_2 < a_{i}_3 < ... < a_{i}_{k}. An increasing subsequence is called longest if it has maximum length among all increasing subsequences. \n\nNam realizes that a sequence may have several longest increasing subsequences. Hence, he divides all indexes i (1 \u2264 i \u2264 n), into three groups: group of all i such that a_{i} belongs to no longest increasing subsequences. group of all i such that a_{i} belongs to at least one but not every longest increasing subsequence. group of all i such that a_{i} belongs to every longest increasing subsequence. \n\nSince the number of longest increasing subsequences of a may be very large, categorizing process is very difficult. Your task is to help him finish this job.\n\n\n-----Input-----\n\nThe first line contains the single integer n (1 \u2264 n \u2264 10^5) denoting the number of elements of sequence a.\n\nThe second line contains n space-separated integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^5).\n\n\n-----Output-----\n\nPrint a string consisting of n characters. i-th character should be '1', '2' or '3' depending on which group among listed above index i belongs to.\n\n\n-----Examples-----\nInput\n1\n4\n\nOutput\n3\n\nInput\n4\n1 3 2 5\n\nOutput\n3223\n\nInput\n4\n1 5 2 3\n\nOutput\n3133\n\n\n\n-----Note-----\n\nIn the second sample, sequence a consists of 4 elements: {a_1, a_2, a_3, a_4} = {1, 3, 2, 5}. Sequence a has exactly 2 longest increasing subsequences of length 3, they are {a_1, a_2, a_4} = {1, 3, 5} and {a_1, a_3, a_4} = {1, 2, 5}.\n\nIn the third sample, sequence a consists of 4 elements: {a_1, a_2, a_3, a_4} = {1, 5, 2, 3}. Sequence a have exactly 1 longest increasing subsequence of length 3, that is {a_1, a_3, a_4} = {1, 2, 3}.\nUse Standard Input format\nANSWER:\n"}}