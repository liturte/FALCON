{"3379": {"code": ["inedges in $G$.thetheinthethe number of.... $n$ ).).).(. $y$ )..).} } } }(. $n$. $y$ ).;. $y$ )$y$.$y$$y$.", "in the$L$.$x$\u00a0always follows$n$ is$y$ is the number of$y$the numberof edges.the number of nodes and$x$ is the number of$y$ is the number$n$ is the$y$ is the number of$x$ is the number of$y$ is the number of$y$the number", "the.: $S$$m$\\leq.=.=[ ]= [ ] ; for]; i <{ for ( i= 0 ; i <( ) ; i) {[ i ] [ 0]] =[] ) {] )) ) {] ] ;,", "node in $G$.is not$y$theit isthe$x$ is$y$ is the number ofis the number ofedges. This is followed by$x$ is1). The second lineis the number of nodesis the number of$n$ is the number ofnumber of edges.is the number of$y$ is then, $m$", ".ofthe input$G$.; } if (!() { for () ; } }in thethe; }the input,$G$. split ( \"\\n\"+ \"\\n\"=( )( ) ; }( ) ;, 0, n) {( ). add () ;( $", "is( $x$=\\leq$\\alpha$theof$G$ is aitthe order of thethe$G$.( $\\alpha); foreach ([ ][ 0 ]) { $\\alpha$) ;(() { $\\alpha$). join () ;'-'( ) ) ) ;", "theof thein the$n$ istheof thethatisthe number of$n$ is the numberofthe number of edges.isall$n$is the numberthe number oftheof $n$$m$ is the number of$n$ is thein thethe firstof thein theof the", "- 1 )=the edges from$x$the edgesthethe nodeanother(n-1)the(n-1) is the number of$y$ is the number ofa(n-1) is the number ofedges. This is followed byone line of input contains$x$ is thethe$x$ is the number of$y$ is the", "the nodes in$G$ istheorder. The inputof$x$the$y$ is the number ofthe(the$x$ isthetwo$y$ is the number ofthe number of nodes.is the number of$y$ is the numberof the nodesfrom $x$ to $y$.the number ofthe number ofthe number", "$G$. $G$in $L$all the nodesedges in $G$.the$m$ istheedges intheaedge from node$y$ is the numberedges.$y$the number ofthe number of nodesin then-1$). $n$the number of edges. $y$$n$ is the"], "prompt": "\nQUESTION:\nTopologically sorting the nodes of a directed graph (digraph) $G$ means putting the nodes in linear order\\[ v_0, v_1, v_2, v_3, \\ldots \\]\n\nsuch that whenever there is an edge from node $x$ to node $y$ in $G$, $x$\u00a0always precedes $y$ in the linear ordering. It is not hard to show that the nodes of a digraph can be topologically sorted if and only if the graph is acyclic (does not contain any directed cycles).\n\nKahn\u2019s Algorithm is a well-known topological sorting algorithm. Beginning with a digraph $G$ and an empty list $L$, it repeatedly executes the following three steps:\n - Let $S$ be the set of source nodes, i.e., the nodes with no incoming edges. If $S$ is empty, terminate the algorithm.\n - Let $\\alpha $ be any node in $S$. Remove $\\alpha $ and all its outgoing edges from $G$. If this removal of edges creates new source nodes, add these to\u00a0$S$.\n - Insert $\\alpha $ at the end of $L$.\n\nOnce Kahn\u2019s Algorithm terminates, if $G$ is now empty, then $L$ contains the nodes of the initial graph in topologically sorted order (such an ordering may not be unique). Otherwise, $G$ has one or more cycles, and therefore topological sorting is impossible.\n\nRegardless of the outcome of Kahn\u2019s Algorithm, consider any iteration of Step\u00a0$1$ above. If $S$ contains more than one node, then $\\alpha $ can be any one of them, and the choice of $\\alpha $ affects the composition of $S$ in later iterations, when further choices may be made that affect the composition of $S$ in yet later iterations, and so on. Taking into account all possible sequences of choices of $\\alpha $ during the execution of Kahn\u2019s Algorithm, what is the largest $S$ can ever be at the beginning of Step\u00a0$1$?\n\n-----Input-----\nThe input specifies a single directed graph. The first line of input contains two space-separated integers, $n$ and $m$ ($1 \\leq n \\leq 500$,\u2009 $0 \\leq m \\leq n(n-1)$), where $n$ is the number of nodes and $m$ is the number of edges. This is followed by $m$ lines, each containing two space-separated integers, $x$ and $y$ ($0 \\leq x,y \\leq (n-1)$, $x \\neq y$), indicating that there is a directed edge from node $x$ to node $y$, where nodes are indexed $0, 1, 2, \\ldots , (n-1)$. No edge will be listed more than once.\n\n-----Output-----\nOutput a line containing a single integer: the largest possible size of\u00a0$S$ at the beginning of any iteration of Step\u00a0$1$ in the execution of Kahn\u2019s Algorithm.\n\n-----Examples-----\nSample Input:\n4 3\n0 1\n1 2\n2 3\nSample Output:\n1\nUse Standard Input format\nANSWER:\n"}}