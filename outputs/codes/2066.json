{"2066": {"code": ["ofthestring containscharacters thataa letter isaaofaa character istheathethetheaAinof thea string containingaof thethe firsta string isthe first one.a string contains a singlethe firstof the given string.the first one.thetheof the first query.", "in the firstisallthein thethethe\"a\"thein theof thethe secondthe firstthein the$T$1$//(1\\leof\"a\" and\"a\" and \"a\"\"a\" and \"a\" are\"a\"\"ab\" and \"z\" are also", "thethe answer fortheof a\\le\\lethe.)1 ], 2] ) ) ;[] )[ 1 ]] ) ;])[ 1 ]) ) ; };] ) ;} ;= 2 ] ;[ 1 ] ) ;('' )", "intheinathe giventhe answer for theanswerthetheisisa string within a$T$isthe $T$thethe//$T$ lines.answer for thethethe first line containsthe first line.thethe first line contains the", "thetheof thethe given stringa..)) ); if (] == \"a\" )] == \"a\"\"a\" ) { if (1 ) {.( \"a\" )) {( \"a\" )1( \"a\" ) ;) {\"a\"\"a\" ) ) {\"A\" ) ;", "thethe//thethe firsttheifthe first\"abcd\" is also correct.and \"abac\" is alsoistheonlyif thein a.a string, consisting ofthe first\"ab\".\"abac\", \"ab\", \"abac\"\"abac\"\"abac\"\"abac\"\"abac", "isfor( $1 \\le, \"A\", \"B\", \"Z\", \"A\",\"A\", \"B\", \"B\"\"A\", \"B\", \"B\"\"B\", \"A\",\"A\",\"A\", \"B\", \"A\"\"A\", \"B\",\"A\", \"B\"", "answer \"abac\" is.a string witha string witha singleofthe).'A' : 'A', 'Z''A', 'Z''A' : 'A','A', 'A' : 'A''A','A' : 'A','A', 'A', 'A' :", "( 1).the next1 ).).).( 1 )).\"A\".).( 2 )).]] [ 1] [ 0 ]). split ( \") [[ 0 ]] ). join (\".\" ). split, 1 ).if (( \" \" ). split (] [ 1", "thethethe firsttheanswer for theanswer for theof the nextanswer for thea$s$thethe( 1( 1) %\\le) %] ) % () % ( 1) % ( 1() % () ) % () % () % () % ( 1"], "prompt": "\nQUESTION:\nYou are given a string, consisting of lowercase Latin letters.\n\nA pair of neighbouring letters in a string is considered ugly if these letters are also neighbouring in a alphabet. For example, string \"abaca\" contains ugly pairs at positions $(1, 2)$ \u2014 \"ab\" and $(2, 3)$ \u2014 \"ba\". Letters 'a' and 'z' aren't considered neighbouring in a alphabet.\n\nCan you rearrange the letters of a given string so that there are no ugly pairs? You can choose any order of the letters of the given string but you can't add any new letters or remove the existing ones. You can also leave the order the same.\n\nIf there are multiple answers, print any of them.\n\nYou also have to answer $T$ separate queries.\n\n\n-----Input-----\n\nThe first line contains a single integer $T$ ($1 \\le T \\le 100$) \u2014 the number of queries.\n\nEach of the next $T$ lines contains string $s$ $(1 \\le |s| \\le 100)$ \u2014 the string for the next query. It is guaranteed that it contains only lowercase Latin letters.\n\nNote that in hacks you have to set $T = 1$.\n\n\n-----Output-----\n\nPrint $T$ lines. The $i$-th line should contain the answer to the $i$-th query.\n\nIf the answer for the $i$-th query exists, then print such a rearrangment of letters of the given string that it contains no ugly pairs. You can choose any order of the letters of the given string but you can't add any new letters or remove the existing ones. You can also leave the order the same.\n\nIf there are multiple answers, print any of them.\n\nOtherwise print \"No answer\" for that query.\n\n\n-----Example-----\nInput\n4\nabcd\ngg\ncodeforces\nabaca\n\nOutput\ncadb\ngg\ncodfoerces\nNo answer\n\n\n\n-----Note-----\n\nIn the first example answer \"bdac\" is also correct.\n\nThe second example showcases the fact that only neighbouring in alphabet letters are not allowed. The same letter is ok.\n\nThere are lots of valid answers for the third example.\nUse Standard Input format\nANSWER:\n"}}