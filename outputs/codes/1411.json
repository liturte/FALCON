{"1411": {"code": [".1 \u22641 \u22641 \u2264 S \u2264 10^5,takes the total2 pizza.takes the115\u00b79 +1\u00b77 + 4\u00b77 + 5\u00b79forathe number ofof the11that1.happinessthe number of", "the total happinessa_i_th contestantthe total happinessthe(1 \u2264a_i_th contestant will(1 \u2264a_i_tha_i_th contestant will(1 \u2264(1 \u2264N and S (1 \u22641 \u2264a_i_", "2a_i = 1happiness..the. add (. add ( 1 )1 ). add (. add ( 1. add( 1 ), 3 )( 1 )( 1 ) ;. add ( 1 ). add (,) ; }( 1 ) ;]( 1 ). add (} } ) ;.", ".pizza, itofforcontestant.1 ) {= 1 ;- 1 ) ) {( ) ;s_i = 1s_i =) ) ) {= 1 ; }( ) ;; } }() { for (. length ; i[ i) ) {s_i] ){ if) {", "2 pizza,the.(1 \u22641(1 \u2264 N \u22641 \u226410^5,12a_i, a_{i},b_{i}, a_{i},oftype 1 pizza, anda_i,type 2isthenecessary) {=(1 ", "the total happiness.if youa typetype 2 pizza,a) {= 8 }A= 8 }the total happinessa1 ) { if1 ].() {1 ].15 } ) ) {1 ].; if1 ]..(.].", "istype 1 pizza,1\u00b77 + 5\u00b79 =and theofhavenumber ofhappiness that can be achieved,the total happinessto be achieved.a_ithe number ofofofandtheof the pizza.itthethehappiness,thethe number ofthe number ofof", "acan be achieved.the total happinessthat can be achievedthe happinessthethethethe happinessbethe happinesswill beinthe total happinesshave aato be achieved.typethe happiness isthe number offor thethe number ofthethe number ofof the.", "athe number ofthey eat.custine...( ) ;.custine..a_i,, a_i, b_i.;]. length ).. length ) ;(a_i)(( )+ 4\u00b75 + 5\u00b79 += a_i.1,", "arethethea_i,a_i, andhappiness, andbeititand the totalbebe 1,happiness, and theof thethe) ; if () {(thetheof a1, 1,thethe number of slicesthat is theof a type 1, and"], "prompt": "\nQUESTION:\nIt's another Start[c]up finals, and that means there is pizza to order for the onsite contestants. There are only 2 types of pizza (obviously not, but let's just pretend for the sake of the problem), and all pizzas contain exactly S slices.\n\nIt is known that the i-th contestant will eat s_{i} slices of pizza, and gain a_{i} happiness for each slice of type 1 pizza they eat, and b_{i} happiness for each slice of type 2 pizza they eat. We can order any number of type 1 and type 2 pizzas, but we want to buy the minimum possible number of pizzas for all of the contestants to be able to eat their required number of slices. Given that restriction, what is the maximum possible total happiness that can be achieved?\n\n\n-----Input-----\n\nThe first line of input will contain integers N and S (1 \u2264 N \u2264 10^5, 1 \u2264 S \u2264 10^5), the number of contestants and the number of slices per pizza, respectively. N lines follow.\n\nThe i-th such line contains integers s_{i}, a_{i}, and b_{i} (1 \u2264 s_{i} \u2264 10^5, 1 \u2264 a_{i} \u2264 10^5, 1 \u2264 b_{i} \u2264 10^5), the number of slices the i-th contestant will eat, the happiness they will gain from each type 1 slice they eat, and the happiness they will gain from each type 2 slice they eat, respectively.\n\n\n-----Output-----\n\nPrint the maximum total happiness that can be achieved.\n\n\n-----Examples-----\nInput\n3 12\n3 5 7\n4 6 7\n5 9 5\n\nOutput\n84\n\nInput\n6 10\n7 4 7\n5 8 8\n12 5 8\n6 11 6\n3 3 7\n5 9 6\n\nOutput\n314\n\n\n\n-----Note-----\n\nIn the first example, you only need to buy one pizza. If you buy a type 1 pizza, the total happiness will be 3\u00b75 + 4\u00b76 + 5\u00b79 = 84, and if you buy a type 2 pizza, the total happiness will be 3\u00b77 + 4\u00b77 + 5\u00b75 = 74.\nUse Standard Input format\nANSWER:\n"}}