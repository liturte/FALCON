{"4392": {"code": ["$n$ and the$n$ andthe\\le$t$$t$ test cases follow.$t$ testthein the$a$, the number ofin the$t$ testtest case contains$n$ and the number$t$ test cases follow.of the input contains$t$and the$n$ and thethe$t$ test", "in the problem statement.$t$$t$the$t$( $t$ \\le n$\\le(the$a$ and the$a$ and the$a$ and thethe first line of$t$ test cases\\le\\le 100$).$t$\\le\\le 100$).thethe first$t$of", "thearraythe array $a$of$t$ $m$ $n$$m$the$t$the$t$ test cases follow.thethethe$a$ and the number ofthe$t$ $m$(t( $t$$t$$n$the$t$( $t$ $t$the", "of thethe arrayisthe$p$\\le \\dots,$p$). \u2014the$a[$]$ and $a[$]$$a[$]$ and $a[$]$the$a[$]$$a[$]$ and $a[$]$the$p[$]$the array$a[$]$$a[$]", "in the problem statement$p_i$\\le$p_i$ is also$p_i$ is$a$.$a$$a$and $a[3]$thethird line of the test$n$ and the$m$$a$a_i$ is also$t$\\le\\le 100$)thethe two", "the$a$)the$t$ test casesthetest cases.$t$ testthe$t$ test cases follow.the$t$ testthetestthe$t$ testtheofthe first$n$ and$m$$t$$n$ $m$of theof the$t$ test cases follow. The", "the=[] $\\le a_i$t$the$t$ test$p$$t$ test cases follow.$p_i$ is not$t$ test cases follow. \u2014$p_i$ is not contained inthe$a[$p_i]$ is also$a[$p_i]$$p$the$", "$p_i$$a[2]$ and $a[3]$ arein $a$$a$.$a$$p$.the array$p$\\le$a$$t$ $t$ $t$thetheof $a$the number of elements$a$$a$the number of elements$p$$a", "theif $a = [1,$p$ == [1, 2, 3]$ and$p$ = [4,$a$ and the$n$ and the$a$ and the number$a$$t$ test cases follow. \u2014$t$ test cases follow. \u2014$t$$t$ testtest cases follow.$t", "$a$ and the$a[1]$ and $a[2]$$a[2]$ and $a[3]$$a[$3]$in $p$$a[$2]$the$a[$3]$$a[$3]$ and $a[$3]$$a[$3]$ and$p$, $a[$1]$ and $a"], "prompt": "\nQUESTION:\nYou are given an array $a$ of length $n$.\n\nYou are also given a set of distinct positions $p_1, p_2, \\dots, p_m$, where $1 \\le p_i < n$. The position $p_i$ means that you can swap elements $a[p_i]$ and $a[p_i + 1]$. You can apply this operation any number of times for each of the given positions.\n\nYour task is to determine if it is possible to sort the initial array in non-decreasing order ($a_1 \\le a_2 \\le \\dots \\le a_n$) using only allowed swaps.\n\nFor example, if $a = [3, 2, 1]$ and $p = [1, 2]$, then we can first swap elements $a[2]$ and $a[3]$ (because position $2$ is contained in the given set $p$). We get the array $a = [3, 1, 2]$. Then we swap $a[1]$ and $a[2]$ (position $1$ is also contained in $p$). We get the array $a = [1, 3, 2]$. Finally, we swap $a[2]$ and $a[3]$ again and get the array $a = [1, 2, 3]$, sorted in non-decreasing order.\n\nYou can see that if $a = [4, 1, 2, 3]$ and $p = [3, 2]$ then you cannot sort the array.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 100$) \u2014 the number of test cases.\n\nThen $t$ test cases follow. The first line of each test case contains two integers $n$ and $m$ ($1 \\le m < n \\le 100$) \u2014 the number of elements in $a$ and the number of elements in $p$. The second line of the test case contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 100$). The third line of the test case contains $m$ integers $p_1, p_2, \\dots, p_m$ ($1 \\le p_i < n$, all $p_i$ are distinct) \u2014 the set of positions described in the problem statement.\n\n\n-----Output-----\n\nFor each test case, print the answer \u2014 \"YES\" (without quotes) if you can sort the initial array in non-decreasing order ($a_1 \\le a_2 \\le \\dots \\le a_n$) using only allowed swaps. Otherwise, print \"NO\".\n\n\n-----Example-----\nInput\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\nOutput\nYES\nNO\nYES\nYES\nNO\nYES\nUse Standard Input format\nANSWER:\n"}}