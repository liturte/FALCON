{"1101": {"code": ["room for the himself andhisroom istheroom isas theroom is used.hisishisroom ishisroom is)= 1 ;=( 1room isroom isishis room) ; if (room) { if (rooms in the{", "roomhisroom isof the himis a singleroom is(1\u2264(1\u2264 100 000)the(1room is2) for thehis cowis); if (( 1(roomroomroom isroom isroom isroom is '0' ifroom is not occupied,room is occupied", "cows are freehis cow is 2.hishishisroomisthe second sample, Farmer Johnroom 3 forroomof him selftheroom and the(1farthestroom is 2.room 1 and 4 forhisroom isin theroomis 2.room 33 forroom 3 for", "room of him.istheirhis farm. Theroom is 1roomis 2, astheroom istheroom isroom is 2, asroom istheroom is 3,is 1,theroom istheroom is 1,room isisroom is 3, asisroomroom is 2, as", "himself androom ofthetheroom is.;).{) ;= 0 ;. cow) ;. cow..his(() ;;.; } else {.[ 1 ] ; }", "in thehis him's room isroomshisroom)of theroom is 0.his cow is) {()the cow is 1,1room isthe number ofroomsand the(his him is 1, asisroom is 1, asroom is(his him isis 1, as", "theroom ishishisthese cows arehisroomhisthe.. get() ;. get (( ) ;) ; }. get (( ) ;) {. get ( ). get ((( ) ;( ) ;1.( ) ; }", "theroom in therooms.that it isroom 1room ishisroom1,room 1,his single cow.room 1, ashis)His distanceroom1, asroom 1, as there isroom1, asroom 2, asroom3, asthe him self, androom 3, asroom 1", "him self androoms of theareofthat theroom isthe number of rooms= 12room2 for hisroom isroom is 1..is( himroom istheroom is 2.(himroom isroom isroom is1. Theroom isroom is 3.", "theroom.hisisroomshis.the.roomsrooms in therooms in theis 1.hisrooms in theis 2.roomsthecowshisroomsthey are3.rooms in thetherooms is 2. Theroom is 1. Theroom isroom"], "prompt": "\nQUESTION:\nIn an attempt to escape the Mischievous Mess Makers' antics, Farmer John has abandoned his farm and is traveling to the other side of Bovinia. During the journey, he and his k cows have decided to stay at the luxurious Grand Moo-dapest Hotel. The hotel consists of n rooms located in a row, some of which are occupied.\n\nFarmer John wants to book a set of k + 1 currently unoccupied rooms for him and his cows. He wants his cows to stay as safe as possible, so he wishes to minimize the maximum distance from his room to the room of his cow. The distance between rooms i and j is defined as |j - i|. Help Farmer John protect his cows by calculating this minimum possible distance.\n\n\n-----Input-----\n\nThe first line of the input contains two integers n and k (1 \u2264 k < n \u2264 100 000)\u00a0\u2014 the number of rooms in the hotel and the number of cows travelling with Farmer John.\n\nThe second line contains a string of length n describing the rooms. The i-th character of the string will be '0' if the i-th room is free, and '1' if the i-th room is occupied. It is guaranteed that at least k + 1 characters of this string are '0', so there exists at least one possible choice of k + 1 rooms for Farmer John and his cows to stay in.\n\n\n-----Output-----\n\nPrint the minimum possible distance between Farmer John's room and his farthest cow.\n\n\n-----Examples-----\nInput\n7 2\n0100100\n\nOutput\n2\n\nInput\n5 1\n01010\n\nOutput\n2\n\nInput\n3 2\n000\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first sample, Farmer John can book room 3 for himself, and rooms 1 and 4 for his cows. The distance to the farthest cow is 2. Note that it is impossible to make this distance 1, as there is no block of three consecutive unoccupied rooms.\n\nIn the second sample, Farmer John can book room 1 for himself and room 3 for his single cow. The distance between him and his cow is 2.\n\nIn the third sample, Farmer John books all three available rooms, taking the middle room for himself so that both cows are next to him. His distance from the farthest cow is 1.\nUse Standard Input format\nANSWER:\n"}}