{"3143": {"code": ["thethethe name of thetheofthe firsttheof thethe list.of theof thethe first studentthe name of thethe firststudents are numbered between $M$thethe list ofthe firstthe firsttheofthethe first student in theof the line, wherethe first studentthe first", ".and thethe name of theisthethe listone toof the listoftheto theof the listthe firstline contains thethe name of thethe name of thethe student inlinethename of the firstthethethe student in front ofit wouldthe name ofthe first line", "the firstthe list.of the listwill beits namethethelist.;.thethe first.the list. Itthe firstthethe last one in thethe firstthe first one inthe firstthe secondthe first$b_1$ is the name ofin the first line.the first student in the", "thefor everyone inoftheof thethein the.student in thelist. The list isall students in thetheof theof the list.theand the number ofthe student inthethe list (top-down).the listall students in thetheof the list (top-down).thethe list.the number of", "in theofin the listof thethe listthetheline.students are numbered betweenof$M$ andtheof thestudent in the linethe student inthe listthe first student inthe first student in theis thethe firstthe firstline.(b_1$ isthe firstthe first student in thethe first", "aof the listand.thethethetheof the list(top-down).thethe list, thethe list.the number ofthe name ofthe list, thethename of thetheline,the numberof theline.the number ofthe name ofthe line.", "the list.:the list ofthe::::: ::: :: : : :: : :: : :::::: : : : :::: : : :: :: : : ::: : : :", "the firstof the list.thethe firstlinethe firstandthethe(top-down)theof the list.thethe(1 \\leqline containsthethetheline.ofin theis afor the firstof theof the list.the firstin thethe first student in the", "the)the listthe)( 1\\leq(1 \\leq b_ ithefirst(2thenames in the listthe firstthe listfor the firstthe firstin the(2 $M$$M$ is the name ofthethe firstthe firstthe first$b_1$ is the name ofthe first student in the", ".  public function) ; if (the firstin the line\\leqthe listthe{, $M$M$\\leq)the name ofin the line.\\leqthe first student in theline, where $M$ is thethe\\leqthethe line.the firstof the(N$ and $M$ is"], "prompt": "\nQUESTION:\nIt is the first day of school at Liking University, or \u201cLku\u201d for short. Lku administration is very strict with attendance, especially on the first day. In order to verify everyone\u2019s attendance, the Lku\u2019s principal has made an attendance list. He then asked to all students to stand in line to his office in order to mark everyone\u2019s attendance.\n\nThe principal would go through the list, top-down and inspect if the person in front of him was the one currently on top the list. This inspection takes exactly one second. If it was, then the principal would strike the name from the list. Regardless of whether the student\u2019s name would match or not with the one on top the list, the student in front of the queue would be asked to go somewhere somewhere else in the line. This implies going to an arbitrary position in the line, e.g. going to the back, somewhere in the middle or the front (continue standing on the same spot). The student can decide which position he or she wants to go to.\n\nThe list itself was written hastily and had several flaws \u2013 some students could be left out from it and some students\u2019 names could appear on the list more than once. Knowing the contents of the list and the position of each student within the initial line, what is the minimal time that it can take for every name to be stricken from the attendance list if the students choose their new positions in the queue optimally?\n\n-----Input-----\nThe first line of input contains two integers $N$ and $M$ $(1 \\leq N, M \\leq 3 \\cdot 10^5)$ \u2013 the total number of students in the line and the number of names on the list respectively.\n\nThe second line contains $M$ integers $a_1, a_2, \\dots , a_ M$ $(1 \\leq a_ i \\leq N)$ \u2013 the names of students as they appear in the list (top-down).\n\nThe third line contains $N$ integers $b_1, b_2, \\dots , b_ N$ $(1 \\leq b_ i \\leq N)$ \u2013 the initial order of the students as they appear in line, where $b_ i$ is the name of $i$:th student in the line ($b_1$ is the name of the first student in the line).\n\nThe students are numbered between $1$ and $N$.\n\n-----Output-----\nThe output consists of two lines:\n - The first line of output is $K$ \u2013 the minimal number of inspections that the principal needs to do.\n - The second line of the output consists of $K$ integers. For every inspection, output a number for which position in the line the student has to go back to after the inspection.\n\nIf there are multiple solutions which result in minimal number of inspections, then output any of them.\n\n-----Examples-----\nSample Input 1:\n1 1\n1\n1\nSample Output 1:\n1\n1 \n\nSample Input 2:\n4 5\n4 1 2 4 4\n4 3 2 1\nSample Output 2:\n7\n4 4 2 4 4 1 4\nUse Standard Input format\nANSWER:\n"}}