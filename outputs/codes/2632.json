{"2632": {"code": ["(grid: List[List[int]]) -> int:(grid: List[List[int]]): return: return 0(grid:grid: List[int] ) -> int:(grid: List[int]),grid: List[int]):grid: List[int]):grid: List[int]):return 12 ] )grid: List[int]: return", "grid: List[List[int]]) ->. minPathSumgrid :) -> intgrid :( self, gridgrid ). maxPathSum ( grid ): return grid].]. minPathSum] ) ). minPathSum ( grid )() ; return", "#:number,#:#:#:#: #: ##: ##: ##: #: ##: ###: ##: #: ##: ##: ##: # # ###: ###: ##: ##: ##: # #: ##: # # #", "( self) -> int:maxPathSum(self, grid: List[int]): ###### print(grid.join('\\t')).length# print(grid.join('\\t')print(grid.join('\\t')).length) ## print(grid.join('\\t')).length return) # print(grid.join('\\t')).length", "( self, grid: List[List[int]])##the## # ## ## ### # ## # ## ### # ## # # # ## # # ## ## # # ## # # ## # # ## # # # ## # # # ## # ## #", "grid: List[List[int]]]grid: List[List[int]]]: return() : return 0###00 #::#:2 #::2 #: #:#:2 #: #: #: ##: ##: #: ##: #: # #:#: #: #: #", ". format (): #]# ##1 ] ## # ## # ## # # ## # # # ## # # ## # # ## # # ## # ## # # # ## # # # ## # # # ## # # ## # # # ## # # # ## # # #", "grid: List[List[int]]] )grid: List[int][list[int]]list:self.graph.minPathSum(grid)self.graph.minPathSum(grid): return self.graph.minPathSum(grid): returnself.graph.minPathSum(grid): return self.graph.minPathSum(grid): return self.graph.minPathSum(grid): return", "gridn_grid:grid: List[List[int]], 'number'( self( grid ) ): return self) : returnself.] ) return self, grid]if grid)[ 2 ] ) returnself. minPathSum ( grid. minPathSum ( grid] )) ). minPathSum( self. minPathSum) )", "[1,3,1],[1,5,1],[1,5,1], [4,2,1], [4,2,1],[1,5,1], [1,2,1], [1,4,1],[1,5,1],[1,5,1],[1,5,1],[1,2,1], [1,3,1"], "prompt": "\nQUESTION:\nGiven a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.\n\nNote: You can only move either down or right at any point in time.\n\nExample:\n\n\nInput:\n[\n\u00a0 [1,3,1],\n  [1,5,1],\n  [4,2,1]\n]\nOutput: 7\nExplanation: Because the path 1\u21923\u21921\u21921\u21921 minimizes the sum.\nclass Solution:\n    def minPathSum(self, grid: List[List[int]]) -> int:\n        \nUse Call-Based format\nANSWER:\n"}}