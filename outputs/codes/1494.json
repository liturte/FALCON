{"1494": {"code": ["that isthe() {( 0..( 0( 12 000).output contains the2 000).=][ 0 ][ 1] ; }[ 12 ] ; }[ 2]] ;[ 1 ] ;(\"ababab\" ] ; }( \"abab\" ) ;", "number of charactersthe)() ) ;\"x\" )] ]]{[ 0 ]= \"a\"\"a\" ) {\"a\"\"a\" } }) ; } }=if () ; }{]0 ] )( 0) ; } }length of] ) ) {0 ] =", "isthe.of theoutput containsof thetheinput contains theof(1 \u2264 |s| \u2264).)] ). indexOf (s=. indexOf1 ])] ] ) )0=1 ] ) ;= 0 ; i <.", "=s^{\\prime}, p)$xlength of(1 \u22640 0 0 0 02 000 2\"0\", \"1\",1 1 0 0 0s^{\\prime}, p)$0 0 0 0 01 0 0 0 01 0 0 0\"1\",\"a\", \"\"}., \"\"}.theis\"a\", \"b\", \"c\",", "stringof a single linethe output of thestring sthethestringtheof the input contains\"a\", \"b\",(1 \u2264 |s| \u2264= 5 characterss' are\"ab\", \"a\", \"\"}.the first sample, possible corresponding\"ab\", \"ab\", \"\"}.in the\"a\", \"\"}.is\"ab\", \"", "s'thestring s'\"a\", \"b\", \"c\", \"d\",iss'theas'+ 1 space-separated integers1 1 1 1 11 1 1 1 01 1 1 1 11 0 01 0 0 0)\"a\"\"b\", \"d\", \"d\", \"\"}.to(20 0 0 0(", ").of(1 \u2264) ).( 1 \u2264 |s|+ 1 1 0 00 0 0 0{().(\" \" ).( ).( \" \" )\" \" ).\" \" ).(, \" \").() ;\" \" ).\" \"\" \".", "stringstringinput contains thestring sin02 000).0 0 0 01 0 0 0 00 0 0 0 01 0 0 00 0 0 0 00 0 0 00 00 0 0 011 1 1 0 01 1 0 0 00 0 0 01 1 0 0 00 0 0 01 1 0 0 00", "0 toins^{\\prime}, p)$the output of theisof the inputof thes^{\\prime}, p)$.isatheofthe string s'(1\u2264 |s|isthein the outputthestringthe string s'1is notintheof the", "s'the input contains the(1 \u2264the first lineinput contains the.(1(2 \u226411 0 02 1 0 0 01 1 0 01 0 0 0\"aaaaa\", \"aaaa\", \"aaaa\", \"aa\",\"a\", \"\"}.(1 \u2264|s|11 0 0 0 0"], "prompt": "\nQUESTION:\nDreamoon has a string s and a pattern string p. He first removes exactly x characters from s obtaining string s' as a result. Then he calculates $\\operatorname{occ}(s^{\\prime}, p)$ that is defined as the maximal number of non-overlapping substrings equal to p that can be found in s'. He wants to make this number as big as possible.\n\nMore formally, let's define $\\operatorname{ans}(x)$ as maximum value of $\\operatorname{occ}(s^{\\prime}, p)$ over all s' that can be obtained by removing exactly x characters from s. Dreamoon wants to know $\\operatorname{ans}(x)$ for all x from 0 to |s| where |s| denotes the length of string s.\n\n\n-----Input-----\n\nThe first line of the input contains the string s (1 \u2264 |s| \u2264 2 000).\n\nThe second line of the input contains the string p (1 \u2264 |p| \u2264 500).\n\nBoth strings will only consist of lower case English letters.\n\n\n-----Output-----\n\nPrint |s| + 1 space-separated integers in a single line representing the $\\operatorname{ans}(x)$ for all x from 0 to |s|.\n\n\n-----Examples-----\nInput\naaaaa\naa\n\nOutput\n2 2 1 1 0 0\n\nInput\naxbaxxb\nab\n\nOutput\n0 1 1 2 1 1 0 0\n\n\n\n-----Note-----\n\nFor the first sample, the corresponding optimal values of s' after removal 0 through |s| = 5 characters from s are {\"aaaaa\", \"aaaa\", \"aaa\", \"aa\", \"a\", \"\"}. \n\nFor the second sample, possible corresponding optimal values of s' are {\"axbaxxb\", \"abaxxb\", \"axbab\", \"abab\", \"aba\", \"ab\", \"a\", \"\"}.\nUse Standard Input format\nANSWER:\n"}}