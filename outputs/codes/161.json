{"161": {"code": ["in(1$x$ with $xthe firstand$t$tthethe number of operationsthe firsttheofof type Athe firstone of theof type B, theofof type A,of type B, theofA, the second ofof type A,and so on.of type A, theof type A, the", "the1of type A(OperationA:thethe first$t$(1 \\le t \\le4$, with $\\oplus$ being a(2^n - 1)$n_i$ $0 \\le$x$$n_i$ \\letoofthe same$t$ ($0 \\leof type A, theof type", "thethem can$n$1, 2,2, 3, 4,4, 2,3,1, 2,2, 3,1, 2,$t$ with1, 4,4,6,1, 5, 7,1, 1, 5, 6,3,2, 3,0, 1, 1,1, 1,", "the same number ofthe samein the samecan beatwo$x$ with $xofthatthethe same numberofthe same number ofthe same number oftheoffor thethesethe same number ofthe same number $t$ofthe same numberof the sameof the twot, thenumber of operations to apply.", "ifalland one of thenumber of operations to apply$t$theof type A, theof type B,taaof type A, theofa number $t$being aA,A, the third ofA, the second oftheof type A,theof type A, thetype A, the thirdof type A, and", "isofthe samethethethese operations arein theofof the1,the1, the firstofis ofof type A, the thirdof type B,$t$$n$of type A,of type A, theof type A, theof type A, theofof type A, thetheof type A, the", "of aof type A and$t\u00a0\u2014 the number ofof type B,$t\u00a0\u2014 the$t\u00a0\u2014 theof type A,of$t\u00a0\u2014 the number ofofof type A, the secondof typeof type B, the thirdofof type A, the thirdofA, the third ofof", "Aof type A, andthetheandthethetheanother$t$the firstofA, the second of$n$ (2^{n_i} -) { if (.) )\\t A, the third ofof type$n$ $t$ $t$$n$of(2^{n_i} -", "thethetheone ofa$t$of typeA, the second ofA, thethe second ofof type A,type A, the thirdof type A, andof type A, andthethethem.thetheofthethe first operationof type A, thethe second of type A,of type A, the thirdof type", "in ait iscan betheift of type$t$t of type A,the number of$t$ ofof type B,type A, the second ofof type B, the thirdof type A, the thirdof type Bofatheoftype B, anda single integer $t$ ($0tthein the orderof"], "prompt": "\nQUESTION:\nCat Furrier Transform is a popular algorithm among cat programmers to create longcats. As one of the greatest cat programmers ever exist, Neko wants to utilize this algorithm to create the perfect longcat.\n\nAssume that we have a cat with a number $x$. A perfect longcat is a cat with a number equal $2^m - 1$ for some non-negative integer $m$. For example, the numbers $0$, $1$, $3$, $7$, $15$ and so on are suitable for the perfect longcats.\n\nIn the Cat Furrier Transform, the following operations can be performed on $x$:  (Operation A): you select any non-negative integer $n$ and replace $x$ with $x \\oplus (2^n - 1)$, with $\\oplus$ being a bitwise XOR operator. (Operation B): replace $x$ with $x + 1$. \n\nThe first applied operation must be of type A, the second of type B, the third of type A again, and so on. Formally, if we number operations from one in the order they are executed, then odd-numbered operations must be of type A and the even-numbered operations must be of type B.\n\nNeko wants to produce perfect longcats at industrial scale, thus for each cat Neko only wants to perform at most $40$ operations. Can you help Neko writing a transformation plan?\n\nNote that it is not required to minimize the number of operations. You just need to use no more than $40$ operations.\n\n\n-----Input-----\n\nThe only line contains a single integer $x$ ($1 \\le x \\le 10^6$).\n\n\n-----Output-----\n\nThe first line should contain a single integer $t$ ($0 \\le t \\le 40$)\u00a0\u2014 the number of operations to apply.\n\nThen for each odd-numbered operation print the corresponding number $n_i$ in it. That is, print $\\lceil \\frac{t}{2} \\rceil$ integers $n_i$ ($0 \\le n_i \\le 30$), denoting the replacement $x$ with $x \\oplus (2^{n_i} - 1)$ in the corresponding step.\n\nIf there are multiple possible answers, you can print any of them. It is possible to show, that there is at least one answer in the constraints of this problem.\n\n\n-----Examples-----\nInput\n39\n\nOutput\n4\n5 3 \nInput\n1\n\nOutput\n0\n\nInput\n7\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first test, one of the transforms might be as follows: $39 \\to 56 \\to 57 \\to 62 \\to 63$. Or more precisely: Pick $n = 5$. $x$ is transformed into $39 \\oplus 31$, or $56$.  Increase $x$ by $1$, changing its value to $57$.  Pick $n = 3$. $x$ is transformed into $57 \\oplus 7$, or $62$.  Increase $x$ by $1$, changing its value to $63 = 2^6 - 1$. \n\nIn the second and third test, the number already satisfies the goal requirement.\nUse Standard Input format\nANSWER:\n"}}