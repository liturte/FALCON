{"292": {"code": ["anumber h, n(1 \u2264 h \u2264(hh isleaf has exactly twonodethe node1node1 to 2^{h}level 2nodes callednode callednode called leaf.node called leaf.isnode called leaf.=nodes called leaf.node called leaf.leaf.h, n(1 \u2264", "in thethe exit node.the) {=] ; int= 1 ; int1 ; int i10int i= 1 ; int= 1 ; int i.0 ) { int i= 0 ; int j( int j; j < 2 ;= 1 ; j= 1 ; j2 ; j++ ) {.= j ;; j", "an exit.leaf node thatleaf has exactlyh11 \u2264 n \u22641h, 1h, n (1 \u2264h, n (1 \u2264h, nh, n2,h, n (1h, nn2, n (1nh\u2264h, 1h, n (", "thetheexit node.node called..( ) ).\"No nodethe root of.( )..( ).) ;.( ) ).nodenode ).(( )( )..( ).", "the( 1in thetheofleaf nodeis not a leafleafbe a leafleaf node calledleaf nodebeing a leaf.a leaf node calledleaf node callednode called leaf.leaf node calledleaftheleaf node calledleafleaflevel h consists ofofleaf nodesthe leaf nodes called leaves,", "theleaf nodes from theinfinite command stringnode isof thethe exit node.leafthetheof thein thethein theleaf nodeof theof thelevel 0,1,1, 2, 3, 4,8,4, 5, 5,of the exit node.the(leafof the exith, n (1 \ufffd", "the leafthethe exit node isthethea leaf node that isthe exit node isthe exit node isin the samethelevel hthe number ofthe leafleaf.levels areof thethe exit node.levels arenumber 2.nodeisthenode.theofthe exit node. Arabicof thethe exit node. The", "the)\"addto thethetheit isof theleafh, n (1 \u22641 \u2264 n \u2264thethea leaf nodeisn't a leafn\u2264 h, nh, n (1 \u2264 h1h, n (1 \u2264h, n (1 \u2264", "thetheoutput of a leaf nodenode that isthe exit node.theexit node isthean exit node.the exit node isthattheisthe exit node.number2.thenode isleaf node. Theleaf node.the exit node isinnode is not a leaf,nodes arethethe exit node. The", "thetheleaf nodesthenodein thethattheleaf nodesthe(n)= n0 ; n <= n + 1 ;) ; n ++ )if (<=( n > 12 )) { n =( n == 0 )0 ) {= 0 ;.( n"], "prompt": "\nQUESTION:\nAmr bought a new video game \"Guess Your Way Out!\". The goal of the game is to find an exit from the maze that looks like a perfect binary tree of height h. The player is initially standing at the root of the tree and the exit from the tree is located at some leaf node. \n\nLet's index all the leaf nodes from the left to the right from 1 to 2^{h}. The exit is located at some node n where 1 \u2264 n \u2264 2^{h}, the player doesn't know where the exit is so he has to guess his way out!\n\nAmr follows simple algorithm to choose the path. Let's consider infinite command string \"LRLRLRLRL...\" (consisting of alternating characters 'L' and 'R'). Amr sequentially executes the characters of the string using following rules:  Character 'L' means \"go to the left child of the current node\";  Character 'R' means \"go to the right child of the current node\";  If the destination node is already visited, Amr skips current command, otherwise he moves to the destination node;  If Amr skipped two consecutive commands, he goes back to the parent of the current node before executing next command;  If he reached a leaf node that is not the exit, he returns to the parent of the current node;  If he reaches an exit, the game is finished. \n\nNow Amr wonders, if he follows this algorithm, how many nodes he is going to visit before reaching the exit?\n\n\n-----Input-----\n\nInput consists of two integers h, n (1 \u2264 h \u2264 50, 1 \u2264 n \u2264 2^{h}).\n\n\n-----Output-----\n\nOutput a single integer representing the number of nodes (excluding the exit node) Amr is going to visit before reaching the exit by following this algorithm.\n\n\n-----Examples-----\nInput\n1 2\n\nOutput\n2\nInput\n2 3\n\nOutput\n5\nInput\n3 6\n\nOutput\n10\nInput\n10 1024\n\nOutput\n2046\n\n\n-----Note-----\n\nA perfect binary tree of height h is a binary tree consisting of h + 1 levels. Level 0 consists of a single node called root, level h consists of 2^{h} nodes called leaves. Each node that is not a leaf has exactly two children, left and right one. \n\nFollowing picture illustrates the sample test number 3. Nodes are labeled according to the order of visit.\n\n[Image]\nUse Standard Input format\nANSWER:\n"}}