{"1729": {"code": ["thenumber ofthesequence ofis aoneof thenumber of.sequence ofaaofa sequence ofof2,...,sequence ofq),)0of the(1\u2264s_{r} \u2264the number ofof the sequence,) ;thea sequence of \"<\", \">\"", "(of the sequence( 1isthe input isof the sequencetheis the(01 \u2264i \u2264the(1 \u2264<\", \">\" andthesequence is(1 \u2264r_{i}i\u2264 r_{i}\"<\", \">\").(1 \u2264 l_{i}", "in: - 100 }- 1 )sequence of \"<\"0 ] ) ==2 ] == 000 ] )23) ==323 ] ==1 ] ==3 ] == 1) ==2 ] == 1>= 2>= 1) == 1 )) == 1 ) {.[ 2 ] ==", "the sequencethesequenceofa sequence of2s_{l}, s_{r},ofofaofathe number of queriesthatof theof theand thesequence(1q_i,...,(1 \u2264(0\u2264n, q \u2264),), 0,, 0, 0,", "( 2) {( 1 \u2264 l_{n}) {( 2) ;0 ) { n( 1)the\"<\", \">\")thelength of the sequencethe( 1the).0,( 1,222 ) )3( 2 ) ;) ; } else", "the sequence\"<\", \">\" andandtheoneof the(1 \u2264s_{1} \u2264 r_{1}thesequencenumber oftheofthe sequence isthat thethethe number ofofthe number ofthes_{n} isof aof theisof athe sequence is a sequence", ".[( 0.. 9 )sequence of \"s\" and\"<\", \">\"the sequence(0.. 9)\u2014 thein the sequenceand the\"<\", \">\" arethethe sequencetheof\"s\"of \"s\" and \"s\"\"<\", \">\"\"s\" and\"<\", \">\"(\"s\"s_1in", ":).; if (){= 0 ; n <n =( 12)) { if (= 0 ; n <n1 ; n= 0 ; nq =(0 ; i <; i ++.) {[ i ] ;( \"S\"+ \"C\") ) ) ) {", "thesequence isthesequence is not( 0..1)in theof then,(1 \u2264andx_{i} \u2264theis)the number ofaa sequence of(0..9)in the sequence, aofn isof theto thethe first line of inputthat theisn't in the", "sequence ofsequence of0, 1, 2,..., 3,isif thein thethein thethe sequencetheofthethe sequencethe sequenceisto be printed inbethethesequence(0..9) writtenthesequence of \"<\", \">\"the sequence of \"<\" andof the sequencethe sequence ofof the sequenceof(0"], "prompt": "\nQUESTION:\nThere is a programming language in which every program is a non-empty sequence of \"<\" and \">\" signs and digits. Let's explain how the interpreter of this programming language works. A program is interpreted using movement of instruction pointer (IP) which consists of two parts.  Current character pointer (CP);  Direction pointer (DP) which can point left or right; \n\nInitially CP points to the leftmost character of the sequence and DP points to the right.\n\nWe repeat the following steps until the first moment that CP points to somewhere outside the sequence.  If CP is pointing to a digit the interpreter prints that digit then CP moves one step according to the direction of DP. After that the value of the printed digit in the sequence decreases by one. If the printed digit was 0 then it cannot be decreased therefore it's erased from the sequence and the length of the sequence decreases by one.  If CP is pointing to \"<\" or \">\" then the direction of DP changes to \"left\" or \"right\" correspondingly. Then CP moves one step according to DP. If the new character that CP is pointing to is \"<\" or \">\" then the previous character will be erased from the sequence. \n\nIf at any moment the CP goes outside of the sequence the execution is terminated.\n\nIt's obvious the every program in this language terminates after some steps.\n\nWe have a sequence s_1, s_2, ..., s_{n} of \"<\", \">\" and digits. You should answer q queries. Each query gives you l and r and asks how many of each digit will be printed if we run the sequence s_{l}, s_{l} + 1, ..., s_{r} as an independent program in this language.\n\n\n-----Input-----\n\nThe first line of input contains two integers n and q (1 \u2264 n, q \u2264 100) \u2014 represents the length of the sequence s and the number of queries. \n\nThe second line contains s, a sequence of \"<\", \">\" and digits (0..9) written from left to right. Note, that the characters of s are not separated with spaces. \n\nThe next q lines each contains two integers l_{i} and r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) \u2014 the i-th query.\n\n\n-----Output-----\n\nFor each query print 10 space separated integers: x_0, x_1, ..., x_9 where x_{i} equals the number of times the interpreter prints i while running the corresponding program. Print answers to the queries in the order they are given in input.\n\n\n-----Examples-----\nInput\n7 4\n1>3>22<\n1 3\n4 7\n7 7\n1 7\n\nOutput\n0 1 0 1 0 0 0 0 0 0 \n2 2 2 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n2 3 2 1 0 0 0 0 0 0\nUse Standard Input format\nANSWER:\n"}}