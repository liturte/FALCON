{"3734": {"code": ["11areof theweek1 ofweek1 of theweek isof thethetheweek.theweekweek ofof theweekweeks of thetheweekweektheweektheof the week.", ".theweek name istheweektheweek is given withweekweek name isweek names areweek name isweek names are given inweek names in theweekdayweekweek names are givenof theweek is giventhe weekweek name isweek names are givenweekweek nameweek names are givenweeks are given", "weeks of theweeks ofof the firstweekthe firstweeksthe firstweeks ofweeks of the firstisweekweeks of theweeks of the firstweeks of thethe firstweekthe firstweek isweek.) {=weekdayweekday() { if (", "the firstthe firstweek inthis(the firstweekof theweek isweek is givendays in aweek of theweek is given inof theofweek of theweek.is given in theweek is given in theweek is givenweek of the(noweek is givenweek is givenweek inweek.", "ofweek in aweek.= \"Monday\"\"wednesday\", \"thursday\", \"friday\",week is\"sunday\" in theinput istheweek isweekweekweek isweekweekweek isthe firstweek isthe firstthe firstweek.week isweek isweek isweek isweek is", "aweek intheweek in theweek.weekweeksweeks are giventheweeks are given\"monday\", \"tuesday\", \"wednesday\", \"thursday\",weeks are given asweek1 andweeks.\"tuesday\", \"thursday\",\"sunday\", \"saturday\", \"sunday\",weeks are given", "weeksof theweeks in aday of the weekweeks inweekstheseweeks in aof the weekweekisis the sameand theweekweekare notthein aweek.theweek.weekweek.weekweek of theof the week.", "the first day of thethetheweek.thea singleweek\"Monday\", \"tuesday\",week.week.the firstday.week.weekweek in theweek inweek inweek inweek inweek in theweek inweekofinweek in theweek.", "twooftheweek isone ofweekweek.) {) ; }theweeks of(with quotes).istheweeks ofof theweeksweeks of theweek isaweek is given with\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday", "the firstweek is given.week is givenweekweek is givenofweekweekweek is given inmonth istheweekthe firstday of theweek.the secondaweek is given inweekweek. Theof theweekis given inweek is given inof the weekis given in the"], "prompt": "\nQUESTION:\nYou are given names of two days of the week.\n\nPlease, determine whether it is possible that during some non-leap year the first day of some month was equal to the first day of the week you are given, while the first day of the next month was equal to the second day of the week you are given. Both months should belong to one year.\n\nIn this problem, we consider the Gregorian calendar to be used. The number of months in this calendar is equal to 12. The number of days in months during any non-leap year is: 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31.\n\nNames of the days of the week are given with lowercase English letters: \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\".\n\n\n-----Input-----\n\nThe input consists of two lines, each of them containing the name of exactly one day of the week. It's guaranteed that each string in the input is from the set \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\".\n\n\n-----Output-----\n\nPrint \"YES\" (without quotes) if such situation is possible during some non-leap year. Otherwise, print \"NO\" (without quotes).\n\n\n-----Examples-----\nInput\nmonday\ntuesday\n\nOutput\nNO\n\nInput\nsunday\nsunday\n\nOutput\nYES\n\nInput\nsaturday\ntuesday\n\nOutput\nYES\n\n\n\n-----Note-----\n\nIn the second sample, one can consider February 1 and March 1 of year 2015. Both these days were Sundays.\n\nIn the third sample, one can consider July 1 and August 1 of year 2017. First of these two days is Saturday, while the second one is Tuesday.\nUse Standard Input format\nANSWER:\n"}}