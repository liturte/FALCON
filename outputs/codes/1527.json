{"1527": {"code": ["if Takahashithetakesa().theandsuch that.thethe).such astheto make threeatheorthe0 or morethethe( 2 -Aoki has to make.", "thetheatakahashi has to maketheonethethethe{thesquare asthesquarethetheasquare.atheis notthesquare, andthesquare, so it isthe takahashi has to make", "to moveAoki has to maketheMaze isMaze isa:. or #:thesquare isthetheor #.and #.and #.. or #.. or. or #.. or #.or #.if S_{ij} is..of, W ](, W ]", "\\leqthesquare insquare in the:theif Takahashi chooses thetop-right square as theand theis. or. or..- 2.1.. or. or.. or. or.. or. or.. or. orsquare in. or. or.. or. or..", "S_{ij} isis- 1 \\leq H,W \\leqHWto the goaltothetakahashitheof theof thesquare as thesquare as thethe=andthe.] =aor; }square as thethesquare as theas the", "square.orthesquare, orsquareof thesquare, orthethethethesquarethethemovesto thesquare,thethesquare, orMaze to Aoki hastheandthe maze tothe maze to Aoki hasthe maze to Aoki has to", "HWto.the[] [ 0 ][ 1 ][] [][ 2 ] [[ 1 ]][ 1 ]]] [ 0 ]][ 2 ][[]]]] [ 1] [ 1 ][", "asquare if S_{ij} is) or #.to theistheAoki has to makemoves.thetakesofatheathesquare,theto make1 or more moves.S_{ij} isone- S_{ij} isand a0 or more moves Aokito makethe", "thetheof the---H,W\\leq- S_{ij}S_{ij}{S_{ij}thethethe firstof thesquarethethe.0 ] = 0[ 0 ]] = 0[ 0 ]= 0]] = 0", "moves(.[ 2 ][ 3 ]] [] [] [ 3 ][ 4 ]] [ 3 ][ 2 ]][ 2 ] [[ 2] [ 3 ]] [ 1 ]]] [] []] [ 1] [ 0 ][ 2 ] []] [ 2 ]]"], "prompt": "\nQUESTION:\nTakahashi has a maze, which is a grid of H \\times W squares with H horizontal rows and W vertical columns.\nThe square at the i-th row from the top and the j-th column is a \"wall\" square if S_{ij} is #, and a \"road\" square if S_{ij} is ..\nFrom a road square, you can move to a horizontally or vertically adjacent road square.\nYou cannot move out of the maze, move to a wall square, or move diagonally.\nTakahashi will choose a starting square and a goal square, which can be any road squares, and give the maze to Aoki.\nAoki will then travel from the starting square to the goal square, in the minimum number of moves required.\nIn this situation, find the maximum possible number of moves Aoki has to make.\n\n-----Constraints-----\n - 1 \\leq H,W \\leq 20\n - S_{ij} is . or #.\n - S contains at least two occurrences of ..\n - Any road square can be reached from any road square in zero or more moves.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nH W\nS_{11}...S_{1W}\n:\nS_{H1}...S_{HW}\n\n-----Output-----\nPrint the maximum possible number of moves Aoki has to make.\n\n-----Sample Input-----\n3 3\n...\n...\n...\n\n-----Sample Output-----\n4\n\nIf Takahashi chooses the top-left square as the starting square and the bottom-right square as the goal square, Aoki has to make four moves.\nUse Standard Input format\nANSWER:\n"}}