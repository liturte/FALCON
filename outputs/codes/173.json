{"173": {"code": ["the. [Image]( 2]]) ;( 1 ) ;[Image]) ;(( 1 ) ;( 1 )[) ; }(( 1 ) ;) ; } }) {, 3 ) ;( 2 ) ; }[Image]\"; }n(", "north to south.north toinm.( 0,m01 ] =[] =[ 2 ] =;; if () {.] = [, 0 ]= []0 ]= [ ] ;[ 1 ] =; }. length ; i <", "aone ofstreet directionthe inputthethetheofoftheandthetheinput containstheof thethetheisthird line of input containsthethe number ofstreetin thenorth to south,the first line of input", "thetheandit is possible totheand the.] ) ; }.( \"n\"] ) ;n,,.1 ] )n, m,.) ;] ) ; } }.] ) ; })if (= 0 ; i <[ i ] ;( ) ; i ++", "standardandnorth tothestreet directionthein the=1., 0.0, 0.01.0[Image]], 0.01.0, 0.0, 0.01.0, 0.0, 0.00.00.02.01.0, 0.00.0, 1.", "inputthenumber ofthestreet directionin thetothe second sample testthe second samplethe..)) ;() ; }) ;(() { if (. length( )] ) {[]. split (( ) ; }", "thethethein thethe(1 \u2264 n,5 )thethenorththein the second sample testinput containsin the first sample testof the input(5)(5 \u2264 n,) ) {). format (( 5 )) ) )( 5) ) {)", "streetstreetin the first sample(1 \u2264to.0 ) { n=[Image]if ( n >[Image]1if ( m >0 ) {= (n - 1 )() ;(1 ][Image] \n: 0,] =1;; }", "()(2 \u2264 n,theforthethe1, 3, 4, 5,1,3, 4, 5,4,4, 5, 5, 6, 7,7, 7, 8, 9, 9,10, 10,8, 9, 10, 10,9, 10,9, 9, 10,8, 9,8", "street directionthetheinput of theline containsa string of lengthof characters '>' andisofthetothe.) ;..( 'n',] =.; int i = 0; i <) ; i ++] =) ;] = \"n\" +. split ( \" \""], "prompt": "\nQUESTION:\nImagine a city with n horizontal streets crossing m vertical streets, forming an (n - 1) \u00d7 (m - 1) grid. In order to increase the traffic flow, mayor of the city has decided to make each street one way. This means in each horizontal street, the traffic moves only from west to east or only from east to west. Also, traffic moves only from north to south or only from south to north in each vertical street. It is possible to enter a horizontal street from a vertical street, or vice versa, at their intersection.\n\n [Image] \n\nThe mayor has received some street direction patterns. Your task is to check whether it is possible to reach any junction from any other junction in the proposed street direction pattern.\n\n\n-----Input-----\n\nThe first line of input contains two integers n and m, (2 \u2264 n, m \u2264 20), denoting the number of horizontal streets and the number of vertical streets.\n\nThe second line contains a string of length n, made of characters '<' and '>', denoting direction of each horizontal street. If the i-th character is equal to '<', the street is directed from east to west otherwise, the street is directed from west to east. Streets are listed in order from north to south.\n\nThe third line contains a string of length m, made of characters '^' and 'v', denoting direction of each vertical street. If the i-th character is equal to '^', the street is directed from south to north, otherwise the street is directed from north to south. Streets are listed in order from west to east.\n\n\n-----Output-----\n\nIf the given pattern meets the mayor's criteria, print a single line containing \"YES\", otherwise print a single line containing \"NO\".\n\n\n-----Examples-----\nInput\n3 3\n><>\nv^v\n\nOutput\nNO\n\nInput\n4 6\n<><>\nv^v^v^\n\nOutput\nYES\n\n\n\n-----Note-----\n\nThe figure above shows street directions in the second sample test case.\nUse Standard Input format\nANSWER:\n"}}