{"2174": {"code": ["thea_1, a_2,..., a_{n} ((=.(,,a_2,..., a_{n} (n \u2264a_{n} \u2264( - 10^9( 12)) )<)( ( - 10^9)>( n < 10) {n", "a_1, a_2,...,numberthea_1,a_2,..., a_{n} (1).thea_1, a_2,..., a_{n}..n.*) )).a_1, a_2,...,a_{i} \u2264 1\u00b710^5(", "a_1, a_2,..., a_{n} (4in C++#11#12)0: #16( -) {( - 1,()()() ;) ;( ) ;.( )() {( ) ;( ) ;( ) ; } }", "theof thenumber by one.the1.1.0.thethe second samplenumber byin(2).2, 1, 2).4.4.1, 1.2).1.2, 1.2, 3,= 2.03.0,1.0, 1.0, 1.0, 2.0,", "0.10^5 )length of thea_1, a_2,..., a_{n} (2.The(1,4,2.(0, 1,)[]) {( 01. )[ 0 ].1. )3, 2).1.)( 0,) {. append () )", "thea_1, a_2,...,a_{n} (0, 1,A 1,1, 2,2, 3, 2,1.2,6, 2, 1.a_1,(3,a_{n} \u2264a_{i} \u22641, 3, 1, 1.-1,1,1", "the first3\u00b710^5 \u2264 3\u00b710^5=a_1, a_2,...,10^92.2).)=i = 0 ; i)i < n ;i ++ ).1 ], n1, n=( 1,][.], n )n ) { if", "c in, cout streams orof integer nn (1 \u2264 n1\u00b710^54\u00b710^5 \u226416\u00b710^5cout streams or the %I64dtothe= int ()])0 ] = int[ 0 ] =( -[] =]]][ 1 ]", "<4 ) {= int_n_n_1i){; } else { print( int_n_1){ print.;;) { print () ; } else} }0 ) { print (( int_n_1, int_n_1,int_n_2, int_n_2int_n_2, int", "length of a( 12) or(2,1, 1).2,3\u00b710^9a_1, a_2,..., a_{n} (the(1, 3, 2).2, 3, 1).(1, 1,2,to buildtwoa_1, a_2,..., a_{n}2, 3)"], "prompt": "\nQUESTION:\nPermutation p is an ordered set of integers p_1,  p_2,  ...,  p_{n}, consisting of n distinct positive integers, each of them doesn't exceed n. We'll denote the i-th element of permutation p as p_{i}. We'll call number n the size or the length of permutation p_1,  p_2,  ...,  p_{n}.\n\nYou have a sequence of integers a_1, a_2, ..., a_{n}. In one move, you are allowed to decrease or increase any number by one. Count the minimum number of moves, needed to build a permutation from this sequence.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 3\u00b710^5) \u2014 the size of the sought permutation. The second line contains n integers a_1, a_2, ..., a_{n} ( - 10^9 \u2264 a_{i} \u2264 10^9).\n\n\n-----Output-----\n\nPrint a single number \u2014 the minimum number of moves.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n2\n3 0\n\nOutput\n2\n\nInput\n3\n-1 -1 2\n\nOutput\n6\n\n\n\n-----Note-----\n\nIn the first sample you should decrease the first number by one and then increase the second number by one. The resulting permutation is (2, 1).\n\nIn the second sample you need 6 moves to build permutation (1, 3, 2).\nUse Standard Input format\nANSWER:\n"}}