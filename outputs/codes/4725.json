{"4725": {"code": ["output format\nANSWER:.'1': '1', '2''3', '4', '6''6', '6','9', '9','9', '9', '9', '9', '9',,'9', '9',, '9', '9''9'", "single string within thethe number of distinctsimplicityin the stringstringin thestring ofis(a stringthethe(('')({ if (. length ==)))() ) {)( ) ; } }", "of:a singlethe= 11 :0:Output 4:A:A:A:A:A:A: A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A:A", "the string with thea single string withsimplicity of$1$ or$2$)outputoutputoutputstring formatoutput formatformatOutput format:Output format:output format:Outputstandardoutput format:format:\" \"output format:output format:: \"output: \" +\"output: \" +", "the stringa single string withsimplicityofthe stringthe string with simplicityoutput( ) {=:.[ 1 ]] )[ 0 ]] ) ).}( ) {.); };0 :. length ) { if. length >) {", "1::::Output 4:6:\n9:Output 5:\n9:Output 6:\n11:Output 6:\n0:5:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1", "inputinputin theinput.a singlesingle stringwithsingle integer.a single integer,output format\nANSWER :Output formatoutput formatInput formatoutput formata single string,inputinput format:Output format:format :{,:0::", "stringif theintheof $1$ or $2${ A =; A=[ ]=] ; A0 ] ;] ; A) ;) ;[ 1 ]= 00 ] ; A1 ] ;A =A = A [] ; A [A [] ; A [A [] = A", "one letterofif youaofthe string with a singlesimplicityoftheinput( 1 ),output [1 ](. format (output [outputoutput [ 1( 2 )output [( output() ;(),(", "A single test case,a single string containingA singlea singletothesimplicity1:2:\n2\nSample Output1:Output 1:\n1\nUseOutput 2:\n1\nUse1:\n1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"], "prompt": "\nQUESTION:\nFor a string of letters, define the Simplicity of the string to be the number of distinct letters in the string. For example, the string string has simplicity $6$, and the string letter has simplicity $4$.\n\nYou like strings which have simplicity either $1$ or $2$. Your friend has given you a string and you want to turn it into a string that you like. You have a magic eraser which will delete one letter from any string. Compute the minimum number of letters you must erase in order to turn the string into a string with simplicity at most $2$.\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. The input will consist of a line with a single string consisting of at least $1$ and at most $100$ lowercase letters \u2018a\u2019-\u2018z\u2019.\n\n-----Output-----\nOutput a single integer, indicating the minimum number letters you need to erase in order to give the string a simplicity of $1$ or $2$.\n\n-----Examples-----\nSample Input 1:\nstring\nSample Output 1:\n4\n\nSample Input 2:\nletter\nSample Output 2:\n2\n\nSample Input 3:\naaaaaa\nSample Output 3:\n0\n\nSample Input 4:\nuncopyrightable\nSample Output 4:\n13\n\nSample Input 5:\nambidextrously\nSample Output 5:\n12\n\nSample Input 6:\nassesses\nSample Output 6:\n1\nUse Standard Input format\nANSWER:\n"}}