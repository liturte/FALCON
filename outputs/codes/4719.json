{"4719": {"code": ["theanin theoffor every= 1,...,1,..., n.1,..., n.S_i isfor every i =1,..., n.1,..., n.A_i isathe.;1,...,- 1 \\leq1,..., n.if (= 1,...,n", "=( a - z )....).= 0.( ) )..)) ).( ).)} }] )( )); if( ) ==.,) ).else if (", "thetheaof(S_1,...,S_n) areas aof thetheS_1,...,S_n) isone of the.thetheto thethe inputthethestring in theof thethethe given stringthe= 1,..., n.- 1 \\leq n+ 1,...,", "string in thea string inS_1,...,S_nit is thein the= 1,...,n\\leq 50A_iA_iA_n A_i1,...,S_i is then\\leq n\\leq\\leqS_i is then\\leqa - zA_i isthe", "for each string in the(the.thetheallto createthem.thethe..0.), \" \" ).)( \" \" )[ 0 ],,[ 0 ],[.[ 0 ],, [ ],", "betheofinifin theaAACtheaAC in theaAC and caac aretheacacacac are theofaacacacaacacac is thein theof theaacacac. AACACACis aacacacare,aacacacac areaacacac are theof", "the.the string.) { if (.( )] =])+\"] )) {=[ ] )[ ] ) ;, \"A\" )] =[ ] ) ) {:( \"A\" )))[ ] ) ;} }", "theof thein the) {= 01,..., S_ia - z1,...,Aacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacac", "theof theS_i|\\leq n \\leqalltheintheS_i,..., n..in..(\"paper cutting\" :: \"paper, \"paper.\"paper cutting\" : \"paper, \"paper) ; }\"paper cutting\", \"paper, \"paper cutting\"\"", "converged byof theinaare..( ) ) {]( ) )0.0 ) ), \"A\" ) ;0.0 ) {} } else( ) {. append ( \"\" ). append ()( ) ; }) {0)( ) ;. append( ) ; }) ; }"], "prompt": "\nQUESTION:\nSnuke loves \"paper cutting\": he cuts out characters from a newspaper headline and rearranges them to form another string.\nHe will receive a headline which contains one of the strings S_1,...,S_n tomorrow.\nHe is excited and already thinking of what string he will create.\nSince he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains.\nFind the longest string that can be created regardless of which string among S_1,...,S_n the headline contains.\nIf there are multiple such strings, find the lexicographically smallest one among them.\n\n-----Constraints-----\n - 1 \\leq n \\leq 50\n - 1 \\leq |S_i| \\leq 50 for every i = 1, ..., n.\n - S_i consists of lowercase English letters (a - z) for every i = 1, ..., n.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nn\nS_1\n...\nS_n\n\n-----Output-----\nPrint the lexicographically smallest string among the longest strings that satisfy the condition.\nIf the answer is an empty string, print an empty line.\n\n-----Sample Input-----\n3\ncbaa\ndaacc\nacacac\n\n-----Sample Output-----\naac\n\nThe strings that can be created from each of cbaa, daacc and acacac, are aa, aac, aca, caa and so forth.\nAmong them, aac, aca and caa are the longest, and the lexicographically smallest of these three is aac.\nUse Standard Input format\nANSWER:\n"}}