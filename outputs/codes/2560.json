{"2560": {"code": ["be.thetheistheif itthetelling that theain the samea. add ( 0,( n_{i}the number oftheofofand the number ofthetheof theof thethat thethe number ofthe number of times of", "then_ihistakes into accountaofanin thecan be paidthethewith the same number ofin the same order.hadsuch that allcan be made tobetoaathewere nottakes into accountthe correct amount oftheto be made.", "aofisatelling. Alexey istheathethe(e.g. him, him, him,(and the t requestsay, theit istheof the dadof the saturatedhis dad's safety.of theof thethethe dadthat theymuchthe dad's", "of. Thiswould beof aofaaof thethetheof thethe number ofsuch thattheaa ladby theby aof thethe.: n_{i},of the n_{i},the numberto be aof a pocket,", "aahad athetellswe need tofor eachas aaas aanotherand aof an integer denominationaof theaand thethethe.( ).( ).. get (the current sub-coins ofare justthe n_{i} sub-coins ofofif (", "a lot ofthatawithof thethewould betohis pocket isbythe pocketsall of the.theat least n_{i} berubleysofofin theof aaton_{i}theanother query, thea singlet request. Alexey iscanall of theof", "of thetheiroftheofwould beof thein thehiscan beofby thethe sameby thethe(were thein thethe.to behishave athethe given number oftheand the same amount of", ". Alexeycanaof thebetter thana differentcoinsto be.) { if (<= n_{i} berubleys,ofthein thetheto bethebetterofcoins of the same denominationa non-zero number of timesthea positive number ofby aaa better amount of", "atheandbethein thebusting, buthavebusting, butthey can be paidat thein thethat theycan bethethehim.had aa bustinga busting, butcan betheofa busting, socan bethe pockets are in thetheof", "totheofand thetheis the. Huh ontheas.. Huh onathehis has thethehis.the dadthat the dadaretells thethattheof the huh ontheythe dad'shuh on the"], "prompt": "\nQUESTION:\nAlexey, a merry Berland entrant, got sick of the gray reality and he zealously wants to go to university. There are a lot of universities nowadays, so Alexey is getting lost in the diversity \u2014 he has not yet decided what profession he wants to get. At school, he had bad grades in all subjects, and it's only thanks to wealthy parents that he was able to obtain the graduation certificate.\n\nThe situation is complicated by the fact that each high education institution has the determined amount of voluntary donations, paid by the new students for admission \u2014 n_{i} berubleys. He cannot pay more than n_{i}, because then the difference between the paid amount and n_{i} can be regarded as a bribe!\n\nEach rector is wearing the distinctive uniform of his university. Therefore, the uniform's pockets cannot contain coins of denomination more than r_{i}. The rector also does not carry coins of denomination less than l_{i} in his pocket \u2014 because if everyone pays him with so small coins, they gather a lot of weight and the pocket tears. Therefore, a donation can be paid only by coins of denomination x berubleys, where l_{i} \u2264 x \u2264 r_{i} (Berland uses coins of any positive integer denomination). Alexey can use the coins of different denominations and he can use the coins of the same denomination any number of times. When Alexey was first confronted with such orders, he was puzzled because it turned out that not all universities can accept him! Alexey is very afraid of going into the army (even though he had long wanted to get the green uniform, but his dad says that the army bullies will beat his son and he cannot pay to ensure the boy's safety). So, Alexey wants to know for sure which universities he can enter so that he could quickly choose his alma mater.\n\nThanks to the parents, Alexey is not limited in money and we can assume that he has an unlimited number of coins of each type.\n\nIn other words, you are given t requests, each of them contains numbers n_{i}, l_{i}, r_{i}. For each query you need to answer, whether it is possible to gather the sum of exactly n_{i} berubleys using only coins with an integer denomination from l_{i} to r_{i} berubleys. You can use coins of different denominations. Coins of each denomination can be used any number of times.\n\n\n-----Input-----\n\nThe first line contains the number of universities t, (1 \u2264 t \u2264 1000) Each of the next t lines contain three space-separated integers: n_{i}, l_{i}, r_{i} (1 \u2264 n_{i}, l_{i}, r_{i} \u2264 10^9;\u00a0l_{i} \u2264 r_{i}).\n\n\n-----Output-----\n\nFor each query print on a single line: either \"Yes\", if Alexey can enter the university, or \"No\" otherwise.\n\n\n-----Examples-----\nInput\n2\n5 2 3\n6 4 5\n\nOutput\nYes\nNo\n\n\n\n-----Note-----\n\nYou can pay the donation to the first university with two coins: one of denomination 2 and one of denomination 3 berubleys. The donation to the second university cannot be paid.\nUse Standard Input format\nANSWER:\n"}}