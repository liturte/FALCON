{"2391": {"code": ["- 2(k,x)=1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,", "a_1-01- a_1'=(a_1\\0 )=22a_1... a_{N-1} a_{N-1} b_{N-1}--2\\mbox{ XOR-- a_1'=(a_0\\)=2;\\n# A1 \\mbox{ XOR-=b_", "thea_0- 1 \\2 \\---a_0 \\- 1\\A \\mbox{\\\\mbox{ XOR }-- 3 \\mbox{ XOR\\mbox{ XOR }A \\mbox{ XOR }\\mbox{{\\mbox{ XORB \\mbox{\\mbox{ XOR| 0x1|", "of N pairs(k,x)in the followingN \\leq 0 \\leq1 \\leq0 \\leq- 1 \\leq\\leqA \\mbox{A \\mbox{ XOR } B\\leq 0 \\leq0 \\leq 0 \\leqA \\mbox{0 \\leq(k,x) = 2.A \\", "= a_{N-1} b_0k--= a_{N-1}01 )00 )a_{N-1}b_{N-1} b_{N-1}a_{N-1}b_{N-1}- a_1'=(a_2\\\\ 3)=3\nA\\B\\3)=1COO", "- a_0--- 1-A \\mbox{0\\mbox{0- 1 \\mbox{0 \\mbox{\\mbox{ XOR })XOR \\ 3-A \\mbox{ XOR }(k,x)the same2 \\times 10^5 (in base) { return a_0a_{N-1", "XOR \\(1.,a_{N-1} a_{N-1} b_{N-1} a_{N-1}(a_{N-1} a_{N-1} b_{N-1) =(b, a_{N-1} a_{N-1)\\3)=2.\\of a_{N-1} a_{N-1}A\\", "of the.0 - 1 )A-A \\mbox{B \\mbox{A \\:0]0 } a_0= 0b_0+ 1 )a_0a_{N-1} b_{N-1} a_{N-1} b_{N-1} b_{N-1}(k,x)a_{N-", "N - 1 ]a_0b_0...-- 1 \\mbox{1 \\mbox{1 \\mbox{ XOR } 60 \\mbox{5 \\mbox{1 \\mbox{ XOR }\\mbox{B\\mbox{ XOR }(k,x)thethe inputa_0,)(k,x)=1,", "---the- 1 \\\\A \\AA \\mbox{A \\mbox{ XOR }-a_1 \\mbox{ XOR }A \\mbox{ XOR }B \\mbox{A \\mbox{ XOR }= \\\\ mbox{{\\B }} B \\mbox{ XOR\\mbox{4 \\"], "prompt": "\nQUESTION:\nGiven are two sequences a=\\{a_0,\\ldots,a_{N-1}\\} and b=\\{b_0,\\ldots,b_{N-1}\\} of N non-negative integers each.\nSnuke will choose an integer k such that 0 \\leq k < N and an integer x not less than 0, to make a new sequence of length N, a'=\\{a_0',\\ldots,a_{N-1}'\\}, as follows:\n - a_i'= a_{i+k \\mod N}\\ XOR \\ x\nFind all pairs (k,x) such that a' will be equal to b.What is \\mbox{ XOR }?\n\nThe XOR of integers A and B, A \\mbox{ XOR } B, is defined as follows:\n\n - When A \\mbox{ XOR } B is written in base two, the digit in the 2^k's place (k \\geq 0) is 1 if either A or B, but not both, has 1 in the 2^k's place, and 0 otherwise.\nFor example, 3 \\mbox{ XOR } 5 = 6. (In base two: 011 \\mbox{ XOR } 101 = 110.)\n\n\n-----Constraints-----\n - 1 \\leq N \\leq 2 \\times 10^5\n - 0 \\leq a_i,b_i < 2^{30}\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\na_0 a_1 ... a_{N-1}\nb_0 b_1 ... b_{N-1}\n\n-----Output-----\nPrint all pairs (k, x) such that a' and b will be equal, using one line for each pair, in ascending order of k (ascending order of x for pairs with the same k).\nIf there are no such pairs, the output should be empty.\n\n-----Sample Input-----\n3\n0 2 1\n1 2 3\n\n-----Sample Output-----\n1 3\n\nIf (k,x)=(1,3),\n - a_0'=(a_1\\ XOR \\ 3)=1\n - a_1'=(a_2\\ XOR \\ 3)=2\n - a_2'=(a_0\\ XOR \\ 3)=3\nand we have a' = b.\nUse Standard Input format\nANSWER:\n"}}