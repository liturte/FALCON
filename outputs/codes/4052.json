{"4052": {"code": ["\"abcdef\"$n$$c_j$ $\\rightarrow$\"abcdfe\" $\\rightarrow$\"abcdfe\"\"abdcfe\" $\\rightarrow$ \"abdcfe\"\"abcdef\" $\\rightarrow$ \"abdcef\" $\\rightarrow$ \"abcdfe\"the first$n$$n$$n$ lowercase Latinof", ". \na string $t$)thethemoves are applieditto the string $s$they are$n$$k$theof$t$$n$ lowercase Latin letters$t$ lowercase Latin letters$n$ lowercase Latin letters.$n$ lowercase\\dots, n$n$ lowercase Latin letters$n$ lowercase", "the first line$k$$1$ -theof a$s_i$\\dots,$n$$n$ -$n$ -$t$ -$n$ $n$and$t$the$k$ characters $n$$k$ characters $n$$n$a string $s$the string $t$$s", "string$t$.=$t$.the string$n$$k$the$s$$n$ characters0 ).( $s_i$\\dots, n - 1$$t$ $k$ characters $1$$t$theto$t$moves are applied to$n$ $n$the characters $s_", "$n$$t$ andthe string$s$ and $t$$n$length of string $s$the string $t$of$n$ lowercase Latin letters$s_i$ $s_{i$t$$t$the$t$ is not$t$= $n$$t$ in $t$thethecharacters in $", "$t$.a single integerthe$s_i$string $t$.a string $t$of the$n$in the first line(ina string $t$the firstin the first line$n$the first linethe second linethe stringthe string $t$thethe string$s$ isstring $s$string $t", "$n$ characters of $s$$n$.:11 ]\"abcd\"1)\"abdcfe\" $\\rightarrow$ \"abdcfe\"\"abcd\" $\\rightarrow$ \"abcd\"\"abcd\" $\\rightarrow$ \"abdcfe\"the first lineif theis notthe first line\"abdcef\"", "the second line$k$ integers andthe.) { int k++ ) {( $s_i$ ) ) {[ k ] )\"abcdec\"]] ) {][ k].] ; } }[ k ] )][][ k ] ;]]) { if (] == \"A\" )[ k", "$s$$n$2 2 5\\dots,\\dots, n - 1\\$t$$s$ with$t$if$n$in the first linein$s_i$]\"abcdcef\" $\\rightarrow$ \"abdcfe\" $\\rightarrow$ \"abdcfe\"\"abdcfe\" $\\rightarrow$", "$s$ and $t$in the first line$t$in the secondthe$n$$n$$t$ \u2014it in thestring $s$$t$thestringtheastring $t$$n$thecharacters in thethe$n$$t$ $n$ $n$the string $t$"], "prompt": "\nQUESTION:\nYou are given two strings $s$ and $t$. Both strings have length $n$ and consist of lowercase Latin letters. The characters in the strings are numbered from $1$ to $n$.\n\nYou can successively perform the following move any number of times (possibly, zero):  swap any two adjacent (neighboring) characters of $s$ (i.e. for any $i = \\{1, 2, \\dots, n - 1\\}$ you can swap $s_i$ and $s_{i + 1})$. \n\nYou can't apply a move to the string $t$. The moves are applied to the string $s$ one after another.\n\nYour task is to obtain the string $t$ from the string $s$. Find any way to do it with at most $10^4$ such moves.\n\nYou do not have to minimize the number of moves, just find any sequence of moves of length $10^4$ or less to transform $s$ into $t$.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 50$) \u2014 the length of strings $s$ and $t$.\n\nThe second line of the input contains the string $s$ consisting of $n$ lowercase Latin letters.\n\nThe third line of the input contains the string $t$ consisting of $n$ lowercase Latin letters.\n\n\n-----Output-----\n\nIf it is impossible to obtain the string $t$ using moves, print \"-1\".\n\nOtherwise in the first line print one integer $k$ \u2014 the number of moves to transform $s$ to $t$. Note that $k$ must be an integer number between $0$ and $10^4$ inclusive.\n\nIn the second line print $k$ integers $c_j$ ($1 \\le c_j < n$), where $c_j$ means that on the $j$-th move you swap characters $s_{c_j}$ and $s_{c_j + 1}$.\n\nIf you do not need to apply any moves, print a single integer $0$ in the first line and either leave the second line empty or do not print it at all.\n\n\n-----Examples-----\nInput\n6\nabcdef\nabdfec\n\nOutput\n4\n3 5 4 5 \n\nInput\n4\nabcd\naccd\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first example the string $s$ changes as follows: \"abcdef\" $\\rightarrow$ \"abdcef\" $\\rightarrow$ \"abdcfe\" $\\rightarrow$ \"abdfce\" $\\rightarrow$ \"abdfec\".\n\nIn the second example there is no way to transform the string $s$ into the string $t$ through any allowed moves.\nUse Standard Input format\nANSWER:\n"}}