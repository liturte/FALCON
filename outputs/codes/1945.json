{"1945": {"code": ["theif the handlehadin.() {() {( ) ;( ) )..]) {( ) ) ;( ).) ) ; }}) ), \"H\", \"H\", \"H\",\"H\",\"H\", \"H\",\"H\", \"H\",", ":new:: new: new: new: new: new: new }}: new }: new }}: new } ;: new: new } ;new } ;new } ;.: new }= new.} else if (= new( ) ;( ) ; }", "a single(1 \u2264thein any order.newthebe used,andthe number ofofone ofa single handle,a singlea singlethethe new handle.thetheofthethe newthethe users that changed.) ; } private static=", "of thebytheof thehis handlethe handle istheof the)thethethenew, and theis thethe handle istheis thethethehandle is thehandle.the handle is theofthethe handle. Auser changes the handle. A", "the handlethehandletheto be changedthethe new.the] ) ; forint i = 0i <) {.(.i ][ i ] ;] ; } if (( )] ) {} if (..) { if) { if (", "handles;ofthethea number ofthethehandle,thehandles of the users.thethe newthetheathe number ofthe handle.a handle witha(1 \u2264) {.( 0 ) ;.( 1 ) ;", "theis notthe handletheinthetothetheaof theofa single handle.thethea singletheuser was usedhandleofforthe userthatthe users which changedthe handle.the user had the", "theif the user hasthe handle isthebe(1the number offor thein any order.thetheof theathefor thethethe handle.inthethethe request.the first linethenumber ofof the requests. Thein the next line, the", "the(1 \u2264 q \u2264 1000),thenew, i.e.aof(1 \u2264)athehandle ofisaa singlethethe handle of theis aa singlethethehandle new, thea singlethe number ofhis handle is new,thethe number of requests.", ").thethe.). join (')] = new( ). join (). join ())) ). join( ).( ).. split ( ').) )() ). join (}( ) )). join( ') ). join). join ("], "prompt": "\nQUESTION:\nMisha hacked the Codeforces site. Then he decided to let all the users change their handles. A user can now change his handle any number of times. But each new handle must not be equal to any handle that is already used or that was used at some point.\n\nMisha has a list of handle change requests. After completing the requests he wants to understand the relation between the original and the new handles of the users. Help him to do that.\n\n\n-----Input-----\n\nThe first line contains integer q (1 \u2264 q \u2264 1000), the number of handle change requests.\n\nNext q lines contain the descriptions of the requests, one per line.\n\nEach query consists of two non-empty strings old and new, separated by a space. The strings consist of lowercase and uppercase Latin letters and digits. Strings old and new are distinct. The lengths of the strings do not exceed 20.\n\nThe requests are given chronologically. In other words, by the moment of a query there is a single person with handle old, and handle new is not used and has not been used by anyone.\n\n\n-----Output-----\n\nIn the first line output the integer n \u2014 the number of users that changed their handles at least once.\n\nIn the next n lines print the mapping between the old and the new handles of the users. Each of them must contain two strings, old and new, separated by a space, meaning that before the user had handle old, and after all the requests are completed, his handle is new. You may output lines in any order.\n\nEach user who changes the handle must occur exactly once in this description.\n\n\n-----Examples-----\nInput\n5\nMisha ILoveCodeforces\nVasya Petrov\nPetrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov\nPetya Ivanov\n\nOutput\n3\nPetya Ivanov\nMisha MikeMirzayanov\nVasya VasyaPetrov123\nUse Standard Input format\nANSWER:\n"}}