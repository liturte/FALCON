{"3215": {"code": ["a single test case.$n$1453 4 56 43 43 43 4312 9 4 5 666 43 43 43 43$n$ unique integers $c$$n$ uniquea single$c$(n$\\le n $)a singlenumber ofa singlein the deck.a singlenumber ofthethe deck", ".n$1:n$1 :7 8 94 56625 8 9 106:107 8 9 102:9 4 55 10 6\nSample5:0 1:06:0 2:0 2:0510 65 10 6\nSample2:0 0:0 1:02:0 0", "in the given orderisthe deckthe same numberthetothetheof thethe$n$the$n$of thethethein the inputthethe number ofthethe input. Thenumber ofcards.n$)the first twothe first two", "in theinthethe deck,thein thea single linewith a singleone integer $n$a single integer $c$with a singlethen$n$24 5 5 66\nSample Output3:\n10\n1 2 78 9 4 56168 999 4 5 10 66:\n10101010", "inputanin$n$ 1, 2,n$n$ number ofthenumber ofa singlean integerofthein the given order:a singlethea singlenumber ofa singlenumber ofnumber ofan integer$1 \\le$n$ number of cardsin the given order:n$ number ofthe number of", "() {( $10] ) {1 :2 :8 1 9 4 5975 10 661:85 10 68 998 996710 60: 0: 0:2: 0:7: 0: 0: 0:0: 0: 1:", "2, 3,..., n$in thethe deckin theinputin theorderthe input is a(theorder,theis.( ) ) {[ 0 ]]] [] [ 0 ][ 1 ]) ) ).( )) ), n[ 2 ] [", "can bein antwoa single22 7 78 9 9597 9 10 678 9 10 66:6:8 95 10 6\nSample Output2:2:96:6:3:6:1:9:6:79:6:8:8:9:9:9:9", "antwo1:8 9 4 51062 78 9966:8 96 :8 9 4 56:4 5 5 65 10 6\nSample Output2:5 8 9 10 62:2:8 92 78 9 4 5 69 11 11 11 1110 11 11", "and.0, 0, 0,\\n\\n $1 \\n\\n1, 0, 1,2,2,2, 3,..., n$0, n$1, 2, 3,...,n$(c $>< $n$ uniquein thean integer.$n$ unique$c$an integer=int"], "prompt": "\nQUESTION:\nThe most common technique for shuffling a deck of cards is called the Riffle or Dovetail shuffle. The deck is split into two stacks, which are then interleaved with each other. The deck can be split anywhere, and the two stacks can be interleaved in any way.\n\nFor example, consider a deck with 10 unique cards:\n\n1 2 3 4 5 6 7 8 9 10\n\nSplit them somewhere\n\n1 2 3 4 5 6\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a07 8 9 10\u00a0\u00a0\n\nAnd interleave them in some way:\n\n1 2\u00a0\u00a0 \u00a07\u00a0\u00a0 3\u00a0\u00a0 8 9\u00a0\u00a0 \u00a04 5\u00a0\u00a0 10\u00a0\u00a0 6\u00a0\u00a0\n\nDo it again. Split them somewhere:\n\n1 2 7\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 3 8 9 4 5 10 6\u00a0\u00a0\n\nAnd interleave them in some way:\n\n3 8\u00a0\u00a0 \u00a01\u00a0\u00a0 9 4 5\u00a0\u00a0 \u00a02 7\u00a0\u00a0 10 6\u00a0\u00a0\n\nThis is one possible ordering after $2$ shuffles. Suppose there are $n$ unique cards, and that they start out perfectly ordered: $1, 2, 3, ..., n$. Given an ordering of the deck, what is the smallest number of shuffles that could possibly put the deck in that order?\n\n-----Input-----\nEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each test case will begin with a single integer $n$ ($1 \\le n \\le 1000000$) indicating the number of cards in the deck. On the next line will be $n$ unique integers $c$ ($1 \\le c \\le n$), with a single space between them, indicating an ordering of the $n$ cards. The values $c$ are guaranteed to be a permutation of the numbers $1 \\ldots n$.\n\n-----Output-----\nOutput a single line with a single integer indicating the minimum number of shuffles that could possibly put the deck in the given order.\n\n-----Examples-----\nSample Input 1:\n10\n1 2 7 3 8 9 4 5 10 6\nSample Output 1:\n1\n\nSample Input 2:\n10\n3 8 1 9 4 5 2 7 10 6\nSample Output 2:\n2\nUse Standard Input format\nANSWER:\n"}}