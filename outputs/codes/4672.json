{"4672": {"code": ["if __name__ ==( input ( ))thethe[name,( *line)scores = list(map(float,score in)() ),( ) )( '0',, '0'){( ) )( )(] ) )((( ) ),( )", "thetheofof students in athestudent_marksthe(oftheof aa studenta student with the=a student with aofa=. split(the number of students inthetheof theof the students' records.). join ( ',", "= [ ]) )=]( \"0\" ). split ( \") )[])( ) )1] )( ),)) ) ) )) )()( ) )) ). split ([ 1 ] ))] ) ) )", "output format. ) )) :.(){ print+ ( score.. format (()}) print (); print ())(] =) print (; print () ; print (() print ( \"Noif", "for thethe(= 1= 0.0() )..)=( student_marks [ name ]),( student_marks )( student_marks.( student_marks])( student_marks].) ){ for (=( student_marks [ name ]", ".[ 'alpha'=. split. split ()) )[][]1 ].[ 1 ][].11 ].][1 ].].[ 0 ].].. split ([ 1 ].] ) )", "( 1 ){ #22.) print ( \"Missing.) print) print ( \"Missingresults\" ) print0.0output( \"Missing#) print () print (\"Missing \") print (( \"Missing \". format () print ( \"Missing\"Missing \" +( \"Missing. format ( \"Missingformat ( \"Missing", ".= 0.0(.[,. split (, 2 )(. join (,) )}. split (1]]),): print ((,)}) ), 0.0,),", "thethe number of students' records.query_name = 'alpha'., student_marks ): print () print ( 'Nostudents' ) print (] ) print (.) print ( 'Nostudents' ) print ('. join () print (.( ) print () print ( 'No\" ) print ( \"Nostudents'", "the list of students[( student_marks[ query_name ] =.( student_marks )] = student_marks else( student_marks[ name ] =)( student_marks..( student_marks ). join. split ( ) )=( student_marks ) ) )(' '; } else: print ();"], "prompt": "\nQUESTION:\n=====Problem Statement=====\nThe provided code stub will read in a dictionary containing key/value pairs of name:[marks] for a list of students. Print the average of the marks array for the student name provided, showing 2 places after the decimal.\n\n=====Example=====\nmarks key:value pairs are\n'alpha': [20,30,40]\n'beta': [30,50,70]\nquery_name = 'beta'\nThe query_name is 'beta'. beta's average score is (30+50+70)/3 = 50\n\n=====Input Format=====\nThe first line contains the integer n, the number of students' records. The next n lines contain the names and marks obtained by a student, each value separated by a space. The final line contains query_name, the name of a student to query.\n\n=====Constraints=====\n2\u2264n\u226410\n0\u2264marks[i]\u2264100\nlength of marks arrays = 3\n\n=====Output Format=====\nPrint one line: The average of the marks obtained by the particular student correct to 2 decimal places.\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\nUse Standard Input format\nANSWER:\n"}}