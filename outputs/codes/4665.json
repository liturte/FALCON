{"4665": {"code": ["of a single# Athenumber of students.in any order.the lastofand thethe total number ofthe total number ofthe totalof theof thein any order.thein any order.the first line contains thenumberthethethetotothe average marks.the next N linesof the total number of", "= 2.0()2.0) { print'missing' +. join ( ') + ')) )('missing',,(,) )('missing','missing') { print'missing'('missing','missing') )('missing','missing','missing','missing',", "andof the=(a) {= 'A' ; #'A' ;= 'A' ; #=, 'M', 'A', 'A', 'A',A', 'B', 'C',, 'C', 'B','A',, 'B', 'C', 'A''", "2 decimal places. aAaofthetheof thethe list.,.( 'D'), 'D', 'D', 'C',, 'D', 'E','D', 'E''A', 'D','D', 'E','A', 'E',", "2 decimal places.#a list ofin aa singleof aofa singleofof a singlethethea list ofinthe same orderof thethelist.of thetheclass, andthe firstofthe lastofa list of", "()= new())) {= new[]( 1,. append () ). append (, 'M', 'Y',= [ ] )(, 'M', 'Y', 'Y', 'Y',, 'Y', 'Y'))2, 'Y', 'Y'", "inAnother code here isofthenames of theathetoa list ofof the studentsthelist ofthein a row.thetheirthethethein thethe total number of students.# Theof thethein aof the order. Another code", "of theof theof thea list ofof() ;:: 'No, 'A' : 'A': 'B' : 'A', 'A' : 'B', 'C' : 'C''C' :'C' : 'C''C''C' : 'C''C' :,:'", "of.#is=the number of students inofof theof the list.the)=] ))0] ) [ 0] [ 11 ]2 ] )] =[ 22 ] )] )(.], \"A\", \"B\"", "C ++( )( )[0 ].). append ( () ) ). join). split ( ','])). join (). join].''). split)( ) )= 0.0),).) ). join()"], "prompt": "\nQUESTION:\n=====Function Descriptions=====\ncollections.namedtuple()\n\nBasically, namedtuples are easy to create, lightweight object types.\nThey turn tuples into convenient containers for simple tasks.\nWith namedtuples, you don\u2019t have to use integer indices for accessing members of a tuple.\n\nExample\nCode 01\n>>> from collections import namedtuple\n>>> Point = namedtuple('Point','x,y')\n>>> pt1 = Point(1,2)\n>>> pt2 = Point(3,4)\n>>> dot_product = ( pt1.x * pt2.x ) +( pt1.y * pt2.y )\n>>> print dot_product\n11\n\nCode 02\n>>> from collections import namedtuple\n>>> Car = namedtuple('Car','Price Mileage Colour Class')\n>>> xyz = Car(Price = 100000, Mileage = 30, Colour = 'Cyan', Class = 'Y')\n>>> print xyz\nCar(Price=100000, Mileage=30, Colour='Cyan', Class='Y')\n>>> print xyz.Class\nY\n\n=====Problem Statement=====\nDr. John Wesley has a spreadsheet containing a list of student's IDs, marks, class and name.\nYour task is to help Dr. Wesley calculate the average marks of the students.\nAverage = Sum of all marks / Total students\n\nNote:\n1. Columns can be in any order. IDs, marks, class and name can be written in any order in the spreadsheet.\n2. Column names are ID, MARKS, CLASS and NAME. (The spelling and case type of these names won't change.)\n\n=====Input Format=====\nThe first line contains an integer N, the total number of students.\nThe second line contains the names of the columns in any order.\nThe next N lines contains the marks, IDs, name and class, under their respective column names.\n\n=====Constraints=====\n0<N\u2264100\n\n=====Output Format=====\nPrint the average marks of the list corrected to 2 decimal places.\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nUse Standard Input format\nANSWER:\n"}}