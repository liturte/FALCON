{"1883": {"code": ["object v, thathad a ski trackone objectthetheobject v.thethethethetype_1,objectis theobject v.number a_{i})()=(( 1 \u2264 nv.[; } for ( int) { if () {", "and oneobject v_1, v_2,...,object v_2,thethe...., 0,.., 0,.)], 0,.( 1, 1) ; if (..( 1,.).{). toString (", "theobjects atnn )objectthe number ofobjectand the numberthe numberis thea_{i}objectis atype_1, type_2,...,object v_1,objectobject v_2,...,object v_2,..., v_kv_1, v_2,..., v_k,object v_{k}", "object v_1, v_2,...,1 to1,) a_{i}the number ofobject v_1,v_2,...,thethe numberof0,the number ofobjects(1 \u2264 n \u2264v_1, v_2,...,the number ofi.object v_1,,) a", "had at least onethethe. \n\n-----Input-----thetheobjectsis thetheobjects with numbers1 \u2264is thethe object v_1, v_2,...,object v_2,...,object v_{k}object v_{k} \u2264theobject v_{k}(1 \u2264 na_{k", "anumber a_{i}a hotel.is aatheobject.0, then it is aobject.theobject.the numberthe number ofisain the#theobject. if number n(0 \u2264 n \u2264 n\u2264 nthethe number ofobjects.the number ofobjects that have at", "the)the object v_{i} is theobject v_{i}if numbernumber(1(1object v_{i} is thenumber a_{i}if number a_{i}number a_{i}the number of objectsof theobject v, that has aobjecta_{i} to0,there is no such objectobject v, thatis a", "objects0.that thethehad onethenumber: {0 },: [ ],1 },: [ ]: [ ]1, 0: [ ],: [], 0: [ ]( 10, 0, 01, 1: [}, 0,: [, 0, 0[ 1 ],", "object v.number kobjectthe ski track.the number of)thetype_{n} (1type_{n} (1 \u2264 nnumber a_{i}isaif number a_{i}{ #numberforobject u, thatofobject u, thatobject u.object u.the number(1 \u2264", "theobject.(numberobject,= 0 ; i <=1 ) {= 0 ;; }{} };; }( \") ; }=, 0=( i <0 ;=, 0, 1; } } }"], "prompt": "\nQUESTION:\nValera's finally decided to go on holiday! He packed up and headed for a ski resort.\n\nValera's fancied a ski trip but he soon realized that he could get lost in this new place. Somebody gave him a useful hint: the resort has n objects (we will consider the objects indexed in some way by integers from 1 to n), each object is either a hotel or a mountain.\n\nValera has also found out that the ski resort had multiple ski tracks. Specifically, for each object v, the resort has at most one object u, such that there is a ski track built from object u to object v. We also know that no hotel has got a ski track leading from the hotel to some object.\n\nValera is afraid of getting lost on the resort. So he wants you to come up with a path he would walk along. The path must consist of objects v_1, v_2, ..., v_{k} (k \u2265 1) and meet the following conditions:  Objects with numbers v_1, v_2, ..., v_{k} - 1 are mountains and the object with number v_{k} is the hotel.  For any integer i (1 \u2264 i < k), there is exactly one ski track leading from object v_{i}. This track goes to object v_{i} + 1.  The path contains as many objects as possible (k is maximal). \n\nHelp Valera. Find such path that meets all the criteria of our hero!\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^5) \u2014 the number of objects.\n\nThe second line contains n space-separated integers type_1, type_2, ..., type_{n} \u2014 the types of the objects. If type_{i} equals zero, then the i-th object is the mountain. If type_{i} equals one, then the i-th object is the hotel. It is guaranteed that at least one object is a hotel.\n\nThe third line of the input contains n space-separated integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 n) \u2014 the description of the ski tracks. If number a_{i} equals zero, then there is no such object v, that has a ski track built from v to i. If number a_{i} doesn't equal zero, that means that there is a track built from object a_{i} to object i.\n\n\n-----Output-----\n\nIn the first line print k \u2014 the maximum possible path length for Valera. In the second line print k integers v_1, v_2, ..., v_{k} \u2014 the path. If there are multiple solutions, you can print any of them.\n\n\n-----Examples-----\nInput\n5\n0 0 0 0 1\n0 1 2 3 4\n\nOutput\n5\n1 2 3 4 5\n\nInput\n5\n0 0 1 0 1\n0 1 2 2 4\n\nOutput\n2\n4 5\n\nInput\n4\n1 0 0 0\n2 3 4 2\n\nOutput\n1\n1\nUse Standard Input format\nANSWER:\n"}}