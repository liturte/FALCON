{"4723": {"code": ["theit,T ).) ) {..) {.).) ; }(,,( ){ if (!) {...if ({( )} else { print", "T'A string Sa string Tconvention=(the stringthea stringas a contiguous substring,thetested( S.T(, 'T'.S )) ).(.,a stringis", "( S )S( T ).T ).]{}.( ){.).).) ))..].(( ) ;).(( ) ).( )} } }", "1 : theSTstring is1: theSTbeenthea stringisA, B, C,T,theasthe stringthestring isa string:.thestring(..", "andS is a- T':String S' in-S'String T'T' in:String S')S'as a contiguous substringthat satisfy Condition1:S' isT'aa stringsuch a string does notexist, print UNRESTORABLE instead.istheT' isT'", "theaisthetheconstituentstring.( S ); } }navigatornavigator.=.) ) ;( S ) ;) { if} } }} else {()) {( S )) ) { return}", "a string SS'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T'T", "the following- 1 \\leq |S'|, |T|constitutes a string Sthewith.]A in the[ T ][]T ] = TS+the stringS',T.].S,[].)..,", "the- 1 \\leqStheT'T'T':string S'bea string S' andthe string')).( )).( ).S )return( ).)( )", "constituentconstituentT'astheS'thetheS'isA',T'atheis thein the following format:String S, the(S) is athetheT' as a contiguousin the followingStringis notto bethe"], "prompt": "\nQUESTION:\nE869120 found a chest which is likely to contain treasure.\n\nHowever, the chest is locked. In order to open it, he needs to enter a string S consisting of lowercase English letters.\n\nHe also found a string S', which turns out to be the string S with some of its letters (possibly all or none) replaced with ?.  \nOne more thing he found is a sheet of paper with the following facts written on it:  \n - Condition 1: The string S contains a string T as a contiguous substring.\n - Condition 2: S is the lexicographically smallest string among the ones that satisfy Condition 1.\nPrint the string S.\n\nIf such a string does not exist, print UNRESTORABLE.  \n\n-----Constraints-----\n - 1 \\leq |S'|, |T| \\leq 50\n - S' consists of lowercase English letters and ?.\n - T consists of lowercase English letters.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\nT'\n\n-----Output-----\nPrint the string S.\n\nIf such a string does not exist, print UNRESTORABLE instead.  \n\n-----Sample Input-----\n?tc????\ncoder\n\n-----Sample Output-----\natcoder\n\nThere are 26 strings that satisfy Condition 1: atcoder, btcoder, ctcoder,..., ztcoder.\nAmong them, the lexicographically smallest is atcoder, so we can say S = atcoder.\nUse Standard Input format\nANSWER:\n"}}