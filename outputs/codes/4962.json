{"4962": {"code": ["$N$ items arein thetheitem in thatitem. In casetheofthe item).()..=().)(.()).( ).( ); } } else if( ) ).", "item.the itemthat item isitsof success, storetoittothisitem{new drawer item $A_theitem $B_new drawer itemthe item isof the draweritem isof success,and theitemto theitem $A_ i$, $B_ i$item $L$, and $L$the item $", "(without quotes, Croatian wordtheitemthe item istheof the same numbertheit is storedthe itemifaand theitem is thrown away, outputand$A_ i$of thethe$B_ i$(1, 2,if thateither succeed or get backfrom its other drawer, andfromof success,to the", "theitem isitem is(with quotes, Croatian wordthe item is(with quotes, Croatian word) {:} else {if the itembe(without quotes, Croatian)(with quotes, Croatian(without quotes, Croatian(without quotes, Croatianword for(without quotes, Croatian wordandin aitem", ") and theone item.item $i$the item $i$=) ) {) ) ) {( item ) {( item.,item.) ; }{) ; }.( item}(; } else {.( item ) ; }() ;( item ) ; }( item", "(with quotes, Croatian wordtheitemthat item isit is storedthe item(without quotes, Croatian word for.(with.) ) {().); } }) {item] =} }item. items,[().((", "$N$of the samethe samethe same item asin the same$B_ i$(without quotes, Croatian word.)) ) ) {(.() {() ; } else()(.}} }ifif (!() ) ) { throw", "item is storedits(with quotes, Croatian wordthe itemifatheitem is stored$A_ i$) {$N$0,>() { if)( item ) ;(( item )(( item) {} }}} if ( item] == 0 ) {", "(without quotes, Croatian wordof theitemanditem is stored successfully, output//theitem $i$theitemto theitemof success, storethe itemin theitemthe item $i$it is storedit is thrown away.(without quotes,ifitem isto storein theit is stored successfully, outputthe item", "that itemtheto$A_ i$of the$L$ (withthe.;i$ =itemitem is=inin the)the item is storedthetheif.the item isthe item isthetheitem is stored successfully, output"], "prompt": "\nQUESTION:\nMirko has $N$ items (labeled with numbers from $1$ to $N$) and $L$ drawers (labeled with numbers from $1$ to $L$). All items are currently scattered throughout his room, so he decided to clean them up. Each drawer can contain one item, and in order to make it easier for Mirko to find them later, he has determined in advance exactly two drawers ($A_ i$ and $B_ i$) for each item $i$.\n\nMirko stores the items in order from $1$ to $N$ using the first rule he can apply:\n - If the drawer $A_ i$ is empty, he stores the item $i$ in that drawer.\n - If the drawer $B_ i$ is empty, he stores the item $i$ in that drawer.\n - Try to move the item from $A_ i$ to its other drawer; if that one\u2019s filled too, try moving that item to its other drawer, and so on until you either succeed or get back to a previously seen drawer. In case of success, store the item $i$ in the drawer $A_ i$. In case of failure, continue to next rule.\n - Try moving the item from $B_ i$ to its other drawer; if that one\u2019s filled too, try moving that item to its other drawer, and so on until you either succeed or get back to a previously seen drawer. In case of success, store the item $i$ in the drawer $B_ i$. In case of failure, continue to next rule.\n - Give up and throw away the item $i$.\n\nFor given pairs of drawers for each item, determine which items will be stored and which will be thrown away.\n\n-----Input-----\nThe first line of input consists of two integers, $N$ and $L$ ($1 \\leq N, L \\leq 300000$), the number of items and the number of drawers.\n\nEach of the following $N$ lines contains two integers: $A_ i$ and $B_ i$ ($1 \\leq A_ i, B_ i \\leq L$), the pair of drawers corresponding to item $i$. The numbers $A_ i$ and $B_ i$ will be different.\n\n-----Output-----\nFor each item, respectively, output where it ends up. In case the item is stored successfully, output \u201cLADICA\u201d (without quotes, Croatian word for drawer). In case the item is thrown away, output \u201cSMECE\u201d (without quotes, Croatian word for trash).\n\n-----Examples-----\nSample Input:\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\nSample Output:\nLADICA\nLADICA\nLADICA\nSMECE\nSMECE\nUse Standard Input format\nANSWER:\n"}}