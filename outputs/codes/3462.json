{"3462": {"code": ["file.a directoryfile. A fileofof the files infile.theof theoutput. A filefilefile. A file canto list onlythe files infile.file.of the filein thedirectory.file is afileandof thethe file. A file canto list thefiles in thedirectory. A file can", ". c\na. out\nreadme\nyacc)the filethe filename.output file. out. c\na. out... out; }output file.in the directoryoutput file.. c\na.) ;) ; }:.output,outputfile. out.;((\", \" \"", "the outputfile.files in thethefile, for examplein thefile inthea file, forfile.a file, and thefile,of thethe first line.$1 $Nthelinesone line.that arein thethea file, andtheto thethethe file. The output", "Output format:. c\na.outCUnlockfile.outCUnlockfile.outCUnlockfileoutput format:format:output format::, format :: \"H\",: \"H\",\"H\", \"H\": \"H\",\"H\", \"H\",\"H\"\"H\", \"H\",\"H\", \"H\",", ".... out. outoutput.) ;. out.=) ); }output..; output. out ==. out. out =) ; output. out,.out = \".\"\".", "files intheoutput=.() ) ;)output. append( ) )+=. join (+) ). join ( \"\\n\") ) ; }file) ;file. join ( \"\\n\" )) ; }}output. append]. append( )", "aanfile isthefilethefilewiththe file isin thefile,thethe output directory.the first lineisthethethe filein the directory.the filename of the file,the directory,the first line isthe first linetheof thethe files in the directory.", ":\"*.c\" Input:Output:\"*.c\"\"*.c\" Input:,, \"*.c\" )output :\"*.c\", \"*.c\"\"*.c\"Input formatCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCOCO", "and thefile(s) in the directory.A file isthefile(s) inthe file(s)(file(s) in the directoryin the)theoutputthethe output directory.the output directory.for thethe directory.file(s). The output directoryin the directory,(athe file(s)output directory, andare the", "outputfiles in the directorya stringthe directoryin the directory.file is.(; }( \"Endformat{.) ; }... join ( \"\\n\" )( \"\\n\" ) ;. join ( \"\\n\"} ) ). join ( \"\\n\" ). join) ;. join( \"\\n\" ) ;("], "prompt": "\nQUESTION:\nYou are implementing an operating system, and now need to write a program to list files in a directory: \u201cls\u201d. You want the user to be able to list only files that match a given pattern that can include wildcards (*), for example *.c. A wildcard matches zero or more characters of any kind.\n\n-----Input-----\nThe first line contains a string $P$, containing $1$\u2013$100$ characters \u2019a\u2019\u2013\u2019z\u2019, \u2019*\u2019 and \u2019.\u2019. This is the pattern. The second line contains an integer $N$, $1 \\leq N \\leq 100$, which is the number of files in the directory. Then follow $N$ lines containing the names of the files in the directory. Each line is a string containing $1$\u2013$100$ characters \u2019a\u2019\u2013\u2019z\u2019 and \u2019.\u2019.\n\n-----Output-----\nThe output shall consist of the filenames that match the pattern, $P$, each on its own line, in the same order that they were given as input.\n\n-----Examples-----\nSample Input:\n*.*\n4\nmain.c\na.out\nreadme\nyacc\nSample Output:\nmain.c\na.out\nUse Standard Input format\nANSWER:\n"}}