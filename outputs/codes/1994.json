{"1994": {"code": ["of lengthis string(1 \u2264\u2264s_1s_2...s_{|}s| (1\u2264\u2264 |s|oflength l_i}a substring s_{i}of length l_i+1..l_i|s_1s_2...s_{|}s| \u2264s_1s_2...", "if s_{|}s|(1 \u2264\u2264 |s|\u2264s_{i} s_{i} s_{i+1..l+1..l+1..l+1..l+1..l+2..l+1..l+1..l+1..l+1..l+1..l+1..l+1..l+1..l+1..l", "(1a suffix of(1n \u2264of string s.is an integerthe number ofin thennumber ofthelength l_{i} c_{i}.is a(1 \u2264 l \u2264length l_{i} c_{i} c_{i}s.)the(1 \u2264\u2264 |s", ".is a substring s[i..j]in the order of increasing.string s [1..n] (1\u2264\u2264 n.(1 \u2264)+ 1..n).l \u2264s_1s_2...s_{|}s|) isstring s[0..n]of[0..n]ain the", ".( 1 \u2264\u2264 |s| \u2264 10^5.).()).)))( 1(;{= 0 ; i <.) { if (( 1)) {(\" \" ) ;= 0 ; j <", ")length l=nstring s.s.s.( ) ).( )[) ).( ) ).). append (( ) ) ).) ). append (). append) ).. append () ). append( ).)). append (). append).", "1 \u2264) {( ) :1,).{.( )( ) ).( ) ).( ).( ) ).( )} else {( ),( ) )( ).(). lower (( )( ). lower) ). upper (. lower). lower", "( 0 \u2264..().(.(( 0 \u2264k + 1..|s|)s[i]i+1..|s|) is string s[i]s[i]l_{i} c_{i}s[i] isa substring s[i]\u2264 |s|of.", ".[ 1 ]..( 1.( 1) [ 0 ][ 0 ]1 ]..( 1,].))) ) {( 1.) )(. append () } return", "string sthe number oflengths_1s_2...s_{|}s| \u2264s_1s_2...s_{|}s| \u2264 10^5oflength ls_1s_2...s_{|}s| (1 \u2264) is string s[1..l]s_1s_2...s_{|}s|"], "prompt": "\nQUESTION:\nYou have a string s = s_1s_2...s_{|}s|, where |s| is the length of string s, and s_{i} its i-th character. \n\nLet's introduce several definitions:  A substring s[i..j] (1 \u2264 i \u2264 j \u2264 |s|) of string s is string s_{i}s_{i} + 1...s_{j}.  The prefix of string s of length l (1 \u2264 l \u2264 |s|) is string s[1..l].  The suffix of string s of length l (1 \u2264 l \u2264 |s|) is string s[|s| - l + 1..|s|]. \n\nYour task is, for any prefix of string s which matches a suffix of string s, print the number of times it occurs in string s as a substring.\n\n\n-----Input-----\n\nThe single line contains a sequence of characters s_1s_2...s_{|}s| (1 \u2264 |s| \u2264 10^5) \u2014 string s. The string only consists of uppercase English letters.\n\n\n-----Output-----\n\nIn the first line, print integer k (0 \u2264 k \u2264 |s|) \u2014 the number of prefixes that match a suffix of string s. Next print k lines, in each line print two integers l_{i} c_{i}. Numbers l_{i} c_{i} mean that the prefix of the length l_{i} matches the suffix of length l_{i} and occurs in string s as a substring c_{i} times. Print pairs l_{i} c_{i} in the order of increasing l_{i}.\n\n\n-----Examples-----\nInput\nABACABA\n\nOutput\n3\n1 4\n3 2\n7 1\n\nInput\nAAA\n\nOutput\n3\n1 3\n2 2\n3 1\nUse Standard Input format\nANSWER:\n"}}