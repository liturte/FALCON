{"3687": {"code": ["the.the data istheinof11. 0 $d_1$d_1 \\ldots d_$c_1 \\ldots$1 \\leq$1 \\leq\\leq q_$i$$s +$s +.the0.00.00.0 $d_1 \\ldots d_", "theand the)thedatatheatof the sensor\u2019s main memoryto beto thetheto theto theof a givenato theto theto bea00 ].(n = 0.).. length ; i ++", "of adata to aduring.fora)( 1\\ leq$1 \\ leq$1 \\ leq c_$1 \\ leq\\leqa) )($s + 1$ )$s +\\leq$s+1$$n$\\leq c_\\leq c_ i$c_", "the.thein thedata fromthedatatotheto bethe lastdownlink opportunity.thethe number ofdownlink opportunity.sensors.= 0q = 0 ;0).( 0,,0,;s. length ; if", "thedownlink opportunity. ( ) {sensorsa singlesensorsin:) :::::::] :: [ ]:] : [: [: [: [ ]: [ ]: [] :: [ ] ]", "-({; if=(.; }.1 ) ; }; },2 ) ;(,; } }) ; } }) ; }.(. length - 1in () ; }. data. length0 ) {1 )", "- oneandoneawithdatafor-$i$$s$ (e.g.$1\\leq$s +\\leq$s$s +$n$(e.g. $1 \\leq$s+1$ non-negative integers).\\leq$s+1$ non-negative integers.eachsi", ".-= 2 *]*** 2 + 2* 2 + 3] + 2* 22 * 20.+ 2$;* 22.1.0 + 2.0+ 2.0 ++ 2.0 + 2.0 ++\\leq$s + 1.0++ 2.0-\\", "in aaof.thetheto bethethe..theand thememory is not(.) ; }) ; }...) ;(; } for.) { #", "- one lineonedownlink(s =)(0, 2,, 2,) ; if ( ns0 )),) ; if () {( )n( )n =n ]. length( ) ;]. length( )0 ].( )n ] ; if ("], "prompt": "\nQUESTION:\nAlthough we imagine interplanetary probes to be very sophisticated pieces of technology, their information systems are quite archaic. You might assume that they have a certain amount of contiguous main memory and can store their data wherever is convenient, but unfortunately that is not the case. The probe\u2019s main memory is organised in a number of FIFO (first-in-first-out) queues. In such a queue, data has to be taken out of the queue in the same order as it has been added to it.\n\nA probe has multiple sensors and each sensor is linked to one of the queues. Whenever a sensor finishes recording, it appends the generated data to its queue. A sensor can write data to the queue only if the queue has enough space left to take all the data; if not, the data is lost.\n\nIn order to transfer data from the probe to Earth (in a process called downlinking), the path between the satellite and Earth must not be blocked by anything (e.g.\u00a0a planet like Jupiter) and the antenna must be correctly positioned. During each downlink opportunity, data can be taken from multiple queues and transmitted back to Earth. The total amount of data that can be transmitted during a downlink opportunity depends on the length of the downlink opportunity and distance to Earth. Sensors do not collect data during downlink opportunities, since all electricity available is devoted to the transmitter.\n\nThe most important thing for scientists is not to lose any data recorded by sensors. In particular, all queues have to be empty after the last downlink opportunity. The scientists have asked you to write a program to determine whether all data can be transferred to Earth in a given time frame.\n\n-----Input-----\n - one line containing three positive integers $n,q,s$ ($1\\leq n,q \\leq 30$, $1 \\leq s \\leq 100$), the number of downlink windows, FIFO queues, and sensors, respectively.\n - one line with $s$ integers $q_1 \\ldots q_ s$ ($1 \\leq q_ i \\leq q$ for each $i$), determining for each sensor the queue it feeds its data into.\n - one line with $q$ integers $c_1 \\ldots c_ q$ ($1 \\leq c_ i \\leq 10^6$ for each $i$), determining for each queue the size of the queue in megabytes.\n - $n$ lines, each describing one downlink window. Each contains $s + 1$ non-negative integers.\n - The first integer $d$ ($1 \\leq d \\leq 10^6$) states the number of megabytes that can be transferred to earth during the window.\n - The following $s$ numbers $a_1 \\ldots a_ s$ ($0 \\leq a_ i \\leq 10^6$ for each $i$) describing the amount of data (in megabytes) generated by each of the sensors after the last but before this downlink window.\n\nThere will never be new data during a downlink window.\n\n-----Output-----\nOutput \u201cpossible\u201d if it is possible to transfer all data to Earth, and \u201cimpossible\u201d otherwise.\n\n-----Examples-----\nSample Input:\n2 2 2\n1 2\n3 3\n5 2 2\n5 2 2\nSample Output:\npossible\nUse Standard Input format\nANSWER:\n"}}