{"2920": {"code": ["thethethethethethethey are not inthe// and thethetheisn't thethe number ofthethe#if thetheifof the first linethe first line isthe firstlineit is thethe first lineisn't the first line ofthe firstof the lines of theof thethe first line of", "andof the.the.ofthein aforthatthe same number of$t$thethetheto the top left corner.thethe.thethe height of thethetheof theto the bottom left corner,", "you.(modulo $2^{31}) -.ofthe waytoof(modulo(modulo $2^{31} - 1$).thethe$n$ lines,with thetheis aat the$n$ lines,$n$ characters,and theof the//of thein thethe height of the", "and..::..; } ) {..,(,.: 1.0( )...., 'A Ito the goal position.',.. length. length1.0. length, 'A", "aand notain theatoto thetheto theto thethethethebeingaa paththe correct orderyou have made thethese pathsthe way fromto theto thethethe path from $s$ to$t$ to theto the right", "theof thetheinthethethein thethethecanthe number ofthetheof thethetheof theof thethethetheof the left and rightthe top left corner oftheit is not anof the top left corner,thethethe current", "the.theof thethetheat $s$ andthe.thetheof the=and theof the.........to the left corner ofthe top left corner,the bottom right corner,the heighttheathat is the height ofof thethe top right corner, or", "thatisthethe.thethethethethethat the robot isthe goal position.thethethem inthethe(modulo.).(t. length ).. length ).} ).).that you can start in", "thecanthe.in theandthethethe correct number ofthethe number of pathsthetheof theof thethe number of pathstheof thethethethethe number of pathsin theof thetheof thethe number of paths tothethe number of pathsthe number of paths of", "(.intheof thethe#\u2019softheistheand ataking thethe.) { if(.; if (}.to the...to the top left corner,of thethethe bottom left(modulo $2^{31} - 1$). If$n$"], "prompt": "\nQUESTION:\nYou have recently made a grid traversing robot that can find its way from the top left corner of a grid to the bottom right corner. However, you had forgotten all your AI programming skills, so you only programmed your robot to go rightwards and downwards (that\u2019s after all where the goal is). You have placed your robot on a grid with some obstacles, and you sit and observe. However, after a while you get tired of observing it getting stuck, and ask yourself \u201cHow many paths are there from the start position to the goal position?\u201d, and \u201cIf there are none, could the robot have made it to the goal if it could walk upwards and leftwards?\u201d\n\nSo you decide to write a program that, given a grid of size $n \\times n$ with some obstacles marked on it where the robot cannot walk, counts the different ways the robot could go from the top left corner $s$ to the bottom right $t$, and if none, tests if it were possible if it could walk up and left as well. However, your program does not handle very large numbers, so the answer should be given modulo $2^{31} - 1$.\n\n-----Input-----\nOn the first line is one integer, $1 \\leq n \\leq 1000$. Then follows $n$ lines, each with $n$ characters, where each character is one of \u2019.\u2019 and \u2019#\u2019, where \u2019.\u2019 is to be interpreted as a walkable tile and \u2019#\u2019 as a non-walkable tile. There will never be a wall at $s$, and there will never be a wall at $t$.\n\n-----Output-----\nOutput one line with the number of different paths starting in $s$ and ending in $t$ (modulo $2^{31} - 1$) or THE GAME IS A LIE if you cannot go from $s$ to $t$ going only rightwards and downwards but you can if you are allowed to go left and up as well, or INCONCEIVABLE if there simply is no path from $s$ to $t$.\n\n-----Examples-----\nSample Input:\n5\n.....\n#..#.\n#..#.\n...#.\n.....\nSample Output:\n6\nUse Standard Input format\nANSWER:\n"}}