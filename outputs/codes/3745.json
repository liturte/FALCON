{"3745": {"code": ["the given string sthegraph G. ) {thes..thegathered the graph G.the given string sin thea single vertex) { print \"Yes\" (withoutthethe.(n -, \"a\"\"b\"\"c\" ); if () { print \"No\" (without.( \"a", "theit wasin theisthe string sis\"a\"inthe string s Petya\"b\" and \"c\" in) {= \"No\" ;;\" \". contains ( \"A\"\"C\" ), \"A\" )\"B\" ) {\"A\" )( \"A\" )\"B\" ) ;\"A\"", "and \"b\"is(n - 1 )ait was written on hisitthe given stringwerethe stringthetheisof athe string swere written on hisof thethe graph(n -of thethethethetheof thein the graph G, butthe stringis alsothe string intheof the", "of thetheof the string sthenot(s_1s_2... s_n,the number ofofif(n - 1) \u00a0\u2014if a vertexin atheandthetheof thestring{}the(n - 1))(n -) / (, 0 ) ;", "the graph G.  public\"a\"\"b\" andin thethe stringthethe graph G,isthe stringthethethe(0, 0, 0, 1, 1,the number of vertices andin thethethethe1, 0,\"b\"\"c\" only, andthat theof thethe stringare thethe", "thethe string s Petyain thegraph G,theaas a stringisas aain thethethe string s Petya(2a\"a\" \"b\" \"c\"\"b\" \"c\" \"a\" \"b\" \"a\"\"c\" \"a\"\"a\"\"c\" \"a\" \"b\" \"a\"", "in theof{\"a\"\"b\"\"c\"is a.(s= \"Yes\" ;{ s =] = [ \"a\"[ \"b\" ]\"c\" ] [\"a\" ]][ \"a\", \"b\" ] [ \"c\"] = [ \"a\"\"b\" ]] = [ \"a\"", "the graph\"a\" or \"b\"\"c\"arethe\"a\"\"b\" or \"c\"theif itathe\"b\"\"a\" or\"c\"\"a\" or \"b\"\"b\" or \"c\"of thein thesthethe first lineof the input.the string s mustin thethe", "theofthe(the.(, 1.).( \"a\", \"b\",.., \"a\", \"c\",.\"a\", \"b\", \"c\", \"a\",\"a\"\"b\", \"c\",\"a\",\"c\"\"c\"\"c\",", "1if the stringinthat() ) {{[ \"a\"\"b\",( \"c\" ) )the stringthe\"a\" )[ \"b\" ] ) ;a string s,the string) {for] ;] ; if () {\"a\" ) ; } }if (\"c\" )\"b\" )"], "prompt": "\nQUESTION:\nOne day student Vasya was sitting on a lecture and mentioned a string s_1s_2... s_{n}, consisting of letters \"a\", \"b\" and \"c\" that was written on his desk. As the lecture was boring, Vasya decided to complete the picture by composing a graph G with the following properties:   G has exactly n vertices, numbered from 1 to n.  For all pairs of vertices i and j, where i \u2260 j, there is an edge connecting them if and only if characters s_{i} and s_{j} are either equal or neighbouring in the alphabet. That is, letters in pairs \"a\"-\"b\" and \"b\"-\"c\" are neighbouring, while letters \"a\"-\"c\" are not. \n\nVasya painted the resulting graph near the string and then erased the string. Next day Vasya's friend Petya came to a lecture and found some graph at his desk. He had heard of Vasya's adventure and now he wants to find out whether it could be the original graph G, painted by Vasya. In order to verify this, Petya needs to know whether there exists a string s, such that if Vasya used this s he would produce the given graph G.\n\n\n-----Input-----\n\nThe first line of the input contains two integers n and m $(1 \\leq n \\leq 500,0 \\leq m \\leq \\frac{n(n - 1)}{2})$\u00a0\u2014 the number of vertices and edges in the graph found by Petya, respectively.\n\nEach of the next m lines contains two integers u_{i} and v_{i} (1 \u2264 u_{i}, v_{i} \u2264 n, u_{i} \u2260 v_{i})\u00a0\u2014 the edges of the graph G. It is guaranteed, that there are no multiple edges, that is any pair of vertexes appear in this list no more than once.\n\n\n-----Output-----\n\nIn the first line print \"Yes\" (without the quotes), if the string s Petya is interested in really exists and \"No\" (without the quotes) otherwise.\n\nIf the string s exists, then print it on the second line of the output. The length of s must be exactly n, it must consist of only letters \"a\", \"b\" and \"c\" only, and the graph built using this string must coincide with G. If there are multiple possible answers, you may print any of them.\n\n\n-----Examples-----\nInput\n2 1\n1 2\n\nOutput\nYes\naa\n\nInput\n4 3\n1 2\n1 3\n1 4\n\nOutput\nNo\n\n\n\n-----Note-----\n\nIn the first sample you are given a graph made of two vertices with an edge between them. So, these vertices can correspond to both the same and adjacent letters. Any of the following strings \"aa\", \"ab\", \"ba\", \"bb\", \"bc\", \"cb\", \"cc\" meets the graph's conditions. \n\nIn the second sample the first vertex is connected to all three other vertices, but these three vertices are not connected with each other. That means that they must correspond to distinct letters that are not adjacent, but that is impossible as there are only two such letters: a and c.\nUse Standard Input format\nANSWER:\n"}}