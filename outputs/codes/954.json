{"954": {"code": [") )him athe\"abcd\", \"dabc\",\"bcda\", \"yzyz\" and \"zzyz\".\"abcd\", \"dabc\", \"cdab\", and \"bcda\".\"abcd\", \"dabc\", \"cdab\",\"yzyz\",\"yzyz\", \"zzyz\".\"abcd\", \"dabc\", \"cdab\",\"ab", ":Hongcowhisis= 0; n <] =[] ]} else if()( ) == 'a' )( ) == 'a' ); } else if (( ). length].)] ; } }) )) ; }( ) )]( )0 ; if (", "the wordanof thehisa singlethe secondthe(11\"abcd\",\"dabc\",\"cdab\", and \"bcda\".\"bbb\",\"bbb\", \"yzyz\",\"bbb\", \"yzyz\", \"yzyz\".\"a\"\u2013'z\".\"abcd\", \"dabc\",\"cdab\",", "thenumber of distinctis thethe\"abcd\", \"dabc\",\"cdab\", \"cdab\", \"cdab\", \"bcda\",\"abcd\", \"dabc\",\"abcd\", \"dabc\",\"cda\" and \"bcda\".\"cda\" or\"cda\".a singlea singlethe first\"bbb\" and\"bbb\"\"", ")) {Hongcow can generate the\"abcd\", \"dabc\", \"cdab\",\"abcd\", \"dabc\", \"cdab\", andis now a:\"abcd\" : \"abcd\",: \"abcd\", \"bbb\" :\"abcd\" :\"abcd\" : \"abcd\",\"bbb\" : \"bbb\",", "the\"abcd\" and \"dabc\" and \"cdab\"\"abcd\" and \"abcd\"of the\"abcd\"the\"abcd\"\"abcd\" and\"abcd\" and\"abcd\" and \"abcd\" area stringof\"abcd\" and \"dabc\" are\"abcd\" and\"abcd\" and \"cdab\" are", "hishow to\"aabracadabra\"\"abracadabra\" and \"raabracadabra\".the firstthe firsta single\"abcd\", \"dabc\", \"cdab\", \"cdab\",and \"bbb\".hisa singlestringone wordof input\"abcd\", \"dabc\", \"cdab\", \"bcda\",\"bb", "thecan generate the\"abcd\" and \"dabc\" and\"abcd\" and \"dabc\" and \"cdab\"\"bbb\".\"bbb\" and \"yzyz\".\"abcd\" and \"dabc\", \"cdab\",\"abcd\", \"dabc\",\"bcda\", \"cdab\",\"bbb\" and \"yzyz\".\"yzyz\" and", "word\"abcd\", \"dabc\",\"bbb\".(2 \u2264\"abcd\", \"dabc\", \"cdab\",\"abcd\", \"dabc\", \"cdab\",\"yzyz\".\"yzyz\"\"yzyz\", \"yzyz\"\"abcd\", \"dabc\", \"cdab\", \"cdab\",\"bbb\".and", "hishim.( ) {.( ) ) ;\"c\" ) {( ) ;.( ) ; })( ) ;(.( ).( ) ;( ) ; } }) )( ) ; }( ) ;. append (\"c\" )) ;( ). append ( \"H\""], "prompt": "\nQUESTION:\nHongcow is learning to spell! One day, his teacher gives him a word that he needs to learn to spell. Being a dutiful student, he immediately learns how to spell the word.\n\nHongcow has decided to try to make new words from this one. He starts by taking the word he just learned how to spell, and moves the last character of the word to the beginning of the word. He calls this a cyclic shift. He can apply cyclic shift many times. For example, consecutively applying cyclic shift operation to the word \"abracadabra\" Hongcow will get words \"aabracadabr\", \"raabracadab\" and so on.\n\nHongcow is now wondering how many distinct words he can generate by doing the cyclic shift arbitrarily many times. The initial string is also counted.\n\n\n-----Input-----\n\nThe first line of input will be a single string s (1 \u2264 |s| \u2264 50), the word Hongcow initially learns how to spell. The string s consists only of lowercase English letters ('a'\u2013'z').\n\n\n-----Output-----\n\nOutput a single integer equal to the number of distinct strings that Hongcow can obtain by applying the cyclic shift arbitrarily many times to the given string.\n\n\n-----Examples-----\nInput\nabcd\n\nOutput\n4\n\nInput\nbbb\n\nOutput\n1\n\nInput\nyzyz\n\nOutput\n2\n\n\n\n-----Note-----\n\nFor the first sample, the strings Hongcow can generate are \"abcd\", \"dabc\", \"cdab\", and \"bcda\".\n\nFor the second sample, no matter how many times Hongcow does the cyclic shift, Hongcow can only generate \"bbb\".\n\nFor the third sample, the two strings Hongcow can generate are \"yzyz\" and \"zyzy\".\nUse Standard Input format\nANSWER:\n"}}