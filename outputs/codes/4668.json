{"4668": {"code": ["aA.: # Aa.. cross ( ab. crossx. cross ( b. cross ( a )a. cross ( aa.= ( a.a. cross (d.) )( a )( a ) )aA. crossa ).2 )a. cross (x. cross ()(0.", "A=A A.A.A.A.A.A.A.B.A.A.A.A.A.A.A.A.A.A.A.B.A.A.A.A.A.A.A.A.A.A.A.A.B.A.A.B.A.A.A.A.A.A.A.A.A.B.", "oftheangle of thethein degreesa = (a - a).cross(bc-a)a = (ax)= (a - b).cross(d -)a = (ax.cross(y) / (x.absolute() */)(a.absolute() *) )\n\n)(a.absolute()))a.", "in degreesa2]( )(] [ 0 ] )] [ 1 ]] [ 2 ]) [ 0] [] [ 0 ] [] [ 1 ]]] [) [ 0] [] [ 1 ]]] [ 1]] [ 2 ]. append (1 ] [2 ] []", "of theof theof the= 0.0)( ) #= 0.0 #= 0.0 # #the angle between theangles= 0.0 #= 0.0 # # #a= (a -a-b)a)d = (a-b).cross(d - c)a.cross(d)x.cross(b)", "= (X.Y)/|X|Y|=(x, y, z):[a, b, c, d]= (b - a).cross(dx, y, z)= (cx,y.cross(d))c)a = (d -)c)(x.absolute() *)(y.absolute() *= (d -", "thethec,=c= (d -) == 0 :2 ): print(\"%.2f\" % (): print(\"%.2f\" % (0.5 ) )()= (- a ) / (.) )=),) )( points,) for i in range( len ( points.[ 0", "AA= [()A( )= [ ] for i),:. split ('/' ) )= [ ] for=[ 2 ] )] ) )[ 31 ] )[ 2 ][ 3 ] )[ 3 ] =)], [] )[ 3 ]", "the= (x) /2.0x = (x --) / (x.absolute()) / (x.absolute()/ (x.absolute() * y.absolute()))print(\"%.2f\" %( angle )'A,B,C,D'[), [ ]1 ] )= 0[ 3 ] )[ 3] ) )", "aa3c, d) = (c-b).cross(d) / (x.dot(y))) / (x.dot(d)) / (x.dot(y))(a)(a) = (c-b).cross(d)c-d))) )))( a )a( a )a ) )("], "prompt": "\nQUESTION:\n=====Problem Statement=====\nYou are given four points A, B, C and D in a 3-dimensional Cartesian coordinate system. You are required to print the angle between the plane made by the points A, B, C and B, C, D in degrees(not radians). Let the angle be PHI.\nCos(PHI) = (X.Y)/|X|Y| where X = AB x BC and Y = BC x CD.\nHere, X.Y means the dot product of X and Y, and AB x BC means the cross product of vectors AB and BC. Also, AB = B-A.\n\n=====Input Format=====\nOne line of input containing the space separated floating number values of the and coordinates of a point.\n\n=====Output Format=====\nOutput the angle correct up to two decimal places.\nimport math\n\nclass Points(object):\n    def __init__(self, x, y, z):\n\n    def __sub__(self, no):\n\n    def dot(self, no):\n\n    def cross(self, no):\n        \n    def absolute(self):\n        return pow((self.x ** 2 + self.y ** 2 + self.z ** 2), 0.5)\n\nif __name__ == '__main__':\n    points = list()\n    for i in range(4):\n        a = list(map(float, input().split()))\n        points.append(a)\n\n    a, b, c, d = Points(*points[0]), Points(*points[1]), Points(*points[2]), Points(*points[3])\n    x = (b - a).cross(c - b)\n    y = (c - b).cross(d - c)\n    angle = math.acos(x.dot(y) / (x.absolute() * y.absolute()))\n\n    print(\"%.2f\" % math.degrees(angle))\nUse Standard Input format\nANSWER:\n"}}