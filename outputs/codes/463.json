{"463": {"code": ["the elementthenumber toa_{n} = a_{n}=31,1, so it isa_1 \u22641,1, sonumber to and witha_{n} = a_{n}(2 \u2264 n \u2264 100(1 \u2264 n \u2264 1001, so it isthea_{", "22(1 \u2264if the operationin one1,3, soandso the4, so it isonein twothe)the first element ofthe arraythatthe(2 \u2264) a_{i}array \u2264) a_{i}of the array.to beit is possible to achieve", "11 \u2264 11 \u2264 12 \u2264 132 2 22 3 7in the arraythe firstthe(1 \u22641 \u2264thethe arrayof thearray.and the number to andwith thea_1, a_2,..., a_{n}witharray.of", "(3a_{n} = a_{n}1, 2, 3, 1,2,3, 2, 3,3,2, 2, 3,2, 3,1, 2,1, 2,a_{n} = a_{n},1, 2, 3, 1,3,a_{n}<= a_1 \u2264n", "a_1a_2 a_2 a_3a_n \u2264 a_na_1a_2a_13a_1 = a_2the arrayif- 1; if (1)the1 )21 ) ; if () { return; } else if ()) { return -n =;", "(2 \u22641 \u2264the arraya_1 ) a_2 =a_1 )=) a_2 =].;) a_1 =a_2 ==; a_2 =a_1.a_1. length )=. length ; i ++(. lengthifa_1. length ;)", "theandthewithall elementsthewith(1 \u22642 2with 1,thearray in1, 1, 1, 2, 2,inarray inthea_1 and1,arrayand a_2and the numberthe elementis a_1 and thea_2,..., a_3,...,3, 2", "a_1 \u2264a_2a_1 \u2264a_2 \u2264a_{i}theone of thearray.array.1,the array.0, 1,3,1, 1, 1,3, soarein the array.the array.0, 1, 1,1, so we1, so", "then elements a_{i}thenumber to and with.=a_1 = a_2 a_21 \u2264 nxn \u2264 n \u2264and a_{n} = a_{n}) a_{n} = a_{n}thethe arraythearraynumber to andthe number to andarray and the numberthe number", "thethea_{i} \u2264theof thea_1 &that iswith the1thearray to.) ;<=>=. append () ; } }( 1[ 1 ] )) { return -0 ) ; }) { return1 }()if ("], "prompt": "\nQUESTION:\nThere is an array with n elements a_1, a_2, ..., a_{n} and the number x.\n\nIn one operation you can select some i (1 \u2264 i \u2264 n) and replace element a_{i} with a_{i} & x, where & denotes the bitwise and operation.\n\nYou want the array to have at least two equal elements after applying some operations (possibly, none). In other words, there should be at least two distinct indices i \u2260 j such that a_{i} = a_{j}. Determine whether it is possible to achieve and, if possible, the minimal number of operations to apply.\n\n\n-----Input-----\n\nThe first line contains integers n and x (2 \u2264 n \u2264 100 000, 1 \u2264 x \u2264 100 000), number of elements in the array and the number to and with.\n\nThe second line contains n integers a_{i} (1 \u2264 a_{i} \u2264 100 000), the elements of the array.\n\n\n-----Output-----\n\nPrint a single integer denoting the minimal number of operations to do, or -1, if it is impossible.\n\n\n-----Examples-----\nInput\n4 3\n1 2 3 7\n\nOutput\n1\n\nInput\n2 228\n1 1\n\nOutput\n0\n\nInput\n3 7\n1 2 3\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first example one can apply the operation to the last element of the array. That replaces 7 with 3, so we achieve the goal in one move.\n\nIn the second example the array already has two equal elements.\n\nIn the third example applying the operation won't change the array at all, so it is impossible to make some pair of elements equal.\nUse Standard Input format\nANSWER:\n"}}