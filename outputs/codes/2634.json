{"2634": {"code": ["[ ][1][2][1],[2][1],[1,2],[1][1][2],[1] ][1][2], [1][1],[2] ][3],[1] ][1], [1], [1],[1],[1] ][1]", "[1,2,3],[3],[1,2],[1,2,3],[1,2],[1,2],[1,2,3],[1,2,3],[1,2,3],[1,2,3],[2],[1,2], nums :] :[2,3] ]] :", "[2][1],[3],[1,2],[1,2],[1,2],[1,2],[1,2],[1,2,3],[2,3],[1,2],[1,2],[1,2], [1,2],[1,2],] #thethe subsets return( nums :", "nums: List[int] #2] #len(nums):#num:#] #,( nums,)if len ( nums )]return [ ]] #( nums )[][: return][ ][= nums [] if( nums[", ":nums: List[List[int]]: return##### ## # # ## # # ## # # ## # # ## # ## # # ## # # # ## # # # ## # # # ## ## # # ## # # ## # # # ## # # ## #", "list(s)len(s):[3],[1,2],[1,2],[1,2],[1,2],[1,2], [1,2,3], [1,2],[1,2], [1,2],[1,2,3], [1,2],[1,2],[1,2], [2,3],", "=[1,2,3],[1,2,3],[2,3],[1,2,3],[1,2,3],[1,2], [1,2],[1,2,3], [1,2][1,2][1,2],[1,2],[1,2][2],[1,2],", "self.nums:= [1,2,3],[1,2],[1,2],[3],[1,2],[1,2,3],[1,2,3],[1,2],[1,2,3],[2,3],[1,2,3],[1,2,3],[2,3][2,", ":[1,2][1,2],[2][2],[1,2,3], [1,2],[3],[1,2],[1,2], [1,2,3],[1,2],[1,2],[1,2],[1,2],[1,2][2]][1,2", "list(list):if nums.length > 1:][0][0][0] else[0],[2][1],[1,2,3],[1,2],[1]][0], [1,2][2]][2], [1,2], [3][1,2],[1],]"], "prompt": "\nQUESTION:\nGiven a set of distinct integers, nums, return all possible subsets (the power set).\n\nNote: The solution set must not contain duplicate subsets.\n\nExample:\n\n\nInput: nums = [1,2,3]\nOutput:\n[\n  [3],\n\u00a0 [1],\n\u00a0 [2],\n\u00a0 [1,2,3],\n\u00a0 [1,3],\n\u00a0 [2,3],\n\u00a0 [1,2],\n\u00a0 []\n]\nclass Solution:\n    def subsets(self, nums: List[int]) -> List[List[int]]:\n        \nUse Call-Based format\nANSWER:\n"}}