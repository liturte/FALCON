{"991": {"code": ["- The second line:-0 ] +t- A_iA_i / D_iA_i / D_i\nA_i /./ D_iA_i / D_iA_iA_iA_iA_iA_iA_iA_iA_iA_iA_iA_iA_iA_iA_iA", "-( 1- The first line:the/ D_i/ D_i\nS_1- The second line:thetheof= 1 ;2 ;( 1 )= 2 ;2 ;1 ;= 2 ;,:] = 1 ;{= 1; },, 1, 2,", "/ D_iin thistheNt=2,..., Nthethet=2,...,theoft=2,..., Nof theis labeled as follows:A_iC_i / D_i==() == 0 )>:0 ]0 ] =N ] =N ] = N [(", "1 to Ntheaof theB_i / D_iS_i /(i for CityA_i / D_i)inthe(iA_i /A_i / D_i(i forA_i /A_i / D_i)A_i /A_i / D_i\nSimilarly,A_i", "./ D_ia singlecoinsin thisa singleof the1 to N,the.then.t_1 = 1,. N,t_1 = 1, 0.2, 0.20.3, 0.2, 1.00.21.01.0. S_N. N_i", "if you wantfor;theis/ D_i ).)( ),.) ) ) {[ 0 ].]] )( )}( ).) { if]) {).(= 0 ; i <[ 0 ] )[ 0 ].[ 0 ].", "- The first line:thenumber.(.) ) {( ) ) {( ) ) ;( ) ;( ) ; } }.( )( ) )} if (.( ) ) {0 ]).(} else {( ). get( ) )( ) ) {", "-thein this20 ) = (- 1 )- 1 ) = (1 ) = (+ 1= (N)) ) ==0 )..(+ 1 )N ))+1 ) ) / 2.0.0 )1.0 ) / 2.0- 1 )", "A_iA_i / D_i.() ;) ;) ;- 1) ;( ) ;) ; }S_i )= F_i(0 ] ;( ) ;) ; } }if () {0 ] ; }) { if () ; }(] = 1 ; }the0 ] ;", "A_i / D_i\nSimilarly, eachis labeled as follows:thetheA_i / D_i\nSimilarly, eachtheif (00 ]<= 0>ain the) >:in the.+ 1 )1 ] =] =+ 1 ] =) ; } else {= 0 ;+ 1 ]"], "prompt": "\nQUESTION:\nThere are N cities numbered 1 to N, connected by M railroads.\nYou are now at City 1, with 10^{100} gold coins and S silver coins in your pocket.\nThe i-th railroad connects City U_i and City V_i bidirectionally, and a one-way trip costs A_i silver coins and takes B_i minutes.\nYou cannot use gold coins to pay the fare.\nThere is an exchange counter in each city. At the exchange counter in City i, you can get C_i silver coins for 1 gold coin.\nThe transaction takes D_i minutes for each gold coin you give.\nYou can exchange any number of gold coins at each exchange counter.\nFor each t=2, ..., N, find the minimum time needed to travel from City 1 to City t. You can ignore the time spent waiting for trains.\n\n-----Constraints-----\n - 2 \\leq N \\leq 50\n - N-1 \\leq M \\leq 100\n - 0 \\leq S \\leq 10^9\n - 1 \\leq A_i \\leq 50\n - 1 \\leq B_i,C_i,D_i \\leq 10^9\n - 1 \\leq U_i < V_i \\leq N\n - There is no pair i, j(i \\neq j) such that (U_i,V_i)=(U_j,V_j).\n - Each city t=2,...,N can be reached from City 1 with some number of railroads.\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M S\nU_1 V_1 A_1 B_1\n:\nU_M V_M A_M B_M\nC_1 D_1\n:\nC_N D_N\n\n-----Output-----\nFor each t=2, ..., N in this order, print a line containing the minimum time needed to travel from City 1 to City t.\n\n-----Sample Input-----\n3 2 1\n1 2 1 2\n1 3 2 4\n1 11\n1 2\n2 5\n\n-----Sample Output-----\n2\n14\n\nThe railway network in this input is shown in the figure below.\nIn this figure, each city is labeled as follows:\n - The first line: the ID number i of the city (i for City i)\n - The second line: C_i / D_i\nSimilarly, each railroad is labeled as follows:\n - The first line: the ID number i of the railroad (i for the i-th railroad in input)\n - The second line: A_i / B_i\n\nYou can travel from City 1 to City 2 in 2 minutes, as follows:\n - Use the 1-st railroad to move from City 1 to City 2 in 2 minutes.\n\n\nYou can travel from City 1 to City 3 in 14 minutes, as follows:\n - Use the 1-st railroad to move from City 1 to City 2 in 2 minutes.\n - At the exchange counter in City 2, exchange 3 gold coins for 3 silver coins in 6 minutes.\n - Use the 1-st railroad to move from City 2 to City 1 in 2 minutes.\n - Use the 2-nd railroad to move from City 1 to City 3 in 4 minutes.\nUse Standard Input format\nANSWER:\n"}}