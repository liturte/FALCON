{"1644": {"code": ["the.of thethe1, 2, 1,).in the0.1, 1.2, 1.3,Aof0.1, 0.5,1,2,the2, 1,1,3,1, 0.2,= 1.1, 1.2, 1.2, 1.2,1, 2.1", "a(1)(1in ordera_{i} and{(1 \u2264 n(1 \u2264 ntower of height, 1, 1,3, 2,tower of height 5,theof height 5,2, 1, 3,4,, 2, 3,4, 1,(1 \u2264 nh", "= 11a_j,b_{j} \u2264i - thrings,the ringifandthe tower of heightin order1,thetheof thethe tower of height 2,andthe tower of(1 \u2264 11(1 \u2264a_ja_j =a_j", "the{ a_j}a_jtower of height 3,thetheh_{i}(1 \u2264 n \u2264the tower{ a_j} \u2264the ring 3,the(1 \u2264 n(1 \u2264 n \u2264 n4, 1, 1,2, 2, 3, 4,", "in order 3,2,to bethey have a.rings in thethe firstthei-th ringa_{i}, b_{i} and h_{i} (1\u2264.= 0 ; i <rings in] ; for (; i <++ )] = 1) {]].; } else if].", "usethein order 1, 2,1, 3,2, 3, 4,0, 5, 6, 6,0,2,2, 3,4,6,2,2,3, 1,3, 1, 3,3, 2, 4,3,2,2,5, 3,2, 1,5,3", "thethe.thethe ringa_i } and h_{i}of the1the ringthethethe ringis(1thering i_th ring hasoftheof thethethe ringin theof thering j_th ringthe ring. append ( new", "thering 2, 3,thetower of heightisa ringthea ring that(1 \u2264 n0.rings in factory's stock=i - thringandring 1 and get theheight 1, or putring 2) { if (tower) {)== n - 1> 0 ) {. append (", "in order2, 1, 2,of the2,2, 1,1, 2, 2, 3,3, 1,4, 2,4, 1,2,1, 2, 2,5,2, 2,2, 2, 3,1, 2,2,2, 2, 3,5, 1,2, 3,3,", "of thea_i,) ;) {{}.) {{ a_i =}.1( 1) ; }( 1) ;) ;( 1( 1) {,) ;() ; } }) {( 1 ) ;"], "prompt": "\nQUESTION:\nOf course you have heard the famous task about Hanoi Towers, but did you know that there is a special factory producing the rings for this wonderful game? Once upon a time, the ruler of the ancient Egypt ordered the workers of Hanoi Factory to create as high tower as possible. They were not ready to serve such a strange order so they had to create this new tower using already produced rings.\n\nThere are n rings in factory's stock. The i-th ring has inner radius a_{i}, outer radius b_{i} and height h_{i}. The goal is to select some subset of rings and arrange them such that the following conditions are satisfied:  Outer radiuses form a non-increasing sequence, i.e. one can put the j-th ring on the i-th ring only if b_{j} \u2264 b_{i}.  Rings should not fall one into the the other. That means one can place ring j on the ring i only if b_{j} > a_{i}.  The total height of all rings used should be maximum possible. \n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 100 000)\u00a0\u2014 the number of rings in factory's stock.\n\nThe i-th of the next n lines contains three integers a_{i}, b_{i} and h_{i} (1 \u2264 a_{i}, b_{i}, h_{i} \u2264 10^9, b_{i} > a_{i})\u00a0\u2014 inner radius, outer radius and the height of the i-th ring respectively.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the maximum height of the tower that can be obtained.\n\n\n-----Examples-----\nInput\n3\n1 5 1\n2 6 2\n3 7 3\n\nOutput\n6\n\nInput\n4\n1 2 1\n1 3 3\n4 6 2\n5 7 1\n\nOutput\n4\n\n\n\n-----Note-----\n\nIn the first sample, the optimal solution is to take all the rings and put them on each other in order 3, 2, 1.\n\nIn the second sample, one can put the ring 3 on the ring 4 and get the tower of height 3, or put the ring 1 on the ring 2 and get the tower of height 4.\nUse Standard Input format\nANSWER:\n"}}