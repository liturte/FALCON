{"2139": {"code": ["string s =.) ).).(1, \u2264s_1s_2... s_{|}s_2) {[].]1].} else if (. length >[ 0 ].]. split ((1 ]. split( ') )} else {( )\"bear\" )\"bear", "0... 5s_1s_2... s_{|}s| (record |s|0i, j) contain(i, j)\"bear\",\"bear\", \"b\" and \"e\"\"a\", \"b\",\"r\", \"a\",\"a\", \"b\", \"e\", \"\"a\", \"b\", \"c\",\"a\", \" c\", \"b\",", "(2 \u2264)thethe.(1)(1, 23), (1,2), (1,10), (1,10), (1,11), (2,10), (2,10), (2, \u226411),9), (3, \u2264 5),(3, \u2264 5), (", "bearbearstring x(i, j) contains astring x(i, j) contains astring x(i, j)+ 1).= [ \"bear\" ]ai+ 1,s_{|}s_2... s_{|}s_{|}s_3.... append ( x) ; for (i =. length ; i ++.. append", "bear has a(1\u2264 |s|=s2\"bear\" as a substring.aa\"bear\" as a substring.\"bear\" as a substring.1,).(2, 3), (3,(3,2), (3,11), (5,11), (4, 6), (5,(3, 9), (4", "input in(1\u2264 |s|) is aa string= s_1s_2... s_{i}s_{i} + 1...= s_1s_2... s_{i}s_{i} +3s_1s_2... s_{j} contains at leastthe first sample (i,= s_1s_2... s_{i}s_{i}", "one of the followinga(i, j)the=.s_1s_2... s_{|}s_2} + 1.(i, j)= 1.(2,) ;= 2.2. ) ;.1.= 1.(1, 5) ;(2, 7), (3,11),11), (", "+ 12 ) contains a stringthe firstis a\"bear\",x(i, j) contains a(i, j)(1, \u2264 i\u2264 j \u2264) contains(1, \u2264s (1\u2264 i\u2264 j1),(1, \u2264 j)(1, \u2264(", "one of the followingof the(i, j)of(i, j)0, 1,10), (2,10), (2,11), (4,11),10), (6, 11),10), (4,11), (7, 10), (7,10), (7,10), (7,  11),10), (8,", "(1\u2264 i\u2264 j1 ) containsa substring.(1,(1,2), (1,10), (1,10), (1,11), (2,11), (3, \u2264 11),11), (5, \u226410), (6, \u2264 11),), (3,, (3,)"], "prompt": "\nQUESTION:\nThe bear has a string s = s_1s_2... s_{|}s| (record |s| is the string's length), consisting of lowercase English letters. The bear wants to count the number of such pairs of indices i, j (1 \u2264 i \u2264 j \u2264 |s|), that string x(i, j) = s_{i}s_{i} + 1... s_{j} contains at least one string \"bear\" as a substring.\n\nString x(i, j) contains string \"bear\", if there is such index k (i \u2264 k \u2264 j - 3), that s_{k} = b, s_{k} + 1 = e, s_{k} + 2 = a, s_{k} + 3 = r.\n\nHelp the bear cope with the given problem.\n\n\n-----Input-----\n\nThe first line contains a non-empty string s (1 \u2264 |s| \u2264 5000). It is guaranteed that the string only consists of lowercase English letters.\n\n\n-----Output-----\n\nPrint a single number \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\nbearbtear\n\nOutput\n6\n\nInput\nbearaabearc\n\nOutput\n20\n\n\n\n-----Note-----\n\nIn the first sample, the following pairs (i, j) match: (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9).\n\nIn the second sample, the following pairs (i, j) match: (1,  4), (1,  5), (1,  6), (1,  7), (1,  8), (1,  9), (1,  10), (1,  11), (2,  10), (2,  11), (3,  10), (3,  11), (4,  10), (4,  11), (5,  10), (5,  11), (6,  10), (6,  11), (7,  10), (7,  11).\nUse Standard Input format\nANSWER:\n"}}