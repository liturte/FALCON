{"1055": {"code": [". ()) ) {) ) ; }the) ; }() ;)( ) ; if(.() )array( )) ; if () ) { return;)( ) ) {) ; }) ; } }} else {}", "().the seconda1 \u2014theofarrayinthearray.nthearray, so you cantothe arrayofthefor thein thearray.array, so(0, 1,( 0,) ).", "array of 2of theaa 2-element sorted array=oftheto beintwothe second half of thethearray.\\le a_i\\le 100$thethe second half of thethearray.[ 1 ] [2 ]3 ] [ 1]4 ]3 ]1 ][ 3 ] [ 2", "theof thearray, sothe20,1, 2, 3,thein thearray.if.()2,2=array([ 0 ]0 ] [ 1] =[ 1 ][ 2 ]1 ] [ 2] = 2", "..array isbythe1 0 0 01 0 1 1 122 23 43 4 2 2 23 4 22 22 24223 2 2 4 22 2 1 12 21 2 21 2 3 31 231 2 42 2 2", "thearray isintheinfingers. =) ) {\"1\" ) ;( n ) ;(\"1\" ) ;)(( )] = 0 ;) ;[ 0[ 1 ]= 0 ; i{ if ((1 ] == 0 ; i< i ;0 ) { if", "in$a_i$ ($1 \\lethe elements of theofthearray, so you cantheofthearray, so you canthein a 2-elementthearray, so you canoftheof 2array, so you caninfingersinbythearray, so you cana 2-elementthe", "thethethearrayofarray ofthearray of22is notin the( ) ;0 ) ;{.) ;) ; }.=[ 1 ] ;0 ) ;0 ; }length= 1 ; i <=", "thethearray is( 112 2 3 42 2 4 21 2 44 51 1 22 2 2 135 5 42 2 10 156 6 1015 15 8 8 95 9 9 9 9112\\le1215 9 15 94 10 10 10 1015 1010 10 10 10 10", "toone fingerarray, soofthethe1 1 2 13the second half oftwo fingersof thethein increasingthe secondto remove thehalfthe first halfand thethe firstthe second half of thethethe second half oftheto getthethe second half of thearray, so you can"], "prompt": "\nQUESTION:\nThanos sort is a supervillain sorting algorithm, which works as follows: if the array is not sorted, snap your fingers* to remove the first or the second half of the items, and repeat the process.\n\nGiven an input array, what is the size of the longest sorted array you can obtain from it using Thanos sort?\n\n*Infinity Gauntlet required.\n\n\n-----Input-----\n\nThe first line of input contains a single number $n$ ($1 \\le n \\le 16$) \u2014 the size of the array. $n$ is guaranteed to be a power of 2.\n\nThe second line of input contains $n$ space-separated integers $a_i$ ($1 \\le a_i \\le 100$) \u2014 the elements of the array.\n\n\n-----Output-----\n\nReturn the maximal length of a sorted array you can obtain using Thanos sort. The elements of the array have to be sorted in non-decreasing order.\n\n\n-----Examples-----\nInput\n4\n1 2 2 4\n\nOutput\n4\n\nInput\n8\n11 12 1 2 13 14 3 4\n\nOutput\n2\n\nInput\n4\n7 6 5 4\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first example the array is already sorted, so no finger snaps are required.\n\nIn the second example the array actually has a subarray of 4 sorted elements, but you can not remove elements from different sides of the array in one finger snap. Each time you have to remove either the whole first half or the whole second half, so you'll have to snap your fingers twice to get to a 2-element sorted array.\n\nIn the third example the array is sorted in decreasing order, so you can only save one element from the ultimate destruction.\nUse Standard Input format\nANSWER:\n"}}