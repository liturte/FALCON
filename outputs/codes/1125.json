{"1125": {"code": [".the secondgame begins,the followingTakahashi can onlyifthe(A_1 - 1)the firstthe first player toto bethatthe first player tocan bebeatheTakahashi canthe, a_i ) ;thetothatif Aoki2-st pile to bethe first player", "thethe1 stone from1 stone from the1-st pile to theTakahashi cannothigher than0TakahashiA_i \\leq21 stone from the1 stone from the2 stone from2 stone from the2-st pile to the1-sttoTakahashi(A_", "takes a1-st pile andTakahashi cannot win(A_1 - 1)2-stTakahashi canastones from theaTakahashito move to guaranteeA_1 - 1Takahashithe1-stA_1 -2-st pile,Takahashi canis possible", "theand1 stone1 stone from2 stones from theTakahashito move to guaranteeTakahashi's win; otherwise,-1 instead.-1 instead of1 stone from the1-st pile,Takahashi(A_1 - 1)the-ifTakahashi moves1 stone from the 1", "A_imove to guaranteeA_1 - 1 )a second playerwins, or thetheA_1 -Takahashiwins, or theof thestones from thetothe game#A_1 \\leqA_1a_1 \\leqTakahashia_1 \\leq1 A_N_12", "theofTakahashi cannot win in any{1 -A_1 - 1A_1A_N- 2 \\leqA_1A_NA_NTakahashi canTakahashi mustthe1-st pileTakahashi cannot win in any1-st pile1-st pile toT", "1 -1-st pile toA_1 - 1Takahashimustbe1 stone-1 stoneA_1 - 121 stone from1-st pileTakahashi canahis1 stone from the2 stone from the2 stone from the1-st2Takahashi must", "1-st pile,1 stone from1-st pile,Takahashithe2-st pile, Takahashimovesthe2 stonestheA_i2Takahashi can always win inA_N21-stTakahashi can alwaysif theTakahashi2-st", "theA_N2 \\ldots A_Na pile with1 -2 \\ldots A_N1 - 11 stoneTakahashi can alwaysin any wayto move a 1-stthe1-st pile,to1-st pile,Takahashi can always win in0,Takahashi can=", "theif Aoki- 1theatothe1-st pile tothe) { if ( Aoki11-st; if (1-stTakahashi cannot winthe1-st1-st pile,Takahashi canin any way,:Takahashi1-st pile,"], "prompt": "\nQUESTION:\nThere are N piles of stones. The i-th pile has A_i stones.\nAoki and Takahashi are about to use them to play the following game:\n - Starting with Aoki, the two players alternately do the following operation:\n - Operation: Choose one pile of stones, and remove one or more stones from it.\n - When a player is unable to do the operation, he loses, and the other player wins.\nWhen the two players play optimally, there are two possibilities in this game: the player who moves first always wins, or the player who moves second always wins, only depending on the initial number of stones in each pile.\nIn such a situation, Takahashi, the second player to act, is trying to guarantee his win by moving at least zero and at most (A_1 - 1) stones from the 1-st pile to the 2-nd pile before the game begins.\nIf this is possible, print the minimum number of stones to move to guarantee his victory; otherwise, print -1 instead.\n\n-----Constraints-----\n - 2 \\leq N \\leq 300\n - 1 \\leq A_i \\leq 10^{12}\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA_1 \\ldots A_N\n\n-----Output-----\nPrint the minimum number of stones to move to guarantee Takahashi's win; otherwise, print -1 instead.\n\n-----Sample Input-----\n2\n5 3\n\n-----Sample Output-----\n1\n\nWithout moving stones, if Aoki first removes 2 stones from the 1-st pile, Takahashi cannot win in any way.\nIf Takahashi moves 1 stone from the 1-st pile to the 2-nd before the game begins so that both piles have 4 stones, Takahashi can always win by properly choosing his actions.\nUse Standard Input format\nANSWER:\n"}}