{"844": {"code": ["area string slength is(s ) \u2014length islength is 2.the substring [5,3]length is4.length is 2.length is1]islength is(1length is 2.length is 2.length islength isislengthis balanced, and its length(1, 2, 3] is", "00.length islength is.=length - 1 ;thelength of thelength of thelength of thethe(0, 1)the length of theofin s, print 0.0.length of thelength of the(1, 2)of thelength is1.in thes, printlength of the", "the substringlength( 0issis balanced, and its lengthlength islength isin s, printlength of thethelength islength of(1 \u2264 100000 \u2264 100000iflengthlength(lengthlength is 1.length islength is 2.length is(length islength", ") {;( 2 \u2264 n.) {lengthn \u2264 100000.( 2 )lengththelength is(the length of thes.length = 1.length = 0.length =0.length = 1.length = 1.) {= 0.length = 1.length = 1.. length =", "in the firstlength11 ]1 ] is possible.5 ] is2. It islength is 4.1.length is 4.length islength is1.length islength islength is)length is1.length is 4.length is 4.length is 4.length is2.length is 4.length is", "..string s....].).length =..) {. length =length = 1 }[r, l]s [r,length = 1 ])1 ]. length =+ 1.. length =lengthlength = 1[", "11,.isthelength is 1.iflength is 2.the length islength isthethethelength is 2.the lengthlength islength islength islengthlength isthe length of thelength islength islength islength is 2.length is", "length[0,(1,length is 1.length isthe.length isthe length of thelength is 1.length isa string slength is 2.a string slength islength isof thethe length of thelength of thethe length of thelength is 1.length is.the length of thelength is 1.length", ":s_l } s_{l}s_r) {] )- 1.] ) ;.] ) ; }][l,[r]alength is 4.s_{l} s_{l} +[l, r] is balanced, andlength is 4.(l, r)r -; s_{l},s_{l", "of thecharacters in s.lengthlength.s ) {.)( \" \") ) )) ;. length) ; }length)length =length =() ;( \" \" )0( \" \" )length = ( int )] ; }if (. length ;"], "prompt": "\nQUESTION:\nYou are given a string s consisting only of characters 0 and 1. A substring [l, r] of s is a string s_{l}s_{l} + 1s_{l} + 2... s_{r}, and its length equals to r - l + 1. A substring is called balanced if the number of zeroes (0) equals to the number of ones in this substring.\n\nYou have to determine the length of the longest balanced substring of s.\n\n\n-----Input-----\n\nThe first line contains n (1 \u2264 n \u2264 100000) \u2014 the number of characters in s.\n\nThe second line contains a string s consisting of exactly n characters. Only characters 0 and 1 can appear in s.\n\n\n-----Output-----\n\nIf there is no non-empty balanced substring in s, print 0. Otherwise, print the length of the longest balanced substring.\n\n\n-----Examples-----\nInput\n8\n11010111\n\nOutput\n4\n\nInput\n3\n111\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example you can choose the substring [3, 6]. It is balanced, and its length is 4. Choosing the substring [2, 5] is also possible.\n\nIn the second example it's impossible to find a non-empty balanced substring.\nUse Standard Input format\nANSWER:\n"}}