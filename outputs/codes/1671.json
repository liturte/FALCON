{"1671": {"code": ["thethe) { if ()( amovestask from server #1 to#2 (the sequencem becomes: 3 2 33 3#5 to server #5)13 33 3 4#3 (the sequence m3 3 3 3move a taskserver #433 2 3 3 3; #4 \u22643,", "anumber of tasksthe numbertask fromthemoves tothemoves to#2 to server #4#5 to server #1 (thesequence m becomes: 2 23 3 3moves#3task from server #5 to3 33 3 3 4);move task from server #4#2 to server #2 (thesequence#5 to server #5", "theload ofserver3 3 3inthenserver #3 andmoved to server #4#5 to server #3moves to server #3#2 to server #2#5 to server #4#5#3 (the sequence m3 3 3#5 to server #3(them becomes:3 3 313 23 2 3", "a) ;.) ; }the tasktask from#1 to servermoves(the sequence m becomes:3 3 3 3 35,1,3,1,3,0, 0,0, 1, 0, 0,2, 0, 1,#1 to2,1, 1,1,, 1, 1,1,", "thetakes twotheandthe second task#2task from server #13 3 3#5 to server #5is#4 toserver #5 to server #13 3 3 3if(server #143 3 3 3if#2 #3 #4 #4#2 #3 #4 #5#2 #5 #5 #5 #5", "0.= 0. 011.moves thethe loadto themoves theto server #2. \n\nInput5 to server #23 3 3 3to5 to#1#5 to server #3#5 to server #4(the sequence m becomes: 23 3 33 33 2 3 3 3)#2 to server", "one task from2server #2,#3 to server #4#5 toserver #4 totask from server #3 to#22 3 3 3 3#3server #3 #4#2 to#5 totask from server #53 3 3 3task from server3 3 3#1 (the sequencem becomes: 2 23 3 3 3#", "of tasks tonumber oftheof server 10,0, 1,2, 3, 4,3, 4, 5,3, 3, 3, 3,#1 to server2, 3,3,#2 to server #54,3, 3, 3,#4 to server #5 (them becomes: 3 3 35,#5 to server", "of tasksthe number ofthe load of servers inthree.sequence of tasks(2 \u22644 ) \u2014theofserver #321 2 3 3(the sequence#21 2 3 3 33 3 33 3 33 33 3 3:12 3 31 3 3 31 2 3 3", "thenumber ofthe load of servers in#1 to servertask from server #2task from server#33 3 3 3 4).the#1 to server #4 (thesequence m becomes:3 2 3 33 2 3 33 3 3#5 to server #2#53 2 33 3 3 33 3 3 37,3 3 3 3"], "prompt": "\nQUESTION:\nIn the school computer room there are n servers which are responsible for processing several computing tasks. You know the number of scheduled tasks for each server: there are m_{i} tasks assigned to the i-th server.\n\nIn order to balance the load for each server, you want to reassign some tasks to make the difference between the most loaded server and the least loaded server as small as possible. In other words you want to minimize expression m_{a} - m_{b}, where a is the most loaded server and b is the least loaded one.\n\nIn one second you can reassign a single task. Thus in one second you can choose any pair of servers and move a single task from one server to another.\n\nWrite a program to find the minimum number of seconds needed to balance the load of servers.\n\n\n-----Input-----\n\nThe first line contains positive number n (1 \u2264 n \u2264 10^5) \u2014 the number of the servers. \n\nThe second line contains the sequence of non-negative integers m_1, m_2, ..., m_{n} (0 \u2264 m_{i} \u2264 2\u00b710^4), where m_{i} is the number of tasks assigned to the i-th server.\n\n\n-----Output-----\n\nPrint the minimum number of seconds required to balance the load.\n\n\n-----Examples-----\nInput\n2\n1 6\n\nOutput\n2\n\nInput\n7\n10 11 10 11 10 11 11\n\nOutput\n0\n\nInput\n5\n1 2 3 4 5\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first example two seconds are needed. In each second, a single task from server #2 should be moved to server #1. After two seconds there should be 3 tasks on server #1 and 4 tasks on server #2.\n\nIn the second example the load is already balanced.\n\nA possible sequence of task movements for the third example is:  move a task from server #4 to server #1 (the sequence m becomes: 2 2 3 3 5);  then move task from server #5 to server #1 (the sequence m becomes: 3 2 3 3 4);  then move task from server #5 to server #2 (the sequence m becomes: 3 3 3 3 3). \n\nThe above sequence is one of several possible ways to balance the load of servers in three seconds.\nUse Standard Input format\nANSWER:\n"}}