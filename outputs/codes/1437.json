{"1437": {"code": ["number of wordsofand their( 1 \u2264)a singlestring s (1 \u2264the number ofthe1number ofthe number ofofa singleword s (1 \u2264 100the number of possibleword s (1 \u2264s/0( 1 \u2264( 1 \u2264 100 000),", "a.().( ) {( )) {( )))( ) ;(( ))( )[ 2 ];( ) ;[ 2 ]1 ] [ 1 ][ 2 ][ 2 ] [ 2] =] = [] ; } else {", "thea singlethe following:in thetheoutputbea stringathe(1 \u2264(1 \u2264 100 000),'A' to 'Z' correspond toto integer 63in the inputthesuch thatthethatanumber ofnumber ofthe number ofof the.", "and1 \u2264)thethe).'A' toto).( ) )(..( ).( ). split('' ).)(). join ()) ; if (( ) == 1(). split () [ 0 ] )", "thestringthe inputinthe(1 \u22641 \u2264 100 000),andcharacter(1thenumberthewordthethat//thethe=(1 \u2264 100 000),(1 \u2264 100 000),lower case, lowercase, uppercase, and(1'-' and '_' areletter '-' and '_'", "it0/ 61 * 61 *in base 64ofAAA0A \u2264A \u2264A \u2264A \u22649A \u2264A \u2264A \u2264A \u2264 100 000)numbers=0Aa'A'A' \u2264", "theandarea(1 \u2264a single word s (1\u22642 \u22643 \u2264 61=63&61 = 61 =61 =61= 61= 61=63= 61= 61=ZAAA \u2264 61= 61&61=6161=AAAA \ufffd", "the output.1'A''Z''A'to 'A''A' to 'Z' correspondtoto 'A' to 'Z' correspondto 'A' to 'Z' correspondto 'A' to 'Z' correspondto 'A'to 'A' to 'Z' correspondto 'A' to 'Z' correspondto 'A' to 'Z", "a singleofa single wordand itsstring s. A23 \u2264 100 000A \u2264 100 000'a''z' correspondto numbers from'a' to 'z' correspondto integer= 421= 61&61 = 6163&61 = 616161=61 z= 61&61= 61&6161=", "{.....( 1( 1+ 1 )21 ).2 )).).( 1 ) )).( 2(..).( 2( 2 )(.) )."], "prompt": "\nQUESTION:\nWhile walking down the street Vanya saw a label \"Hide&Seek\". Because he is a programmer, he used & as a bitwise AND for these two words represented as a integers in base 64 and got new word. Now Vanya thinks of some string s and wants to know the number of pairs of words of length |s| (length of s), such that their bitwise AND is equal to s. As this number can be large, output it modulo 10^9 + 7.\n\nTo represent the string as a number in numeral system with base 64 Vanya uses the following rules:  digits from '0' to '9' correspond to integers from 0 to 9;  letters from 'A' to 'Z' correspond to integers from 10 to 35;  letters from 'a' to 'z' correspond to integers from 36 to 61;  letter '-' correspond to integer 62;  letter '_' correspond to integer 63. \n\n\n-----Input-----\n\nThe only line of the input contains a single word s (1 \u2264 |s| \u2264 100 000), consisting of digits, lowercase and uppercase English letters, characters '-' and '_'.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the number of possible pairs of words, such that their bitwise AND is equal to string s modulo 10^9 + 7.\n\n\n-----Examples-----\nInput\nz\n\nOutput\n3\n\nInput\nV_V\n\nOutput\n9\n\nInput\nCodeforces\n\nOutput\n130653412\n\n\n\n-----Note-----\n\nFor a detailed definition of bitwise AND we recommend to take a look in the corresponding article in Wikipedia.\n\nIn the first sample, there are 3 possible solutions:   z&_ = 61&63 = 61 = z  _&z = 63&61 = 61 = z  z&z = 61&61 = 61 = z\nUse Standard Input format\nANSWER:\n"}}