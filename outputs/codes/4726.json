{"4726": {"code": ["a= 1 $tthe= 2$,$n^4$$t$, then $t$asthe$t$,$t$,$t$, then $t$ isand $t$ is$t$to use $t$with $n$2 $t$$t$asand $t$ $t$of$t", "of ana problemof type $t=$n$ is not$t=6250000$ $n$ is$n$ is notto solve the.<the problemthe$m$$m$; if.) ;( n )( n ) )},$t$)= 0= 0 ;( n ) ;;", ".theto solveaonethe problem with atime limit of$t=3$,$t=3$, $t=4$, $t=6$, $t=3$,$t=3$,$t=3$,$t=3$, $t=5$,$t=3$, $t=3$, $t=5$,", ".of theto bethe.:: 0.5,: 0.5,: 0.5,: 0.5,:: 0.5,: 0.5 },: 0.5,: 0.5,: 0.5 }: 0.5,: 0.5: 0.5 },0.5,: 0.", "the same time limitandsolved astheproblem with a time$t =$n$thethethe problemthewith theanotherof $t$n$and theis$tandthe problemof typethe highestand the largest$n$ $n$ $t$ $n$thethe system used in the", "theaproblem1, $m.$t$ in$t$ in theproblem;$t$ in$t$ in the{) ;= $m$..\"n!=n^3$, n..,, n(\"n!=n\", n, n ) ; $", "the same problem withthissolvedforproblem withthe$t = $m$,of type$n$ $t$ $t$.$n$)problem with athe$t$$n$ $t$$n$ $t$ $t$$t$$n$$n$ $n$ $t$$t$the", "aproblem.theanthe$n$the second time limitif theis not.( \"0\" )in the( nn. length ;< n. length) {=( n. length(.) { for () {= n.{= n.. length ; } else", "thethe sameonecanandonethe(n^2)$isof the$n$ isthe $n$the$n$ is$t $t$of $n$$t$ $t$$t$ $t$n$$t$ is less than$t$ is$n$ $t $t$$t$ $", "theone second time limitto bethe$m$atotheisa$tif $t$n$$t $2the$n$ isas= $m$ $t$n$$n$$t$, and$n$ $t$ $t$$n$ $t$$n$ $t$ $"], "prompt": "\nQUESTION:\nACM-ICPC returns to Singapore in 2015 after a long absence. There may be new contestants from this region who are joining ACM-ICPC for the very first time1. This problem serves as a tutorial for such contestants.\n\nFirst, let establish the fact that the problems posed in ICPC are not research problems where nobody on earth knows how to solve them efficiently. Some people (at least the problem authors) have solved these problems before. There can be more than one possible solution to these problems. As the contest has limited time (5 hours) and each problem has an associated time penalty, it is always beneficial to pick the easiest problem to solve first2.\n\nSome problems may look complicated but happen to have a small input size constraint $n$ that allows even a na\u00efve brute force solution to pass. Some other problems may look simple but standard textbook algorithm cannot be used to pass the time limit as the input size constraint $n$ is too big and one has to figure out the special properties that simplify the problem.\n\nIn the \u201cCompetitive Programming\u201d book3 that has been written specifically for preparing for programming contests such as ICPC, we have the following compilation of typical algorithm complexities found in programming contests:\n\n$t$\n\nalgorithm complexity for input size $n$\n\n1\n\n$O(n!)$\n\n2\n\n$O(2^n)$\n\n3\n\n$O(n^4)$\n\n4\n\n$O(n^3)$\n\n5\n\n$O(n^2)$\n\n6\n\n$O(n \\log _2 n)$\n\n7\n\n$O(n)$\n\nFor this problem, we ignore the constant factor and the lower terms hidden in the Big O notation, i.e. an $O(g(n))$ algorithm is assumed to perform exactly $g(n)$ operations.\n\nLet $m$ be the number of operations that the computer used in the contest4 can run in one second. Suppose $m = 100000000$ and the team is trying to solve a problem with a time limit of one second. If the team can devise an algorithm of type $t = 3$, i.e., a rather slow $O(n^4)$ algorithm, but the largest $n$ mentioned in the problem description is just $50$, then this algorithm is actually fast enough and will get \u201cAccepted\u201d since $50^4 = 6250000$ is less than (or equal to) $m$.\n\nHowever, if for another problem also with one second time limit, the team can only devise an algorithm of type $t = 5$, i.e. an $O(n^2)$ algorithm, but the largest $n$ mentioned in the problem description is $10001$, then this algorithm is likely not fast enough to pass the time limit and will get \u201cTime Limit Exceeded\u201d, since $10001^2 = 100020001$ which is greater than $m$.\n\n\n Formally, given three integer parameters $m$ $(1 \\le m \\le 10^9)$, $n$ $(1 \\le n \\le 10^9)$, and $t \\in [1..7]$, decide if an algorithm of type $t$ with time complexity as described in the table above can pass the time limit of one second, that is, performs less than (or equal to)$m$ operations. Output \u201cAC\u201d (that stands for \u201cAccepted\u201d) if that is the case, or \u201cTLE\u201d (that stands for \u201cTime Limit Exceeded\u201d) otherwise.\n\n-----Input-----\nThe input consists of three integers in one line: $m$, $n$, and $t$ as elaborated above.\n\n-----Output-----\nOutput a single string \u201cAC\u201d or \u201cTLE\u201d in one line as elaborated above.\n\n-----Examples-----\nSample Input 1:\n100000000 500 3\nSample Output 1:\nTLE\n\nSample Input 2:\n100000000 50 3\nSample Output 2:\nAC\n\nSample Input 3:\n100000000 10001 5\nSample Output 3:\nTLE\n\nSample Input 4:\n100000000 10000 5\nSample Output 4:\nAC\n\nSample Input 5:\n19931568 1000000 6\nSample Output 5:\nTLE\nUse Standard Input format\nANSWER:\n"}}