{"3441": {"code": [". However,aato athrough thethetonethetheto one oftheto one of theall of thewereto one of thethe.()to one of thetheto thethethe firsttheone of the other town,the other town. (x_0)\u00a0$x", "thethethe first ofthethetheof theworstof thetheofto thethethe food.they aretheof thetheof the family family.thethe roundto thein atheof thethe round trips. Theto be used tothethethe food of the", "on athein thein thethe familythetheof thethetheto thethe(a)\u00a0$x_1 =\\leq\\leq 2$ is theof theone oftothethethetheto thethethethe family from the $n$", "to aof the(d)\u00a0$x_0atornthe roundto thetorn,thethetorn, (d)\u00a0$T \\geq.\\leq\\leq i <\\geq(f)\u00a0$x_0 = x_\\geq i +\\leq i\\leq i +\\", "thetheinthethe) ;to aone of thetheone of theof theto aof thethetheof thethe one-way road fromtheof thethewishing to drive alongthethe roundtheone of theto be", "in thethethethein thethetheto. It isthethrough a roundall theto thethe roundtheto thetoto theto thethe round trips.the round trips aretone-way roadsthethebeing driving from oneto theof thebeing drivingtheto a single", "(= nmadetheon aall of the.. $ n.$n.[[ ] [] [ 0[ ] [ 1 ][ 1 ] [ 1][]].] [ 1 ] [[ 0 ] [] [ 1 ]( ) [] =", "the. This isin thetheto thethe\\x_2 \\\\\\ \\ \\ \\\\\\ \\ \\ \\\\ \\ \\ \\ \\\\ \\ \\ \\ \\\\ \\ \\ \\\\ \\\\ \\\\\\ \\ \\\\ \\\\ \\ \\ x_\\ \\ \\ x_\\\\ \\ \\ \\ \\\\ \\ \\ \\\\ \\ \\ \\", "thethemthe.( ); }=.( )=.)$t=if ( i <) { if ( i\\ )(to the;( ) ) ;( )}.) ; }( ) ; }", "theof,thetheoftheof themoving along the(a)\u00a0$x_0 =->thethe starting town, (b)\u00a0$x_0 =\\geq\\geq 2$ is the ending(a)\u00a0$x_0 =\\geq\\geq\\leq\\leq i < T$"], "prompt": "\nQUESTION:\nMicah lives a peaceful life with his family in one of Canada\u2019s most beautiful provinces. The vast wealth he has accumulated allows him to indulge in an extravagant hobby: collecting vintage automobiles. On Sunday afternoons, Micah and his family enjoy taking long, leisurely drives in these classic cars. Because of the unusual road system in the province, they have made something of a game out of planning their weekly outings.\n\nMicah\u2019s province contains $n$ towns that are connected by a network of roads. Every road joins some town\u00a0$x$ to a different town\u00a0$y$, and all roads are one-way\u00a0(!) There is never more than one road from any town\u00a0$x$ to any other town\u00a0$y$ (although there may be a road going in the reverse direction), and other than the fact that roads may meet at their endpoints (towns), no two roads intersect (this is facilitated by an elaborate system of overpasses and underpasses).\n\nEach Sunday after lunch, Micah and his family plan and then embark on what they call a round trip. This involves first going to one of the $n$ towns (via helicopter, of course; driving there would detract from the graph theoretic purity of the entire excursion), getting into one of Micah\u2019s fine cars (also transported there by helicopter), and then driving from town to town along the various one-way roads in such a way that they always end up back at the town where they started (whereupon helicopters transport everyone/everything back home). There is one family cardinal rule: during one of these round trips, they can never drive along the same road twice. Overall, a round trip can be represented as a sequence of towns\\[ x_0 \\ \\ \\ x_1 \\ \\ \\ x_2 \\ \\ \\ \\ldots \\ \\ \\ x_{T-1} \\ \\ \\ x_ T \\]\n\nwhere (a)\u00a0$T \\geq 2$, (b)\u00a0$x_0 = x_ T$ is the starting town, (c)\u00a0there is a (one-way) road from $x_ i$ to $x_{i+1}$ for $0 \\leq i < T$, and (d)\u00a0no road is repeated. Note that $x_0, x_1, \\ldots , x_{T-1}$ are not necessarily all distinct.\n\nIn their endless quest for adventure, Micah and his family have decided that they never want to take the same round trip twice, so Micah has designed a simple algorithm to count exactly how many round trips are possible. It saddens them, though, when this algorithm reveals that this number is in fact finite, which means that one day they will have used up all the possible round trips. However, there is hope! From time to time, the province constructs a new road, which is very exciting because a new road may mean new round trips. Unfortunately, Micah\u2019s evil twin, Hacim (separated at birth), has recently been appointed Director of the Inter-County Paving Commission (ICPC), and he is determined to use his new power to minimize all this vexing family-oriented fun. Hacim cannot prevent the construction of new roads altogether, of course (that would eventually get him fired), but he can influence which new roads get constructed. For Hacim, \u201cfun\u201d means approving the construction of a new road that does not create any new round trips for Micah and his family. Hacim wonders how long he can continue doing this, i.e., how many new roads can be constructed without creating any new round trips. Since he is not as good as Micah at designing counting algorithms, he needs your help to figure this out.\n\nNote that a new road, like an existing road, can meet other roads at its endpoints, but otherwise it cannot intersect any other road. Also, the construction of new roads is, of course, cumulative (roads never get removed).\n\n-----Input-----\nThe first line of input contains two space-separated integers, $n$ and $m$ ($1 \\leq n \\leq 100000$, $0 \\leq m \\leq 200000$), where $n$ is the number of towns (indexed $0, 1, \\ldots , n-1$) and $m$ is the number of one-way roads. This is followed by $m$ lines, each containing two space-separated integers, $x$ and $y$ ($0 \\leq x,y \\leq (n-1)$, $x \\neq y$), indicating that there is a one-way road from town\u00a0$x$ to town\u00a0$y$. No road will be specified more than once.\n\n-----Output-----\nOutput a single integer, the maximum number of one-way roads that can be constructed without creating any new round trips.\n\n-----Examples-----\nSample Input:\n2 1\n0 1\nSample Output:\n0\nUse Standard Input format\nANSWER:\n"}}