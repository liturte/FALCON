{"1212": {"code": ["thenumber of1.5\u00b710^5,1.5\u00b710^5,.) ; for ii ++ )) ; if (( )( j ) )j + 1,..., j(h.))[].; }].), 0.0, 0.00.0, 0.0,", "the= 2,the fence isthethethethe fence is(n \u2264k (1 \u2264 n1.5\u00b710^5,ajin thethe fence istheis of theh_1, h_2,...,h_{n} \u2264h_{i}j +of the f", "thetheareat the samethetheof h_1, h_2,theisthethein theof h_{i}theh_1, h_2,..., h_{i}thetheofh_i,...,jk-1,...,theh_{i} is thethe minimumthe1.5", ".).4).thethe fence.theof the fence.and the fencetheandthe fence.3, 4,a= [1,1, 1,3, 1, 2,3, 1,= [1, 2,1,1, 1,2,1, 2,4,2, 2", "isthethethe1.5\u00b710^5, 1.5\u00b710^5,1.5\u00b710^5, 1.5\u00b710^5,1.5\u00b710^5, 1.5\u00b710^5,h_1, h_2,..., h_{i}thethe n(1n, kthe h-th pl", "thethenumber ofthethethethe h_1, h_2,...,height of theof thethe fence. The=, h_1, h_2,, h_2,..., h_i, h_{n}h_i, h_n,..., h_n,h_i, h_n, h_{i}h_{i", "theh_1, h_2,..., h_{i}thethethe fencethetheh_1, h_2,..., h_{n}the(1(2 \u226434,1,...,h_{n} \u2264 1.5\u00b710^5, 1of theh_{i}=(1", "isof the)== [ 1.5\u00b710^5, 1.5\u00b710^5,1.5\u00b710^5, 1.5\u00b710^5, 1.5\u00b710^5,1.5\u00b710^5,1.5\u00b710^5,0, 0,0, 0, 0,, 0, 0, 1.", "ofthreethree planks with the)theyhave the required attribute, theirare3, 4, 5 havethethree2,5,4,8,thek4, 6,1, 7, 1, 1,2,5, 8,the3, 4,4, 8,9,5, 9, 9,", "2 33 3.)1 ) / () ).(2 ) / (((1(1) / ( 1 +j + 1,hh_1, h_2,...,2 + 1,...,j +)the(1 \u2264h_2,h_{i}= [1,1, 1"], "prompt": "\nQUESTION:\nThere is a fence in front of Polycarpus's home. The fence consists of n planks of the same width which go one after another from left to right. The height of the i-th plank is h_{i} meters, distinct planks can have distinct heights. [Image] Fence for n = 7 and h = [1, 2, 6, 1, 1, 7, 1] \n\nPolycarpus has bought a posh piano and is thinking about how to get it into the house. In order to carry out his plan, he needs to take exactly k consecutive planks from the fence. Higher planks are harder to tear off the fence, so Polycarpus wants to find such k consecutive planks that the sum of their heights is minimal possible.\n\nWrite the program that finds the indexes of k consecutive planks with minimal total height. Pay attention, the fence is not around Polycarpus's home, it is in front of home (in other words, the fence isn't cyclic).\n\n\n-----Input-----\n\nThe first line of the input contains integers n and k (1 \u2264 n \u2264 1.5\u00b710^5, 1 \u2264 k \u2264 n) \u2014 the number of planks in the fence and the width of the hole for the piano. The second line contains the sequence of integers h_1, h_2, ..., h_{n} (1 \u2264 h_{i} \u2264 100), where h_{i} is the height of the i-th plank of the fence.\n\n\n-----Output-----\n\nPrint such integer j that the sum of the heights of planks j, j + 1, ..., j + k - 1 is the minimum possible. If there are multiple such j's, print any of them.\n\n\n-----Examples-----\nInput\n7 3\n1 2 6 1 1 7 1\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the sample, your task is to find three consecutive planks with the minimum sum of heights. In the given case three planks with indexes 3, 4 and 5 have the required attribute, their total height is 8.\nUse Standard Input format\nANSWER:\n"}}