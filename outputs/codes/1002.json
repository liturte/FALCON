{"1002": {"code": ["hiscan bethe sametheisin the following way:=.]].[ 0 ]. append; } ). append0 ]. append ([ 0 ] )]. append (] [ 0 ] [[]] ) ) ;] [ 1 ] )] [ 1 ][ 0 ] [ 1] [ 1 ]] [", ") {( 1) ) {.( 1( 1.).)., 1 ).()...)..(.( ).., \" \" )( \"\" \" ).[ \" \" ]\" \" ). split", "theathe=) ;.) ;= [ ] ;for the:= [ ] ;.., [ ])( 0) ;) ; }.[ ]], [ ] )[ ] ) ;[ ], 0, 0[ ] ) ;", "). \n\nDevu:::::::::: [:: [ ] }:::: [ ] }}:::::: [ ] }:: [ ] } ;", "to be thecracking jokes,thethethehisthe=;< 2 ).( \"Youthe=) ;, n, t_1,, t_2,...t_1,..., t_2t_1,...,t_1, t_2,...,; if (n < 5 )", "a: \u00a01 \u2264. \n\n\nDevuthe2 minutes.3 minutes. \u00a02112 minutes.Churu cracks a joke12 minutes. \u00a01a joke in 54 minutes. \u00a0122(5 \u2264(12\u22641 ", ".thetheifthemore than(=2 2 2 3 32 3 3 23 3 2 2 23 2 2 33 3 3 33 3 3 3 33 3 3 323 3 33 3 3 32 3 33 2 2 22 3 2 2445 5 22 3 2 22 2 2 3", "theof the songs.thetheofmakestheainofthe firstthe) {. Song.. Song.;. Song.. Song.. Song.... Song.. Song.. Song.. Song.. Song. Song.", ")the) {( ) ;)if () {( ) ; }.).( ) ;]} }( ) ; }0 ;0 ;.( )[( ) ;=( ) ;.) ; } }) ; } } }", "of..().( )..; } }in(( ).).( ).( ).; }( ).).( ).).( )( ).,,( )( )."], "prompt": "\nQUESTION:\nDevu is a renowned classical singer. He is invited to many big functions/festivals. Recently he was invited to \"All World Classical Singing Festival\". Other than Devu, comedian Churu was also invited.\n\nDevu has provided organizers a list of the songs and required time for singing them. He will sing n songs, i^{th} song will take t_{i} minutes exactly. \n\nThe Comedian, Churu will crack jokes. All his jokes are of 5 minutes exactly.\n\nPeople have mainly come to listen Devu. But you know that he needs rest of 10 minutes after each song. On the other hand, Churu being a very active person, doesn't need any rest.\n\nYou as one of the organizers should make an optimal s\u0441hedule for the event. For some reasons you must follow the conditions:  The duration of the event must be no more than d minutes;  Devu must complete all his songs;  With satisfying the two previous conditions the number of jokes cracked by Churu should be as many as possible. \n\nIf it is not possible to find a way to conduct all the songs of the Devu, output -1. Otherwise find out maximum number of jokes that Churu can crack in the grand event.\n\n\n-----Input-----\n\nThe first line contains two space separated integers n, d (1 \u2264 n \u2264 100;\u00a01 \u2264 d \u2264 10000). The second line contains n space-separated integers: t_1, t_2, ..., t_{n} (1 \u2264 t_{i} \u2264 100).\n\n\n-----Output-----\n\nIf there is no way to conduct all the songs of Devu, output -1. Otherwise output the maximum number of jokes that Churu can crack in the grand event.\n\n\n-----Examples-----\nInput\n3 30\n2 2 1\n\nOutput\n5\n\nInput\n3 20\n2 1 1\n\nOutput\n-1\n\n\n\n-----Note-----\n\nConsider the first example. The duration of the event is 30 minutes. There could be maximum 5 jokes in the following way:  First Churu cracks a joke in 5 minutes.  Then Devu performs the first song for 2 minutes.  Then Churu cracks 2 jokes in 10 minutes.  Now Devu performs second song for 2 minutes.  Then Churu cracks 2 jokes in 10 minutes.  Now finally Devu will perform his last song in 1 minutes.  \n\nTotal time spent is 5 + 2 + 10 + 2 + 10 + 1 = 30 minutes.\n\nConsider the second example. There is no way of organizing Devu's all songs. Hence the answer is -1.\nUse Standard Input format\nANSWER:\n"}}